{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./demo/src/components/VideoDemo.js","webpack:///./node_modules/nwb/polyfills.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/asap/browser-raw.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./src/pannellum/js/RequestAnimationFrame.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/mux.js/lib/aac/probe.js","webpack:///./node_modules/object-assign/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./demo/src/images/video.mp4","webpack:///./src/pannellum/js/videojs-pannellum-plugin.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/schedule/cjs/schedule.production.min.js","webpack:///./node_modules/schedule/index.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/promise/lib/es6-extensions.js","webpack:///./node_modules/react-dom/index.js","webpack:///./demo/src/images/milan.jpg","webpack:///./src/elements/Pannellum.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./demo/src/components/Header.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/promise/lib/rejection-tracking.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./demo/src/index.js","webpack:///./demo/src/components/ImageDemo.js","webpack:///./src/elements/PannellumVideo.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./src/pannellum/js/pannellum.js","webpack:///./src/index.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./src/pannellum/js/libpannellum.js","webpack:///./demo/src/images/alma.jpg","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/promise/lib/core.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./demo/src/images/jfk.mp4","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js"],"names":["inspectMp4","textifyMp4","parseType","__webpack_require__","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","parse","avc1","data","view","DataView","buffer","byteOffset","byteLength","dataReferenceIndex","getUint16","width","height","horizresolution","vertresolution","frameCount","depth","config","subarray","avcC","numOfPictureParameterSets","nalSize","offset","i","result","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","push","Uint8Array","btrt","bufferSizeDB","getUint32","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","length","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","String","fromCharCode","decodeURIComponent","escape","mdat","nals","avcStream","avcView","nalParse","mdhd","language","creationTime","modificationTime","timescale","duration","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","Math","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","size","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","type","end","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","Array","join","map","index","Object","keys","filter","key","prefix","value","bytes","prototype","slice","call","byte","toString","match","line","JSON","stringify","split","module","exports","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","componentName","props","_classCallCheck","this","_this","_possibleConstructorReturn","_Component","hanldeClick","path","console","log","setState","mediaVideo","myVideo","title","scene","hanldeClickCheck","myVideo2","state","render","_this2","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","className","__WEBPACK_IMPORTED_MODULE_1__src__","video","loop","autoplay","pitch","yaw","hfov","minHfov","maxHfov","hotSpotDebug","mouseZoom","Hotspot","handleClick","evt","args","handleClickArg","text","URL","data-language","Component","Promise","enable","window","assign","aa","n","ba","t","b","arguments","c","d","encodeURIComponent","e","f","g","h","Error","k","l","replace","framesToPop","ca","ea","fa","ha","ia","ja","onError","ka","apply","m","ma","na","oa","indexOf","pa","extractEvents","eventTypes","qa","hasOwnProperty","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","ua","va","wa","xa","currentTarget","la","ya","isArray","concat","za","forEach","Aa","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","constructor","release","Ca","Da","Ea","injectEventPluginOrder","injectEventPluginsByName","Fa","stateNode","disabled","Ga","Ha","random","Ia","Ja","Ka","parentNode","La","Ma","Na","Oa","return","Pa","dispatchConfig","Qa","_targetInst","Ra","Ta","Ua","Va","document","Wa","toLowerCase","Ya","animationend","animationiteration","animationstart","transitionend","Za","$a","style","animation","transition","bb","cb","db","eb","fb","gb","hb","ib","jb","textContent","kb","lb","nativeEvent","Interface","target","isDefaultPrevented","defaultPrevented","returnValue","nb","eventPool","pop","ob","destructor","mb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","extend","pb","qb","rb","sb","tb","documentMode","ub","vb","wb","xb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","yb","zb","keyCode","Ab","detail","Bb","Eb","locale","which","Cb","ctrlKey","altKey","metaKey","char","Db","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Qb","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","time","url","week","Rb","nodeName","Sb","srcElement","correspondingUseElement","nodeType","Tb","setAttribute","Ub","Wb","_valueTracker","getOwnPropertyDescriptor","get","set","defineProperty","configurable","enumerable","getValue","setValue","stopTracking","Vb","Xb","checked","Yb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Zb","C","Symbol","for","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","iterator","kc","lc","displayName","$$typeof","then","_reactStatus","_reactResult","mc","_debugOwner","_debugSource","fileName","lineNumber","nc","pc","qc","rc","D","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","E","vc","wc","toUpperCase","xc","tc","isNaN","uc","test","sc","removeAttribute","setAttributeNS","yc","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Bc","initialValue","controlled","Cc","Dc","Ec","Fc","ownerDocument","activeElement","tabIndex","Gc","change","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","detachEvent","Pc","Qc","attachEvent","Rc","Sc","Tc","Uc","_isInputEventSupported","Vc","Wc","Alt","Control","Meta","Shift","Xc","getModifierState","Yc","Zc","$c","ad","bd","cd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","dd","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","ed","mouseEnter","mouseLeave","pointerEnter","pointerLeave","fd","defaultView","parentWindow","alternate","gd","hd","id","jd","effectTag","kd","md","child","sibling","current","ld","nd","animationName","elapsedTime","pseudoElement","od","clipboardData","pd","qd","charCode","rd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","sd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","td","location","repeat","ud","dataTransfer","vd","touches","targetTouches","changedTouches","wd","xd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","yd","zd","Ad","Bd","isInteractive","Cd","isInteractiveTopLevelEventType","Dd","Ed","Fd","targetInst","ancestors","containerInfo","topLevelType","Gd","F","Hd","Id","bind","addEventListener","Jd","Kd","Ld","Md","Nd","Od","body","Qd","firstChild","Rd","node","nextSibling","Td","HTMLIFrameElement","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","ae","start","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","be","onSelect","de","children","Children","ce","ee","options","selected","defaultSelected","fe","dangerouslySetInnerHTML","ge","he","ie","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","je","html","mathml","svg","ke","le","me","ne","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","oe","lastChild","nodeValue","pe","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qe","re","trim","setProperty","charAt","substring","se","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","te","ue","is","ve","blur","focus","we","xe","ye","ze","autoFocus","Ae","__html","Be","Ce","Set","De","Ee","G","H","Fe","I","J","Ge","He","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","K","childContextTypes","Ie","Je","Ke","Le","getChildContext","Me","__reactInternalMemoizedMergedChildContext","Ne","Oe","Pe","Qe","Se","ref","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Te","isReactComponent","Ue","Ve","We","Xe","Ye","pendingChildren","implementation","Ze","didError","earliestPendingTime","latestPendingTime","$e","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","nextExpirationTimeToWorkOn","af","bf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","cf","df","payload","callback","next","ef","ff","gf","hf","jf","kf","r","lf","mf","nf","stack","of","pf","qf","rf","sf","_context","_currentValue","tf","uf","vf","context","observedBits","wf","L","xf","yf","zf","Af","documentElement","tagName","Bf","Cf","Df","Ef","refs","Ff","Jf","isMounted","_reactInternalFiber","enqueueSetState","Gf","Hf","If","enqueueReplaceState","enqueueForceUpdate","Kf","shouldComponentUpdate","isPureReactComponent","Lf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Mf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Nf","Of","_owner","_stringRef","Pf","Qf","Map","A","S","B","p","u","q","delete","P","done","x","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","cg","ReactCurrentOwner","M","dg","eg","fg","gg","hg","updater","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","ig","jg","pendingContext","ng","defaultProps","pg","default","bg","og","element","hydrate","hidden","_calculateChangedBits","unstable_observedBits","qg","rg","sg","tg","ug","error","setTimeout","vg","wg","xg","componentWillUnmount","yg","zg","Ag","insertBefore","onclick","Bg","wasMultiple","multiple","Cg","Dg","Eg","componentDidCatch","Fg","add","componentStack","Gg","onClick","Hg","readContext","Ig","Jg","Kg","Lg","N","Mg","O","Ng","Q","Og","Pg","Qg","createElementNS","createTextNode","Rg","Sg","currentDispatcher","pendingCommitExpirationTime","Tg","has","finishedWork","getDerivedStateFromCatch","Ug","Vg","nextScheduledRoot","T","U","V","W","Wg","Y","Z","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","fh","gh","hh","ih","jh","unstable_now","kh","lh","mh","nh","oh","unstable_cancelScheduledWork","unstable_scheduleWork","ph","timeout","qh","didTimeout","_onComplete","rh","firstBatch","_expirationTime","_defer","rangeCount","Xa","focusedElem","selectionRange","R","yh","__reactInternalSnapshotBeforeUpdate","w","y","Sd","contains","compareDocumentPosition","min","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","Sa","oc","X","Ih","Jh","kg","lg","Kh","Ac","mg","Pd","Lh","timeRemaining","sh","th","uh","wh","vh","xh","zh","Bh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Ch","_didCommit","_onCommit","Dh","timeoutHandle","_internalRoot","Eh","Gh","_reactRootContainer","legacy_renderSubtreeIntoContainer","hasAttribute","Fh","Hh","Ah","querySelectorAll","form","commit","unmount","createBatch","Mh","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_flushControlled","Events","unstable_createRoot","findFiberByHostInstance","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Re","findHostInstanceByFiber","bundleType","rendererPackageName","Nh","Oh","findBox","startTime","getVideoTrackIds","toUnsigned","subresults","results","init","reduce","fragment","trafs","baseTimes","scale","Infinity","isFinite","videoTrackIds","hdlrs","tkhds","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","charCodeAt","audio","setUint32","audioobjecttype","samplingfrequencyindex","tracks","trackFragments","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","floor","durationPresent","sizePresent","flagsPresent","undefined","initSegment","fileType","movie","isFunction","parseHeaders","xtend","initParams","uri","params","createXHR","_createXHR","called","err","response","errorFunc","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","withCredentials","abort","code","setRequestHeader","obj","isEmpty","beforeSend","send","array","forEachArray","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","position","workingBytes","availableBytes","skipBits","count","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","StreamTypes","handleRollover","probe","ts","aac","parseAudioPes_","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","frame","pes","currentFrame","firstKeyFrame","shift","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","baseTimestamp","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","global","rawAsap","task","queue","requestFlush","capacity","flush","currentIndex","scan","newLength","toggle","observer","scope","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","handleTimer","intervalHandle","setInterval","clearInterval","observe","characterData","TransportPacketStream","TransportParseStream","ElementaryStream","Stream","CaptionStream","TimestampRolloverStream","m2tsStreamTypes","bytesInBuffer","everything","trigger","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","METADATA_STREAM_TYPE","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream","forceFlush","packetFlushable","packetData","event","ptsDtsFlags","packetLength","dataAlignmentIndicator","timelineStartInfo","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","Cea608Stream","MetadataStream","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","__WEBPACK_IMPORTED_MODULE_1_global_document__","__WEBPACK_IMPORTED_MODULE_1_global_document___default","__WEBPACK_IMPORTED_MODULE_2_tsml__","__WEBPACK_IMPORTED_MODULE_2_tsml___default","__WEBPACK_IMPORTED_MODULE_3_xhr__","__WEBPACK_IMPORTED_MODULE_3_xhr___default","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js__","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js___default","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple__","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple___default","__WEBPACK_IMPORTED_MODULE_6_url_toolkit__","__WEBPACK_IMPORTED_MODULE_6_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_7_m3u8_parser__","__WEBPACK_IMPORTED_MODULE_8_mpd_parser__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe___default","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_mp4__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_tools_ts_inspector_js__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_tools_ts_inspector_js___default","__WEBPACK_IMPORTED_MODULE_12_aes_decrypter__","level","history","logByType","lvl","levels","lvlRegExp","RegExp","unshift","fn","_len","_key","all","off","debug","warn","DEFAULT","clear","disable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","_typeof","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","taggedTemplateLiteralLoose","strings","raw","object","isObject","each","sources","isPlain","computedStyle","el","prop","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","isEl","isInFrame","parent","createQuerier","selector","querySelector","ctx","createEl","properties","attributes","content","getOwnPropertyNames","propName","val","attrName","appendContent","innerText","prependTo","hasClass","classToCheck","classList","addClass","classToAdd","removeClass","classToRemove","remove","toggleClass","classToToggle","predicate","setAttributes","attrValue","getAttributes","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","onselectstart","unblockTextSelection","getBoundingClientRect","rect","parseFloat","findPosition","docEl","clientLeft","pageXOffset","clientTop","pageYOffset","round","getPointerPosition","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","max","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","old","stopImmediatePropagation","isImmediatePropagationStopped","doc","_supportsPassive","opts","passiveEvents","on","guid","hash","handlersCopy","passive","removeType","splice","elemData","targetData","one","func","_windowLoaded","videojs","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","EVENT_MAP","queueTrigger","oldTimeout","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","mergeOptions","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","component","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","emitTapEvents","touchStart","firstTouch","couldBeTap","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","_i","MediaError","message","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","acc","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","empty","closeButton","content_","activeEl","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","allChildren","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","showing","Track","trackProps","_loop","parseUrl","href","addToBody","host","protocol","div","details","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","loadTrack","crossOrigin","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","trackList","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","s","gm","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","catch","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","PromiseClass","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","classCallCheck$1","createClass$1","protoProps","staticProps","inherits$1","possibleConstructorReturn$1","slicedToArray$1","arr","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","media","playlist","playlists","segments","mediaSequence","mergedPlaylist","updateSegments","segment","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","manifest","media_","endList","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","delay","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","intervalDuration","endSequence","expired","backward","forward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","seekableStart","seekableEnd","getMediaInfoForTime","numSegments","mediaIndex","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","byterange","hexDump","utils","tagDump","textRanges","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","abs","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","sort","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","callbacks","pipe","destination","flushSource","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalUnitType","currentGop","gops","nalCount","nalsByteLength","numberOfNals","trackDecodeInfo","minSegmentDts","maxSegmentDts","minSegmentPts","maxSegmentPts","keepOriginalTimestamps","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","reference","direction","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","dispatchType","chunk","frameStart","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","244","44","83","86","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","ceil","_AacStream","H264Stream","NalByteStream","setTimestamp","header","returnSize","lowThree","middle","bytesLeft","tempLength","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData","arrayEquals","sumFrameByteLengths","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","sum","adtsFrames","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$2","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$1","parse$$1","mp4Inspector","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","classCallCheck$$1","createClass$$1","MessageHandlers","initArray","typedArray","action","gopInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","byterangeEnd","Range","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","endOfAllRequests","worstError","prev","getMostImportantError","encryptedBytes","decryptionHandler","requestId","decrypted","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","endOfStream","timeline","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","timingInfo","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","resolution","RESOLUTION","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","dateTimeObject","segmentStart","distance","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","possibleConstructorReturn$$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","inherits$$1","processJob_","job","ntoh","word","Decrypter$$1","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","forced","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","fastChangeFunction","masterPlaylistController_","fastQualityChange_","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","vhs","source_","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","get$$1","receiver","getter","get$2","HlsSourceHandler","supportedType","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_pkcs7__","createClass","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","shouldUseNative","symbols","toObject","eval","scrollSetting","","up","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","__WEBPACK_IMPORTED_MODULE_0_video_js__","pannellum","vid","pnlmContainer","dynamic","showZoomCtrl","showFullscreenCtrl","autoLoad","panorama","visibility","pnlmViewer","viewer","display","setUpdate","AdtsStream","AacStream","reviver","timesOutAt","previous","_schedMock","groupNalsIntoFrames","groupFramesIntoGops","extendFirstKeyFrame","generateSampleTable","concatenateNalData","TRUE","valuePromise","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","_44","_83","_18","ex","reject","remaining","res","race","onRejected","checkDCE","Pannellum","renderImage","hotspots","hotspotArray","hotspot","substr","cssClass","createTooltipFunc","tooltip","hotspotTooltip","createTooltipArgs","tooltipArg","clickHandlerFunc","handleClickHotspot","clickHandlerArgs","jsonConfig","image","minPitch","maxPitch","minYaw","maxYaw","autoRotate","compass","preview","previewTitle","previewAuthor","author","orientationOnByDefault","keyboardZoom","draggable","showControls","hotspotDebug","hotSpots","destroy","onLoad","onScenechange","onScenechangefadedone","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","hotSpotDiv","hDiv","outDiv","inDiv","getViewer","prevProps","_props","divStyle","__WEBPACK_IMPORTED_MODULE_1_react___default","imageNode","propTypes","oneOfType","arrayOf","isCallable","toStr","thisArg","len","forEachString","forEachObject","ReactPropTypesSecret","emptyFunction","shim","propFullName","secret","getShim","isRequired","ReactPropTypes","symbol","any","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","alert","confirm","prompt","unpad","__WEBPACK_IMPORTED_MODULE_0_react__","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","DEFAULT_WHITELIST","RangeError","_47","_71","matchWhitelist","cls","displayId","rejections","onUnhandled","allRejections","whitelist","logged","logError","_56","onHandled","_75","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","Demo","__WEBPACK_IMPORTED_MODULE_3__components_Header__","__WEBPACK_IMPORTED_MODULE_4__components_ImageDemo__","__WEBPACK_IMPORTED_MODULE_5__components_VideoDemo__","ImageDemo","hanldeClickImage","mediaPhoto","myImage2","myImage","PannellumVideo","renderVideo","videoNode","cuurentHS","getConfig","setYaw","setPitch","setHfov","setHfovBounds","hs","removeHotSpot","addHotSpot","data-vjs-player","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","alt","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","decode","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","pos","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","Viewer","initialConfig","renderer","panoImage","prevTime","autoRotateStart","origHfov","origPitch","isUserInteracting","latestInteraction","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","fullscreenActive","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","hotspotsCreated","defaultConfig","roll","haov","vaov","vOffset","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","doubleClickZoom","avoidShowingBackground","animationTimingFunction","disableKeyboardCtrl","touchPanSpeedCoeffFactor","capturedKeyNumbers","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","uiContainer","renderContainer","dragFix","aboutMsg","aboutMessage","mousePosition","t1","t2","infoDisplay","hotSpotDebugIndicator","boxp","lbox","lbar","lbarFill","msg","errorMsg","processOptions","zoomIn","animateInit","zoomOut","fullscreen","toggleFullscreen","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","stopOrientation","startOrientation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","alpha","beta","gamma","Image","multiRes","basePath","anError","itemsToLoad","onImageLoad","outerHTML","cubeMap","absoluteURL","sanitizeURL","onloadend","reader","FileReader","flagIndex","ignoreGPanoXMP","xmpData","getTag","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","horizonPitch","horizonRoll","readAsBinaryString","readAsText","lengthComputable","numerator","denominator","libpannellum","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","PI","renderInitCallback","maxWidth","renderInit","fireEvent","bounds","coords","mouseEventToCoords","stopAnimation","lookAt","canvas","getCanvas","canvasWidth","clientWidth","canvasHeight","clientHeight","focal","tan","sin","cos","root","atan","atan2","vfov","pos0","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","pointerIDs","pointerCoordinates","defined","keynumber","keycode","changeKey","keyChanged","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","renderHotSpots","transform","webkitTransform","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","isLoading","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","angle","orientationListener","toEulerAngles","sceneFadeDuration","fadeImg","createHotSpot","createHotSpots","escapeHTML","span","paddingTop","sceneId","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","scrollWidth","marginLeft","marginTop","scrollHeight","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","yawSin","hfovTan","coord","rollSin","rollCos","MozTransform","photoSphereExcludes","scenes","isPreview","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","isFullScreen","innerWidth","screen","innerHeight","mozFullScreen","webkitIsFullScreen","resize","constrainHfov","cubeResolution","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","returnImage","destroyHotSpots","asin","isLoaded","getPitch","animated","getPitchBounds","setPitchBounds","getYaw","getYawBounds","setYawBounds","getHfov","getHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","setPose","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","getScene","addScene","removeScene","getContainer","hotSpotId","isOrientationSupported","isOrientationActive","__WEBPACK_IMPORTED_MODULE_0__elements_Pannellum__","__WEBPACK_IMPORTED_MODULE_1__elements_PannellumVideo__","audioTsToVideoTs","videoTsToAudioTs","CoalesceStream","collectDtsInfo","calculateTrackBaseMediaDecodeTime","clearDtsInfo","ONE_SECOND_IN_TS","Renderer","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","imageType","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","multiresNodeSort","multiresNodeRenderSort","MultiresNode","vertices","side","testMultiresNode","rotPersp","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","theta","acos","inCurrent","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","maxLevel","numTiles","invTileResolution","doubleTileSize","tileResolution","lastTileSize","ntmp","f1","f2","f3","i1","i2","i3","fullpath","rotateMatrix","transposeMatrix4","_image","_imageType","_dynamic","voffset","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundSquare","ImageData","getContext","getError","handleWebGLError1286","appVersion","fallbackPath","sides","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","encodeURI","extension","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","clearColor","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","getUniformLocation","uniform1f","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","perspUniform","cubeUniform","getExtension","loseContext","pixelRatio","devicePixelRatio","orig_pitch","orig_yaw","roll_adj","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","uniformMatrix4fv","removed","pendingTextureRequests","textureLoad","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","toDataURL","transforms","faces","face","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","tex","til","releaseTextureImageLoader","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","fragEquiCubeBase","imagetype","fetch","support","searchParams","iterable","formData","arrayBuffer","viewClasses","isDataView","isArrayBufferView","Headers","normalizeName","normalizeValue","oldValue","iteratorFor","Request","_bodyInit","Body","Response","statusText","redirectStatuses","redirect","rawHeaders","responseURL","credentials","polyfill","consumed","bodyUsed","fileReaderReady","readBlobAsArrayBuffer","readAsArrayBuffer","bufferClone","buf","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","chars","readArrayBufferAsText","upcased","referrer","bodyInit","ok","clean","asap","LAST_ERROR","IS_ERROR","_38","doResolve","handle","deferred","onFulfilled","tryCallOne","handleResolved","newValue","getThen","finale","Handler","tryCallTwo","safeThen","_extends","LineStream","nextNewline","parseAttributes","ParseStream","customParsers","tagType","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","dateTimeString","IV","PRECISE","addParser","expression","customType","dataParser","lineStream","uris","currentUri","currentMap","defaultMediaGroups","allowCache","entry","rendition","allow-cache","endlist","inf","METHOD","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","targetduration","totalduration","timeOffset","cue-out","cue-out-cont","cue-in","cueIn","comment","custom","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","parseUTCTiming","__WEBPACK_IMPORTED_MODULE_0_url_toolkit__","__WEBPACK_IMPORTED_MODULE_0_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_1_global_window__","__WEBPACK_IMPORTED_MODULE_1_global_window___default","formatVideoPlaylist","_ref3","_attributes3","periodIndex","merge","objects","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","sourceDuration","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","segmentTime","nextS","flatten","lists","segmentRange","static","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","_attributes","formatAudioPlaylist","subs","_attributes2","organizeVttPlaylists","toM3u8","UTCTimingNode","parseUTCTimingScheme","forceUpdate","__self","__source","keyPrefix","=",":","toArray","only","createRef","PureComponent","createContext","_currentValue2","Provider","Consumer","unstable_read","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","createFactory","isValidElement"],"mappings":"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AAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAkXAC,EAAAC,EAiQAC,EAAAC,EAAAC,EAxnBAC,EAAA7nC,KAAAC,IAAA,SAQA,WACA,IAAApH,EAyCA,GAxCA6tC,GACAlvC,QACAiB,QACAgB,QACAuB,QACAE,QACApB,QACAc,QACAQ,QACAQ,QACAK,QACAM,QACAC,QACAE,QACAM,QACAC,QACAN,QACAO,QACAC,QACAQ,QACAc,QACAE,QACAC,QACAG,QACAK,QACAE,QACAG,QACAI,QACAC,QACAI,QACAiB,QACAC,QACAS,QACAR,QACAL,QACA0B,SAKA,oBAAAlJ,WAAA,CAIA,IAAAX,KAAA6tC,EACAA,EAAAj8B,eAAA5R,KACA6tC,EAAA7tC,IACAA,EAAAivC,WAAA,GACAjvC,EAAAivC,WAAA,GACAjvC,EAAAivC,WAAA,GACAjvC,EAAAivC,WAAA,KAKAnB,EAAA,IAAAntC,YACA,IAAAsuC,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAjB,EAAA,IAAArtC,YACA,IAAAsuC,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,GACA,IAAAA,WAAA,KAEAlB,EAAA,IAAAptC,YAAA,UACAstC,EAAA,IAAAttC,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAutC,EAAA,IAAAvtC,YACA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,eACA,cACA,oBAEAwtC,GACAlgC,MAAAggC,EACAiB,MAAAhB,GAEAI,EAAA,IAAA3tC,YACA,EACA,MACA,QACA,SACA,eACA,EACA,QAEA0tC,EAAA,IAAA1tC,YACA,EACA,MACA,IACA,MAEA4tC,EAAA,IAAA5tC,YACA,EACA,MACA,UAEA6tC,EAAAD,EACAE,EAAA,IAAA9tC,YACA,EACA,MACA,QACA,UAEA+tC,EAAAH,EACAH,EAAA,IAAAztC,YACA,EACA,MACA,IACA,IACA,IACA,OApIA,GAwIAwJ,EAAA,SAAAF,GACA,IAGAjK,EACAC,EAHA85B,KACArwB,EAAA,EAKA,IAAA1J,EAAA,EAAaA,EAAA6P,UAAAlO,OAAsB3B,IACnC+5B,EAAAr5B,KAAAmP,UAAA7P,IAMA,IAHAA,EAAA+5B,EAAAp4B,OAGA3B,KACA0J,GAAAqwB,EAAA/5B,GAAAf,WAQA,IANAgB,EAAA,IAAAU,WAAA+I,EAAA,GACA,IAAA5K,SAAAmB,EAAAlB,OAAAkB,EAAAjB,WAAAiB,EAAAhB,YACAkwC,UAAA,EAAAlvC,EAAAhB,YACAgB,EAAAwc,IAAAxS,EAAA,GAGAjK,EAAA,EAAA0J,EAAA,EAAuB1J,EAAA+5B,EAAAp4B,OAAoB3B,IAC3CC,EAAAwc,IAAAsd,EAAA/5B,GAAA0J,GACAA,GAAAqwB,EAAA/5B,GAAAf,WAEA,OAAAgB,GAGAkC,EAAA,WACA,OAAAgI,EAAA0jC,EAAA1rC,KAAAgI,EAAA0jC,EAAAxrC,KAAAisC,KAGArtC,EAAA,SAAAyzB,GACA,OAAAvqB,EAAA0jC,EAAA5sC,KAAA,IAAAN,YACA,EACA,MAGA,EACA,GACA,IACA,EAGA,EACA,GACA,GACA,GACA,MACA,YACA,YAGA,EACA,EAGA+zB,EAAA0a,iBAAA,EAAA1a,EAAA2a,yBAAA,EACA3a,EAAA2a,wBAAA,EAAA3a,EAAA3wB,cAAA,EACA,UAIAhC,EAAA,WACA,OAAAoI,EAAA0jC,EAAA9rC,KAAA+rC,EAAAC,EAAAD,EAAAE,IAGAzrC,EAAA,SAAA0H,GACA,OAAAE,EAAA0jC,EAAAtrC,KAAA4rC,EAAAlkC,KAEAlH,EAAA,SAAAnE,GACA,OAAAuL,EAAA0jC,EAAA9qC,KAAAnE,IAEAwE,EAAA,SAAAsxB,GACA,IAAAz0B,EAAA,IAAAU,YACA,EACA,MACA,QACA,QACA,WAEA+zB,EAAAjxB,WAAA,OACAixB,EAAAjxB,WAAA,OACAixB,EAAAjxB,WAAA,MACA,IAAAixB,EAAAjxB,SACA,OACA,MAaA,OAPAixB,EAAAzwB,aACAhE,EAAA,IAAAy0B,EAAAzwB,aAAA,OACAhE,EAAA,IAAAy0B,EAAAzwB,aAAA,OACAhE,EAAA,IAAAy0B,EAAAzwB,aAAA,MACAhE,EAAA,QAAAy0B,EAAA,YAGAvqB,EAAA0jC,EAAAzqC,KAAAnD,IAEAyD,EAAA,SAAAgxB,GACA,OAAAvqB,EAAA0jC,EAAAnqC,KAAAN,EAAAsxB,GAAAnyB,EAAAmyB,EAAAzqB,MAAApG,EAAA6wB,KAEA/wB,EAAA,SAAAC,GACA,OAAAuG,EAAA0jC,EAAAlqC,KAAA,IAAAhD,YACA,EACA,OACA,WAAAiD,IAAA,IACA,SAAAA,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,MAGAC,EAAA,SAAA6wB,GACA,OAAAvqB,EAAA0jC,EAAAhqC,KACA,UAAA6wB,EAAAzqB,KAAAE,EAAA0jC,EAAAhkC,KAAAukC,GAAAjkC,EAAA0jC,EAAAjoC,KAAAyoC,GACAlsC,IACA2D,EAAA4uB,KAEAvwB,EAAA,SAAAP,EAAA0rC,GAKA,IAJA,IACAC,KACAvvC,EAAAsvC,EAAA3tC,OAEA3B,KACAuvC,EAAAvvC,GAAAsI,EAAAgnC,EAAAtvC,IAEA,OAAAmK,EAAA+G,MAAA,MACA28B,EAAA1pC,KACAR,EAAAC,IACA+O,OAAA48B,KAOAnrC,EAAA,SAAAkrC,GAKA,IAJA,IACAtvC,EAAAsvC,EAAA3tC,OACAS,KAEApC,KACAoC,EAAApC,GAAAuI,EAAA+mC,EAAAtvC,IAGA,OAAAmK,EAAA+G,MAAA,MAAA28B,EAAAzpC,KAAAE,EAAA,aAAAqO,OAAAvQ,GAAAuQ,OAAAtO,EAAAirC,MAEAjrC,EAAA,SAAAirC,GAKA,IAJA,IACAtvC,EAAAsvC,EAAA3tC,OACAS,KAEApC,KACAoC,EAAApC,GAAAwI,EAAA8mC,EAAAtvC,IAEA,OAAAmK,EAAA+G,MAAA,MAAA28B,EAAAxpC,MAAAsO,OAAAvQ,KAEAkC,EAAA,SAAAb,GACA,IACA2H,EAAA,IAAAzK,YACA,EACA,MACA,QACA,QACA,YACA,WAAA8C,IAAA,IACA,SAAAA,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,EACA,QACA,IACA,IACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,kBAEA,OAAA0G,EAAA0jC,EAAAvpC,KAAA8G,IAGAtG,EAAA,SAAA4vB,GACA,IAGAx2B,EACA8B,EAHA+E,EAAA2vB,EAAA3vB,YACAqG,EAAA,IAAAzK,WAAA,EAAAoE,EAAApD,QAOA,IAAA3B,EAAA,EAAaA,EAAA+E,EAAApD,OAAoB3B,IACjC9B,EAAA6G,EAAA/E,GAAA9B,MAEAkN,EAAApL,EAAA,GAAA9B,EAAAE,WAAA,EACAF,EAAAG,cAAA,EACAH,EAAA,cAGA,OAAAiM,EAAA0jC,EAAA/oC,KACAsG,IAGAtF,EAAA,SAAA4uB,GACA,OAAAvqB,EAAA0jC,EAAA/nC,KACAS,EAAAmuB,GACAvqB,EAAA0jC,EAAAjnC,KAAA8nC,GACAvkC,EAAA0jC,EAAA3nC,KAAAsoC,GACArkC,EAAA0jC,EAAApnC,KAAAgoC,GACAtkC,EAAA0jC,EAAA9nC,KAAAwoC,KAMAhoC,EAAA,SAAAmuB,GAEA,OAAAvqB,EAAA0jC,EAAAtnC,KAAA,IAAA5F,YACA,EACA,MACA,UACA,UAAA+zB,EAAAzqB,KAAA0kC,EAAAja,GAAAka,EAAAla,KAGAia,EAAA,SAAAja,GACA,IAKA10B,EAJAO,EAAAm0B,EAAAn0B,QACAC,EAAAk0B,EAAAl0B,QACAgvC,KACAC,KAIA,IAAAzvC,EAAA,EAAeA,EAAAO,EAAAoB,OAAgB3B,IAC/BwvC,EAAA9uC,MAAA,MAAAH,EAAAP,GAAAf,cAAA,GACAuwC,EAAA9uC,KAAA,IAAAH,EAAAP,GAAAf,YACAuwC,IAAA78B,OAAAjI,MAAAW,UAAAC,MAAAC,KAAAhL,EAAAP,KAIA,IAAAA,EAAA,EAAeA,EAAAQ,EAAAmB,OAAgB3B,IAC/ByvC,EAAA/uC,MAAA,MAAAF,EAAAR,GAAAf,cAAA,GACAwwC,EAAA/uC,KAAA,IAAAF,EAAAR,GAAAf,YACAwwC,IAAA98B,OAAAjI,MAAAW,UAAAC,MAAAC,KAAA/K,EAAAR,KAGA,OAAAmK,EAAA0jC,EAAAlvC,KAAA,IAAAgC,YACA,MACA,MACA,IACA,IACA,IACA,QACA,QACA,SACA,MAAA+zB,EAAAt1B,QAAA,EACA,IAAAs1B,EAAAt1B,OACA,MAAAs1B,EAAAr1B,SAAA,EACA,IAAAq1B,EAAAr1B,OACA,SACA,SACA,QACA,IACA,GACA,gBACA,eACA,eACA,cACA,cACA,QACA,QACA,MACA,KACA,QACA8K,EAAA0jC,EAAAjuC,KAAA,IAAAe,YACA,EACA+zB,EAAAgb,WACAhb,EAAAt0B,qBACAs0B,EAAAib,SACA,KACAh9B,QACApS,EAAAoB,SACAgR,OAAA68B,GAAA78B,QACAnS,EAAAmB,SACAgR,OAAA88B,KACAtlC,EAAA0jC,EAAAjtC,KAAA,IAAAD,YACA,aACA,aACA,kBAKAiuC,EAAA,SAAAla,GACA,OAAAvqB,EAAA0jC,EAAA/pC,KAAA,IAAAnD,YAGA,MACA,MACA,IAGA,QACA,SACA,MAAA+zB,EAAA3wB,eAAA,EACA,IAAA2wB,EAAA3wB,cAEA,MAAA2wB,EAAA1wB,aAAA,EACA,IAAA0wB,EAAA1wB,WACA,IACA,KAEA,MAAA0wB,EAAAzwB,aAAA,EACA,IAAAywB,EAAAzwB,WACA,MAGAhD,EAAAyzB,KAIAvsB,EAAA,SAAAusB,GACA,IAAAz0B,EAAA,IAAAU,YACA,EACA,MACA,QACA,SACA,WAAA+zB,EAAAhP,KAAA,IACA,SAAAgP,EAAAhP,KAAA,IACA,MAAAgP,EAAAhP,KAAA,EACA,IAAAgP,EAAAhP,GACA,SACA,WAAAgP,EAAAjxB,WAAA,IACA,SAAAixB,EAAAjxB,WAAA,IACA,MAAAixB,EAAAjxB,WAAA,EACA,IAAAixB,EAAAjxB,SACA,QACA,QACA,IACA,IACA,IACA,IACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UACA,MAAAixB,EAAAt1B,QAAA,EACA,IAAAs1B,EAAAt1B,MACA,KACA,MAAAs1B,EAAAr1B,SAAA,EACA,IAAAq1B,EAAAr1B,OACA,MAGA,OAAA8K,EAAA0jC,EAAA1lC,KAAAlI,IAOAqI,EAAA,SAAAosB,GACA,IAAAkb,EAAAC,EAAAC,EACAC,EACAC,EAAAC,EA2CA,OAzCAL,EAAAzlC,EAAA0jC,EAAAxmC,KAAA,IAAA1G,YACA,EACA,QACA,WAAA+zB,EAAAhP,KAAA,IACA,SAAAgP,EAAAhP,KAAA,IACA,MAAAgP,EAAAhP,KAAA,EACA,IAAAgP,EAAAhP,GACA,QACA,QACA,QACA,WAGAsqB,EAAA7oC,KAAA+oC,MAAAxb,EAAAxtB,qBAAA8nC,EAAA,IACAiB,EAAA9oC,KAAA+oC,MAAAxb,EAAAxtB,qBAAA8nC,EAAA,IAEAa,EAAA1lC,EAAA0jC,EAAA5mC,KAAA,IAAAtG,YACA,EACA,MAEAqvC,IAAA,OACAA,IAAA,OACAA,IAAA,MACA,IAAAA,EACAC,IAAA,OACAA,IAAA,OACAA,IAAA,MACA,IAAAA,KAMA,GAQA,UAAAvb,EAAAzqB,MACA6lC,EAAA9mC,EAAA0rB,EATA,IAUAvqB,EAAA0jC,EAAAvlC,KACAsnC,EACAC,EACAC,KAMAC,EAAAjrC,EAAA4vB,GACAob,EAAA9mC,EAAA0rB,EACAqb,EAAApuC,OArBA,IAsBAwI,EAAA0jC,EAAAvlC,KACAsnC,EACAC,EACAC,EACAC,KAQAxnC,EAAA,SAAAmsB,GAEA,OADAA,EAAAjxB,SAAAixB,EAAAjxB,UAAA,WACA0G,EAAA0jC,EAAAtlC,KACAJ,EAAAusB,GACAhxB,EAAAgxB,KAGAlsB,EAAA,SAAAksB,GACA,IAAAz0B,EAAA,IAAAU,YACA,EACA,OACA,WAAA+zB,EAAAhP,KAAA,IACA,SAAAgP,EAAAhP,KAAA,IACA,MAAAgP,EAAAhP,KAAA,EACA,IAAAgP,EAAAhP,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAAgP,EAAAzqB,OACAhK,IAAA0B,OAAA,MAGAwI,EAAA0jC,EAAArlC,KAAAvI,IAUA8uC,EAAA,SAAAhqC,EAAAhF,GACA,IAAAowC,EAAA,EAAAC,EAAA,EACAC,EAAA,EAAA1mC,EAAA,EAkBA,OAfA5E,EAAApD,cACA2uC,IAAAvrC,EAAA,GAAAtB,WACA0sC,EAAA,QAEAG,IAAAvrC,EAAA,GAAA2E,OACA0mC,EAAA,QAEAE,IAAAvrC,EAAA,GAAA7G,QACAmyC,EAAA,QAEAC,IAAAvrC,EAAA,GAAA4E,wBACAA,EAAA,KAKA,EACA,EACAwmC,EAAAC,EAAAC,EAAA1mC,EACA,GACA,WAAA5E,EAAApD,UAAA,IACA,SAAAoD,EAAApD,UAAA,IACA,MAAAoD,EAAApD,UAAA,EACA,IAAAoD,EAAApD,QACA,WAAA5B,KAAA,IACA,SAAAA,KAAA,IACA,MAAAA,KAAA,EACA,IAAAA,IAIA+uC,EAAA,SAAApa,EAAA30B,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAOA,IAJAD,GAAA,OADAgF,EAAA2vB,EAAA3vB,aACApD,OAEAyJ,EAAA2jC,EAAAhqC,EAAAhF,GAEAC,EAAA,EAAeA,EAAA+E,EAAApD,OAAoB3B,IACnCiJ,EAAAlE,EAAA/E,GACAoL,IAAAuH,SACA,WAAA1J,EAAAxF,YAAA,IACA,SAAAwF,EAAAxF,YAAA,IACA,MAAAwF,EAAAxF,YAAA,EACA,IAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,IACA,SAAAT,EAAAS,QAAA,IACA,MAAAT,EAAAS,QAAA,EACA,IAAAT,EAAAS,KACAT,EAAA/K,MAAAC,WAAA,EAAA8K,EAAA/K,MAAAE,UACA6K,EAAA/K,MAAAG,cAAA,EACA4K,EAAA/K,MAAAI,eAAA,EACA2K,EAAA/K,MAAAK,cAAA,EACA0K,EAAA/K,MAAAM,gBACA,MAAAyK,EAAA/K,MAAAO,oBACA,GAAAwK,EAAA/K,MAAAO,qBACA,WAAAwK,EAAAU,yBAAA,IACA,SAAAV,EAAAU,yBAAA,IACA,MAAAV,EAAAU,yBAAA,EACA,IAAAV,EAAAU,wBAGA,OAAAQ,EAAA0jC,EAAA7kC,KAAA,IAAArI,WAAAyK,KAGAyjC,EAAA,SAAAna,EAAA30B,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAOA,IAJAD,GAAA,MADAgF,EAAA2vB,EAAA3vB,aACApD,OAEAyJ,EAAA2jC,EAAAhqC,EAAAhF,GAEAC,EAAA,EAAeA,EAAA+E,EAAApD,OAAoB3B,IACnCiJ,EAAAlE,EAAA/E,GACAoL,IAAAuH,SACA,WAAA1J,EAAAxF,YAAA,IACA,SAAAwF,EAAAxF,YAAA,IACA,MAAAwF,EAAAxF,YAAA,EACA,IAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,IACA,SAAAT,EAAAS,QAAA,IACA,MAAAT,EAAAS,QAAA,EACA,IAAAT,EAAAS,OAGA,OAAAS,EAAA0jC,EAAA7kC,KAAA,IAAArI,WAAAyK,KAGApC,EAAA,SAAA0rB,EAAA30B,GACA,gBAAA20B,EAAAzqB,KACA4kC,EAAAna,EAAA30B,GAGA+uC,EAAApa,EAAA30B,IAIAgM,EAAAC,SACAjK,OACAgB,OACAoB,OACAC,OACAmsC,YAAA,SAAAjB,GACA,IAGArvC,EAFAuwC,EAAAzuC,IACA0uC,EAAArsC,EAAAkrC,GAMA,OAHArvC,EAAA,IAAAU,WAAA6vC,EAAAvxC,WAAAwxC,EAAAxxC,aACAwd,IAAA+zB,GACAvwC,EAAAwc,IAAAg0B,EAAAD,EAAAvxC,YACAgB,2DC9vBA,IAAAqP,EAAazR,EAAQ,QACrB6yC,EAAiB7yC,EAAQ,QACzB8yC,EAAmB9yC,EAAQ,QAC3B+yC,EAAY/yC,EAAQ,QA2BpB,SAAAgzC,EAAAC,EAAAliB,EAAAoL,GACA,IAAA+W,EAAAD,EAYA,OAVAJ,EAAA9hB,IACAoL,EAAApL,EACA,iBAAAkiB,IACAC,GAAsBD,SAGtBC,EAAAH,EAAAhiB,GAAiCkiB,QAGjCC,EAAA/W,WACA+W,EAGA,SAAAC,EAAAF,EAAAliB,EAAAoL,GAEA,OAAAiX,EADAriB,EAAAiiB,EAAAC,EAAAliB,EAAAoL,IAIA,SAAAiX,EAAAriB,GACA,YAAAA,EAAAoL,SACA,UAAA3pB,MAAA,6BAGA,IAAA6gC,GAAA,EACAlX,EAAA,SAAAmX,EAAAC,EAAA1kB,GACAwkB,IACAA,GAAA,EACAtiB,EAAAoL,SAAAmX,EAAAC,EAAA1kB,KA6BA,SAAA2kB,EAAAxiC,GAMA,OALAyiC,aAAAC,GACA1iC,aAAAwB,QACAxB,EAAA,IAAAwB,MAAA,IAAAxB,GAAA,kCAEAA,EAAA2iC,WAAA,EACAxX,EAAAnrB,EAAA4iC,GAIA,SAAAC,IACA,IAAAC,EAAA,CACA,IAAAC,EACAN,aAAAC,GAGAK,EAFAhjB,EAAAijB,aAAAvB,IAAAwB,EAAAF,OAEA,IAEA,OAAAE,EAAAF,OAAA,IAAAE,EAAAF,OAEA,IAAAR,EAAAK,EACAN,EAAA,KAiBA,OAfA,IAAAS,GACAR,GACA1kB,KA5CA,WAEA,IAAAA,OAAA4jB,EAQA,GALA5jB,EADAolB,EAAAV,SACAU,EAAAV,SAEAU,EAAAC,cAsJA,SAAAD,GACA,gBAAAA,EAAAE,aACA,OAAAF,EAAAG,YAEA,IAAAC,EAAAJ,EAAAG,aAAA,gBAAAH,EAAAG,YAAAlW,gBAAAlgB,SACA,WAAAi2B,EAAAE,cAAAE,EAIA,KAHAJ,EAAAG,YA5JAE,CAAAL,GAGAM,EACA,IACA1lB,EAAA9gB,KAAAlN,MAAAguB,GACa,MAAAzc,IAGb,OAAAyc,EA4BA2lB,GACAb,WAAAI,EACAU,SACAC,WACA72B,IAAAo1B,EACA0B,WAAAV,GAEAA,EAAAW,wBACArB,EAAAmB,QAAA5B,EAAAmB,EAAAW,2BAGAtB,EAAA,IAAA9gC,MAAA,iCAEA2pB,EAAAmX,EAAAC,IAAA1kB,OAGA,IAUAzhB,EACA0mC,EAXAG,EAAAljB,EAAAkjB,KAAA,KAEAA,IAEAA,EADAljB,EAAA8jB,MAAA9jB,EAAAijB,OACA,IAAAb,EAAA2B,eAEA,IAAA3B,EAAA4B,gBAMA,IAMArB,EANAT,EAAAgB,EAAAp2B,IAAAkT,EAAAkiB,KAAAliB,EAAAlT,IACA42B,EAAAR,EAAAQ,OAAA1jB,EAAA0jB,QAAA,MACA5lB,EAAAkC,EAAAlC,MAAAkC,EAAAhwB,KACA2zC,EAAAT,EAAAS,QAAA3jB,EAAA2jB,YACAM,IAAAjkB,EAAAikB,KACAT,GAAA,EAEAX,GACA/kB,UAAA4jB,EACAiC,WACAf,WAAA,EACAc,SACA52B,IAAAo1B,EACA0B,WAAAV,GA0CA,GAvCA,SAAAljB,IAAA,IAAAA,EAAAkkB,OACAV,GAAA,EACAG,EAAA,QAAAA,EAAA,SAAAA,EAAA,2BACA,QAAAD,GAAA,SAAAA,IACAC,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,oCACA7lB,EAAA9gB,KAAAC,WAAA,IAAA+iB,EAAAkkB,KAAApmB,EAAAkC,EAAAkkB,QAIAhB,EAAAiB,mBAvGA,WACA,IAAAjB,EAAAkB,YACAxR,WAAAkQ,EAAA,IAsGAI,EAAAmB,OAAAvB,EACAI,EAAAoB,QAAA7B,EAEAS,EAAAqB,WAAA,aAGArB,EAAAsB,QAAA,WACAzB,GAAA,GAEAG,EAAAuB,UAAAhC,EACAS,EAAAwB,KAAAhB,EAAAxB,GAAA+B,EAAAjkB,EAAA2kB,SAAA3kB,EAAAvT,UAEAw3B,IACAf,EAAA0B,kBAAA5kB,EAAA4kB,kBAKAX,GAAAjkB,EAAA2X,QAAA,IACAgL,EAAA/P,WAAA,WACA,IAAAmQ,EAAA,CACAA,GAAA,EACAG,EAAA2B,MAAA,WACA,IAAAxjC,EAAA,IAAAI,MAAA,0BACAJ,EAAAyjC,KAAA,YACArC,EAAAphC,KACS2e,EAAA2X,UAGTuL,EAAA6B,iBACA,IAAA1oC,KAAAsnC,EACAA,EAAA3gC,eAAA3G,IACA6mC,EAAA6B,iBAAA1oC,EAAAsnC,EAAAtnC,SAGK,GAAA2jB,EAAA2jB,UApLL,SAAAqB,GACA,QAAA5zC,KAAA4zC,EACA,GAAAA,EAAAhiC,eAAA5R,GAAA,SAEA,SAgLK6zC,CAAAjlB,EAAA2jB,SACL,UAAAliC,MAAA,qDAkBA,MAfA,iBAAAue,IACAkjB,EAAAE,aAAApjB,EAAAojB,cAGA,eAAApjB,GACA,mBAAAA,EAAAklB,YAEAllB,EAAAklB,WAAAhC,GAMAA,EAAAiC,KAAArnB,GAAA,MAEAolB,EAzNA/lC,EAAAC,QAAAglC,EACAA,EAAA4B,eAAAtjC,EAAAsjC,gBAyOA,aAxOA5B,EAAA2B,eAAA,wBAAA3B,EAAA4B,eAAA5B,EAAA4B,eAAAtjC,EAAAqjC,eAUA,SAAAqB,EAAA51B,GACA,QAAApe,EAAA,EAAmBA,EAAAg0C,EAAAryC,OAAkB3B,IACrCoe,EAAA41B,EAAAh0C,IAVAi0C,EAAA,qDAAA3B,GACAtB,EAAA,WAAAsB,EAAA,MAAAA,GAAA,SAAAxB,EAAAliB,EAAAoL,GAGA,OAFApL,EAAAiiB,EAAAC,EAAAliB,EAAAoL,IACAsY,SAAAxyB,cACAmxB,EAAAriB,2CCZA,IAAAslB,EAMAA,EAAA,SAAAC,GACA,IAEAC,EAAAD,EAAAl1C,WAGAo1C,EAAA,EAGAC,EAAA,EAGA5nC,KAAA/K,OAAA,WACA,SAAAyyC,GAIA1nC,KAAA6nC,cAAA,WACA,SAAAH,EAAAE,GAIA5nC,KAAA8nC,SAAA,WACA,IACAC,EAAAN,EAAAl1C,WAAAm1C,EACAM,EAAA,IAAA/zC,WAAA,GACAg0C,EAAAxtC,KAAAwgC,IAAA,EAAAyM,GAEA,OAAAO,EACA,UAAAtkC,MAAA,sBAGAqkC,EAAAj4B,IAAA03B,EAAAx0C,SAAA80C,EACAA,EAAAE,IACAN,EAAA,IAAAv1C,SAAA41C,EAAA31C,QAAA+B,UAAA,GAGAwzC,EAAA,EAAAK,EACAP,GAAAO,GAIAjoC,KAAAkoC,SAAA,SAAAC,GACA,IAAAC,EACAR,EAAAO,GACAR,IAAAQ,EACAP,GAAAO,IAEAA,GAAAP,EAGAO,GAAA,GAFAC,EAAA3tC,KAAA+oC,MAAA2E,EAAA,IAGAT,GAAAU,EAEApoC,KAAA8nC,WAEAH,IAAAQ,EACAP,GAAAO,IAKAnoC,KAAAqoC,SAAA,SAAArrC,GACA,IACAsrC,EAAA7tC,KAAAwgC,IAAA2M,EAAA5qC,GACAurC,EAAAZ,IAAA,GAAAW,EAUA,OARAV,GAAAU,GACA,EACAX,IAAAW,EACKZ,EAAA,GACL1nC,KAAA8nC,YAGAQ,EAAAtrC,EAAAsrC,GACA,EACAC,GAAAD,EAAAtoC,KAAAqoC,SAAAC,GAEAC,GAIAvoC,KAAAwoC,iBAAA,WACA,IAAAC,EACA,IAAAA,EAAA,EAA8BA,EAAAb,IAAyCa,EACvE,OAAAd,EAAA,aAAAc,GAIA,OAFAd,IAAAc,EACAb,GAAAa,EACAA,EAMA,OADAzoC,KAAA8nC,WACAW,EAAAzoC,KAAAwoC,oBAIAxoC,KAAA0oC,sBAAA,WACA1oC,KAAAkoC,SAAA,EAAAloC,KAAAwoC,qBAIAxoC,KAAA2oC,cAAA,WACA3oC,KAAAkoC,SAAA,EAAAloC,KAAAwoC,qBAIAxoC,KAAA4oC,sBAAA,WACA,IAAAC,EAAA7oC,KAAAwoC,mBACA,OAAAxoC,KAAAqoC,SAAAQ,EAAA,MAIA7oC,KAAA8oC,cAAA,WACA,IAAAP,EAAAvoC,KAAA4oC,wBACA,SAAAL,EAEA,EAAAA,IAAA,GAEA,GAAAA,IAAA,IAKAvoC,KAAA+oC,YAAA,WACA,WAAA/oC,KAAAqoC,SAAA,IAIAroC,KAAAgpC,iBAAA,WACA,OAAAhpC,KAAAqoC,SAAA,IAGAroC,KAAA8nC,YAGAzoC,EAAAC,QAAAkoC,uCCxIA,IAAAyB,EAAkB93C,EAAQ,QAC1B+3C,EAAqB/3C,EAAQ,QAAsC+3C,eACnEC,KACAA,EAAAC,GAAWj4C,EAAQ,QACnBg4C,EAAAE,IAAYl4C,EAAQ,QAGpB,IAoEAm4C,EAAA,SAAA5qC,EAAA6qC,EAAAh2C,GASA,IARA,IAGAi2C,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,EACAC,EArEA,IAwEAC,GAAA,EAGAD,EAAAnrC,EAAAnM,YAEA,GA5EA,KA4EAmM,EAAAkrC,IA5EA,KA4EAlrC,EAAAmrC,GAkCAD,IACAC,QAnCA,CAKA,OAHAL,EAAA9qC,EAAAzL,SAAA22C,EAAAC,GACAV,EAAAC,GAAAl4C,UAAAs4C,EAAAD,EAAAQ,MAGA,UACAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,GAAAC,IACAC,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAApsC,KAAA,QACAhK,EAAAivC,MAAAxuC,KAAA21C,GACAG,GAAA,GAQA,GAAAA,EACA,MAGAF,GAvGA,IAwGAC,GAxGA,IAuHA,IAFAD,GADAC,EAAAnrC,EAAAnM,YApHA,IAsHAu3C,GAAA,EACAF,GAAA,GAEA,GAxHA,KAwHAlrC,EAAAkrC,IAxHA,KAwHAlrC,EAAAmrC,GAkCAD,IACAC,QAnCA,CAKA,OAHAL,EAAA9qC,EAAAzL,SAAA22C,EAAAC,GACAV,EAAAC,GAAAl4C,UAAAs4C,EAAAD,EAAAQ,MAGA,UACAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,GAAAC,IACAC,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAApsC,KAAA,QACAhK,EAAAivC,MAAAxuC,KAAA21C,GACAG,GAAA,GAQA,GAAAA,EACA,MAGAF,GAnJA,IAoJAC,GApJA,MAqKAO,EAAA,SAAA1rC,EAAA6qC,EAAAh2C,GAcA,IAbA,IAGAi2C,EAAAC,EAAAC,EAAAC,EAAAU,EAAA/2C,EAAAg3C,EAFAV,EAAA,EACAC,EAxKA,IA2KAC,GAAA,EAEAS,GACAr4C,QACA8K,KAAA,GAIA6sC,EAAAnrC,EAAAnM,YAEA,GApLA,KAoLAmM,EAAAkrC,IApLA,KAoLAlrC,EAAAmrC,GAwDAD,IACAC,QAzDA,CAKA,OAHAL,EAAA9qC,EAAAzL,SAAA22C,EAAAC,GACAV,EAAAC,GAAAl4C,UAAAs4C,EAAAD,EAAAQ,MAGA,UAGA,GAFAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,IACAC,IAAAI,IACAH,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAApsC,KAAA,QACAhK,EAAAgO,MAAAvN,KAAA21C,GACAG,GAAA,IAGAv2C,EAAAi3C,eAAA,CACA,GAAAd,GACA,IAAAa,EAAAvtC,KAAA,CAGA,IAFAqtC,EAAA,IAAAp2C,WAAAs2C,EAAAvtC,MACA1J,EAAA,EACAi3C,EAAAr4C,KAAA+C,QACAq1C,EAAAC,EAAAr4C,KAAAu4C,QACAJ,EAAAt6B,IAAAu6B,EAAAh3C,GACAA,GAAAg3C,EAAA/3C,WAEA42C,EAAAC,GAAAsB,4BAAAL,KACA92C,EAAAi3C,cAAArB,EAAAC,GAAAe,aAAAE,GACA92C,EAAAi3C,cAAAjtC,KAAA,SAEAgtC,EAAAvtC,KAAA,EAGAutC,EAAAr4C,KAAA8B,KAAAw1C,GACAe,EAAAvtC,MAAAwsC,EAAAj3C,YAQA,GAAAu3C,GAAAv2C,EAAAi3C,cACA,MAGAZ,GArOA,IAsOAC,GAtOA,IAqPA,IAFAD,GADAC,EAAAnrC,EAAAnM,YAlPA,IAoPAu3C,GAAA,EACAF,GAAA,GAEA,GAtPA,KAsPAlrC,EAAAkrC,IAtPA,KAsPAlrC,EAAAmrC,GAkCAD,IACAC,QAnCA,CAKA,OAHAL,EAAA9qC,EAAAzL,SAAA22C,EAAAC,GACAV,EAAAC,GAAAl4C,UAAAs4C,EAAAD,EAAAQ,MAGA,UACAN,EAAAN,EAAAC,GAAAY,aAAAR,EAAAD,EAAAU,OACAP,EAAAP,EAAAC,GAAAc,+BAAAV,GACA,UAAAC,GAAAC,IACAC,EAAAR,EAAAC,GAAAe,aAAAX,MAEAG,EAAApsC,KAAA,QACAhK,EAAAgO,MAAAvN,KAAA21C,GACAG,GAAA,GAQA,GAAAA,EACA,MAGAF,GAjRA,IAkRAC,GAlRA,MA0aAc,EAAA,SAAAjsC,GACA,IAAA6qC,GACAQ,IAAA,KACAE,MAAA,MAGA12C,KAIA,QAAAw2C,KApaA,SAAArrC,EAAA6qC,GAMA,IALA,IAGAC,EAFAI,EAAA,EACAC,EAnBA,IAsBAA,EAAAnrC,EAAAnM,YAEA,GAvBA,KAuBAmM,EAAAkrC,IAvBA,KAuBAlrC,EAAAmrC,GAiCAD,IACAC,QAlCA,CAKA,OAHAL,EAAA9qC,EAAAzL,SAAA22C,EAAAC,GACAV,EAAAC,GAAAl4C,UAAAs4C,EAAAD,EAAAQ,MAGA,UACAR,EAAAQ,MACAR,EAAAQ,IAAAZ,EAAAC,GAAAwB,SAAApB,IAEA,MACA,UACAD,EAAAU,QACAV,EAAAU,MAAAd,EAAAC,GAAAyB,SAAArB,IAQA,GAAAD,EAAAQ,KAAAR,EAAAU,MACA,OAGAL,GAjDA,IAkDAC,GAlDA,KAkbAiB,CAAApsC,EAAA6qC,GAEAA,EAAAU,MAAA,CACA,GAAAV,EAAAU,MAAA/kC,eAAA6kC,GAEA,OADAR,EAAAU,MAAAF,IAEA,KAAAd,EAAA8B,iBACAx3C,EAAAgO,SACA6oC,EAAA1rC,EAAA6qC,EAAAh2C,GACA,IAAAA,EAAAgO,MAAAtM,eACA1B,EAAAgO,MAEA,MACA,KAAA0nC,EAAA+B,iBACAz3C,EAAAivC,SACA8G,EAAA5qC,EAAA6qC,EAAAh2C,GACA,IAAAA,EAAAivC,MAAAvtC,eACA1B,EAAAivC,OAQA,OAAAjvC,GA+BA8L,EAAAC,SACAC,QArBA,SAAAb,EAAAusC,GACA,IApdA/4C,EAsdAqB,EAQA,OALAA,GAzdArB,EAodAwM,GAndA,SAAA6jC,WAAA,IACArwC,EAAA,SAAAqwC,WAAA,IACArwC,EAAA,SAAAqwC,WAAA,GAqUA,SAAA7jC,GAUA,IATA,IAOA8qC,EANAM,GAAA,EACAoB,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAA,EACAC,EAAA,EAGA5sC,EAAAzJ,OAAAq2C,GAAA,IAEA,OADAnC,EAAAE,IAAAn4C,UAAAwN,EAAA4sC,IAEA,qBAGA,GAAA5sC,EAAAzJ,OAAAq2C,EAAA,IACAxB,GAAA,EACA,MAOA,IAJAuB,EAAAlC,EAAAE,IAAAkC,gBAAA7sC,EAAA4sC,IAIA5sC,EAAAzJ,OAAA,CACA60C,GAAA,EACA,MAEA,OAAAsB,IACA5B,EAAA9qC,EAAAzL,SAAAq4C,IAAAD,GACAD,EAAAjC,EAAAE,IAAAmC,kBAAAhC,IAEA8B,GAAAD,EACA,MACA,YAGA,GAAA3sC,EAAAzJ,OAAAq2C,EAAA,GACAxB,GAAA,EACA,MAOA,IAJAuB,EAAAlC,EAAAE,IAAAoC,cAAA/sC,EAAA4sC,IAIA5sC,EAAAzJ,OAAA,CACA60C,GAAA,EACA,MAEA,OAAAqB,IACA3B,EAAA9qC,EAAAzL,SAAAq4C,IAAAD,GACAF,EAAAhC,EAAAE,IAAAqC,gBAAAlC,IAEA0B,IACAI,GAAAD,EACA,MACA,QACAC,IAGA,GAAAxB,EACA,YAGA,UAAAqB,GAAA,OAAAC,EACA,YAGA,IAAAO,EAlZA,IAkZAR,EAiBA,OAdA3I,QAEAjlC,KAAA,QACAquC,IAAAR,EACAS,IAAAT,IAGA7tC,KAAA,QACAquC,IAAAR,EAAA,KAAAF,EAAAS,EACAE,IAAAT,EAAA,KAAAF,EAAAS,KA+DAG,CAAAptC,GAEAisC,EAAAjsC,MAGAnL,EAAAivC,OAAAjvC,EAAAgO,QA/LA,SAAAwqC,EAAAd,GACA,GAAAc,EAAAvJ,OAAAuJ,EAAAvJ,MAAAvtC,OAAA,CACA,IAAA+2C,EAAAf,OACA,IAAAe,IACAA,EAAAD,EAAAvJ,MAAA,GAAAoJ,KAEAG,EAAAvJ,MAAAr8B,QAAA,SAAA8lC,GACAA,EAAAL,IAAA1C,EAAA+C,EAAAL,IAAAI,GACAC,EAAAJ,IAAA3C,EAAA+C,EAAAJ,IAAAG,GAEAC,EAAAC,QAAAD,EAAAL,IA7SA,IA8SAK,EAAAE,QAAAF,EAAAJ,IA9SA,MAkTA,GAAAE,EAAAxqC,OAAAwqC,EAAAxqC,MAAAtM,OAAA,CACA,IAAAm3C,EAAAnB,EAWA,QAVA,IAAAmB,IACAA,EAAAL,EAAAxqC,MAAA,GAAAqqC,KAEAG,EAAAxqC,MAAA4E,QAAA,SAAA8lC,GACAA,EAAAL,IAAA1C,EAAA+C,EAAAL,IAAAQ,GACAH,EAAAJ,IAAA3C,EAAA+C,EAAAJ,IAAAO,GAEAH,EAAAC,QAAAD,EAAAL,IA3TA,IA4TAK,EAAAE,QAAAF,EAAAJ,IA5TA,MA8TAE,EAAAvB,cAAA,CACA,IAAAH,EAAA0B,EAAAvB,cACAH,EAAAuB,IAAA1C,EAAAmB,EAAAuB,IAAAQ,GACA/B,EAAAwB,IAAA3C,EAAAmB,EAAAwB,IAAAO,GAEA/B,EAAA6B,QAAA7B,EAAAuB,IAnUA,IAoUAvB,EAAA8B,QAAA9B,EAAAuB,IApUA,MAseAS,CAAA94C,EAAA03C,GAEA13C,GALA,6CCrfA,SAAA+4C,GAaA,SAAAC,EAAAC,GACAC,EAAAx3C,SACAy3C,KACA,GAGAD,IAAAx3C,QAAAu3C,EAPAntC,EAAAC,QAAAitC,EAUA,IAOAG,EAPAD,KAWAtuC,EAAA,EAIAwuC,EAAA,KAQA,SAAAC,IACA,KAAAzuC,EAAAsuC,EAAAx3C,QAAA,CACA,IAAA43C,EAAA1uC,EAUA,GAPAA,GAAA,EACAsuC,EAAAI,GAAAhuC,OAMAV,EAAAwuC,EAAA,CAGA,QAAAG,EAAA,EAAAC,EAAAN,EAAAx3C,OAAAkJ,EAAgE2uC,EAAAC,EAAkBD,IAClFL,EAAAK,GAAAL,EAAAK,EAAA3uC,GAEAsuC,EAAAx3C,QAAAkJ,EACAA,EAAA,GAGAsuC,EAAAx3C,OAAA,EACAkJ,EAAA,GACA,EAaA,IA0DA6uC,EACAC,EACA7sB,EA5DA8sB,OAAA,IAAAZ,IAAAa,KACAC,EAAAF,EAAAG,kBAAAH,EAAAI,uBA2GA,SAAAC,EAAAjgB,GACA,kBAKA,IAAAoQ,EAAA5I,WAAA0Y,EAAA,GAIAC,EAAAC,YAAAF,EAAA,IAEA,SAAAA,IAGA5I,aAAAlH,GACAiQ,cAAAF,GACAngB,MA/GA,mBAAA8f,GA4CAJ,EAAA,EACAC,EAAA,IAAAG,EA5CAR,GA6CAxsB,EAAA5X,SAAA2uB,eAAA,IACA8V,EAAAW,QAAAxtB,GAA4BytB,eAAA,IA9C5BnB,EA+CA,WACAM,KACA5sB,EAAAluB,KAAA86C,IAnBAN,EAAAa,EAAAX,GAQAL,EAAAG,eAgFAH,EAAAgB,oFC5MA,IAQAO,EAAAC,EAAAC,EARAC,EAAa98C,EAAQ,QACrB+8C,EAAkB/8C,EAAQ,QAC1B83C,EAAgB93C,EAAQ,QACxBg9C,EAA4Bh9C,EAAQ,QAA6Bg9C,wBAEjEC,EAAsBj9C,EAAQ,SAc9B28C,EAAA,WACA,IACAz7C,EAAA,IAAA4B,WATA,KAUAo6C,EAAA,EAEAP,EAAAnvC,UAAA6hC,KAAA3hC,KAAAmB,MAOAA,KAAAhM,KAAA,SAAA0K,GACA,IAGA4vC,EAFA1E,EAAA,EACAC,EAtBA,IAqCA,IAVAwE,IACAC,EAAA,IAAAr6C,WAAAyK,EAAAnM,WAAA87C,IACAt+B,IAAA1d,EAAAY,SAAA,EAAAo7C,IACAC,EAAAv+B,IAAArR,EAAA2vC,GACAA,EAAA,GAEAC,EAAA5vC,EAIAmrC,EAAAyE,EAAA/7C,YApCA,KAsCA+7C,EAAA1E,IAtCA,KAsCA0E,EAAAzE,IAWAD,IACAC,MATA7pC,KAAAuuC,QAAA,OAAAD,EAAAr7C,SAAA22C,EAAAC,IACAD,GA3CA,IA4CAC,GA5CA,KAyDAD,EAAA0E,EAAA/7C,aACAF,EAAA0d,IAAAu+B,EAAAr7C,SAAA22C,GAAA,GACAyE,EAAAC,EAAA/7C,WAAAq3C,IAOA5pC,KAAA4sC,MAAA,WAlEA,MAsEAyB,GArEA,KAqEAh8C,EAAA,KACA2N,KAAAuuC,QAAA,OAAAl8C,GACAg8C,EAAA,GAEAruC,KAAAuuC,QAAA,WAGA5vC,UAAA,IAAAsvC,GAMAF,EAAA,WACA,IAAAS,EAAA5D,EAAAC,EAAAsC,EACAY,EAAApvC,UAAA6hC,KAAA3hC,KAAAmB,MACAmtC,EAAAntC,KAEAA,KAAAyuC,wBACAzuC,KAAA0uC,qBAAA9K,EAEA4K,EAAA,SAAAnhB,EAAAshB,GACA,IAAAt7C,EAAA,EAQAs7C,EAAAC,4BACAv7C,GAAAg6B,EAAAh6B,GAAA,GAGA,QAAAs7C,EAAApxC,KACAqtC,EAAAvd,EAAAp6B,SAAAI,GAAAs7C,GAEA9D,EAAAxd,EAAAp6B,SAAAI,GAAAs7C,IAIA/D,EAAA,SAAAvd,EAAAwhB,GACAA,EAAAC,eAAAzhB,EAAA,GACAwhB,EAAAE,oBAAA1hB,EAAA,GAGA8f,EAAA6B,QAAA,GAAA3hB,EAAA,QAAAA,EAAA,IACAwhB,EAAAG,OAAA7B,EAAA6B,QAWAnE,EAAA,SAAAxd,EAAAkc,GACA,IAAA0F,EAAA57C,EAOA,KAAAg6B,EAAA,IAqBA,IAhBA8f,EAAAuB,iBACAntC,MAAA,KACAihC,MAAA,KACA0M,qBAKAD,EAAA,IADA,GAAA5hB,EAAA,OAAAA,EAAA,IACA,EAOAh6B,EAAA,KAHA,GAAAg6B,EAAA,QAAAA,EAAA,KAIAh6B,EAAA47C,GAAA,CACA,IAAAp6C,EAAAw4B,EAAAh6B,GACA02C,GAAA,GAAA1c,EAAAh6B,EAAA,OAAAg6B,EAAAh6B,EAAA,GAKAwB,IAAAo0C,EAAA8B,kBACA,OAAAoC,EAAAuB,gBAAAntC,MACA4rC,EAAAuB,gBAAAntC,MAAAwoC,EACOl1C,IAAAo0C,EAAA+B,kBACP,OAAAmC,EAAAuB,gBAAAlM,MACA2K,EAAAuB,gBAAAlM,MAAAuH,EACOl1C,IAAAo0C,EAAAkG,uBAEPhC,EAAAuB,gBAAA,kBAAA3E,GAAAl1C,GAKAxB,GAAA,OAAAg6B,EAAAh6B,EAAA,OAAAg6B,EAAAh6B,EAAA,IAIAk2C,EAAAmF,gBAAAvB,EAAAuB,kBAMA1uC,KAAAhM,KAAA,SAAAw1C,GACA,IACAj2C,KACAF,EAAA,EAmBA,GAjBAE,EAAAq7C,6BAAA,GAAApF,EAAA,IAGAj2C,EAAAw2C,IAAA,GAAAP,EAAA,GACAj2C,EAAAw2C,MAAA,EACAx2C,EAAAw2C,KAAAP,EAAA,IAOA,GAAAA,EAAA,YACAn2C,GAAAm2C,EAAAn2C,GAAA,GAIA,IAAAE,EAAAw2C,IACAx2C,EAAAgK,KAAA,MACAixC,EAAAhF,EAAAv2C,SAAAI,GAAAE,GACAyM,KAAAuuC,QAAA,OAAAh7C,QACK,GAAAA,EAAAw2C,MAAA/pC,KAAAgvC,OAML,IALAz7C,EAAAgK,KAAA,MACAixC,EAAAhF,EAAAv2C,SAAAI,GAAAE,GACAyM,KAAAuuC,QAAA,OAAAh7C,GAGAyM,KAAAyuC,qBAAAx5C,QACA+K,KAAAovC,YAAA5qC,MAAAxE,UAAAyuC,qBAAAhE,mBAEK7G,IAAA5jC,KAAA0uC,gBAGL1uC,KAAAyuC,qBAAAz6C,MAAAw1C,EAAAn2C,EAAAE,IAEAyM,KAAAovC,YAAA5F,EAAAn2C,EAAAE,IAIAyM,KAAAovC,YAAA,SAAA5F,EAAAn2C,EAAAE,GAEAA,EAAAw2C,MAAA/pC,KAAA0uC,gBAAAntC,MACAhO,EAAAsB,WAAAo0C,EAAA8B,iBACKx3C,EAAAw2C,MAAA/pC,KAAA0uC,gBAAAlM,MACLjvC,EAAAsB,WAAAo0C,EAAA+B,iBAIAz3C,EAAAsB,WAAAmL,KAAA0uC,gBAAA,kBAAAn7C,EAAAw2C,KAGAx2C,EAAAgK,KAAA,MACAhK,EAAArB,KAAAs3C,EAAAv2C,SAAAI,GAEA2M,KAAAuuC,QAAA,OAAAh7C,MAIAoL,UAAA,IAAAsvC,EACAF,EAAAsB,cACAC,KAAA,GACAC,KAAA,KAWAvB,EAAA,WACA,IACAb,EAAAntC,KAEAuB,GACArP,QACA8K,KAAA,GAEAwlC,GACAtwC,QACA8K,KAAA,GAEAwyC,GACAt9C,QACA8K,KAAA,GAqDAyyC,EAAA,SAAAC,EAAAnyC,EAAAoyC,GACA,IAOAC,EACAlP,EAPAmP,EAAA,IAAA57C,WAAAy7C,EAAA1yC,MACA8yC,GACAvyC,QAEAjK,EAAA,EACAD,EAAA,EAMA,GAAAq8C,EAAAx9C,KAAA+C,UAAAy6C,EAAA1yC,KAAA,IAMA,IAHA8yC,EAAAl1C,QAAA80C,EAAAx9C,KAAA,GAAA63C,IAGAz2C,EAAA,EAAiBA,EAAAo8C,EAAAx9C,KAAA+C,OAAwB3B,IACzCotC,EAAAgP,EAAAx9C,KAAAoB,GAEAu8C,EAAA9/B,IAAA2wB,EAAAxuC,KAAAmB,GACAA,GAAAqtC,EAAAxuC,KAAAK,WA1EA,IAAA86B,EAAAid,EACAyF,EADA1iB,EA8EAwiB,GA9EAvF,EA8EAwF,GA1EAE,aAAA,GAAA3iB,EAAA,MAAAA,EAAA,IAGAid,EAAA2F,uBAAA,MAAA5iB,EAAA,IAcA,KAVA0iB,EAAA1iB,EAAA,MAcAid,EAAAuB,KAAA,GAAAxe,EAAA,SACA,IAAAA,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,SACA,IAAAA,EAAA,SACAid,EAAAuB,KAAA,EACAvB,EAAAuB,MAAA,EAAAxe,EAAA,SACAid,EAAAsB,IAAAtB,EAAAuB,IACA,GAAAkE,IACAzF,EAAAsB,KAAA,GAAAve,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,UACA,IAAAA,EAAA,SACA,IAAAA,EAAA,SACAid,EAAAsB,KAAA,EACAtB,EAAAsB,MAAA,EAAAve,EAAA,WAMAid,EAAAp4C,KAAAm7B,EAAAp6B,SAAA,EAAAo6B,EAAA,IAoCAuiB,EAAA,UAAAryC,GAAAuyC,EAAAE,cAAAN,EAAA1yC,MAGA2yC,GAAAC,KACAF,EAAA1yC,KAAA,EACA0yC,EAAAx9C,KAAA+C,OAAA,GAKA26C,GACAzC,EAAAoB,QAAA,OAAAuB,KAIA9B,EAAArvC,UAAA6hC,KAAA3hC,KAAAmB,MAMAA,KAAAhM,KAAA,SAAA9B,KAEA28C,IAAA,aAIAvE,IAAA,WACA,IAAAoF,EAAA76C,EAEA,OAAA3C,EAAA2C,YACA,KAAAo0C,EAAA8B,iBACA,KAAAqD,EAAArD,iBACA2E,EAAAnuC,EACA1M,EAAA,QACA,MACA,KAAAo0C,EAAA+B,iBACA0E,EAAAlN,EACA3tC,EAAA,QACA,MACA,KAAAo0C,EAAAkG,qBACAO,EAAAF,EACA36C,EAAA,iBACA,MACA,QAEA,OAKA3C,EAAA08C,2BACAa,EAAAC,EAAA76C,GAAA,GAKA66C,EAAAx9C,KAAA8B,KAAA9B,GACAw9C,EAAA1yC,MAAA9K,OAAAK,YAEAg3C,IAAA,WACA,IACAuG,GACAvyC,KAAA,WACAqlC,WAEA8L,EAAAx8C,EAAAw8C,gBAGA,OAAAA,EAAAntC,OACAuuC,EAAAlN,OAAA5uC,MACAk8C,mBACA11C,oBAAA,GAEAwe,IAAA01B,EAAAntC,MACA4uC,MAAA,MACA5yC,KAAA,UAGA,OAAAmxC,EAAAlM,OACAsN,EAAAlN,OAAA5uC,MACAk8C,mBACA11C,oBAAA,GAEAwe,IAAA01B,EAAAlM,MACA2N,MAAA,OACA5yC,KAAA,UAIA4vC,EAAAoB,QAAA,OAAAuB,MAEK59C,EAAAqL,SAYLyC,KAAA4sC,MAAA,WAGA6C,EAAAluC,EAAA,SACAkuC,EAAAjN,EAAA,SACAiN,EAAAD,EAAA,kBACAxvC,KAAAuuC,QAAA,WAGA5vC,UAAA,IAAAsvC,EAEA,IAAAmC,GACAC,QAAA,EACAC,mBA/dA,IAgeAxC,wBACAC,uBACAC,mBACAG,0BACAD,8BACAqC,aAAArC,EAAAqC,aACAC,eAAkBr/C,EAAQ,SAG1B,QAAAoM,KAAA0rC,EACAA,EAAA/jC,eAAA3H,KACA6yC,EAAA7yC,GAAA0rC,EAAA1rC,IAIA8B,EAAAC,QAAA8wC,wBCjgBMxtC,OAAO6tC,wBAET7tC,OAAO6tC,sBAEI7tC,OAAO8tC,6BACd9tC,OAAO+tC,0BACP/tC,OAAOguC,wBACPhuC,OAAOiuC,yBACP,SAA8CvjB,EAAmC6G,GAE7EvxB,OAAOkyB,WAAYxH,EAAU,IAAO,2CCfhD,IAAAwjB,EAAA3/C,EAAA,QAAA4/C,EAAA5/C,EAAA4R,EAAA+tC,GAAAE,EAAA7/C,EAAA,QAAA8/C,EAAA9/C,EAAA4R,EAAAiuC,GAAAE,EAAA//C,EAAA,QAAAggD,EAAAhgD,EAAA4R,EAAAmuC,GAAAE,EAAAjgD,EAAA,QAAAkgD,EAAAlgD,EAAA4R,EAAAquC,GAAAE,EAAAngD,EAAA,QAAAogD,EAAApgD,EAAA4R,EAAAuuC,GAAAE,EAAArgD,EAAA,QAAAsgD,EAAAtgD,EAAA4R,EAAAyuC,GAAAE,EAAAvgD,EAAA,QAAAwgD,EAAAxgD,EAAA4R,EAAA2uC,GAAAE,EAAAzgD,EAAA,QAAA0gD,EAAA1gD,EAAA,QAAA2gD,EAAA3gD,EAAA,QAAA4gD,EAAA5gD,EAAA4R,EAAA+uC,GAAAE,EAAA7gD,EAAA,QAAA8gD,GAAA9gD,EAAA4R,EAAAivC,GAAA7gD,EAAA,SAAA+gD,EAAA/gD,EAAA4R,EAAAkvC,GAAAE,EAAAhhD,EAAA,QA0BAqD,EAAA,QAOA+L,OAAA,EAGA6xC,EAAA,OAGAC,KAYAC,EAAA,SAAA/0C,EAAA6E,GACA,IAAAmwC,EAAAhyC,EAAAiyC,OAAAJ,GACAK,EAAA,IAAAC,OAAA,KAAAH,EAAA,MAkBA,GAhBA,QAAAh1C,GAGA6E,EAAAuwC,QAAAp1C,EAAA6V,cAAA,KAIAi/B,GACAA,EAAAr+C,QAAAiS,OAAA7D,IAIAA,EAAAuwC,QAAA,YAIO5B,EAAA5vC,EAAQb,QAAf,CAOA,IAAAsyC,EAAW7B,EAAA5vC,EAAQb,QAAA/C,GAEnBq1C,GAAA,UAAAr1C,IAGAq1C,EAAS7B,EAAA5vC,EAAQb,QAAA2rC,MAAiB8E,EAAA5vC,EAAQb,QAAAC,KAK1CqyC,GAAAL,GAAAE,EAAAh/B,KAAAlW,IAIAq1C,EAAA50C,MAAAgI,QAAA5D,GAAA,gBAA6C2uC,EAAA5vC,EAAQb,QAAA8B,MAUrD7B,EAAA,WACA,QAAAsyC,EAAA1vC,UAAAlO,OAAAmN,EAAApE,MAAA60C,GAAAC,EAAA,EAAiEA,EAAAD,EAAaC,IAC9E1wC,EAAA0wC,GAAA3vC,UAAA2vC,GAGAR,EAAA,MAAAlwC,KAsBAowC,QACAO,IAAA,uBACAC,IAAA,GACAC,MAAA,uBACAhH,KAAA,iBACAiH,KAAA,aACAre,MAAA,QACAse,QAAAf,GAcA7xC,EAAA6xC,MAAA,SAAAG,GACA,oBAAAA,EAAA,CACA,IAAAhyC,EAAAiyC,OAAAttC,eAAAqtC,GACA,UAAA5uC,MAAA,IAAA4uC,EAAA,8BAEAH,EAAAG,EAEA,OAAAH,GAYA7xC,EAAA8xC,QAAA,WACA,OAAAA,KAAApsC,OAAAosC,OAOA9xC,EAAA8xC,QAAAe,MAAA,WACAf,IACAA,EAAAp9C,OAAA,IAOAsL,EAAA8xC,QAAAgB,QAAA,WACA,OAAAhB,IACAA,EAAAp9C,OAAA,EACAo9C,EAAA,OAOA9xC,EAAA8xC,QAAA1vC,OAAA,WACA,OAAA0vC,IACAA,OAUA9xC,EAAAs0B,MAAA,WACA,QAAAye,EAAAnwC,UAAAlO,OAAAmN,EAAApE,MAAAs1C,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnFnxC,EAAAmxC,GAAApwC,UAAAowC,GAGA,OAAAjB,EAAA,QAAAlwC,IASA7B,EAAA2yC,KAAA,WACA,QAAAM,EAAArwC,UAAAlO,OAAAmN,EAAApE,MAAAw1C,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnFrxC,EAAAqxC,GAAAtwC,UAAAswC,GAGA,OAAAnB,EAAA,OAAAlwC,IAUA7B,EAAA0yC,MAAA,WACA,QAAAS,EAAAvwC,UAAAlO,OAAAmN,EAAApE,MAAA01C,GAAAC,EAAA,EAAoEA,EAAAD,EAAeC,IACnFvxC,EAAAuxC,GAAAxwC,UAAAwwC,GAGA,OAAArB,EAAA,QAAAlwC,IAGA,IAAAwxC,EAAArzC,EAEAszC,EAAA,mBAAAhjC,QAAA,iBAAAA,OAAAa,SAAA,SAAAw1B,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,mBAAAr2B,QAAAq2B,EAAAxgC,cAAAmK,QAAAq2B,IAAAr2B,OAAAlS,UAAA,gBAAAuoC,GAGA4M,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAC,EAAA,SAAAC,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAH,UAAA,kEAAAG,GAGAD,EAAAx1C,UAAAP,OAAAi2C,OAAAD,KAAAz1C,WACA+H,aACAjI,MAAA01C,EACAjkC,YAAA,EACAokC,UAAA,EACArkC,cAAA,KAGAmkC,IAAAh2C,OAAAm2C,eAAAn2C,OAAAm2C,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,IAGAK,EAAA,SAAAtH,EAAAtuC,GACA,IAAAsuC,EACA,UAAAuH,eAAA,6DAGA,OAAA71C,GAAA,iBAAAA,GAAA,mBAAAA,EAAAsuC,EAAAtuC,GAGA81C,EAAA,SAAAC,EAAAC,GAEA,OADAD,EAAAC,MACAD,GAiCA71C,EAAAX,OAAAO,UAAAI,SAcAV,EAAA,SAAAy2C,GACA,OAAAC,EAAAD,GAAA12C,OAAAC,KAAAy2C,OAYA,SAAAE,EAAAF,EAAAlC,GACAv0C,EAAAy2C,GAAA3uC,QAAA,SAAA5H,GACA,OAAAq0C,EAAAkC,EAAAv2C,QAoCA,SAAAsE,EAAAsH,GACA,QAAA0oC,EAAA1vC,UAAAlO,OAAAggD,EAAAj3C,MAAA60C,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAuFA,EAAAD,EAAaC,IACpGmC,EAAAnC,EAAA,GAAA3vC,UAAA2vC,GAGA,OAAA10C,OAAAyE,OACAzE,OAAAyE,OAAA2B,MAAApG,QAAA+L,GAAAlE,OAAAgvC,KAGAA,EAAA9uC,QAAA,SAAA4hB,GACAA,GAIAitB,EAAAjtB,EAAA,SAAAtpB,EAAAF,GACA4L,EAAA5L,GAAAE,MAIA0L,GAaA,SAAA4qC,EAAAt2C,GACA,QAAAA,GAAA,qBAAAA,EAAA,YAAAo1C,EAAAp1C,IAUA,SAAAy2C,EAAAz2C,GACA,OAAAs2C,EAAAt2C,IAAA,oBAAAM,EAAAF,KAAAJ,MAAAiI,cAAAtI,OA0BA,SAAA+2C,EAAAC,EAAAC,GACA,IAAAD,IAAAC,EACA,SAGA,GAAqB,mBAARtE,EAAA5vC,EAAQm0C,iBAAA,CACrB,IAAAC,EAAaxE,EAAA5vC,EAAQm0C,iBAAAF,GAErB,OAAAG,IAAAF,GAAA,GAGA,SAGA,IAAAG,EAAAb,GAAA,kbAaA,SAAAc,EAAAC,GACA,uBAAAA,GAAA,KAAAjiC,KAAAiiC,GAcA,SAAAC,EAAAD,GACA,QAAAjiC,KAAAiiC,GACA,UAAA/xC,MAAA,2CAuBA,SAAAiyC,IAEA,OAAS3E,EAAA9vC,IAAa4vC,EAAA5vC,EAAQqH,SAa9B,SAAAqtC,EAAAp3C,GACA,OAAAs2C,EAAAt2C,IAAA,IAAAA,EAAA8Q,SASA,SAAAumC,IAIA,IACA,OAAW/E,EAAA5vC,EAAQ40C,SAAYhF,EAAA5vC,EAAQgsC,KACpC,MAAAjb,GACH,UAaA,SAAA8jB,EAAApQ,GACA,gBAAAqQ,EAAApnB,GACA,IAAA4mB,EAAAQ,GACA,OAAahF,EAAA9vC,EAAQykC,GAAA,MAErB6P,EAAA5mB,KACAA,EAAgBoiB,EAAA9vC,EAAQ+0C,cAAArnB,IAGxB,IAAAsnB,EAAAN,EAAAhnB,KAAwCoiB,EAAA9vC,EAExC,OAAAg1C,EAAAvQ,IAAAuQ,EAAAvQ,GAAAqQ,IAsBA,SAAAG,IACA,IAAA9mB,EAAAnsB,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,SACAkzC,EAAAlzC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAmzC,EAAAnzC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAozC,EAAApzC,UAAA,GAEAiyC,EAAWnE,EAAA9vC,EAAQC,cAAAkuB,GA6BnB,OA3BAlxB,OAAAo4C,oBAAAH,GAAAlwC,QAAA,SAAAswC,GACA,IAAAC,EAAAL,EAAAI,IAKA,IAAAA,EAAA5xC,QAAA,mBAAA4xC,GAAA,SAAAA,GACA7C,EAAAV,KAAiB/B,IAAIqE,EAAAiB,EAAAC,IACrBtB,EAAA3lC,aAAAgnC,EAAAC,IAIK,gBAAAD,EACL3sC,EAAAsrC,EAAAsB,GAEAtB,EAAAqB,GAAAC,IAIAt4C,OAAAo4C,oBAAAF,GAAAnwC,QAAA,SAAAwwC,GACAvB,EAAA3lC,aAAAknC,EAAAL,EAAAK,MAGAJ,GACAK,GAAAxB,EAAAmB,GAGAnB,EAeA,SAAAtrC,EAAAsrC,EAAA9yC,GAMA,YALA,IAAA8yC,EAAAtrC,YACAsrC,EAAAyB,UAAAv0C,EAEA8yC,EAAAtrC,YAAAxH,EAEA8yC,EAYA,SAAA0B,EAAAz9B,EAAA08B,GACAA,EAAA71B,WACA61B,EAAAzgB,aAAAjc,EAAA08B,EAAA71B,YAEA61B,EAAAryB,YAAArK,GAoBA,SAAA09B,EAAA5iB,EAAA6iB,GAEA,OADArB,EAAAqB,GACA7iB,EAAA8iB,UACA9iB,EAAA8iB,UAAAlc,SAAAic,IAtLA31C,EAwLA21C,EAvLA,IAAAtE,OAAA,UAAArxC,EAAA,YAuLAoS,KAAA0gB,EAAA9yB,WAxLA,IAAAA,EAuMA,SAAA61C,GAAA/iB,EAAAgjB,GAUA,OATAhjB,EAAA8iB,UACA9iB,EAAA8iB,UAAAjhB,IAAAmhB,GAIGJ,EAAA5iB,EAAAgjB,KACHhjB,EAAA9yB,WAAA8yB,EAAA9yB,UAAA,IAAA81C,GAAAtwB,QAGAsN,EAeA,SAAAijB,GAAAjjB,EAAAkjB,GAUA,OATAljB,EAAA8iB,UACA9iB,EAAA8iB,UAAAK,OAAAD,IAEA1B,EAAA0B,GACAljB,EAAA9yB,UAAA8yB,EAAA9yB,UAAAjC,MAAA,OAAAd,OAAA,SAAA8E,GACA,OAAAA,IAAAi0C,IACKp5C,KAAA,MAGLk2B,EAmCA,SAAAojB,GAAApjB,EAAAqjB,EAAAC,GAKA,IAAAhgB,EAAAsf,EAAA5iB,EAAAqjB,GAYA,GAVA,mBAAAC,IACAA,IAAAtjB,EAAAqjB,IAGA,kBAAAC,IACAA,GAAAhgB,GAKAggB,IAAAhgB,EAUA,OANAggB,EACAP,GAAA/iB,EAAAqjB,GAEAJ,GAAAjjB,EAAAqjB,GAGArjB,EAYA,SAAAujB,GAAAtC,EAAAkB,GACAl4C,OAAAo4C,oBAAAF,GAAAnwC,QAAA,SAAAwwC,GACA,IAAAgB,EAAArB,EAAAK,GAEA,OAAAgB,QAAA,IAAAA,IAAA,IAAAA,EACAvC,EAAAzhC,gBAAAgjC,GAEAvB,EAAA3lC,aAAAknC,GAAA,IAAAgB,EAAA,GAAAA,KAiBA,SAAAC,GAAA5iD,GACA,IAAAkyC,KAKA2Q,EAAA,kEAEA,GAAA7iD,KAAAshD,YAAAthD,EAAAshD,WAAArhD,OAAA,EAGA,IAFA,IAAA6iD,EAAA9iD,EAAAshD,WAEAhjD,EAAAwkD,EAAA7iD,OAAA,EAAkC3B,GAAA,EAAQA,IAAA,CAC1C,IAAAqjD,EAAAmB,EAAAxkD,GAAA0C,KACA+hD,EAAAD,EAAAxkD,GAAAmL,MAIA,kBAAAzJ,EAAA2hD,KAAA,IAAAkB,EAAAhzC,QAAA,IAAA8xC,EAAA,OAIAoB,EAAA,OAAAA,GAGA7Q,EAAAyP,GAAAoB,EAIA,OAAA7Q,EAeA,SAAA8Q,GAAA5C,EAAA6C,GACA,OAAA7C,EAAA4C,aAAAC,GAeA,SAAAxoC,GAAA2lC,EAAA6C,EAAAx5C,GACA22C,EAAA3lC,aAAAwoC,EAAAx5C,GAYA,SAAAkV,GAAAyhC,EAAA6C,GACA7C,EAAAzhC,gBAAAskC,GAMA,SAAAC,KACEjH,EAAA9vC,EAAQ6e,KAAAuI,QACR0oB,EAAA9vC,EAAQg3C,cAAA,WACV,UAOA,SAAAC,KACEnH,EAAA9vC,EAAQg3C,cAAA,WACV,UAuBA,SAAAE,GAAAjD,GACA,GAAAA,KAAAiD,uBAAAjD,EAAA1tC,WAAA,CACA,IAAA4wC,EAAAlD,EAAAiD,wBACA9kD,KAgBA,OAdA,gDAAA4S,QAAA,SAAAvC,QACAggC,IAAA0U,EAAA10C,KACArQ,EAAAqQ,GAAA00C,EAAA10C,MAIArQ,EAAAZ,SACAY,EAAAZ,OAAA4lD,WAAApD,EAAAC,EAAA,YAGA7hD,EAAAb,QACAa,EAAAb,MAAA6lD,WAAApD,EAAAC,EAAA,WAGA7hD,GA6BA,SAAAilD,GAAApD,GACA,IAAA33C,OAAA,EAMA,GAJA23C,EAAAiD,uBAAAjD,EAAA1tC,aACAjK,EAAA23C,EAAAiD,0BAGA56C,EACA,OACA89B,KAAA,EACAE,IAAA,GAIA,IAAAgd,EAAcxH,EAAA9vC,EAAQkuB,gBACtBrP,EAAaixB,EAAA9vC,EAAQ6e,KAErB04B,EAAAD,EAAAC,YAAA14B,EAAA04B,YAAA,EACAld,EAAmBuV,EAAA5vC,EAAQw3C,aAAA34B,EAAAwb,WAC3BD,EAAA99B,EAAA89B,KAAAC,EAAAkd,EAEAE,EAAAH,EAAAG,WAAA54B,EAAA44B,WAAA,EACAld,EAAkBqV,EAAA5vC,EAAQ03C,aAAA74B,EAAA0b,UAC1BD,EAAAh+B,EAAAg+B,IAAAC,EAAAkd,EAGA,OACArd,KAAA9gC,KAAAq+C,MAAAvd,GACAE,IAAAhhC,KAAAq+C,MAAArd,IA+BA,SAAAsd,GAAA3D,EAAAtF,GACA,IAAA/H,KACAtqC,EAAA+6C,GAAApD,GACA4D,EAAA5D,EAAA6D,YACAC,EAAA9D,EAAA+D,aAEAC,EAAA37C,EAAAg+B,IACA4d,EAAA57C,EAAA89B,KACApkB,EAAA24B,EAAA34B,MACAD,EAAA44B,EAAA54B,MAUA,OARA44B,EAAAlyB,iBACA1G,EAAA44B,EAAAlyB,eAAA,GAAA1G,MACAC,EAAA24B,EAAAlyB,eAAA,GAAAzG,OAGA4wB,EAAAlN,EAAApgC,KAAA6+C,IAAA,EAAA7+C,KAAAwgC,IAAA,GAAAme,EAAAjiC,EAAA+hC,OACAnR,EAAA7V,EAAAz3B,KAAA6+C,IAAA,EAAA7+C,KAAAwgC,IAAA,GAAA/jB,EAAAmiC,GAAAL,IAEAjR,EAaA,SAAAwR,GAAA96C,GACA,OAAAs2C,EAAAt2C,IAAA,IAAAA,EAAA8Q,SAYA,SAAAiqC,GAAApE,GACA,KAAAA,EAAAl1B,YACAk1B,EAAA3xB,YAAA2xB,EAAAl1B,YAEA,OAAAk1B,EAwBA,SAAAqE,GAAAlD,GAUA,MANA,mBAAAA,IACAA,QAKAv4C,MAAAgI,QAAAuwC,UAAAr4C,IAAA,SAAAO,GAQA,MAJA,mBAAAA,IACAA,OAGAo3C,EAAAp3C,IAAA86C,GAAA96C,GACAA,EAGA,iBAAAA,GAAA,KAAAgV,KAAAhV,GACawyC,EAAA9vC,EAAQg2B,eAAA14B,QADrB,IAGGH,OAAA,SAAAG,GACH,OAAAA,IAiBA,SAAAm4C,GAAAxB,EAAAmB,GAIA,OAHAkD,GAAAlD,GAAApwC,QAAA,SAAAia,GACA,OAAAg1B,EAAA1xB,YAAAtD,KAEAg1B,EAiBA,SAAAsE,GAAAtE,EAAAmB,GACA,OAAAK,GAAA4C,GAAApE,GAAAmB,GAaA,SAAAoD,GAAA7J,GAKA,YAAAlM,IAAAkM,EAAAz4B,aAAAusB,IAAAkM,EAAAx4B,UAgBA,IAAAw4B,EAAAz4B,aAAAusB,IAAAkM,EAAAx4B,SAOA,IAAAw4B,EAAAz4B,QAAA,IAAAy4B,EAAAx4B,SA4BA,IAAAsiC,GAAA5D,EAAA,iBAmBA6D,GAAA7D,EAAA,oBAEA8D,GAAA17C,OAAA27C,QACAnE,SACAC,OACAC,YACAM,WACAtsC,cACAgtC,YACAC,WACAG,YACAE,eACAG,eACAG,iBACAE,iBACAI,gBACAvoC,gBACAkE,mBACAukC,sBACAE,wBACAC,yBACAG,gBACAO,sBACAQ,cACAC,WACAC,oBACA7C,iBACA8C,iBACAC,qBACAC,KACAC,QAYAG,GAAA,EAQA,SAAAC,KACA,OAAAD,KAkBA,IAAAE,MASAC,GAAA,aAAA7oD,MAAA8oD,UAWA,SAAAC,GAAAjF,GACA,IAAAp8B,EAAAo8B,EAAA+E,IAUA,OARAnhC,IACAA,EAAAo8B,EAAA+E,IAAAF,MAGAC,GAAAlhC,KACAkhC,GAAAlhC,OAGAkhC,GAAAlhC,GAaA,SAAAshC,GAAAlF,GACA,IAAAp8B,EAAAo8B,EAAA+E,IAEA,QAAAnhC,KAIA5a,OAAAo4C,oBAAA0D,GAAAlhC,IAAA/jB,OASA,SAAAslD,GAAAnF,GACA,IAAAp8B,EAAAo8B,EAAA+E,IAEA,GAAAnhC,EAAA,QAKAkhC,GAAAlhC,GAGA,WACAo8B,EAAA+E,IACG,MAAA52C,GACH6xC,EAAAzhC,gBACAyhC,EAAAzhC,gBAAAwmC,IAGA/E,EAAA+E,IAAA,OAuBA,SAAAK,GAAAC,EAAAl9C,GACA,IAAArL,EAAAmoD,GAAAI,GAGA,IAAAvoD,EAAAwoD,SAAAn9C,GAAAtI,gBACA/C,EAAAwoD,SAAAn9C,GAKAk9C,EAAAE,oBACAF,EAAAE,oBAAAp9C,EAAArL,EAAA0oD,YAAA,GACKH,EAAAllC,aACLklC,EAAAllC,YAAA,KAAAhY,EAAArL,EAAA0oD,aAKAx8C,OAAAo4C,oBAAAtkD,EAAAwoD,UAAAzlD,QAAA,WACA/C,EAAAwoD,gBACAxoD,EAAA0oD,kBACA1oD,EAAAiV,UAIA,IAAA/I,OAAAo4C,oBAAAtkD,GAAA+C,QACAslD,GAAAE,GAmBA,SAAAI,GAAAjI,EAAA6H,EAAAtZ,EAAA7T,GACA6T,EAAAh7B,QAAA,SAAA5I,GAEAq1C,EAAA6H,EAAAl9C,EAAA+vB,KAaA,SAAAwtB,GAAAhL,GAEA,SAAAiL,IACA,SAGA,SAAAC,IACA,SAQA,IAAAlL,MAAAtpC,qBAAA,CACA,IAAAy0C,EAAAnL,GAAuBiB,EAAA5vC,EAAQ2uC,MAQ/B,QAAAvxC,KANAuxC,KAMAmL,EAIA,WAAA18C,GAAA,WAAAA,GAAA,gBAAAA,GAAA,oBAAAA,GAAA,oBAAAA,IAGA,gBAAAA,GAAA08C,EAAAnwC,iBACAglC,EAAAvxC,GAAA08C,EAAA18C,KAmDA,GA7CAuxC,EAAA3lC,SACA2lC,EAAA3lC,OAAA2lC,EAAAzgC,YAAyC4hC,EAAA9vC,GAIzC2uC,EAAAv4B,gBACAu4B,EAAAv4B,cAAAu4B,EAAAt4B,cAAAs4B,EAAA3lC,OAAA2lC,EAAAr4B,UAAAq4B,EAAAt4B,aAIAs4B,EAAAhlC,eAAA,WACAmwC,EAAAnwC,gBACAmwC,EAAAnwC,iBAEAglC,EAAAxlC,aAAA,EACA2wC,EAAA3wC,aAAA,EACAwlC,EAAAzlC,kBAAA,GAGAylC,EAAAzlC,kBAAA,EAGAylC,EAAA/kC,gBAAA,WACAkwC,EAAAlwC,iBACAkwC,EAAAlwC,kBAEA+kC,EAAA9kC,cAAA,EACAiwC,EAAAjwC,cAAA,EACA8kC,EAAAtpC,qBAAAu0C,GAGAjL,EAAAtpC,qBAAAw0C,EAGAlL,EAAAoL,yBAAA,WACAD,EAAAC,0BACAD,EAAAC,2BAEApL,EAAAqL,8BAAAJ,EACAjL,EAAA/kC,mBAGA+kC,EAAAqL,8BAAAH,EAGA,OAAAlL,EAAA94B,cAAA4sB,IAAAkM,EAAA94B,QAAA,CACA,IAAAokC,EAAgBnK,EAAA9vC,EAAQkuB,gBACxBrP,EAAiBixB,EAAA9vC,EAAQ6e,KAEzB8vB,EAAA54B,MAAA44B,EAAA94B,SAAAokC,KAAA5f,YAAAxb,KAAAwb,YAAA,IAAA4f,KAAA1C,YAAA14B,KAAA04B,YAAA,GACA5I,EAAA34B,MAAA24B,EAAA74B,SAAAmkC,KAAA1f,WAAA1b,KAAA0b,WAAA,IAAA0f,KAAAxC,WAAA54B,KAAA44B,WAAA,GAIA9I,EAAA7iC,MAAA6iC,EAAA71B,UAAA61B,EAAAnjC,QAIA,OAAAmjC,EAAAz4B,aAAAusB,IAAAkM,EAAAz4B,SAKAy4B,EAAAz4B,OAAA,EAAAy4B,EAAAz4B,OAAA,IAAAy4B,EAAAz4B,OAAA,IAAAy4B,EAAAz4B,OAAA,KAMA,OAAAy4B,EAMA,IAAAuL,IAAA,GAEA,WACA,IACA,IAAAC,EAAAl9C,OAAA4R,kBAAuC,WACvCF,IAAA,WACAurC,IAAA,KAIItK,EAAA5vC,EAAQse,iBAAA,YAAA67B,GACRvK,EAAA5vC,EAAQw5C,oBAAA,YAAAW,GACT,MAAA/3C,KAVH,GAkBA,IAAAg4C,IAAA,0BAiBA,SAAAC,GAAAf,EAAAl9C,EAAAq1C,GACA,GAAA50C,MAAAgI,QAAAzI,GACA,OAAAs9C,GAAAW,GAAAf,EAAAl9C,EAAAq1C,GAGA,IAAA1gD,EAAAmoD,GAAAI,GAiDA,GA9CAvoD,EAAAwoD,WACAxoD,EAAAwoD,aAGAxoD,EAAAwoD,SAAAn9C,KACArL,EAAAwoD,SAAAn9C,OAGAq1C,EAAA6I,OACA7I,EAAA6I,KAAAxB,MAGA/nD,EAAAwoD,SAAAn9C,GAAAvJ,KAAA4+C,GAEA1gD,EAAA0oD,aACA1oD,EAAAiV,UAAA,EAEAjV,EAAA0oD,WAAA,SAAA9K,EAAA4L,GAEA,IAAAxpD,EAAAiV,SAAA,CAIA2oC,EAAAgL,GAAAhL,GAEA,IAAA4K,EAAAxoD,EAAAwoD,SAAA5K,EAAAvyC,MAEA,GAAAm9C,EAIA,IAFA,IAAAiB,EAAAjB,EAAA97C,MAAA,GAEA6F,EAAA,EAAA1B,EAAA44C,EAAA1mD,OAAgDwP,EAAA1B,IAChD+sC,EAAAqL,gCADuD12C,IAIvD,IACAk3C,EAAAl3C,GAAA5F,KAAA47C,EAAA3K,EAAA4L,GACa,MAAAn4C,GACbqwC,EAAA/e,MAAAtxB,OAQA,IAAArR,EAAAwoD,SAAAn9C,GAAAtI,OACA,GAAAwlD,EAAAh7B,iBAAA,CACA,IAAAyC,GAAA,EAEAm5B,IAAAE,GAAA12C,QAAAtH,IAAA,IACA2kB,GAAmB05B,SAAA,IAEnBnB,EAAAh7B,iBAAAliB,EAAArL,EAAA0oD,WAAA14B,QACKu4B,EAAA/kC,aACL+kC,EAAA/kC,YAAA,KAAAnY,EAAArL,EAAA0oD,YAkBA,SAAA5H,GAAAyH,EAAAl9C,EAAAq1C,GAEA,GAAA0H,GAAAG,GAAA,CAIA,IAAAvoD,EAAAmoD,GAAAI,GAGA,GAAAvoD,EAAAwoD,SAAA,CAIA,GAAA18C,MAAAgI,QAAAzI,GACA,OAAAs9C,GAAA7H,GAAAyH,EAAAl9C,EAAAq1C,GAIA,IAAAiJ,EAAA,SAAAzG,EAAAnyC,GACA/Q,EAAAwoD,SAAAz3C,MACAu3C,GAAApF,EAAAnyC,IAIA,QAAA2gC,IAAArmC,EAAA,CASA,IAAAm9C,EAAAxoD,EAAAwoD,SAAAn9C,GAGA,GAAAm9C,EAKA,GAAA9H,EAAA,CAMA,GAAAA,EAAA6I,KACA,QAAA14C,EAAA,EAAmBA,EAAA23C,EAAAzlD,OAAqB8N,IACxC23C,EAAA33C,GAAA04C,OAAA7I,EAAA6I,MACAf,EAAAoB,OAAA/4C,IAAA,GAKAy3C,GAAAC,EAAAl9C,QAbAs+C,EAAApB,EAAAl9C,QAjBA,QAAA0F,KAAA/Q,EAAAwoD,SACAt8C,OAAAO,UAAAuG,eAAArG,KAAA3M,EAAAwoD,aAAkEz3C,IAClE44C,EAAApB,EAAAx3C,KA+CA,SAAAsrC,GAAAkM,EAAA3K,EAAA4L,GAIA,IAAAK,EAAAzB,GAAAG,GAAAJ,GAAAI,MACA1E,EAAA0E,EAAA/yC,YAAA+yC,EAAA/lC,cAqBA,GAhBA,iBAAAo7B,EACAA,GAAavyC,KAAAuyC,EAAA3lC,OAAAswC,GACV3K,EAAA3lC,SACH2lC,EAAA3lC,OAAAswC,GAIA3K,EAAAgL,GAAAhL,GAGAiM,EAAAnB,YACAmB,EAAAnB,WAAA/7C,KAAA47C,EAAA3K,EAAA4L,GAKA3F,IAAAjG,EAAAtpC,yBAAA,IAAAspC,EAAA3kC,QACAojC,GAAA1vC,KAAA,KAAAk3C,EAAAjG,EAAA4L,QAGG,IAAA3F,IAAAjG,EAAAzlC,iBAAA,CACH,IAAA2xC,EAAA3B,GAAAvK,EAAA3lC,QAGA2lC,EAAA3lC,OAAA2lC,EAAAvyC,QAEAy+C,EAAA70C,UAAA,EAEA,mBAAA2oC,EAAA3lC,OAAA2lC,EAAAvyC,OACAuyC,EAAA3lC,OAAA2lC,EAAAvyC,QAGAy+C,EAAA70C,UAAA,GAKA,OAAA2oC,EAAAzlC,iBAeA,SAAA4xC,GAAAxB,EAAAl9C,EAAAq1C,GACA,GAAA50C,MAAAgI,QAAAzI,GACA,OAAAs9C,GAAAoB,GAAAxB,EAAAl9C,EAAAq1C,GAEA,IAAAsJ,EAAA,SAAAA,IACAlJ,GAAAyH,EAAAl9C,EAAA2+C,GACAtJ,EAAApuC,MAAAxE,KAAAmD,YAIA+4C,EAAAT,KAAA7I,EAAA6I,KAAA7I,EAAA6I,MAAAxB,KACAuB,GAAAf,EAAAl9C,EAAA2+C,GAGA,IAAA/c,GAAA/gC,OAAA27C,QACAe,YACAU,MACAxI,OACAzE,WACA0N,SAUAE,IAAA,EACAC,QAAA,EAKAC,GAAA,WAGA,GAAAzG,MAAA,IAAAwG,GAAAl6B,QAAAm6B,UAAA,CAIA,IAAAC,EAAAt+C,MAAAW,UAAAC,MAAAC,KAAwCoyC,EAAA9vC,EAAQo7C,qBAAA,UAChDC,EAAAx+C,MAAAW,UAAAC,MAAAC,KAA0CoyC,EAAA9vC,EAAQo7C,qBAAA,UAClDE,EAAAz+C,MAAAW,UAAAC,MAAAC,KAAwCoyC,EAAA9vC,EAAQo7C,qBAAA,aAChDG,EAAAJ,EAAAr2C,OAAAu2C,EAAAC,GAGA,GAAAC,KAAAznD,OAAA,EAEA,QAAA3B,EAAA,EAAAiQ,EAAAm5C,EAAAznD,OAAwC3B,EAAAiQ,EAAOjQ,IAAA,CAC/C,IAAAqpD,EAAAD,EAAAppD,GAGA,IAAAqpD,MAAA3E,aAeO,CACP4E,GAAA,GACA,WAdAhZ,IAAA+Y,EAAAE,QAKA,OAJAF,EAAA3E,aAAA,eAMAoE,GAAAO,QAYGR,IACHS,GAAA,KAcA,SAAAA,GAAAE,EAAAC,GACAA,IACAX,GAAAW,GAGEhM,EAAA5vC,EAAQ2zB,WAAAunB,GAAAS,GAGVlH,KAAwB,aAAR3E,EAAA9vC,EAAQmlC,WACxB6V,IAAA,EAOAF,GAAMlL,EAAA5vC,EAAQ,kBACdg7C,IAAA,IAkBA,IAAAa,GAAA,SAAA37C,GACA,IAAA6H,EAAc+nC,EAAA9vC,EAAQC,cAAA,SAItB,OAFA8H,EAAA7H,YAEA6H,GAYA+zC,GAAA,SAAA7H,EAAAmB,GACAnB,EAAA8H,WACA9H,EAAA8H,WAAAC,QAAA5G,EAEAnB,EAAAtrC,YAAAysC,GAyBA/2B,GAAA,SAAAqP,EAAA+jB,EAAAwK,GAEAxK,EAAA6I,OACA7I,EAAA6I,KAAAxB,MAIA,IAAAoD,EAAA,WACA,OAAAzK,EAAApuC,MAAAqqB,EAAA1rB,YAWA,OAFAk6C,EAAA5B,KAAA2B,IAAA,IAAAxK,EAAA6I,KAAA7I,EAAA6I,KAEA4B,GAeAC,GAAA,SAAA1K,EAAAkK,GACA,IAAAS,EAAAjsD,KAAAga,MAWA,OATA,WACA,IAAAA,EAAAha,KAAAga,MAEAA,EAAAiyC,GAAAT,IACAlK,EAAApuC,WAAAo/B,EAAAzgC,WACAo6C,EAAAjyC,KAgCAkyC,GAAA,SAAAtB,EAAAY,EAAAW,GACA,IAAA5uB,EAAA1rB,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAoF4tC,EAAA5vC,EAEpF04B,OAAA,EAQA6jB,EAAA,WACA,IAAAvQ,EAAAntC,KACAoC,EAAAe,UAEAw6C,EAAA,WACA9jB,EAAA,KACA8jB,EAAA,KACAF,GACAvB,EAAA13C,MAAA2oC,EAAA/qC,KAIAy3B,GAAA4jB,GACAvB,EAAA13C,MAAA2oC,EAAA/qC,GAGAysB,EAAA+V,aAAA/K,GACAA,EAAAhL,EAAAiG,WAAA6oB,EAAAb,IAMA,OAFAY,EAAAE,OA3BA,WACA/uB,EAAA+V,aAAA/K,GACAA,EAAA,MA2BA6jB,GAeAG,GAAA,aA+BAA,GAAAl/C,UAAAm/C,kBAYAD,GAAAl/C,UAAA68C,GAAA,SAAAj+C,EAAAq1C,GAGA,IAAAmL,EAAA/9C,KAAAyf,iBAEAzf,KAAAyf,iBAAA,aACA+7B,GAAAx7C,KAAAzC,EAAAq1C,GACA5yC,KAAAyf,iBAAAs+B,GAUAF,GAAAl/C,UAAA8gB,iBAAAo+B,GAAAl/C,UAAA68C,GAaAqC,GAAAl/C,UAAAq0C,IAAA,SAAAz1C,EAAAq1C,GACAI,GAAAhzC,KAAAzC,EAAAq1C,IAUAiL,GAAAl/C,UAAAg8C,oBAAAkD,GAAAl/C,UAAAq0C,IAaA6K,GAAAl/C,UAAAs9C,IAAA,SAAA1+C,EAAAq1C,GAGA,IAAAmL,EAAA/9C,KAAAyf,iBAEAzf,KAAAyf,iBAAA,aACAw8B,GAAAj8C,KAAAzC,EAAAq1C,GACA5yC,KAAAyf,iBAAAs+B,GAmBAF,GAAAl/C,UAAA4vC,QAAA,SAAAuB,GACA,IAAAvyC,EAAAuyC,EAAAvyC,MAAAuyC,EAEA,iBAAAA,IACAA,GAAavyC,SAEbuyC,EAAAgL,GAAAhL,GAEA9vC,KAAA89C,eAAAvgD,IAAAyC,KAAA,KAAAzC,IACAyC,KAAA,KAAAzC,GAAAuyC,GAGAvB,GAAAvuC,KAAA8vC,IAUA+N,GAAAl/C,UAAAq/C,cAAAH,GAAAl/C,UAAA4vC,QAEA,IAAA0P,QAAA,EAEAJ,GAAAl/C,UAAAu/C,aAAA,SAAApO,GACA,IAAA7vC,EAAAD,KAGAi+C,KACAA,GAAA,IAAAzsB,KAGA,IAAAj0B,EAAAuyC,EAAAvyC,MAAAuyC,EACA5xC,EAAA+/C,GAAAnuC,IAAA9P,MAEA9B,IACAA,EAAA,IAAAszB,IACAysB,GAAAluC,IAAA/P,KAAA9B,IAGA,IAAAigD,EAAAjgD,EAAA4R,IAAAvS,GAEAW,EAAA6zB,OAAAx0B,GACEwzC,EAAA5vC,EAAQyjC,aAAAuZ,GAEV,IAAAtkB,EAAgBkX,EAAA5vC,EAAQ2zB,WAAA,WAExB,IAAA52B,EAAAlB,OACAkB,EAAA,KACA+/C,GAAAlsB,OAAA9xB,IAGAA,EAAAsuC,QAAAuB,IACG,GAEH5xC,EAAA6R,IAAAxS,EAAAs8B,IAiBA,IAAAukB,GAAA,SAAAtJ,GACA,OAAAA,aAAA+I,MAAA/I,EAAAuJ,cAAA,4BAAAC,MAAA,SAAA16C,GACA,yBAAAkxC,EAAAlxC,MAcA26C,GAAA,SAAAhhD,GACA,MAGA,iBAAAA,GAAA,KAAAkW,KAAAlW,IAAAS,MAAAgI,QAAAzI,QAAAtI,QAcAupD,GAAA,SAAAr0C,GACA,IAAAA,EAAAgF,WAAAivC,GAAAj0C,GACA,UAAAxG,MAAA,0DAcA86C,GAAA,SAAAlhD,GACA,IAAAghD,GAAAhhD,GACA,UAAAoG,MAAA,6DAcA+6C,GAAA,SAAAC,GACA,sBAAAA,EACA,UAAAh7C,MAAA,0CAmBAi7C,GAAA,SAAAzR,EAAA/qC,GAIA,IAAAy8C,EAAAz8C,EAAAnN,OAAA,GAAAmN,EAAA,KAAA+qC,GAAA/qC,EAAA,KAAA+qC,EAAAkR,YACAl0C,OAAA,EACA5M,OAAA,EACAohD,OAAA,EAyBA,OAvBAE,GACA10C,EAAAgjC,EAAAkR,YAIAj8C,EAAAnN,QAAA,GACAmN,EAAAqoC,QAGAltC,EAAA6E,EAAA,GACAu8C,EAAAv8C,EAAA,KAEA+H,EAAA/H,EAAA,GACA7E,EAAA6E,EAAA,GACAu8C,EAAAv8C,EAAA,IAGAo8C,GAAAr0C,GACAs0C,GAAAlhD,GACAmhD,GAAAC,IAIUE,kBAAA10C,SAAA5M,OAAAohD,SAFVA,EAAAn/B,GAAA2tB,EAAAwR,KAsBAG,GAAA,SAAA30C,EAAAy7B,EAAAroC,EAAAohD,GACAH,GAAAr0C,GAEAA,EAAAgF,SACAgwB,GAAAyG,GAAAz7B,EAAA5M,EAAAohD,GAEAx0C,EAAAy7B,GAAAroC,EAAAohD,IAUAI,IAyBAvD,GAAA,WAGA,IAFA,IAAAv7C,EAAAD,KAEA6yC,EAAA1vC,UAAAlO,OAAAmN,EAAApE,MAAA60C,GAAAC,EAAA,EAAmEA,EAAAD,EAAaC,IAChF1wC,EAAA0wC,GAAA3vC,UAAA2vC,GAGA,IAAAkM,EAAAJ,GAAA5+C,KAAAoC,GACAy8C,EAAAG,EAAAH,gBACA10C,EAAA60C,EAAA70C,OACA5M,EAAAyhD,EAAAzhD,KACAohD,EAAAK,EAAAL,SAKA,GAHAG,GAAA30C,EAAA,KAAA5M,EAAAohD,IAGAE,EAAA,CAGA,IAAAI,EAAA,WACA,OAAAh/C,EAAA+yC,IAAA7oC,EAAA5M,EAAAohD,IAKAM,EAAAxD,KAAAkD,EAAAlD,KAKA,IAAAyD,EAAA,WACA,OAAAj/C,EAAA+yC,IAAA,UAAAiM,IAKAC,EAAAzD,KAAAkD,EAAAlD,KAEAqD,GAAA9+C,KAAA,eAAAi/C,GACAH,GAAA30C,EAAA,eAAA+0C,KA4BAjD,IAAA,WAGA,IAFA,IAAAh7C,EAAAjB,KAEAszC,EAAAnwC,UAAAlO,OAAAmN,EAAApE,MAAAs1C,GAAAC,EAAA,EAAsEA,EAAAD,EAAeC,IACrFnxC,EAAAmxC,GAAApwC,UAAAowC,GAGA,IAAA4L,EAAAP,GAAA5+C,KAAAoC,GACAy8C,EAAAM,EAAAN,gBACA10C,EAAAg1C,EAAAh1C,OACA5M,EAAA4hD,EAAA5hD,KACAohD,EAAAQ,EAAAR,SAKA,GAAAE,EACAC,GAAA30C,EAAA,MAAA5M,EAAAohD,OAGK,CACL,IAAAS,EAAA,SAAAA,IACA,QAAA5L,EAAArwC,UAAAlO,OAAAoqD,EAAArhD,MAAAw1C,GAAAC,EAAA,EAA2EA,EAAAD,EAAeC,IAC1F4L,EAAA5L,GAAAtwC,UAAAswC,GAGAxyC,EAAA+xC,IAAA7oC,EAAA5M,EAAA6hD,GACAT,EAAAn6C,MAAA,KAAA66C,IAKAD,EAAA3D,KAAAkD,EAAAlD,KACAqD,GAAA30C,EAAA,MAAA5M,EAAA6hD,KAwBApM,IAAA,SAAAsM,EAAAC,EAAAZ,GAGA,IAAAW,GAAAf,GAAAe,GACAtM,GAAAhzC,KAAAq+C,YAAAiB,EAAAC,OAGK,CACL,IAAAp1C,EAAAm1C,EACA/hD,EAAAgiD,EAGAf,GAAAr0C,GACAs0C,GAAAlhD,GACAmhD,GAAAC,GAGAA,EAAAn/B,GAAAxf,KAAA2+C,GAIA3+C,KAAAgzC,IAAA,UAAA2L,GAEAx0C,EAAAgF,UACA6jC,GAAA7oC,EAAA5M,EAAAohD,GACA3L,GAAA7oC,EAAA,UAAAw0C,IACOP,GAAAj0C,KACPA,EAAA6oC,IAAAz1C,EAAAohD,GACAx0C,EAAA6oC,IAAA,UAAA2L,MAkBApQ,QAAA,SAAAuB,EAAA4L,GACA,OAAAnN,GAAAvuC,KAAAq+C,YAAAvO,EAAA4L,KAqBA,SAAA8D,GAAAr1C,GACA,IACAs1C,GADAt8C,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,OACAs8C,YAIA,GAAAA,EAAA,CACA,IAAAt1C,EAAAs1C,GAAAtwC,SACA,UAAAxL,MAAA,oBAAA87C,EAAA,mCAEAt1C,EAAAk0C,YAAAl0C,EAAAs1C,QAEAt1C,EAAAk0C,YAAAjI,EAAA,QAA2C/0C,UAAA,kBAa3C,OAVAwB,EAAAsH,EAAA40C,IAGA50C,EAAAqxC,GAAA,qBACArxC,EAAA6oC,MACIjC,EAAA5vC,EAAQ2zB,WAAA,WACZ3qB,EAAAk0C,YAAA,MACK,KAGLl0C,EAcA,IAAAu1C,IAQA3+C,SAeAP,SAAA,SAAAm/C,GACA,IAAA1/C,EAAAD,KAGA,mBAAA2/C,IACAA,OAGA,IAAAC,OAAA,EAuCA,OArCA5K,EAAA2K,EAAA,SAAAlhD,EAAAF,GAIA0B,EAAAc,MAAAxC,KAAAE,KACAmhD,SACArhD,IACAshD,KAAA5/C,EAAAc,MAAAxC,GACAuhD,GAAArhD,IAIAwB,EAAAc,MAAAxC,GAAAE,IAMAmhD,GAAAxB,GAAAp+C,OAaAA,KAAAuuC,SACAqR,UACAriD,KAAA,iBAIAqiD,IAsBA,SAAAG,GAAA51C,EAAA61C,GAYA,OAXAn9C,EAAAsH,EAAAu1C,IAIAv1C,EAAApJ,MAAA8B,KAA0BsH,EAAApJ,MAAAi/C,GAG1B,mBAAA71C,EAAA81C,oBAAA7B,GAAAj0C,IACAA,EAAAqxC,GAAA,eAAArxC,EAAA81C,oBAGA91C,EAiBA,SAAA+1C,GAAAC,GACA,uBAAAA,EACAA,EAGAA,EAAAp5B,OAAA,GAAA3T,cAAA+sC,EAAAvhD,MAAA,GAkCA,SAAAwhD,KAGA,IAFA,IAAA7sD,KAEAs/C,EAAA1vC,UAAAlO,OAAAggD,EAAAj3C,MAAA60C,GAAAC,EAAA,EAAoEA,EAAAD,EAAaC,IACjFmC,EAAAnC,GAAA3vC,UAAA2vC,GAsBA,OAnBAmC,EAAA9uC,QAAA,SAAA4hB,GACAA,GAIAitB,EAAAjtB,EAAA,SAAAtpB,EAAAF,GACA22C,EAAAz2C,IAKAy2C,EAAA3hD,EAAAgL,MACAhL,EAAAgL,OAGAhL,EAAAgL,GAAA6hD,GAAA7sD,EAAAgL,GAAAE,IARAlL,EAAAgL,GAAAE,MAYAlL,EAkBA,IAAAkP,GAAA,WA2BA,SAAAA,EAAAo6C,EAAA36B,EAAAm+B,GAqBA,GApBAvM,EAAA9zC,KAAAyC,IAIAo6C,GAAA78C,KAAAsgD,KACAtgD,KAAAugD,QAAA1D,EAAA78C,KAEAA,KAAAugD,QAAA1D,EAIA78C,KAAAwgD,SAAAJ,MAAmCpgD,KAAAwgD,UAGnCt+B,EAAAliB,KAAAwgD,SAAAJ,GAAApgD,KAAAwgD,SAAAt+B,GAGAliB,KAAAygD,IAAAv+B,EAAAlJ,IAAAkJ,EAAAkzB,IAAAlzB,EAAAkzB,GAAAp8B,IAGAhZ,KAAAygD,IAAA,CAEA,IAAAznC,EAAA6jC,KAAA7jC,IAAA6jC,EAAA7jC,MAAA,YAEAhZ,KAAAygD,IAAAznC,EAAA,cAAAihC,KAGAj6C,KAAA0gD,MAAAx+B,EAAAlsB,MAAA,KAGAksB,EAAAkzB,GACAp1C,KAAA2gD,IAAAz+B,EAAAkzB,IACK,IAAAlzB,EAAAk0B,WACLp2C,KAAA2gD,IAAA3gD,KAAAo2C,aAIA,IAAAl0B,EAAAs9B,SAEAA,GAAAx/C,MAAqBy/C,YAAAz/C,KAAA2gD,IAAA,aAErBZ,GAAA//C,UAAA0G,YAAAs5C,cAEAhgD,KAAA4gD,aACA5gD,KAAA6gD,eACA7gD,KAAA8gD,oBAGA,IAAA5+B,EAAA6+B,cACA/gD,KAAA+gD,eAGA/gD,KAAAqgD,UAIA,IAAAn+B,EAAA8+B,qBACAhhD,KAAAihD,sBAwgDA,OA7/CAx+C,EAAA9D,UAAAuiD,QAAA,WAeA,GAHAlhD,KAAAuuC,SAAkBhxC,KAAA,UAAA4N,SAAA,IAGlBnL,KAAA4gD,UACA,QAAAttD,EAAA0M,KAAA4gD,UAAA3rD,OAAA,EAA6C3B,GAAA,EAAQA,IACrD0M,KAAA4gD,UAAAttD,GAAA4tD,SACAlhD,KAAA4gD,UAAAttD,GAAA4tD,UAMAlhD,KAAA4gD,UAAA,KACA5gD,KAAA6gD,YAAA,KACA7gD,KAAA8gD,gBAAA,KAEA9gD,KAAA2gD,MAEA3gD,KAAA2gD,IAAAj5C,YACA1H,KAAA2gD,IAAAj5C,WAAA+b,YAAAzjB,KAAA2gD,KAGApG,GAAAv6C,KAAA2gD,KACA3gD,KAAA2gD,IAAA,MAIA3gD,KAAAugD,QAAA,MAWA99C,EAAA9D,UAAAk+C,OAAA,WACA,OAAA78C,KAAAugD,SAkBA99C,EAAA9D,UAAAujB,QAAA,SAAAglB,GAGA,OAFA0M,EAAAV,KAAA,kFAEAhM,GAIAlnC,KAAAwgD,SAAAJ,GAAApgD,KAAAwgD,SAAAtZ,GACAlnC,KAAAwgD,UAJAxgD,KAAAwgD,UAeA/9C,EAAA9D,UAAAy2C,GAAA,WACA,OAAAp1C,KAAA2gD,KAoBAl+C,EAAA9D,UAAAy3C,SAAA,SAAA9mB,EAAA+mB,EAAAC,GACA,OAAAF,EAAA9mB,EAAA+mB,EAAAC,IA2CA7zC,EAAA9D,UAAAwiD,SAAA,SAAAhB,EAAAiB,GACA,IAAAptC,EAAA7Q,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAAg9C,EAEAnZ,EAAAhnC,KAAAugD,QAAA5pD,UAAAqJ,KAAAugD,QAAA5pD,WACA0qD,EAAArhD,KAAAugD,QAAAc,WAAArhD,KAAAugD,QAAAc,YACA1qD,EAAA0qD,KAAAra,GACAsa,EAAAta,KAAA5nC,MAAA,QACAmiD,EAAAF,KAAAC,GAEAE,EAAAxtC,EAqBA,OAnBArd,KAAAwpD,GACAqB,EAAA7qD,EAAAwpD,GACKoB,KAAApB,KACLqB,EAAAD,EAAApB,IAGAiB,IACAI,IAAA19C,QAAA,aAA0D,SAAA9E,EAAAb,GAC1D,IAAAM,EAAA2iD,EAAAjjD,EAAA,GACAsjD,EAAAhjD,EAMA,YAJA,IAAAA,IACAgjD,EAAAziD,GAGAyiD,KAIAD,GAYA/+C,EAAA9D,UAAA+iD,UAAA,WACA,OAAA1hD,KAAA2hD,YAAA3hD,KAAA2gD,KAWAl+C,EAAA9D,UAAAqa,GAAA,WACA,OAAAhZ,KAAAygD,KAYAh+C,EAAA9D,UAAA3I,KAAA,WACA,OAAAgK,KAAA0gD,OAWAj+C,EAAA9D,UAAAmjB,SAAA,WACA,OAAA9hB,KAAA4gD,WAcAn+C,EAAA9D,UAAAijD,aAAA,SAAA5oC,GACA,OAAAhZ,KAAA6gD,YAAA7nC,IAcAvW,EAAA9D,UAAAkjD,SAAA,SAAA7rD,GACA,GAAAA,EAMA,OAFAA,EAAAkqD,GAAAlqD,GAEAgK,KAAA8gD,gBAAA9qD,IAuBAyM,EAAA9D,UAAAmjD,SAAA,SAAAzoC,GACA,IAAA6I,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAhF,EAAAgF,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAAnD,KAAA4gD,UAAA3rD,OAEA8sD,OAAA,EACAliD,OAAA,EAGA,oBAAAwZ,EAAA,CACAxZ,EAAAqgD,GAAA7mC,GAEA,IAAA2oC,EAAA9/B,EAAA+/B,gBAAApiD,EAGAqiB,EAAAlsB,KAAA6J,EAIA,IAAAqiD,EAAAz/C,EAAA0/C,aAAAH,GAEA,IAAAE,EACA,UAAAv+C,MAAA,aAAAq+C,EAAA,mBAOA,sBAAAE,EACA,YAGAH,EAAA,IAAAG,EAAAliD,KAAAugD,SAAAvgD,KAAAkiB,QAIA6/B,EAAA1oC,EAmBA,GAhBArZ,KAAA4gD,UAAA9E,OAAA39C,EAAA,EAAA4jD,GAEA,mBAAAA,EAAA/oC,KACAhZ,KAAA6gD,YAAAkB,EAAA/oC,MAAA+oC,IAKAliD,KAAAkiD,EAAA/rD,MAAAkqD,GAAA6B,EAAA/rD,WAGAgK,KAAA8gD,gBAAAjhD,GAAAkiD,GAKA,mBAAAA,EAAA3M,IAAA2M,EAAA3M,KAAA,CACA,IACAgN,EADApiD,KAAA0hD,YAAA5/B,SACA3jB,IAAA,KAEA6B,KAAA0hD,YAAApsB,aAAAysB,EAAA3M,KAAAgN,GAIA,OAAAL,GAYAt/C,EAAA9D,UAAA8kB,YAAA,SAAAs+B,GAKA,GAJA,iBAAAA,IACAA,EAAA/hD,KAAA6hD,SAAAE,IAGAA,GAAA/hD,KAAA4gD,UAAA,CAMA,IAFA,IAAAyB,GAAA,EAEA/uD,EAAA0M,KAAA4gD,UAAA3rD,OAAA,EAA2C3B,GAAA,EAAQA,IACnD,GAAA0M,KAAA4gD,UAAAttD,KAAAyuD,EAAA,CACAM,GAAA,EACAriD,KAAA4gD,UAAA9E,OAAAxoD,EAAA,GACA,MAIA,GAAA+uD,EAAA,CAIAriD,KAAA6gD,YAAAkB,EAAA/oC,MAAA,KACAhZ,KAAA8gD,gBAAAiB,EAAA/rD,QAAA,KAEA,IAAAssD,EAAAP,EAAA3M,KAEAkN,KAAA56C,aAAA1H,KAAA0hD,aACA1hD,KAAA0hD,YAAAj+B,YAAAs+B,EAAA3M,SASA3yC,EAAA9D,UAAAoiD,aAAA,WACA,IAAA9gD,EAAAD,KAEA8hB,EAAA9hB,KAAAwgD,SAAA1+B,SAEA,GAAAA,EAAA,CAEA,IAAAygC,EAAAviD,KAAAwgD,SA0CAgC,OAAA,EACAC,EAAAhgD,EAAA0/C,aAAA,SAGAK,EADAxkD,MAAAgI,QAAA8b,GACAA,EAEA1jB,OAAAC,KAAAyjB,IAMA7b,OAAA7H,OAAAC,KAAA2B,KAAAwgD,UAAAliD,OAAA,SAAA+a,GACA,OAAAmpC,EAAAE,KAAA,SAAAC,GACA,uBAAAA,EACAtpC,IAAAspC,EAEAtpC,IAAAspC,EAAA3sD,UAEOkI,IAAA,SAAAmb,GACP,IAAArjB,OAAA,EACAslD,OAAA,EAUA,MARA,iBAAAjiC,EAEAiiC,EAAAx5B,EADA9rB,EAAAqjB,IACApZ,EAAAugD,SAAAxqD,QAEAA,EAAAqjB,EAAArjB,KACAslD,EAAAjiC,IAGgBrjB,OAAAslD,UACTh9C,OAAA,SAAA+a,GAIP,IAAAjW,EAAAX,EAAA0/C,aAAA9oC,EAAAiiC,KAAA2G,gBAAA/B,GAAA7mC,EAAArjB,OAEA,OAAAoN,IAAAq/C,EAAAG,OAAAx/C,KACO+C,QA/EP,SAAAkT,GACA,IAAArjB,EAAAqjB,EAAArjB,KACAslD,EAAAjiC,EAAAiiC,KAWA,QANA1X,IAAA2e,EAAAvsD,KACAslD,EAAAiH,EAAAvsD,KAKA,IAAAslD,EAAA,EAMA,IAAAA,IACAA,MAMAA,EAAAuH,cAAA5iD,EAAAugD,SAAAqC,cAMA,IAAAC,EAAA7iD,EAAA6hD,SAAA9rD,EAAAslD,GAEAwH,IACA7iD,EAAAjK,GAAA8sD,QA0DArgD,EAAA9D,UAAAokD,cAAA,WAGA,UAaAtgD,EAAA9D,UAAA0hD,MAAA,SAAAzN,GACA,IAAAzM,EAAAhjC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,IAAAA,UAAA,GAEA,GAAAyvC,EAIA,OAAA5yC,KAAAgjD,cAMA7c,EACAyM,EAAA/zC,KAAAmB,MAGAA,KAAA80B,WAAA8d,EAAA,KATA5yC,KAAAijD,YAAAjjD,KAAAijD,qBACAjjD,KAAAijD,YAAAjvD,KAAA4+C,KAmBAnwC,EAAA9D,UAAAukD,aAAA,WACAljD,KAAAgjD,UAAA,EAGAhjD,KAAA80B,WAAA,WACA,IAAAquB,EAAAnjD,KAAAijD,YAGAjjD,KAAAijD,eAEAE,KAAAluD,OAAA,GACAkuD,EAAAh9C,QAAA,SAAAysC,GACAA,EAAA/zC,KAAAmB,OACSA,MAUTA,KAAAuuC,QAAA,UACK,IAuBL9rC,EAAA9D,UAAAi7C,EAAA,SAAA3D,EAAApnB,GACA,OAAA+qB,GAAA3D,EAAApnB,GAAA7uB,KAAA0hD,cAuBAj/C,EAAA9D,UAAAk7C,GAAA,SAAA5D,EAAApnB,GACA,OAAAgrB,GAAA5D,EAAApnB,GAAA7uB,KAAA0hD,cAeAj/C,EAAA9D,UAAAo4C,SAAA,SAAAC,GACA,OAAAD,EAAA/2C,KAAA2gD,IAAA3J,IAWAv0C,EAAA9D,UAAAu4C,SAAA,SAAAC,GACAD,GAAAl3C,KAAA2gD,IAAAxJ,IAWA10C,EAAA9D,UAAAy4C,YAAA,SAAAC,GACAD,GAAAp3C,KAAA2gD,IAAAtJ,IAgBA50C,EAAA9D,UAAA44C,YAAA,SAAAC,EAAAC,GACAF,GAAAv3C,KAAA2gD,IAAAnJ,EAAAC,IASAh1C,EAAA9D,UAAAykD,KAAA,WACApjD,KAAAo3C,YAAA,eASA30C,EAAA9D,UAAA0kD,KAAA,WACArjD,KAAAk3C,SAAA,eAWAz0C,EAAA9D,UAAA2kD,YAAA,WACAtjD,KAAAk3C,SAAA,qBAWAz0C,EAAA9D,UAAA4kD,cAAA,WACAvjD,KAAAo3C,YAAA,qBAoBA30C,EAAA9D,UAAAq5C,aAAA,SAAAC,GACA,OAAAD,GAAAh4C,KAAA2gD,IAAA1I,IAgBAx1C,EAAA9D,UAAA8Q,aAAA,SAAAwoC,EAAAx5C,GACAgR,GAAAzP,KAAA2gD,IAAA1I,EAAAx5C,IAaAgE,EAAA9D,UAAAgV,gBAAA,SAAAskC,GACAtkC,GAAA3T,KAAA2gD,IAAA1I,IAmBAx1C,EAAA9D,UAAAjM,MAAA,SAAA8wD,EAAAC,GACA,OAAAzjD,KAAA0jD,UAAA,QAAAF,EAAAC,IAmBAhhD,EAAA9D,UAAAhM,OAAA,SAAA6wD,EAAAC,GACA,OAAAzjD,KAAA0jD,UAAA,SAAAF,EAAAC,IAcAhhD,EAAA9D,UAAAglD,WAAA,SAAAjxD,EAAAC,GAEAqN,KAAAtN,SAAA,GACAsN,KAAArN,WAiCA8P,EAAA9D,UAAA+kD,UAAA,SAAAE,EAAAJ,EAAAC,GACA,QAAA7f,IAAA4f,EA0BA,OAxBA,OAAAA,UACAA,EAAA,IAIA,QAAAA,GAAA3+C,QAAA,eAAA2+C,GAAA3+C,QAAA,MACA7E,KAAA2gD,IAAAz3C,MAAA06C,GAAAJ,EAEAxjD,KAAA2gD,IAAAz3C,MAAA06C,GADO,SAAAJ,EACP,GAEAA,EAAA,UAIAC,GAOAzjD,KAAAuuC,QAAA,oBAQA,IAAAvuC,KAAA2gD,IACA,SAIA,IAAAjK,EAAA12C,KAAA2gD,IAAAz3C,MAAA06C,GACAC,EAAAnN,EAAA7xC,QAAA,MAEA,WAAAg/C,EAEAC,SAAApN,EAAA93C,MAAA,EAAAilD,GAAA,IAMAC,SAAA9jD,KAAA2gD,IAAA,SAAAT,GAAA0D,IAAA,KAgBAnhD,EAAA9D,UAAAolD,iBAAA,SAAAH,GACA,IAAAI,EAAA,EAEA,aAAAJ,GAAA,WAAAA,EACA,UAAAjgD,MAAA,uDAGA,GAAuB,mBAARotC,EAAA5vC,EAAQm0C,iBAAA,CACvB,IAAAH,EAA0BpE,EAAA5vC,EAAQm0C,iBAAAt1C,KAAA2gD,KAElCqD,EAAA7O,EAAA8O,iBAAAL,IAAAzO,EAAAyO,GASA,QALAI,EAAAzL,WAAAyL,IAKA,CACA,IAAAE,EAAA,SAAAhE,GAAA0D,GAEAI,EAAAhkD,KAAA2gD,IAAAuD,GAGA,OAAAF,GAyBAvhD,EAAA9D,UAAAwlD,kBAAA,WACA,OACAzxD,MAAAsN,KAAA+jD,iBAAA,SACApxD,OAAAqN,KAAA+jD,iBAAA,YAYAthD,EAAA9D,UAAAylD,aAAA,WACA,OAAApkD,KAAA+jD,iBAAA,UAWAthD,EAAA9D,UAAA0lD,cAAA,WACA,OAAArkD,KAAA+jD,iBAAA,WAQAthD,EAAA9D,UAAA4pB,MAAA,WACAvoB,KAAA2gD,IAAAp4B,SAQA9lB,EAAA9D,UAAA2pB,KAAA,WACAtoB,KAAA2gD,IAAAr4B,QAkBA7lB,EAAA9D,UAAA2lD,cAAA,WAEA,IAAAC,EAAA,EACAC,EAAA,KAUAC,OAAA,EAEAzkD,KAAAw7C,GAAA,sBAAA1L,GAEA,IAAAA,EAAApyB,QAAAzoB,SAEAuvD,GACAttC,MAAA44B,EAAApyB,QAAA,GAAAxG,MACAC,MAAA24B,EAAApyB,QAAA,GAAAvG,OAGAotC,GAAA,IAAAjzD,MAAA8oD,UAEAqK,GAAA,KAIAzkD,KAAAw7C,GAAA,qBAAA1L,GAEA,GAAAA,EAAApyB,QAAAzoB,OAAA,EACAwvD,GAAA,OACO,GAAAD,EAAA,CAGP,IAAAE,EAAA5U,EAAApyB,QAAA,GAAAxG,MAAAstC,EAAAttC,MACAytC,EAAA7U,EAAApyB,QAAA,GAAAvG,MAAAqtC,EAAArtC,MACA1c,KAAAmqD,KAAAF,IAAAC,KA/BA,KAkCAF,GAAA,MAKA,IAAAI,EAAA,WACAJ,GAAA,GAIAzkD,KAAAw7C,GAAA,aAAAqJ,GACA7kD,KAAAw7C,GAAA,cAAAqJ,GAIA7kD,KAAAw7C,GAAA,oBAAA1L,IACA0U,EAAA,MAEA,IAAAC,MAEA,IAAAnzD,MAAA8oD,UAAAmK,EAnDA,MAwDAzU,EAAAhlC,iBAOA9K,KAAAuuC,QAAA,YAkCA9rC,EAAA9D,UAAAsiD,oBAAA,WAEA,GAAAjhD,KAAA68C,UAAA78C,KAAA68C,SAAAiI,mBAAA,CAKA,IAAAC,EAAAvlC,GAAAxf,KAAA68C,SAAA78C,KAAA68C,SAAAiI,oBAEAE,OAAA,EAEAhlD,KAAAw7C,GAAA,wBACAuJ,IAIA/kD,KAAA2tC,cAAAqX,GAEAA,EAAAhlD,KAAA0tC,YAAAqX,EAAA,OAGA,IAAAE,EAAA,SAAAnV,GACAiV,IAEA/kD,KAAA2tC,cAAAqX,IAGAhlD,KAAAw7C,GAAA,YAAAuJ,GACA/kD,KAAAw7C,GAAA,WAAAyJ,GACAjlD,KAAAw7C,GAAA,cAAAyJ,KAsCAxiD,EAAA9D,UAAAm2B,WAAA,SAAA8d,EAAA/Y,GACA,IAIAqrB,EAAAC,EAJAlkD,EAAAjB,KAqBA,OAfA4yC,EAAApzB,GAAAxf,KAAA4yC,GAEAsS,EAAgBnU,EAAA5vC,EAAQ2zB,WAAA,WACxB7zB,EAAA+xC,IAAA,UAAAmS,GACAvS,KACK/Y,IAELsrB,EAAA,WACA,OAAAlkD,EAAA2jC,aAAAsgB,KAGAzJ,KAAA,eAAAyJ,EAEAllD,KAAAw7C,GAAA,UAAA2J,GAEAD,GAoBAziD,EAAA9D,UAAAimC,aAAA,SAAAsgB,GACInU,EAAA5vC,EAAQyjC,aAAAsgB,GAEZ,IAAAC,EAAA,aAMA,OAJAA,EAAA1J,KAAA,eAAAyJ,EAEAllD,KAAAgzC,IAAA,UAAAmS,GAEAD,GAyBAziD,EAAA9D,UAAA+uC,YAAA,SAAAkF,EAAAwS,GACA,IAAAC,EAAArlD,KAEA4yC,EAAApzB,GAAAxf,KAAA4yC,GAEA,IAAA0S,EAAqBvU,EAAA5vC,EAAQusC,YAAAkF,EAAAwS,GAE7BD,EAAA,WACA,OAAAE,EAAA1X,cAAA2X,IAOA,OAJAH,EAAA1J,KAAA,gBAAA6J,EAEAtlD,KAAAw7C,GAAA,UAAA2J,GAEAG,GAoBA7iD,EAAA9D,UAAAgvC,cAAA,SAAA2X,GACIvU,EAAA5vC,EAAQwsC,cAAA2X,GAEZ,IAAAH,EAAA,aAMA,OAJAA,EAAA1J,KAAA,gBAAA6J,EAEAtlD,KAAAgzC,IAAA,UAAAmS,GAEAG,GA8BA7iD,EAAA9D,UAAA8xC,sBAAA,SAAAmC,GACA,IAIA55B,EAAAmsC,EAJAI,EAAAvlD,KAMA,OAAAA,KAAAwlD,cACA5S,EAAApzB,GAAAxf,KAAA4yC,GAEA55B,EAAW+3B,EAAA5vC,EAAQsvC,sBAAA,WACnB8U,EAAAvS,IAAA,UAAAmS,GACAvS,OAGAuS,EAAA,WACA,OAAAI,EAAAE,qBAAAzsC,KAGAyiC,KAAA,WAAAziC,EACAhZ,KAAAw7C,GAAA,UAAA2J,GAEAnsC,GAIAhZ,KAAA80B,WAAA8d,EAAA,SAqBAnwC,EAAA9D,UAAA8mD,qBAAA,SAAAzsC,GACA,GAAAhZ,KAAAwlD,aAAA,CACMzU,EAAA5vC,EAAQskD,qBAAAzsC,GAEd,IAAAmsC,EAAA,aAMA,OAJAA,EAAA1J,KAAA,WAAAziC,EAEAhZ,KAAAgzC,IAAA,UAAAmS,GAEAnsC,EAIA,OAAAhZ,KAAA4kC,aAAA5rB,IAwBAvW,EAAAijD,kBAAA,SAAA1vD,EAAA2vD,GACA,oBAAA3vD,MACA,UAAA2N,MAAA,4BAAA3N,EAAA,kCAGA,IAAAysD,EAAAhgD,EAAA0/C,aAAA,QAGAS,EAAAH,KAAAG,OAAA+C,GACAC,EAAAnjD,IAAAkjD,GAAAljD,EAAA9D,UAAAknD,cAAAF,EAAAhnD,WAEA,GAAAikD,IAAAgD,EAAA,CACA,IAAAE,OAAA,EAQA,MALAA,EADAlD,EACA,qDAEA,+BAGA,IAAAj/C,MAAA,uBAAA3N,EAAA,MAAyD8vD,EAAA,KAGzD9vD,EAAAkqD,GAAAlqD,GAEAyM,EAAAsjD,cACAtjD,EAAAsjD,gBAGA,IAAAC,EAAAvjD,EAAA0/C,aAAA,UAEA,cAAAnsD,GAAAgwD,KAAAC,QAAA,CACA,IAAAA,EAAAD,EAAAC,QACAC,EAAA9nD,OAAAC,KAAA4nD,GAMA,GAAAA,GAAAC,EAAAjxD,OAAA,GAAAixD,EAAAhoD,IAAA,SAAAioD,GACA,OAAAF,EAAAE,KACO7H,MAAA8H,SACP,UAAAziD,MAAA,oEAMA,OAFAlB,EAAAsjD,YAAA/vD,GAAA2vD,EAEAA,GAmBAljD,EAAA0/C,aAAA,SAAAnsD,GACA,GAAAA,EAMA,OAFAA,EAAAkqD,GAAAlqD,GAEAyM,EAAAsjD,aAAAtjD,EAAAsjD,YAAA/vD,GACAyM,EAAAsjD,YAAA/vD,QADA,GAKAyM,EA7lDA,GA0mDAA,GAAA9D,UAAA6mD,aAAkD,mBAARzU,EAAA5vC,EAAQsvC,uBAAwD,mBAARM,EAAA5vC,EAAQskD,qBAE1GhjD,GAAAijD,kBAAA,YAAAjjD,IAOA,IAqBAzD,GArBAqnD,GAAiBtV,EAAA5vC,EAAQmlD,WAAcvV,EAAA5vC,EAAQmlD,UAAAC,WAAA,GAC/CC,GAAA,yBAAAC,KAAAJ,IACAK,GAAAF,GAAAjO,WAAAiO,GAAA/7C,OAAA,KASAk8C,GAAA,QAAAlzC,KAAA4yC,IAKAO,GAAA,UAAAnzC,KAAA4yC,MAAAM,GACAE,GAAA,QAAApzC,KAAA4yC,IACAS,GAAAF,IAAAD,IAAAE,GAEAE,IACA/nD,GAAAqnD,GAAArnD,MAAA,gBAEAA,GAAA,GACAA,GAAA,GAEA,KAGAgoD,GAAA,WAAAvzC,KAAA4yC,IACAY,GAAA,WAGA,IAAAjoD,EAAAqnD,GAAArnD,MAAA,0CAEA,IAAAA,EACA,YAGA,IAAAkoD,EAAAloD,EAAA,IAAAu5C,WAAAv5C,EAAA,IACAmoD,EAAAnoD,EAAA,IAAAu5C,WAAAv5C,EAAA,IAEA,OAAAkoD,GAAAC,EACA5O,WAAAv5C,EAAA,OAAAA,EAAA,IACGkoD,GAGH,KAjBA,GAoBAE,GAAAJ,IAAAC,GAAA,GAAAP,GAAA,IAEAW,GAAA,WAAA5zC,KAAA4yC,IACAiB,GAAA,QAAA7zC,KAAA4yC,IACAkB,IAAAD,KAAA,UAAA7zC,KAAA4yC,KAAA,SAAA5yC,KAAA4yC,KACAmB,GAAA,WACA,IAAAxoD,EAAAqnD,GAAArnD,MAAA,yBAEA,OAAAA,KAAA,GACAu5C,WAAAv5C,EAAA,IAEA,KANA,GAQAyoD,GAAA,WACA,IAAAl0D,EAAA,kBAAAkzD,KAAAJ,IACA7xD,EAAAjB,GAAAglD,WAAAhlD,EAAA,IAOA,OALAiB,GAAA,gBAAAif,KAAA4yC,KAAA,UAAA5yC,KAAA4yC,MAEA7xD,EAAA,IAGAA,EATA,GAYAkzD,GAAA,UAAAj0C,KAAA4yC,MAAAkB,KAAAP,KAAAM,GACAK,IAAAD,IAAAZ,MAAAS,GAEAK,GAAAhS,MAAA,iBAAmD7E,EAAA5vC,GAAY4vC,EAAA5vC,EAAQmlD,UAAAuB,gBAA6B9W,EAAA5vC,EAAQ2mD,eAAkB/W,EAAA5vC,EAAQqH,oBAAqBuoC,EAAA5vC,EAAQ2mD,eAEnKC,GAAA3pD,OAAA27C,QACA4M,WACAC,aACAC,WACAC,UACAC,eACAC,cACAC,mBACAG,qBACAC,cACAC,WACAC,aACAC,kBACAC,cACAC,aACAC,iBACAC,mBAmFA,SAAAI,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,OA/BA,SAAAH,EAAA9pD,EAAAkqD,GACA,oBAAAlqD,KAAA,GAAAA,EAAAkqD,EACA,UAAA1kD,MAAA,sBAAAskD,EAAA,0CAAA9pD,EAAA,wCAAAkqD,EAAA,MA4BAC,CAAAL,EAAAG,EAAAD,EAAAlzD,OAAA,GACAkzD,EAAAC,GAAAF,GASA,SAAAK,GAAAJ,GACA,YAAAvkB,IAAAukB,GAAA,IAAAA,EAAAlzD,QAEAA,OAAA,EACAksB,MAAA,WACA,UAAAxd,MAAA,oCAEAnG,IAAA,WACA,UAAAmG,MAAA,sCAKA1O,OAAAkzD,EAAAlzD,OACAksB,MAAA6mC,GAAAxoC,KAAA,eAAA2oC,GACA3qD,IAAAwqD,GAAAxoC,KAAA,aAAA2oC,IAeA,SAAAK,GAAArnC,EAAA3jB,GACA,OAAAQ,MAAAgI,QAAAmb,GACAonC,GAAApnC,QACGyiB,IAAAziB,QAAAyiB,IAAApmC,EACH+qD,KAEAA,KAAApnC,EAAA3jB,KAoBA,SAAAirD,GAAAC,EAAA3xD,GACA,IAAA4xD,EAAA,EACAxnC,OAAA,EACA3jB,OAAA,EAEA,IAAAzG,EACA,SAGA2xD,KAAAzzD,SACAyzD,EAAAF,GAAA,MAGA,QAAAl1D,EAAA,EAAiBA,EAAAo1D,EAAAzzD,OAAqB3B,IACtC6tB,EAAAunC,EAAAvnC,MAAA7tB,IACAkK,EAAAkrD,EAAAlrD,IAAAlK,IAGAyD,IACAyG,EAAAzG,GAGA4xD,GAAAnrD,EAAA2jB,EAGA,OAAAwnC,EAAA5xD,EAiCA,IAjBA,IAAA6xD,MAGAC,KAAA,oHAEA,wJAEA,gKAEA,wIAEA,gIAEAC,GAAAD,GAAA,GACAE,QAAA,EAGAz1D,GAAA,EAAeA,GAAAu1D,GAAA5zD,OAAmB3B,KAElC,GAAAu1D,GAAAv1D,IAAA,KAAsB29C,EAAA9vC,EAAQ,CAC9B4nD,GAAAF,GAAAv1D,IACA,MAKA,GAAAy1D,GACA,QAAAC,GAAA,EAAkBA,GAAAD,GAAA9zD,OAAwB+zD,KAC1CJ,GAAAE,GAAAE,KAAAD,GAAAC,IAyBA,SAAAC,GAAAxqD,GAIA,GAAAA,aAAAwqD,GACA,OAAAxqD,EAGA,iBAAAA,EACAuB,KAAAgnC,KAAAvoC,EACG,iBAAAA,EAEHuB,KAAAkpD,QAAAzqD,EACGs2C,EAAAt2C,KAIH,iBAAAA,EAAAuoC,OACAhnC,KAAAgnC,KAAAvoC,EAAAuoC,MAGAnkC,EAAA7C,KAAAvB,IAGAuB,KAAAkpD,UACAlpD,KAAAkpD,QAAAD,GAAAE,gBAAAnpD,KAAAgnC,OAAA,IASAiiB,GAAAtqD,UAAAqoC,KAAA,EAQAiiB,GAAAtqD,UAAAuqD,QAAA,GAWAD,GAAAtqD,UAAAumC,OAAA,KAeA+jB,GAAAG,YAAA,mIAQAH,GAAAE,iBACAE,EAAA,iCACAC,EAAA,8DACAC,EAAA,8HACAC,EAAA,qHACAC,EAAA,qEAKA,QAAAC,GAAA,EAAoBA,GAAAT,GAAAG,WAAAn0D,OAAuCy0D,KAC3DT,MAAAG,WAAAM,QAEAT,GAAAtqD,UAAAsqD,GAAAG,WAAAM,QAYA,SAAAC,GAAAlrD,GACA,YAAAmlC,IAAAnlC,GAAA,OAAAA,GAAA,mBAAAA,EAAAsT,KAYA,SAAA63C,GAAAnrD,GACAkrD,GAAAlrD,IACAA,EAAAsT,KAAA,cAAAxO,MAsBA,IAAAsmD,GAAA,SAAA7hC,GAmBA,OAlBA,+EAAAyY,OAAA,SAAAqpB,EAAAzU,EAAA/hD,GAMA,OAJA00B,EAAAqtB,KACAyU,EAAAzU,GAAArtB,EAAAqtB,IAGAyU,IAEAC,KAAA/hC,EAAA+hC,MAAA/rD,MAAAW,UAAAT,IAAAW,KAAAmpB,EAAA+hC,KAAA,SAAAC,GACA,OACA7pB,UAAA6pB,EAAA7pB,UACA8pB,QAAAD,EAAAC,QACA3nD,KAAA0nD,EAAA1nD,KACA0W,GAAAgxC,EAAAhxC,SAkEAkxC,GA9CA,SAAAC,GAEA,IAAAC,EAAAD,EAAAtQ,GAAA,SAEAwQ,EAAArsD,MAAAW,UAAAT,IAAAW,KAAAurD,EAAA,SAAAnnD,GACA,OAAAA,EAAA+kB,QAWA,OATAhqB,MAAAW,UAAAT,IAAAW,KAAAurD,EAAA,SAAAE,GACA,IAAAlkB,EAAAyjB,GAAAS,EAAAtiC,OAKA,OAHAsiC,EAAAC,MACAnkB,EAAAmkB,IAAAD,EAAAC,KAEAnkB,IAGAngC,OAAAjI,MAAAW,UAAAL,OAAAO,KAAAsrD,EAAAK,aAAA,SAAAxiC,GACA,WAAAqiC,EAAAxlD,QAAAmjB,KACG9pB,IAAA2rD,MA4BHK,GAdA,SAAA9jB,EAAA+jB,GAWA,OAVA/jB,EAAAjgC,QAAA,SAAA6hB,GACA,IAAAyiC,EAAAN,EAAAO,mBAAA1iC,UAEAA,EAAAuiC,KAAAviC,EAAA+hC,MACA/hC,EAAA+hC,KAAA5jD,QAAA,SAAA6jD,GACA,OAAAS,EAAAE,OAAAX,OAKAG,EAAAK,cASAI,GAAA,mBAaAC,GAAA,SAAA1qD,GAmCA,SAAA0qD,EAAAhO,EAAA36B,GACA4xB,EAAA9zC,KAAA6qD,GAEA,IAAA5qD,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAwBA,OAtBAjiB,EAAA6qD,QAAA7qD,EAAA8qD,eAAA9qD,EAAA+qD,gBAAA,EAEA/qD,EAAAgrD,WAAAhrD,EAAAugD,SAAA0K,aACAjrD,EAAAs2C,QAAAt2C,EAAAugD,SAAAjK,SAKAt2C,EAAA0hD,WAAAvL,EAAA,OACA/0C,UAAAupD,GAAA,aAEAO,KAAA,aAGAlrD,EAAAmrD,QAAAhV,EAAA,KACA/0C,UAAAupD,GAAA,gCACA5xC,GAAA/Y,EAAAm1C,KAAA4C,aAAA,sBAGAluC,EAAA7J,EAAAmrD,QAAAnrD,EAAAorD,eACAprD,EAAA0gD,IAAAj9B,YAAAzjB,EAAAmrD,SACAnrD,EAAA0gD,IAAAj9B,YAAAzjB,EAAA0hD,YACA1hD,EAidA,OA9gBAi0C,EAAA2W,EAAA1qD,GAwEA0qD,EAAAlsD,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAArB,KAAA+iD,gBACAnuC,UAAA,IAEA02C,mBAAAtrD,KAAAgZ,KAAA,eACAuyC,cAAA,OACAC,aAAAxrD,KAAAyrD,QACAN,KAAA,YAIAN,EAAAlsD,UAAAuiD,QAAA,WACAlhD,KAAA2hD,WAAA,KACA3hD,KAAAorD,QAAA,KACAprD,KAAA0rD,oBAAA,KAEAvrD,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAWA6qD,EAAAlsD,UAAAokD,cAAA,WACA,OAAA6H,GAAA,eAAAzqD,EAAAxB,UAAAokD,cAAAlkD,KAAAmB,OAcA6qD,EAAAlsD,UAAAgtD,eAAA,SAAApoD,GAhIA,KAiIAA,EAAA0J,OAAAjN,KAAAirD,aACAjrD,KAAA4rD,SAYAf,EAAAlsD,UAAA8sD,MAAA,WACA,OAAAzrD,KAAAmhD,SAAAnhD,KAAAwgD,SAAAiL,OAAA,iBAYAZ,EAAAlsD,UAAA0sD,YAAA,WACA,IAAAQ,EAAA7rD,KAAAwgD,SAAA6K,aAAArrD,KAAAmhD,SAAA,2BAOA,OAJAnhD,KAAAirD,cACAY,GAAA,IAAA7rD,KAAAmhD,SAAA,wFAGA0K,GAWAhB,EAAAlsD,UAAAioC,KAAA,WACA,IAAA5mC,KAAA8qD,QAAA,CACA,IAAAjO,EAAA78C,KAAA68C,SAQA78C,KAAAuuC,QAAA,mBACAvuC,KAAA8qD,SAAA,GAIA9qD,KAAAwgD,SAAAsL,aAAA9rD,KAAA+qD,iBAAA/qD,KAAAgrD,iBACAhrD,KAAA+rD,OAKA/rD,KAAAgsD,aAAAnP,EAAAoP,SAEAjsD,KAAAwgD,SAAA0L,aAAAlsD,KAAAgsD,aACAnP,EAAAsP,QAGAnsD,KAAAirD,aACAjrD,KAAAw7C,GAAAx7C,KAAA2gD,IAAAjsC,cAAA,UAAA8K,GAAAxf,UAAA2rD,iBAIA3rD,KAAAosD,aAAAvP,EAAAwP,WACAxP,EAAAwP,UAAA,GAEArsD,KAAAojD,OACApjD,KAAAssD,oBACAtsD,KAAAo1C,KAAA3lC,aAAA,uBAQAzP,KAAAuuC,QAAA,aACAvuC,KAAA+qD,gBAAA,IAeAF,EAAAlsD,UAAA4tD,OAAA,SAAA9tD,GAIA,MAHA,kBAAAA,GACAuB,KAAAvB,EAAA,kBAEAuB,KAAA8qD,SAYAD,EAAAlsD,UAAAitD,MAAA,WACA,GAAA5rD,KAAA8qD,QAAA,CAGA,IAAAjO,EAAA78C,KAAA68C,SAQA78C,KAAAuuC,QAAA,oBACAvuC,KAAA8qD,SAAA,EAEA9qD,KAAAgsD,aAAAhsD,KAAAwgD,SAAA0L,aACArP,EAAAyD,OAGAtgD,KAAAirD,aACAjrD,KAAAgzC,IAAAhzC,KAAA2gD,IAAAjsC,cAAA,UAAA8K,GAAAxf,UAAA2rD,iBAGA3rD,KAAAosD,cACAvP,EAAAwP,UAAA,GAGArsD,KAAAqjD,OACArjD,KAAAo1C,KAAA3lC,aAAA,sBAQAzP,KAAAuuC,QAAA,cACAvuC,KAAAwsD,mBAEAxsD,KAAAwgD,SAAAiM,WACAzsD,KAAAkhD,YAeA2J,EAAAlsD,UAAAssD,UAAA,SAAAxsD,GACA,qBAAAA,EAAA,CACA,IAAAwsD,EAAAjrD,KAAA0sD,aAAAjuD,EACAmtD,EAAA5rD,KAAA6hD,SAAA,eAGA,GAAAoJ,IAAAW,EAAA,CAIA,IAAAe,EAAA3sD,KAAA2hD,WAEA3hD,KAAA2hD,WAAA3hD,KAAA2gD,IACAiL,EAAA5rD,KAAA8hD,SAAA,eAA8C8K,YAAA,uBAC9C5sD,KAAA2hD,WAAAgL,EACA3sD,KAAAw7C,GAAAoQ,EAAA,QAAA5rD,KAAA4rD,QAIAX,GAAAW,IACA5rD,KAAAgzC,IAAA4Y,EAAA,QAAA5rD,KAAA4rD,OACA5rD,KAAAyjB,YAAAmoC,GACAA,EAAA1K,WAGA,OAAAlhD,KAAA0sD,YASA7B,EAAAlsD,UAAAotD,KAAA,WACA/rD,KAAA6sD,SAAA7sD,KAAAu2C,YAeAsU,EAAAlsD,UAAAkuD,SAAA,SAAAtW,GACA,IAAAmL,EAAA1hD,KAAA0hD,YACAoL,EAAApL,EAAAh6C,WACAqlD,EAAArL,EAAArhC,YAQArgB,KAAAuuC,QAAA,mBACAvuC,KAAAgrD,gBAAA,EAIA8B,EAAArpC,YAAAi+B,GACA1hD,KAAAgtD,QACAtT,GAAAgI,EAAAnL,GAOAv2C,KAAAuuC,QAAA,aAGAwe,EACAD,EAAAx3B,aAAAosB,EAAAqL,GAEAD,EAAAppC,YAAAg+B,GAIA,IAAAuL,EAAAjtD,KAAA6hD,SAAA,eAEAoL,GACAH,EAAAppC,YAAAupC,EAAAtM,MAYAkK,EAAAlsD,UAAAquD,MAAA,WAOAhtD,KAAAuuC,QAAA,oBACAiL,GAAAx5C,KAAA0hD,aAQA1hD,KAAAuuC,QAAA,eAoBAsc,EAAAlsD,UAAA43C,QAAA,SAAA93C,GAIA,YAHA,IAAAA,IACAuB,KAAAktD,SAAAzuD,GAEAuB,KAAAktD,UAUArC,EAAAlsD,UAAA2tD,kBAAA,WACA,IAAAa,EAAmBlc,EAAA9vC,EAAQwT,cAC3By4C,EAAAptD,KAAAugD,QAAAI,IAEA3gD,KAAA0rD,oBAAA,MAEA0B,EAAAryB,SAAAoyB,IAAAC,IAAAD,KACAntD,KAAA0rD,oBAAAyB,EAEAntD,KAAAuoB,QAEAvoB,KAAAw7C,GAAcvK,EAAA9vC,EAAQ,UAAAnB,KAAAqtD,iBAWtBxC,EAAAlsD,UAAA6tD,iBAAA,WACAxsD,KAAA0rD,sBACA1rD,KAAA0rD,oBAAAnjC,QACAvoB,KAAA0rD,oBAAA,MAGA1rD,KAAAgzC,IAAa/B,EAAA9vC,EAAQ,UAAAnB,KAAAqtD,gBAUrBxC,EAAAlsD,UAAA0uD,cAAA,SAAAvd,GAEA,OAAAA,EAAA7iC,MAAA,CAQA,IAJA,IAAAqgD,EAAAttD,KAAAutD,gBACAJ,EAAAntD,KAAA2gD,IAAAzK,cAAA,UACAsX,OAAA,EAEAl6D,EAAA,EAAmBA,EAAAg6D,EAAAr4D,OAAyB3B,IAC5C,GAAA65D,IAAAG,EAAAh6D,GAAA,CACAk6D,EAAAl6D,EACA,MAIQ29C,EAAA9vC,EAAQwT,gBAAA3U,KAAA2gD,MAChB6M,EAAA,GAGA1d,EAAA14B,UAAA,IAAAo2C,GACAF,IAAAr4D,OAAA,GAAAszB,QACAunB,EAAAhlC,kBACKglC,EAAA14B,UAAAo2C,IAAAF,EAAAr4D,OAAA,IACLq4D,EAAA,GAAA/kC,QACAunB,EAAAhlC,oBAWA+/C,EAAAlsD,UAAA4uD,cAAA,WACA,IAAAE,EAAAztD,KAAA2gD,IAAAviB,iBAAA,KAEA,OAAApgC,MAAAW,UAAAL,OAAAO,KAAA4uD,EAAA,SAAAp0C,GACA,OAAAA,aAA+B03B,EAAA5vC,EAAQusD,mBAAAr0C,aAAuC03B,EAAA5vC,EAAQwsD,kBAAAt0C,EAAA2kB,aAAA,UAAA3kB,aAAqE03B,EAAA5vC,EAAQysD,kBAAAv0C,aAAsC03B,EAAA5vC,EAAQ0sD,mBAAAx0C,aAAuC03B,EAAA5vC,EAAQ2sD,qBAAAz0C,aAAyC03B,EAAA5vC,EAAQ4sD,qBAAA10C,EAAA2kB,aAAA,aAAA3kB,aAA2E03B,EAAA5vC,EAAQof,mBAAAlH,aAAuC03B,EAAA5vC,EAAQ6sD,mBAAA30C,aAAuC03B,EAAA5vC,EAAQ8sD,kBAAA50C,EAAA2kB,aAAA,kBAAA3kB,EAAA2+B,aAAA,aAAA3+B,EAAA2kB,aAAA,sBAIle6sB,EA/gBA,CAghBCpoD,IAUDooD,GAAAlsD,UAAA6hD,UACA0L,aAAA,EACAO,WAAA,GAGAhqD,GAAAijD,kBAAA,cAAAmF,IAaA,IAAAqD,GAAA,SAAAC,GAWA,SAAAD,IACA,IAAAtrB,EAAAz/B,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAkuD,GAEA,IAAAjuD,EAAAw0C,EAAAz0C,KAAAmuD,EAAAtvD,KAAAmB,OAEAC,EAAAmuD,WAQAhwD,OAAA4R,eAAA/P,EAAA,UACA6P,IAAA,WACA,OAAA9P,KAAAouD,QAAAn5D,UAIA,QAAA3B,EAAA,EAAmBA,EAAAsvC,EAAA3tC,OAAmB3B,IACtC2M,EAAAouD,SAAAzrB,EAAAtvC,IAEA,OAAA2M,EA+GA,OAhJAi0C,EAAAga,EAAAC,GA8CAD,EAAAvvD,UAAA0vD,SAAA,SAAArmC,GACA,IAAA7pB,EAAA6B,KAAAouD,QAAAn5D,OAEA,GAAAkJ,KAAA6B,MACA5B,OAAA4R,eAAAhQ,KAAA7B,GACA2R,IAAA,WACA,OAAA9P,KAAAouD,QAAAjwD,OAMA,IAAA6B,KAAAouD,QAAAvpD,QAAAmjB,KACAhoB,KAAAouD,QAAAp6D,KAAAg0B,GASAhoB,KAAAuuC,SACAvmB,QACAzqB,KAAA,eAeA2wD,EAAAvvD,UAAA2vD,YAAA,SAAAC,GAGA,IAFA,IAAAvmC,OAAA,EAEA10B,EAAA,EAAAuQ,EAAA7D,KAAA/K,OAAoC3B,EAAAuQ,EAAOvQ,IAC3C,GAAA0M,KAAA1M,KAAAi7D,EAAA,EACAvmC,EAAAhoB,KAAA1M,IACA0/C,KACAhrB,EAAAgrB,MAGAhzC,KAAAouD,QAAAtS,OAAAxoD,EAAA,GAEA,MAIA00B,GAYAhoB,KAAAuuC,SACAvmB,QACAzqB,KAAA,iBAcA2wD,EAAAvvD,UAAA6vD,aAAA,SAAAx1C,GAGA,IAFA,IAAAzlB,EAAA,KAEAD,EAAA,EAAAuQ,EAAA7D,KAAA/K,OAAoC3B,EAAAuQ,EAAOvQ,IAAA,CAC3C,IAAA00B,EAAAhoB,KAAA1M,GAEA,GAAA00B,EAAAhP,OAAA,CACAzlB,EAAAy0B,EACA,OAIA,OAAAz0B,GAGA26D,EAjJA,CAkJCrQ,IAwBD,QAAA/N,MAPAoe,GAAAvvD,UAAAm/C,gBACAhpC,OAAA,SACA25C,SAAA,WACAC,YAAA,eAIAR,GAAAvvD,UAAAm/C,eACAoQ,GAAAvvD,UAAA,KAAAmxC,IAAA,KAmBA,IAAA6e,GAAA,SAAAC,EAAA5mC,GACA,QAAA10B,EAAA,EAAiBA,EAAAs7D,EAAA35D,OAAiB3B,IAClC8K,OAAAC,KAAAuwD,EAAAt7D,IAAA2B,QAAA+yB,EAAAhP,KAAA41C,EAAAt7D,GAAA0lB,KAIA41C,EAAAt7D,GAAAu7D,SAAA,IAWAC,GAAA,SAAAC,GASA,SAAAD,IACA,IAAAlsB,EAAAz/B,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAA8uD,GAIA,QAAAx7D,EAAAsvC,EAAA3tC,OAAA,EAAmC3B,GAAA,EAAQA,IAC3C,GAAAsvC,EAAAtvC,GAAAu7D,QAAA,CACAF,GAAA/rB,IAAAtvC,IACA,MAIA,IAAA2M,EAAAw0C,EAAAz0C,KAAA+uD,EAAAlwD,KAAAmB,KAAA4iC,IAGA,OADA3iC,EAAA+uD,WAAA,EACA/uD,EA4CA,OApEAi0C,EAAA4a,EAAAC,GAqCAD,EAAAnwD,UAAA0vD,SAAA,SAAArmC,GACA,IAAA/mB,EAAAjB,KAEAgoB,EAAA6mC,SACAF,GAAA3uD,KAAAgoB,GAGA+mC,EAAApwD,UAAA0vD,SAAAxvD,KAAAmB,KAAAgoB,GAEAA,EAAAvI,kBAQAuI,EAAAvI,iBAAA,2BAIAxe,EAAA+tD,YAGA/tD,EAAA+tD,WAAA,EACAL,GAAA1tD,EAAA+mB,GACA/mB,EAAA+tD,WAAA,EACA/tD,EAAAstC,QAAA,cAIAugB,EArEA,CAsECZ,IAiBDe,GAAA,SAAAL,EAAA5mC,GACA,QAAA10B,EAAA,EAAiBA,EAAAs7D,EAAA35D,OAAiB3B,IAClC8K,OAAAC,KAAAuwD,EAAAt7D,IAAA2B,QAAA+yB,EAAAhP,KAAA41C,EAAAt7D,GAAA0lB,KAIA41C,EAAAt7D,GAAA6uB,UAAA,IAWA+sC,GAAA,SAAAH,GASA,SAAAG,IACA,IAAAtsB,EAAAz/B,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAkvD,GAIA,QAAA57D,EAAAsvC,EAAA3tC,OAAA,EAAmC3B,GAAA,EAAQA,IAC3C,GAAAsvC,EAAAtvC,GAAA6uB,SAAA,CACA8sC,GAAArsB,IAAAtvC,IACA,MAIA,IAAA2M,EAAAw0C,EAAAz0C,KAAA+uD,EAAAlwD,KAAAmB,KAAA4iC,IAmBA,OAjBA3iC,EAAA+uD,WAAA,EAMA5wD,OAAA4R,eAAA/P,EAAA,iBACA6P,IAAA,WACA,QAAAk5C,EAAA,EAAwBA,EAAAhpD,KAAA/K,OAAkB+zD,IAC1C,GAAAhpD,KAAAgpD,GAAA7mC,SACA,OAAA6mC,EAGA,UAEAj5C,IAAA,eAEA9P,EAyCA,OAjFAi0C,EAAAgb,EAAAH,GAqDAG,EAAAvwD,UAAA0vD,SAAA,SAAArmC,GACA,IAAA/mB,EAAAjB,KAEAgoB,EAAA7F,UACA8sC,GAAAjvD,KAAAgoB,GAGA+mC,EAAApwD,UAAA0vD,SAAAxvD,KAAAmB,KAAAgoB,GAEAA,EAAAvI,kBAQAuI,EAAAvI,iBAAA,4BACAxe,EAAA+tD,YAGA/tD,EAAA+tD,WAAA,EACAC,GAAAhuD,EAAA+mB,GACA/mB,EAAA+tD,WAAA,EACA/tD,EAAAstC,QAAA,cAIA2gB,EAlFA,CAmFChB,IAaDiB,GAAA,SAAAJ,GAGA,SAAAI,IAEA,OADArb,EAAA9zC,KAAAmvD,GACA1a,EAAAz0C,KAAA+uD,EAAAvqD,MAAAxE,KAAAmD,YA+BA,OAnCA+wC,EAAAib,EAAAJ,GAeAI,EAAAxwD,UAAA0vD,SAAA,SAAArmC,GACA+mC,EAAApwD,UAAA0vD,SAAAxvD,KAAAmB,KAAAgoB,GAMAA,EAAAvI,iBAAA,aAAAD,GAAAxf,KAAA,WACAA,KAAAk+C,aAAA,cAKA,KAFA,uBAEAr5C,QAAAmjB,EAAAonC,OACApnC,EAAAvI,iBAAA,aAAAD,GAAAxf,KAAA,WACAA,KAAAuuC,QAAA,8BAKA4gB,EApCA,CAqCCjB,IASDmB,GAAA,WAQA,SAAAA,IACA,IAAAC,EAAAnsD,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAqvD,GAEArvD,KAAAuvD,kBAQAnxD,OAAA4R,eAAAhQ,KAAA,UACA8P,IAAA,WACA,OAAA9P,KAAAuvD,eAAAt6D,UAIA,QAAA3B,EAAA,EAAA2B,EAAAq6D,EAAAr6D,OAAkD3B,EAAA2B,EAAY3B,IAC9D0M,KAAAwvD,iBAAAF,EAAAh8D,IA+EA,OAjEA+7D,EAAA1wD,UAAA6wD,iBAAA,SAAAC,GACA,IAAAtxD,EAAA6B,KAAAuvD,eAAAt6D,OAEA,GAAAkJ,KAAA6B,MACA5B,OAAA4R,eAAAhQ,KAAA7B,GACA2R,IAAA,WACA,OAAA9P,KAAAuvD,eAAApxD,OAMA,IAAA6B,KAAAuvD,eAAA1qD,QAAA4qD,IACAzvD,KAAAuvD,eAAAv7D,KAAAy7D,IAkBAJ,EAAA1wD,UAAA+wD,wBAAA,SAAA1nC,GAGA,IAFA,IAAA2nC,OAAA,EAEAr8D,EAAA,EAAA2B,EAAA+K,KAAAuvD,eAAAt6D,OAAwD3B,EAAA2B,EAAY3B,IACpE,GAAA00B,IAAAhoB,KAAAuvD,eAAAj8D,GAAA00B,MAAA,CACA2nC,EAAA3vD,KAAAuvD,eAAAj8D,GAEA,MAIA,OAAAq8D,GAaAN,EAAA1wD,UAAAixD,oBAAA,SAAAH,GACA,QAAAn8D,EAAA,EAAA2B,EAAA+K,KAAAuvD,eAAAt6D,OAAwD3B,EAAA2B,EAAY3B,IACpE,GAAAm8D,IAAAzvD,KAAAuvD,eAAAj8D,GAAA,CACA0M,KAAAuvD,eAAAzT,OAAAxoD,EAAA,GAEA,QAKA+7D,EA1GA,GAwIAQ,GAAA,WAQA,SAAAA,EAAA9F,GACAjW,EAAA9zC,KAAA6vD,GAEAA,EAAAlxD,UAAAmxD,SAAAjxD,KAAAmB,KAAA+pD,GAQA3rD,OAAA4R,eAAAhQ,KAAA,UACA8P,IAAA,WACA,OAAA9P,KAAA+vD,WAqEA,OArDAF,EAAAlxD,UAAAmxD,SAAA,SAAA/F,GACA,IAAAiG,EAAAhwD,KAAA/K,QAAA,EACA3B,EAAA,EACAuQ,EAAAkmD,EAAA90D,OAEA+K,KAAAiwD,MAAAlG,EACA/pD,KAAA+vD,QAAAhG,EAAA90D,OAEA,IAAAi7D,EAAA,SAAA/xD,GACA,GAAAA,KAAA6B,MACA5B,OAAA4R,eAAAhQ,KAAA,GAAA7B,GACA2R,IAAA,WACA,OAAA9P,KAAAiwD,MAAA9xD,OAMA,GAAA6xD,EAAAnsD,EAGA,IAFAvQ,EAAA08D,EAEY18D,EAAAuQ,EAAOvQ,IACnB48D,EAAArxD,KAAAmB,KAAA1M,IAgBAu8D,EAAAlxD,UAAAwxD,WAAA,SAAAn3C,GAGA,IAFA,IAAAzlB,EAAA,KAEAD,EAAA,EAAAuQ,EAAA7D,KAAA/K,OAAoC3B,EAAAuQ,EAAOvQ,IAAA,CAC3C,IAAA02D,EAAAhqD,KAAA1M,GAEA,GAAA02D,EAAAhxC,OAAA,CACAzlB,EAAAy2D,EACA,OAIA,OAAAz2D,GAGAs8D,EA1FA,GAwGAO,IACAC,YAAA,cACAC,SAAA,WACAC,KAAA,OACAC,KAAA,OACAC,UAAA,YACAC,WAAA,cAUAC,IACAN,YAAA,cACAO,aAAA,eACAL,KAAA,OACAM,YAAA,YACAC,YAAA,cACAJ,WAAA,cAUAK,IACAN,UAAA,YACAH,SAAA,WACAM,aAAA,eACAI,SAAA,WACAC,SAAA,YAUAC,IACA/pD,SAAA,WACAktB,OAAA,SACA88B,QAAA,WAkBAC,GAAA,SAAAjD,GAuBA,SAAAiD,IACA,IAAAlvC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAoxD,GAEA,IAAAnxD,EAAAw0C,EAAAz0C,KAAAmuD,EAAAtvD,KAAAmB,OAEAqxD,GACAr4C,GAAAkJ,EAAAlJ,IAAA,aAAAihC,KACAmV,KAAAltC,EAAAktC,MAAA,GACA3D,MAAAvpC,EAAAupC,OAAA,GACA90D,SAAAurB,EAAAvrB,UAAA,IAwCA26D,EAAA,SAAA/yD,GACAH,OAAA4R,eAAA/P,EAAA1B,GACAuR,IAAA,WACA,OAAAuhD,EAAA9yD,IAEAwR,IAAA,gBAIA,QAAAxR,KAAA8yD,EACAC,EAAA/yD,GAEA,OAAA0B,EAGA,OAvFAi0C,EAAAkd,EAAAjD,GAuFAiD,EAxFA,CAyFCvT,IAyCD0T,GAAA,SAAAviD,GACA,IAAAlP,GAAA,gEAGAqB,EAAU8vC,EAAA9vC,EAAQC,cAAA,KAElBD,EAAAqwD,KAAAxiD,EAKA,IAAAyiD,EAAA,KAAAtwD,EAAAuwD,MAAA,UAAAvwD,EAAAwwD,SACAC,OAAA,EAEAH,KACAG,EAAU3gB,EAAA9vC,EAAQC,cAAA,QAClBoiB,UAAA,YAAAxU,EAAA,SACA7N,EAAAywD,EAAA1xC,WAEA0xC,EAAAniD,aAAA,4CACIwhC,EAAA9vC,EAAQ6e,KAAA0D,YAAAkuC,IAQZ,IAFA,IAAAC,KAEAv+D,EAAA,EAAiBA,EAAAwM,EAAA7K,OAAkB3B,IACnCu+D,EAAA/xD,EAAAxM,IAAA6N,EAAArB,EAAAxM,IAqBA,MAhBA,UAAAu+D,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAA5tD,QAAA,YAGA,WAAA+tD,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAA5tD,QAAA,aAGA+tD,EAAAF,WACAE,EAAAF,SAAuB5gB,EAAA5vC,EAAQkc,SAAAs0C,UAG/BF,GACIxgB,EAAA9vC,EAAQ6e,KAAAyD,YAAAmuC,GAGZC,GAeAC,GAAA,SAAA9iD,GAEA,IAAAA,EAAAhQ,MAAA,iBAEA,IAAA4yD,EAAc3gB,EAAA9vC,EAAQC,cAAA,OAEtBwwD,EAAApuC,UAAA,YAAAxU,EAAA,UACAA,EAAA4iD,EAAA1xC,WAAAsxC,KAGA,OAAAxiD,GAcA+iD,GAAA,SAAA1xD,GACA,oBAAAA,EAAA,CACA,IACA2xD,EADA,0EACAvL,KAAApmD,GAEA,GAAA2xD,EACA,OAAAA,EAAAvnD,MAAA/B,cAIA,UAYAupD,GAAA,SAAAjjD,GACA,IAAAkjD,EAAenhB,EAAA5vC,EAAQkc,SACvB80C,EAAAZ,GAAAviD,GASA,OANA,MAAAmjD,EAAAR,SAAAO,EAAAP,SAAAQ,EAAAR,UAIAQ,EAAAT,OAAAQ,EAAAP,SAAAO,EAAAR,MAKAU,GAAAh0D,OAAA27C,QACAwX,YACAO,kBACAC,oBACAE,mBAkBAI,GAAA,SAAAC,EAAAtqC,GACA,IAAAuqC,EAAA,IAAmBxhB,EAAA5vC,EAAQqxD,OAAAC,OAAe1hB,EAAA5vC,EAAU4vC,EAAA5vC,EAAQuxD,MAAQ3hB,EAAA5vC,EAAQqxD,OAAAG,iBAC5EC,KAEAL,EAAAM,MAAA,SAAA7I,GACAhiC,EAAA2iC,OAAAX,IAGAuI,EAAAO,eAAA,SAAAj+B,GACA+9B,EAAA5+D,KAAA6gC,IAGA09B,EAAAQ,QAAA,WACA/qC,EAAAumB,SACAhxC,KAAA,aACA4M,OAAA6d,KAIAuqC,EAAAvgE,MAAAsgE,GACAM,EAAA39D,OAAA,IACQ87C,EAAA5vC,EAAQb,SAAYywC,EAAA5vC,EAAQb,QAAA0yD,gBAC9BjiB,EAAA5vC,EAAQb,QAAA0yD,eAAA,iCAAAhrC,EAAAuiC,KAEdqI,EAAAzsD,QAAA,SAAA0uB,GACA,OAAA+e,EAAA/e,WAEQkc,EAAA5vC,EAAQb,SAAYywC,EAAA5vC,EAAQb,QAAA2yD,UAC9BliB,EAAA5vC,EAAQb,QAAA2yD,YAIdV,EAAA3lB,SAcAsmB,GAAA,SAAA3I,EAAAviC,GACA,IAAAszB,GACAlX,IAAAmmB,GAEA4I,EAAAlB,GAAA1H,GAEA4I,IACA7X,EAAAtV,KAAAmtB,GAGE9hB,IAAGiK,EAAA97B,GAAAxf,KAAA,SAAAykC,EAAAC,EAAA0uB,GACL,GAAA3uB,EACA,OAAAmP,EAAA/e,MAAA4P,EAAAC,GAOA,GAJA1c,EAAAqrC,SAAA,EAIuB,mBAARtiB,EAAA5vC,EAAQqxD,QACvB,GAAAxqC,EAAAsrC,MAAA,CACA,IAAAC,EAAA,WACA,OAAAlB,GAAAe,EAAAprC,IAGAA,EAAAsrC,MAAA9X,GAAA,cAAA+X,GACAvrC,EAAAsrC,MAAA9X,GAAA,wBACA5H,EAAA/e,MAAA,oDAAA7M,EAAAuiC,KACAviC,EAAAsrC,MAAAtgB,IAAA,cAAAugB,WAIAlB,GAAAe,EAAAprC,OAYAwrC,GAAA,SAAAC,GAqCA,SAAAD,IACA,IAAAtxC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAGA,GAFA2wC,EAAA9zC,KAAAwzD,IAEAtxC,EAAAioC,KACA,UAAAxmD,MAAA,4BAGA,IAAA+vD,EAAAtT,GAAAl+B,GACAktC,KAAA2B,GAAA7uC,EAAAktC,OAAA,YACAz4D,SAAAurB,EAAAvrB,UAAAurB,EAAAyxC,SAAA,KAEAzoC,EAAAgmC,GAAAwC,EAAAxoC,OAAA,WACA0oC,EAAAF,EAAA1/B,QAEA,aAAA0/B,EAAAtE,MAAA,aAAAsE,EAAAtE,OACAlkC,EAAA,UAGA,IAAAjrB,EAAAw0C,EAAAz0C,KAAAyzD,EAAA50D,KAAAmB,KAAA0zD,IAEAzzD,EAAAqzD,MAAAI,EAAAvJ,KAEAlqD,EAAAgwD,SACAhwD,EAAA4zD,eAEA,IAAA9J,EAAA,IAAA8F,GAAA5vD,EAAAgwD,OACA6D,EAAA,IAAAjE,GAAA5vD,EAAA4zD,aACAE,GAAA,EACAC,EAAAx0C,GAAAvf,EAAA,WAMAD,KAAA8zD,WAAA9zD,KAAA8zD,WACAC,IACA/zD,KAAAuuC,QAAA,aACAwlB,GAAA,KA+IA,MA3IA,aAAA7oC,GACAjrB,EAAAqzD,MAAAjT,MAAA,WACApgD,EAAAqzD,MAAA9X,GAAA,aAAAwY,KACO,GAGP51D,OAAA61D,iBAAAh0D,GAUA+zB,SACAlkB,IAAA,WACA,OAAA8jD,GAEA7jD,IAAA,cAYAmb,MACApb,IAAA,WACA,OAAAob,GAEAnb,IAAA,SAAAmkD,GACA,IAAAjzD,EAAAjB,KAEAkxD,GAAAgD,KAIA,aADAhpC,EAAAgpC,IAGAl0D,KAAAszD,MAAAjT,MAAA,WACAp/C,EAAAqyD,MAAA9X,GAAA,aAAAwY,KACa,GAWbh0D,KAAAuuC,QAAA,iBAUAwb,MACAj6C,IAAA,WACA,OAAA9P,KAAAqzD,QAIAtJ,EAHA,MAKAh6C,IAAA,cASA+jD,YACAhkD,IAAA,WACA,IAAA9P,KAAAqzD,QACA,YAIA,OAAArzD,KAAA+pD,KAAA90D,OACA,OAAA6+D,EAMA,IAHA,IAAAK,EAAAn0D,KAAAszD,MAAAc,cACAC,KAEA/gE,EAAA,EAAAuQ,EAAA7D,KAAA+pD,KAAA90D,OAA+C3B,EAAAuQ,EAAOvQ,IAAA,CACtD,IAAA02D,EAAAhqD,KAAA+pD,KAAAz2D,GAEA02D,EAAA7pB,WAAAg0B,GAAAnK,EAAAC,SAAAkK,EACAE,EAAArgE,KAAAg2D,GACaA,EAAA7pB,YAAA6pB,EAAAC,SAAAD,EAAA7pB,WAAAg0B,GAAAnK,EAAA7pB,UAAA,IAAAg0B,GACbE,EAAArgE,KAAAg2D,GAMA,GAFA+J,GAAA,EAEAM,EAAAp/D,SAAA+K,KAAA6zD,YAAA5+D,OACA8+D,GAAA,OAEA,QAAA/K,EAAA,EAA4BA,EAAAqL,EAAAp/D,OAAoB+zD,KAChD,IAAAhpD,KAAA6zD,YAAAhvD,QAAAwvD,EAAArL,MACA+K,GAAA,GAQA,OAHA/zD,KAAA6zD,YAAAQ,EACAP,EAAAhE,SAAA9vD,KAAA6zD,aAEAC,GAKA/jD,IAAA,gBAIA2jD,EAAAnJ,KACAtqD,EAAAsqD,IAAAmJ,EAAAnJ,IACA2I,GAAAQ,EAAAnJ,IAAAtqD,IAEAA,EAAAozD,SAAA,EAEApzD,EA8DA,OAvRAi0C,EAAAsf,EAAAC,GAoOAD,EAAA70D,UAAAgsD,OAAA,SAAA2J,GACA,IAAAtK,EAAAsK,EAEA,GAAQvjB,EAAA5vC,EAAQuxD,SAAA4B,aAAmCvjB,EAAA5vC,EAAQuxD,MAAA6B,QAAA,CAG3D,QAAAlf,KAFA2U,EAAA,IAAgBjZ,EAAA5vC,EAAQuxD,MAAA6B,OAAAD,EAAAn0B,UAAAm0B,EAAArK,QAAAqK,EAAAhyD,MAExBgyD,EACAjf,KAAA2U,IACAA,EAAA3U,GAAAif,EAAAjf,IAKA2U,EAAAhxC,GAAAs7C,EAAAt7C,GACAgxC,EAAAwK,aAAAF,EAKA,IAFA,IAAA1xB,EAAA5iC,KAAAszD,MAAA9I,aAEAl3D,EAAA,EAAmBA,EAAAsvC,EAAA3tC,OAAmB3B,IACtCsvC,EAAAtvC,KAAA0M,MACA4iC,EAAAtvC,GAAAmhE,UAAAzK,GAIAhqD,KAAAiwD,MAAAj8D,KAAAg2D,GACAhqD,KAAA+pD,KAAA+F,SAAA9vD,KAAAiwD,QAWAuD,EAAA70D,UAAA81D,UAAA,SAAAC,GAGA,IAFA,IAAAphE,EAAA0M,KAAAiwD,MAAAh7D,OAEA3B,KAAA,CACA,IAAA02D,EAAAhqD,KAAAiwD,MAAA38D,GAEA,GAAA02D,IAAA0K,GAAA1K,EAAAwK,cAAAxK,EAAAwK,eAAAE,EAAA,CACA10D,KAAAiwD,MAAAnU,OAAAxoD,EAAA,GACA0M,KAAA+pD,KAAA+F,SAAA9vD,KAAAiwD,OACA,SAKAuD,EAxRA,CAyRCpC,IAODoC,GAAA70D,UAAAm/C,gBACA6W,UAAA,aAWA,IAAAC,GAAA,SAAAnB,GAyBA,SAAAmB,IACA,IAAA1yC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAA40D,GAEA,IAAAlB,EAAAtT,GAAAl+B,GACAktC,KAAAuB,GAAAzuC,EAAAktC,OAAA,KAGAnvD,EAAAw0C,EAAAz0C,KAAAyzD,EAAA50D,KAAAmB,KAAA0zD,IAEA7E,GAAA,EA2CA,OAhCAzwD,OAAA4R,eAAA/P,EAAA,WACA6P,IAAA,WACA,OAAA++C,GAEA9+C,IAAA,SAAA8kD,GAEA,kBAAAA,OAAAhG,IAGAA,EAAAgG,EAYA70D,KAAAuuC,QAAA,qBAOAmlB,EAAA7E,UACA5uD,EAAA4uD,QAAA6E,EAAA7E,SAEA5uD,EAAAozD,SAAA,EACApzD,EAGA,OAhFAi0C,EAAA0gB,EAAAnB,GAgFAmB,EAjFA,CAkFCxD,IASD0D,GAAA,SAAArB,GAwBA,SAAAqB,IACA,IAAA5yC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAA80D,GAEA,IAAApB,EAAAtT,GAAAl+B,GACAktC,KAAAgB,GAAAluC,EAAAktC,OAAA,KAGAnvD,EAAAw0C,EAAAz0C,KAAAyzD,EAAA50D,KAAAmB,KAAA0zD,IAEAvxC,GAAA,EA0CA,OA/BA/jB,OAAA4R,eAAA/P,EAAA,YACA6P,IAAA,WACA,OAAAqS,GAEApS,IAAA,SAAAglD,GAEA,kBAAAA,OAAA5yC,IAGAA,EAAA4yC,EAYA/0D,KAAAuuC,QAAA,sBAOAmlB,EAAAvxC,WACAliB,EAAAkiB,SAAAuxC,EAAAvxC,UAEAliB,EAGA,OA9EAi0C,EAAA4gB,EAAArB,GA8EAqB,EA/EA,CAgFC1D,IAWD4D,GAAA,EAEAC,GAAA,EAUAC,GAAA,SAAA/G,GAqCA,SAAA+G,IACA,IAAAhzC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAk1D,GAEA,IAAAj1D,EAAAw0C,EAAAz0C,KAAAmuD,EAAAtvD,KAAAmB,OAEAsmC,OAAA,EAEAte,EAAA,IAAAwrC,GAAAtxC,GAkDA,OAhDAjiB,EAAAmvD,KAAApnC,EAAAonC,KACAnvD,EAAAsqD,IAAAviC,EAAAuiC,IACAtqD,EAAA0zD,QAAA3rC,EAAArxB,SACAsJ,EAAAwrD,MAAAzjC,EAAAyjC,MACAxrD,EAAA+zB,QAAAhM,EAAAgM,QAEA51B,OAAA61D,iBAAAh0D,GAQAqmC,YACAx2B,IAAA,WACA,OAAAw2B,IAWAte,OACAlY,IAAA,WACA,OAAAkY,MAKAse,EAAA0uB,GAMAhtC,EAAAvI,iBAAA,wBACA6mB,EAAA2uB,GAEAh1D,EAAAsuC,SACAhxC,KAAA,OACA4M,OAAAlK,MAGAA,EAGA,OAjGAi0C,EAAAghB,EAAA/G,GAiGA+G,EAlGA,CAmGCrX,IAEDqX,GAAAv2D,UAAAm/C,gBACAqX,KAAA,QAGAD,GAAAF,QACAE,GAAAE,QArHA,EAsHAF,GAAAD,UACAC,GAAAG,MArHA,EA4HA,IAAAC,IACA9yB,OACA+yB,UAAAzG,GACA0G,WAAAZ,GACAa,YAAA,SAEAl0D,OACAg0D,UAAArG,GACAsG,WAAAV,GACAW,YAAA,SAEAnzD,MACAizD,UAAApG,GACAqG,WAAAhC,GACAiC,YAAA,SAIAr3D,OAAAC,KAAAi3D,IAAAnvD,QAAA,SAAA5I,GACA+3D,GAAA/3D,GAAAm4D,WAAAn4D,EAAA,SACA+3D,GAAA/3D,GAAAo4D,YAAAp4D,EAAA,YAGA,IAAAq4D,IACAC,YACAN,UAAApG,GACAqG,WAAAhC,GACAiC,YAAA,aACAC,WAAA,mBACAC,YAAA,qBAEAG,cACAP,UAAAlG,GACAmG,WAAAN,GACAO,YAAA,qBACAC,WAAA,qBACAC,YAAA,wBAIAI,GAAA3V,GAAAkV,GAAAM,IAEAA,GAAAI,MAAA53D,OAAAC,KAAAu3D,IACAN,GAAAU,MAAA53D,OAAAC,KAAAi3D,IACAS,GAAAC,SAAA/vD,OAAA2vD,GAAAI,OAAA/vD,OAAAqvD,GAAAU,OAyEA,IAAAvT,GAAA,SAAAtiD,GAYA,SAAAsiD,IACA,IAAAvgC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAk9C,EAAAl9C,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,gBACA2wC,EAAA9zC,KAAAyiD,GAIAvgC,EAAA8+B,qBAAA,EAIA,IAAA/gD,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA,KAAAkiB,EAAAm+B,IAwDA,OAtDApgD,EAAAg2D,aAAA,EACAh2D,EAAAu7C,GAAA,qBACAx7C,KAAAi2D,aAAA,IAEAh2D,EAAAu7C,GAAA,uBACAx7C,KAAAi2D,aAAA,IAGAF,GAAAC,MAAA7vD,QAAA,SAAAnQ,GACA,IAAA8J,EAAAi2D,GAAA//D,GAEAksB,KAAApiB,EAAA41D,cACAz1D,EAAAH,EAAA61D,aAAAzzC,EAAApiB,EAAA41D,eAKAz1D,EAAAi2D,wBACAj2D,EAAAk2D,mBAIAl2D,EAAAm2D,0BACAn2D,EAAAo2D,uBAGA,wBAAAlwD,QAAA,SAAA6hB,IACA,IAAA9F,EAAA,SAAA8F,EAAA,YACA/nB,EAAA,iBAAA+nB,EAAA,iBAIA,IAAA9F,EAAAo0C,iBAAA,IAAAp0C,EAAAq0C,iBACAt2D,EAAAu2D,0BAAA,GACK,IAAAt0C,EAAAo0C,iBAAA,IAAAp0C,EAAAq0C,mBACLt2D,EAAAu2D,0BAAA,GAGAv2D,EAAAu2D,0BACAv2D,EAAAw2D,oBAGAx2D,EAAAy2D,sBAAA,IAAAX,GAAAzzD,KAAAizD,UAEAt1D,EAAA02D,qBAGAz0C,EAAA00C,wBACA32D,EAAAqkD,gBAGArkD,EAAAyG,cACAzG,EAAAygD,MAAAzgD,EAAAyG,YAAA1Q,MAAA,gBAEAiK,EA82BA,OA57BAi0C,EAAAuO,EAAAtiD,GA0FAsiD,EAAA9jD,UAAAk4D,iBAAA,SAAAtM,GACA,IAAAtpD,EAAAjB,KAEAA,KAAAgjD,UAGAhjD,KAAAi8C,IAAA,mBACA,OAAAh7C,EAAA6zB,WAAA,WACA,OAAA7zB,EAAA41D,iBAAAtM,IACS,KAYTvqD,KAAAuuC,SACAgc,MACAhtD,KAAA,eAcAklD,EAAA9jD,UAAAw3D,iBAAA,WACAn2D,KAAAw7C,GAAA,iBAAAx7C,KAAA82D,kBAEA92D,KAAA+2D,gBAAA,EAGA/2D,KAAAi8C,IAAA,QAAAj8C,KAAAg3D,gBASAvU,EAAA9jD,UAAAs4D,kBAAA,WACAj3D,KAAA+2D,gBAAA,EACA/2D,KAAAk3D,uBAEAl3D,KAAAgzC,IAAA,iBAAAhzC,KAAA82D,mBAkBArU,EAAA9jD,UAAAq4D,cAAA,SAAAlnB,GACA9vC,KAAAk3D,uBACAl3D,KAAAm3D,iBAAAn3D,KAAA0tC,YAAAluB,GAAAxf,KAAA,WAGA,IAAAo3D,EAAAp3D,KAAAyoD,kBAEAzoD,KAAAq3D,mBAAAD,GAOAp3D,KAAAuuC,QAAA,YAGAvuC,KAAAq3D,iBAAAD,EAEA,IAAAA,GACAp3D,KAAAk3D,yBAEK,MAcLzU,EAAA9jD,UAAAm4D,iBAAA,SAAAhnB,GACA9vC,KAAAs3D,UAAAt3D,KAAAjJ,YAWA0rD,EAAA9jD,UAAA+pD,SAAA,WACA,OAAAF,GAAA,MAaA/F,EAAA9jD,UAAA8pD,gBAAA,WACA,OAAAA,GAAAzoD,KAAA0oD,WAAA1oD,KAAAs3D,YAWA7U,EAAA9jD,UAAAu4D,qBAAA,WACAl3D,KAAA2tC,cAAA3tC,KAAAm3D,mBAUA1U,EAAA9jD,UAAA03D,oBAAA,WACAr2D,KAAAu3D,mBAAA,EAEAv3D,KAAAw7C,GAAA,OAAAx7C,KAAAw3D,kBACAx3D,KAAAw7C,GAAA,QAAAx7C,KAAAy3D,0BASAhV,EAAA9jD,UAAA+4D,qBAAA,WACA13D,KAAAu3D,mBAAA,EACAv3D,KAAAy3D,0BACAz3D,KAAAgzC,IAAA,OAAAhzC,KAAAw3D,kBACAx3D,KAAAgzC,IAAA,QAAAhzC,KAAAy3D,0BAYAhV,EAAA9jD,UAAA64D,iBAAA,WACAx3D,KAAA23D,qBACA33D,KAAAy3D,0BAEAz3D,KAAA23D,oBAAA33D,KAAA0tC,YAAA,WAOA1tC,KAAAuuC,SAAoBhxC,KAAA,aAAA4M,OAAAnK,KAAA43D,mBAAA,KAGf,MAWLnV,EAAA9jD,UAAA84D,wBAAA,WACAz3D,KAAA2tC,cAAA3tC,KAAA23D,qBAIA33D,KAAAuuC,SAAkBhxC,KAAA,aAAA4M,OAAAnK,KAAA43D,mBAAA,KAWlBnV,EAAA9jD,UAAAuiD,QAAA,WAGAlhD,KAAA63D,YAAAvC,GAAAU,OAGAh2D,KAAA+2D,gBACA/2D,KAAAi3D,oBAGAj3D,KAAAu3D,mBACAv3D,KAAA03D,uBAGAv3D,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAeAyiD,EAAA9jD,UAAAk5D,YAAA,SAAA12B,GACA,IAAAkkB,EAAArlD,MAEAmhC,KAAAl7B,OAAAk7B,IAEAh7B,QAAA,SAAA5I,GAIA,IAHA,IAAAqxD,EAAAvJ,EAAA9nD,EAAA,gBACAjK,EAAAs7D,EAAA35D,OAEA3B,KAAA,CACA,IAAA00B,EAAA4mC,EAAAt7D,GAEA,SAAAiK,GACA8nD,EAAAyS,sBAAA9vC,GAEA4mC,EAAAN,YAAAtmC,OAWAy6B,EAAA9jD,UAAAo5D,sBAAA,WAIA,IAHA,IAAAnJ,EAAA5uD,KAAA02D,0BACApjE,EAAAs7D,EAAA35D,OAEA3B,KAAA,CACA,IAAA00B,EAAA4mC,EAAAt7D,GAEA0M,KAAA83D,sBAAA9vC,KAWAy6B,EAAA9jD,UAAAq5D,MAAA,aAaAvV,EAAA9jD,UAAAk2B,MAAA,SAAA4P,GAKA,YAJAb,IAAAa,IACAzkC,KAAAi4D,OAAA,IAAAhP,GAAAxkB,GACAzkC,KAAAuuC,QAAA,UAEAvuC,KAAAi4D,QAeAxV,EAAA9jD,UAAAu5D,OAAA,WACA,OAAAl4D,KAAAi2D,YACAzN,GAAA,KAEAA,MAWA/F,EAAA9jD,UAAAw5D,eAAA,WAEAn4D,KAAAu3D,mBAOAv3D,KAAAuuC,SAAoBhxC,KAAA,aAAA4M,OAAAnK,KAAA43D,mBAAA,KAgBpBnV,EAAA9jD,UAAAg4D,mBAAA,WACA,IAAApR,EAAAvlD,KAsBAs1D,GAAAU,MAAA7vD,QAAA,SAAAnQ,GACA,IAAA8J,EAAAw1D,GAAAt/D,GACAoiE,EAAA,WACA7S,EAAAhX,QAAAv4C,EAAA,gBAGA4sC,EAAA2iB,EAAAzlD,EAAA41D,cAEA9yB,EAAAnjB,iBAAA,cAAA24C,GACAx1B,EAAAnjB,iBAAA,WAAA24C,GAEA7S,EAAA/J,GAAA,qBACA5Y,EAAA+X,oBAAA,cAAAyd,GACAx1B,EAAA+X,oBAAA,WAAAyd,QAaA3V,EAAA9jD,UAAA05D,iBAAA,WACA,IAAAC,EAAAt4D,KAEA,IAAQ+wC,EAAA5vC,EAAQqxD,OAOhB,GAAQvhB,EAAA9vC,EAAQ6e,KAAA+a,SAAA/6B,KAAAo1C,MAAA,CAKhB,IAAAp1C,KAAAwgD,SAAA,WAAAtL,EAA8C3D,EAAApwC,IAAG/C,OAAAC,KAAiBkzC,EAAApwC,GAAGlM,OAAA,EAErE,YADA+K,KAAAuuC,QAAA,eAMA,IAAAgqB,EAAmBtnB,EAAA9vC,EAAQC,cAAA,UAE3Bm3D,EAAAhO,IAAAvqD,KAAAwgD,SAAA,4DACA+X,EAAAhyB,OAAA,WAOA+xB,EAAA/pB,QAAA,gBAEAgqB,EAAA/xB,QAAA,WAOA8xB,EAAA/pB,QAAA,eAEAvuC,KAAAw7C,GAAA,qBACA+c,EAAAhyB,OAAA,KACAgyB,EAAA/xB,QAAA,OAIMuK,EAAA5vC,EAAQqxD,QAAA,EACdxyD,KAAAo1C,KAAA1tC,WAAAgc,YAAA60C,QAEAv4D,KAAAqgD,MAAArgD,KAAAq4D,mBAUA5V,EAAA9jD,UAAA83D,kBAAA,WACA,IAAA+B,EAAAx4D,KAEA4iC,EAAA5iC,KAAAwqD,aACAiO,EAAAz4D,KAAA04D,mBACAC,EAAA,SAAAp1D,GACA,OAAAq/B,EAAAyrB,SAAA9qD,EAAAykB,QAEA4wC,EAAA,SAAAr1D,GACA,OAAAq/B,EAAA0rB,YAAA/qD,EAAAykB,QAGAywC,EAAAjd,GAAA,WAAAmd,GACAF,EAAAjd,GAAA,cAAAod,GAEA54D,KAAAq4D,mBAEA,IAAAQ,EAAA,WACA,OAAAL,EAAAjqB,QAAA,oBAGAuqB,EAAA,WACAD,IAEA,QAAAvlE,EAAA,EAAqBA,EAAAsvC,EAAA3tC,OAAmB3B,IAAA,CACxC,IAAA00B,EAAA4a,EAAAtvC,GAEA00B,EAAA2yB,oBAAA,YAAAke,GACA,YAAA7wC,EAAAkD,MACAlD,EAAAvI,iBAAA,YAAAo5C,KAKAC,IACAl2B,EAAAnjB,iBAAA,SAAAq5C,GACAl2B,EAAAnjB,iBAAA,WAAAq5C,GACAl2B,EAAAnjB,iBAAA,cAAAq5C,GAEA94D,KAAAw7C,GAAA,qBACAid,EAAAzlB,IAAA,WAAA2lB,GACAF,EAAAzlB,IAAA,cAAA4lB,GACAh2B,EAAA+X,oBAAA,SAAAme,GACAl2B,EAAA+X,oBAAA,WAAAme,GACAl2B,EAAA+X,oBAAA,cAAAme,GAEA,QAAAxlE,EAAA,EAAqBA,EAAAsvC,EAAA3tC,OAAmB3B,IAAA,CACxCsvC,EAAAtvC,GAEAqnD,oBAAA,YAAAke,OAsBApW,EAAA9jD,UAAAo6D,aAAA,SAAA3J,EAAA3D,EAAA90D,GACA,IAAAy4D,EACA,UAAAzrD,MAAA,mDAGA,OA1qBA,SAAAwpC,EAAAiiB,EAAA3D,EAAA90D,GACA,IAAAurB,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEAy/B,EAAAuK,EAAAqd,aAEAtoC,EAAAktC,OAEA3D,IACAvpC,EAAAupC,SAEA90D,IACAurB,EAAAvrB,YAEAurB,EAAAioC,KAAAhd,EAEA,IAAAnlB,EAAA,IAAA+tC,GAAAzzD,KAAAkzD,WAAAtzC,GAIA,OAFA0gB,EAAAyrB,SAAArmC,GAEAA,EAupBAgxC,CAAAh5D,KAAAovD,EAAA3D,EAAA90D,IA0BA8rD,EAAA9jD,UAAAs6D,sBAAA,SAAA/2C,GACA,IAAA8F,EAAAo4B,GAAAl+B,GACAioC,KAAAnqD,OAGA,WAAA41D,GAAAE,aAAAN,WAAAxtC,IAyBAy6B,EAAA9jD,UAAA+rD,mBAAA,WACA,IAAAwO,EAAAl5D,KAEAkiB,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAg2D,EAAAh2D,UAAA,GAEAi2D,EAAAp5D,KAAAi5D,sBAAA/2C,GAmBA,OAjBA,IAAAi3C,IAAA,IAAAA,IAEAvlB,EAAAV,KAAA,oKACAimB,GAAA,GAIAn5D,KAAAq5D,qBAAA7J,iBAAA4J,GACAp5D,KAAA04D,mBAAArK,SAAA+K,EAAApxC,QAEA,IAAAmxC,GAEAn5D,KAAAqgD,MAAA,WACA,OAAA6Y,EAAAxC,sBAAArI,SAAA+K,EAAApxC,SAIAoxC,GAWA3W,EAAA9jD,UAAAm5D,sBAAA,SAAA9vC,GACA,IAAAynC,EAAAzvD,KAAAq5D,qBAAA3J,wBAAA1nC,GAGAhoB,KAAAq5D,qBAAAzJ,oBAAAH,GACAzvD,KAAA04D,mBAAApK,YAAAtmC,GACAhoB,KAAA02D,sBAAApI,YAAAtmC,IAgBAy6B,EAAA9jD,UAAA26D,wBAAA,WACA,UAUA7W,EAAA9jD,UAAA46D,UAAA,aASA9W,EAAA9jD,UAAA66D,YAAA,aASA/W,EAAA9jD,UAAA86D,eAAA,aAYAhX,EAAA9jD,UAAA+6D,0BAAA,aAYAjX,EAAA9jD,UAAAg7D,0BAAA,aAoBAlX,EAAA9jD,UAAAi7D,YAAA,WACA,UAeAnX,EAAAmX,YAAA,WACA,UAaAnX,EAAAoX,cAAA,SAAAC,EAAA53C,GACA,OAAAugC,EAAAmX,YAAAE,EAAAv8D,OAiBAklD,EAAAG,OAAA,SAAAb,GACA,OAAAA,EAAApjD,qBAAA8jD,GAAAV,aAAAU,GAAAV,IAAAU,GAcAA,EAAAsX,aAAA,SAAA/jE,EAAAm0D,GAKA,GAJA1H,EAAAuX,SACAvX,EAAAuX,YAGAvX,EAAAG,OAAAuH,GACA,UAAAxmD,MAAA,QAAA3N,EAAA,mBAGA,IAAAysD,EAAAmX,YACA,UAAAj2D,MAAA,uDAEA,IAAA8+C,EAAAoX,cACA,UAAAl2D,MAAA,yDAUA,OAPA3N,EAAAkqD,GAAAlqD,GAEAysD,EAAAuX,OAAAhkE,GAAAm0D,EACA,SAAAn0D,GAEAysD,EAAAwX,kBAAAjmE,KAAAgC,GAEAm0D,GAcA1H,EAAAyX,QAAA,SAAAlkE,GACA,GAAAA,EAMA,OAFAA,EAAAkqD,GAAAlqD,GAEAysD,EAAAuX,QAAAvX,EAAAuX,OAAAhkE,GACAysD,EAAAuX,OAAAhkE,GAGQ+6C,EAAA5vC,GAAY4vC,EAAA5vC,EAAQi7C,SAAYrL,EAAA5vC,EAAQi7C,QAAApmD,IAChD49C,EAAAV,KAAA,OAAAl9C,EAAA,6GACa+6C,EAAA5vC,EAAQi7C,QAAApmD,SAFrB,GAMAysD,EA77BA,CA87BChgD,IAqCDszD,GAAAC,MAAA7vD,QAAA,SAAAnQ,GACA,IAAA8J,EAAAi2D,GAAA//D,GAEAysD,GAAA9jD,UAAAmB,EAAA41D,YAAA,WAEA,OADA11D,KAAAF,EAAA61D,aAAA31D,KAAAF,EAAA61D,cAAA,IAAA71D,EAAAy1D,UACAv1D,KAAAF,EAAA61D,gBAkCAlT,GAAA9jD,UAAAw7D,uBAAA,EAQA1X,GAAA9jD,UAAAy7D,qBAAA,EASA3X,GAAA9jD,UAAA07D,0BAAA,EAWA5X,GAAA9jD,UAAA27D,sBAAA,EAUA7X,GAAA9jD,UAAAu3D,wBAAA,EAYAzT,GAAA9jD,UAAA47D,mBAAA,EAUA9X,GAAA9jD,UAAAy3D,0BAAA,EASA3T,GAAA9jD,UAAA63D,0BAAA,EAcA/T,GAAA+X,mBAAA,SAAAC,GAWAA,EAAAC,sBAAA,SAAAC,EAAAx8D,GACA,IAAAu8C,EAAA+f,EAAAG,eAEAlgB,IACAA,EAAA+f,EAAAG,wBAGAh3B,IAAAzlC,IAEAA,EAAAu8C,EAAAzlD,QAGAylD,EAAAoB,OAAA39C,EAAA,EAAAw8D,IAaAF,EAAAb,YAAA,SAAAr8D,GAIA,IAHA,IAAAm9C,EAAA+f,EAAAG,mBACAC,OAAA,EAEAvnE,EAAA,EAAmBA,EAAAonD,EAAAzlD,OAAqB3B,IAGxC,GAFAunE,EAAAngB,EAAApnD,GAAAsmE,YAAAr8D,GAGA,OAAAs9D,EAIA,UAkBAJ,EAAAK,oBAAA,SAAA/yC,EAAA7F,GAIA,IAHA,IAAAw4B,EAAA+f,EAAAG,mBAGAtnE,EAAA,EAAmBA,EAAAonD,EAAAzlD,OAAqB3B,IAGxC,GAFAonD,EAAApnD,GAAAynE,gBAAAhzC,EAAA7F,GAGA,OAAAw4B,EAAApnD,GAIA,aAeAmnE,EAAAZ,cAAA,SAAAC,EAAA53C,GACA,IAAAsa,EAAAi+B,EAAAK,oBAAAhB,EAAA53C,GAEA,OAAAsa,EACAA,EAAAu+B,gBAAAjB,EAAA53C,GAGA,KAOA,iCAgBA/b,QAAA,SAAA8hD,GACA,IAAA+S,EAAAh7D,KAAAioD,GAEA,mBAAA+S,IAIAh7D,KAAAioD,GAAA,WACA,OAAAjoD,KAAAi7D,gBAAAj7D,KAAAi7D,eAAAhT,GACAjoD,KAAAi7D,eAAAhT,GAAAzjD,MAAAxE,KAAAi7D,eAAA93D,WAEA63D,EAAAx2D,MAAAxE,KAAAmD,cAEGs3D,EAAA97D,WAUH87D,EAAA97D,UAAAu8D,UAAA,SAAAnzC,GACA,IAAAyU,EAAAi+B,EAAAK,oBAAA/yC,EAAA/nB,KAAAwgD,UAEAhkB,IAGAi+B,EAAAU,oBACA3+B,EAAAi+B,EAAAU,oBAEAvnB,EAAA/e,MAAA,oDAKA70B,KAAAo7D,uBACAp7D,KAAAgzC,IAAA,UAAAhzC,KAAAo7D,sBAEA5+B,IAAAi+B,EAAAU,sBACAn7D,KAAAq7D,eAAAtzC,GAGA/nB,KAAAi7D,eAAAz+B,EAAA8+B,aAAAvzC,EAAA/nB,UAAAwgD,UACAxgD,KAAAw7C,GAAA,UAAAx7C,KAAAo7D,uBAQAX,EAAA97D,UAAAy8D,qBAAA,WAIAp7D,KAAAq7D,iBACAr7D,KAAA63D,aAAA,kBACA73D,KAAAq7D,eAAA,MAIAr7D,KAAA+3D,wBAEA/3D,KAAAi7D,iBAEAj7D,KAAAi7D,eAAA/Z,SACAlhD,KAAAi7D,eAAA/Z,UAGAlhD,KAAAi7D,eAAA,QAOAx4D,GAAAijD,kBAAA,OAAAjD,IACAA,GAAAsX,aAAA,OAAAtX,IAOAA,GAAAwX,qBAEA,IAAAsB,MACAC,MAEAC,MAOA,SAAAP,GAAAre,EAAA0N,EAAAh9B,GACAsvB,EAAA/nB,WAAA,WACA,OAgIA,SAAA4mC,IACA,IAAAnR,EAAApnD,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA,IAAAw4D,EAAAx4D,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA,IAAAoqB,EAAApqB,UAAA,GACA,IAAA05C,EAAA15C,UAAA,GACA,IAAA2mD,EAAA3mD,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA,IAAAy4D,EAAAz4D,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,IAAAA,UAAA,GACA,IAAA04D,EAAAF,EAAA,GACAG,EAAAH,EAAA/8D,MAAA,GAIA,oBAAAi9D,EACAH,EAAAnR,EAAAgR,GAAAM,GAAAtuC,EAAAsvB,EAAAiN,EAAA8R,QAIG,GAAAC,EAAA,CACH,IAAAE,EAjDA,SAAAlf,EAAAgf,GACA,IAAAG,EAAAR,GAAA3e,EAAA7jC,MACA+iD,EAAA,KAEA,QAAAn4B,IAAAo4B,GAAA,OAAAA,EAGA,OAFAD,EAAAF,EAAAhf,GACA2e,GAAA3e,EAAA7jC,QAAA6iD,EAAAE,IACAA,EAGA,QAAAzoE,EAAA,EAAiBA,EAAA0oE,EAAA/mE,OAAgB3B,IAAA,CACjC,IAAA2oE,EAAAD,EAAA1oE,GACA4oE,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAGAC,IAAAL,IAIAE,EAAAI,GAGA,OAAAJ,IACAA,EAAAF,EAAAhf,GACAmf,EAAAhoE,MAAA6nE,EAAAE,KAGA,OAAAA,EAqBAK,CAAAvf,EAAAgf,GAGA,IAAAE,EAAAb,UAEA,OADApR,EAAA91D,KAAA+nE,GACAL,EAAAnR,EAAAuR,EAAAvuC,EAAAsvB,EAAAiN,EAAA8R,GAGAG,EAAAb,UAAAr4D,KAA0B0nD,GAAA,SAAA9lB,EAAA43B,GAI1B,GAAA53B,EACA,OAAAi3B,EAAAnR,EAAAuR,EAAAvuC,EAAAsvB,EAAAiN,EAAA8R,GAIA9R,EAAA91D,KAAA+nE,GAIAL,EAAAW,EAAA9R,EAAAhtD,OAAA8+D,EAAA9+D,KAAAu+D,EAAAP,GAAAc,EAAA9+D,MAAAgwB,EAAAsvB,EAAAiN,EAAA8R,UAEGE,EAAA7mE,OACHymE,EAAAnR,EAAAuR,EAAAvuC,EAAAsvB,EAAAiN,EAAA8R,GACGA,EACHruC,EAAAg9B,EAAAT,GAEA4R,EAAAnR,EAAAgR,GAAA,KAAAhuC,EAAAsvB,EAAAiN,GAAA,GA9KA4R,CAAAnR,EAAAgR,GAAAhR,EAAAhtD,MAAAgwB,EAAAsvB,IACG,GA+BH,SAAAyf,GAAAX,EAAAxR,EAAAvkB,GACA,IAAA22B,EAAAp5D,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,QAEAq5D,EAAA,OAAAtc,GAAAta,GACA62B,EAAAd,EAAAl7B,OAAAi8B,GAAAF,GAAAD,GACAI,EAAAF,IAAAhB,GACAnxD,EAAAqyD,EAAA,KAAAxS,EAAAvkB,GAAA62B,GAIA,OAoCA,SAAAT,EAAAp2B,EAAAnnC,EAAAk+D,GACA,QAAArpE,EAAA0oE,EAAA/mE,OAAA,EAA8B3B,GAAA,EAAQA,IAAA,CACtC,IAAAyoE,EAAAC,EAAA1oE,GAEAyoE,EAAAn2B,IACAm2B,EAAAn2B,GAAA+2B,EAAAl+D,IA3CAm+D,CAAAjB,EAAA/1B,EAAAt7B,EAAAqyD,GAEAryD,EAGA,IAAAuyD,IACAnU,SAAA,EACA0L,YAAA,EACAr9D,SAAA,EACA+lE,SAAA,EACA5E,OAAA,EACAjM,OAAA,GAGA8Q,IACA5E,eAAA,GAGA6E,IACA1c,KAAA,EACA6L,MAAA,GAGA,SAAAuQ,GAAA92B,GACA,gBAAAnnC,EAAAs9D,GAEA,OAAAt9D,IAAAg9D,GACAA,GAGAM,EAAAn2B,GACAm2B,EAAAn2B,GAAAnnC,GAGAA,GA+GA,IAAAw+D,IACAC,KAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,aACAn0B,IAAA,YACAo0B,IAAA,YACAC,KAAA,yBAYAC,GAAA,WACA,IAAApT,EAAApnD,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEAy6D,EAAA7L,GAAAxH,GAGA,OAFA0S,GAAAW,EAAAl1D,gBAEA,IAyGA,SAAAm1D,GAAAtT,GACA,IAAAuT,EAAAH,GAAApT,OAMA,OAJAA,EAAAhtD,MAAAugE,IACAvT,EAAAhtD,KAAAugE,GAGAvT,EAcA,IAAAwT,GAAA,SAAA59D,GAeA,SAAA49D,EAAAlhB,EAAA36B,EAAAm+B,GACAvM,EAAA9zC,KAAA+9D,GAGA,IAAAvd,EAAAJ,IAAiChK,UAAA,GAAkBl0B,GAKnDjiB,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA2D,EAAAH,IAEA,GAAAn+B,EAAA2gC,cAAA5N,SAAA,IAAA/yB,EAAA2gC,cAAA5N,QAAAhgD,OAsBA4nD,EAAA0N,IAAAroC,EAAA2gC,cAAA5N,cArBA,QAAA3hD,EAAA,EAAA0qE,EAAA97C,EAAA2gC,cAAAob,UAA0D3qE,EAAA0qE,EAAA/oE,OAAc3B,IAAA,CACxE,IAAA4qE,EAAAhe,GAAA8d,EAAA1qE,IACA62D,EAAA1H,GAAAyX,QAAAgE,GASA,GALAA,IACA/T,EAAA1nD,GAAA0/C,aAAA+b,IAIA/T,KAAAgU,cAAA,CACAthB,EAAAuhB,UAAAF,GACA,OAUA,OAAAj+D,EAGA,OApDAi0C,EAAA6pB,EAAA59D,GAoDA49D,EArDA,CAsDCt7D,IAEDA,GAAAijD,kBAAA,cAAAqY,IAaA,IAAAM,GAAA,SAAAl+D,GAYA,SAAAk+D,EAAAxhB,EAAA36B,GACA4xB,EAAA9zC,KAAAq+D,GAEA,IAAAp+D,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAKA,OAHAjiB,EAAAqkD,gBAEArkD,EAAA0C,SACA1C,EAoPA,OAvQAi0C,EAAAmqB,EAAAl+D,GAuCAk+D,EAAA1/D,UAAAy3C,SAAA,WACA,IAAAphD,EAAAmO,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,SACArD,EAAAqD,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAmzC,EAAAnzC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEArD,EAAA+C,GACA2gB,UAAA,gEACAniB,UAAArB,KAAA+iD,gBACAnuC,SAAA,GACK9U,GAEL,WAAA9K,GACA4+C,EAAA/e,MAAA,yDAAA7/B,EAAA,4CAIAshD,EAAAzzC,GACAsoD,KAAA,UACK7U,GAELt2C,KAAAs+D,UAAAx+D,EAAA8U,SAEA,IAAAwgC,EAAAj1C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAAhL,EAAA8K,EAAAw2C,GAIA,OAFAt2C,KAAAu+D,oBAAAnpB,GAEAA,GAGAipB,EAAA1/D,UAAAuiD,QAAA,WAEAlhD,KAAAw+D,eAAA,KAEAr+D,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAcAq+D,EAAA1/D,UAAA4/D,oBAAA,SAAAnpB,GAcA,OAbAp1C,KAAAw+D,eAAApoB,EAAA,QACA/0C,UAAA,qBAGAo9D,YAAA,WAGArpB,GACAA,EAAA1xB,YAAA1jB,KAAAw+D,gBAGAx+D,KAAA4sD,YAAA5sD,KAAA0+D,aAAAtpB,GAEAp1C,KAAAw+D,gBAiBAH,EAAA1/D,UAAAiuD,YAAA,SAAAtqD,GACA,IAAA8yC,EAAAjyC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAAnD,KAAAo1C,KAEA,QAAAxR,IAAAthC,EACA,OAAAtC,KAAA0+D,cAAA,YAGA,IAAAC,EAAA3+D,KAAAmhD,SAAA7+C,GAEAtC,KAAA0+D,aAAAp8D,EACAwH,EAAA9J,KAAAw+D,eAAAG,GACA3+D,KAAA4+D,gBAEAxpB,EAAA3lC,aAAA,QAAAkvD,IAYAN,EAAA1/D,UAAAokD,cAAA,WACA,gCAAA5iD,EAAAxB,UAAAokD,cAAAlkD,KAAAmB,OAQAq+D,EAAA1/D,UAAAgE,OAAA,WACA3C,KAAA6+D,WACA7+D,KAAA6+D,UAAA,EACA7+D,KAAAo3C,YAAA,gBACAp3C,KAAA2gD,IAAAlxC,aAAA,8BACA,IAAAzP,KAAAs+D,WACAt+D,KAAA2gD,IAAAlxC,aAAA,WAAAzP,KAAAs+D,WAEAt+D,KAAAw7C,IAAA,eAAAx7C,KAAAkC,aACAlC,KAAAw7C,GAAA,QAAAx7C,KAAA8+D,aACA9+D,KAAAw7C,GAAA,OAAAx7C,KAAA++D,cASAV,EAAA1/D,UAAA00C,QAAA,WACArzC,KAAA6+D,UAAA,EACA7+D,KAAAk3C,SAAA,gBACAl3C,KAAA2gD,IAAAlxC,aAAA,6BACA,IAAAzP,KAAAs+D,WACAt+D,KAAA2gD,IAAAhtC,gBAAA,YAEA3T,KAAAgzC,KAAA,eAAAhzC,KAAAkC,aACAlC,KAAAgzC,IAAA,QAAAhzC,KAAA8+D,aACA9+D,KAAAgzC,IAAA,OAAAhzC,KAAA++D,aA2BAV,EAAA1/D,UAAAuD,YAAA,SAAA4tC,KAcAuuB,EAAA1/D,UAAAmgE,YAAA,SAAAhvB,GACA0L,GAAOvK,EAAA9vC,EAAQ,UAAAqe,GAAAxf,UAAA2rD,kBAcf0S,EAAA1/D,UAAAgtD,eAAA,SAAA7b,GAGA,KAAAA,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,OACA6iC,EAAAhlC,iBACA9K,KAAAuuC,QAAA,UACKpuC,EAAAxB,UAAAgtD,gBAGLxrD,EAAAxB,UAAAgtD,eAAA9sD,KAAAmB,KAAA8vC,IAeAuuB,EAAA1/D,UAAAogE,WAAA,SAAAjvB,GACAkD,GAAQ/B,EAAA9vC,EAAQ,UAAAqe,GAAAxf,UAAA2rD,kBAGhB0S,EAxQA,CAyQC57D,IAEDA,GAAAijD,kBAAA,qBAAA2Y,IAYA,IAAAW,GAAA,SAAAC,GAYA,SAAAD,EAAAniB,EAAA36B,GACA4xB,EAAA9zC,KAAAg/D,GAEA,IAAA/+D,EAAAw0C,EAAAz0C,KAAAi/D,EAAApgE,KAAAmB,KAAA68C,EAAA36B,IAIA,OAFAjiB,EAAAi/D,SACAriB,EAAArB,GAAA,eAAAh8B,GAAAvf,IAAAi/D,SACAj/D,EAsGA,OAxHAi0C,EAAA8qB,EAAAC,GA0BAD,EAAArgE,UAAAuiD,QAAA,WACAlhD,KAAA68C,SAAA7J,IAAA,eAAAhzC,KAAAk/D,QACAD,EAAAtgE,UAAAuiD,QAAAriD,KAAAmB,OAWAg/D,EAAArgE,UAAAy3C,SAAA,WAQA,OAPAA,EAAA,OACA/0C,UAAA,aAGAuT,UAAA,KAgBAoqD,EAAArgE,UAAAugE,OAAA,SAAApvB,GACA,IAAA9gC,EAAAhP,KAAA68C,SAAAsiB,SAEAn/D,KAAAo/D,OAAApwD,GAIAA,EACAhP,KAAAojD,OAEApjD,KAAAqjD,QAYA2b,EAAArgE,UAAAygE,OAAA,SAAApwD,GACA,IAAAqwD,EAAA,GAIArwD,IACAqwD,EAAA,QAAArwD,EAAA,MAGAhP,KAAA2gD,IAAAz3C,MAAAm2D,mBAgBAL,EAAArgE,UAAAuD,YAAA,SAAA4tC,GAEA9vC,KAAAugD,QAAA8L,aAIArsD,KAAAugD,QAAA0L,SACArC,GAAA5pD,KAAAugD,QAAAD,QAEAtgD,KAAAugD,QAAA4L,UAIA6S,EAzHA,CA0HCX,IAED57D,GAAAijD,kBAAA,cAAAsZ,IAMA,IAEAM,IACAC,UAAA,YACAC,UAAA,aACAC,MAAA,QACAC,mBAAA,6CACAC,eAAA,2BACAC,sBAAA,aACAC,kBAAA,QACAC,OAAA,mCACAvH,OAAA,8BACAwH,UAAA,0DAeA,SAAAC,GAAA5xD,EAAAwX,GACA,IAAAq6C,OAAA,EAEA,OAAA7xD,EAAAnZ,OAEAgrE,EAAA7xD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACG,QAAAA,EAAAnZ,OAIH,UAAA0O,MAAA,gCAAAyK,EAAA,gDAFA6xD,EAAA7xD,EAAAxP,MAAA,GAIA,cAAAklD,SAAAmc,EAAArhE,MAAA,aAAAklD,SAAAmc,EAAArhE,MAAA,aAAAklD,SAAAmc,EAAArhE,MAAA,aAAAgnB,EAAA,IAkBA,SAAAs6C,GAAA9qB,EAAAlsC,EAAAg7C,GACA,IACA9O,EAAAlsC,SAAAg7C,EACG,MAAA3gD,GAGH,QAUA,IAAA48D,GAAA,SAAAhgE,GAeA,SAAAggE,EAAAtjB,EAAA36B,EAAAm+B,GACAvM,EAAA9zC,KAAAmgE,GAEA,IAAAlgE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,EAAAm+B,IA0BA,OAxBAxD,EAAArB,GAAA,YAAAh8B,GAAAvf,IAAAmgE,gBACAvjB,EAAArB,GAAA,kBAAAh8B,GAAAvf,IAAA44D,gBACAhc,EAAArB,GAAA,YAAAh8B,GAAAvf,IAAAogE,iBAMAxjB,EAAAwD,MAAA7gC,GAAAvf,EAAA,WACA,GAAA48C,EAAAyW,OAAAzW,EAAAyW,MAAAkD,yBACAx2D,KAAAqjD,WADA,CAKAxG,EAAArB,GAAA,mBAAAh8B,GAAAxf,UAAA64D,gBAIA,IAFA,IAAAj2B,EAAA5iC,KAAAwgD,SAAAqC,cAAAjgB,WAEAtvC,EAAA,EAAqBA,EAAAsvC,EAAA3tC,OAAmB3B,IACxC0M,KAAAugD,QAAAmK,mBAAA9nB,EAAAtvC,IAAA,GAGA0M,KAAAqgE,qBAEApgE,EAgPA,OA3RAi0C,EAAAisB,EAAAhgE,GAyDAggE,EAAAxhE,UAAA0hE,eAAA,WAQA,IAPA,IAAAC,GAAiBhQ,SAAA,EAAAG,UAAA,GACjB8P,EAAAvgE,KAAAugD,QAAAiK,aACAgW,EAAAxgE,KAAAugD,QAAAkgB,OAAAC,iBACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAvtE,EAAA,EAAmBA,EAAAitE,EAAAtrE,OAAsB3B,IAAA,CACzC,IAAA00B,EAAAu4C,EAAAjtE,GAEAktE,KAAA3R,SAAA2R,EAAA7pE,WAAAqxB,EAAArxB,SAEAqxB,EAAAonC,OAAAoR,EAAApR,KACAyR,EAAA74C,EAES64C,IACTA,EAAA74C,GAIOw4C,MAAA3R,SACPgS,EAAA,KACAF,EAAA,KACAC,EAAA,MACO54C,EAAAgM,UACP,iBAAAhM,EAAAonC,MAAAuR,EAES34C,EAAAonC,QAAAkR,IAAAM,IACTA,EAAA54C,GAFA24C,EAAA34C,GAWA64C,EACAA,EAAA31C,KAAA,UACK01C,EACLA,EAAA11C,KAAA,UACKy1C,IACLA,EAAAz1C,KAAA,YAcAi1C,EAAAxhE,UAAAyhE,cAAA,WACApgE,KAAAugD,QAAA+S,OAAAtzD,KAAAugD,QAAA+S,MAAAkD,yBACAx2D,KAAAqjD,OAEArjD,KAAAojD,QAYA+c,EAAAxhE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,2BAEAo9D,YAAA,MACAqC,cAAA,UASAX,EAAAxhE,UAAAoiE,aAAA,WACuB,mBAARhwB,EAAA5vC,EAAQqxD,QACjBzhB,EAAA5vC,EAAQqxD,OAAAwO,YAAoBjwB,EAAA5vC,KAAQnB,KAAA2gD,MAa1Cwf,EAAAxhE,UAAAk6D,cAAA,WACA,IAAAj2B,EAAA5iC,KAAAugD,QAAAiK,aAEAxqD,KAAA+gE,eAUA,IAJA,IAAAE,EAAA,KACAC,EAAA,KACA5tE,EAAAsvC,EAAA3tC,OAEA3B,KAAA,CACA,IAAA00B,EAAA4a,EAAAtvC,GAEA,YAAA00B,EAAAkD,OACA,iBAAAlD,EAAAonC,KACA6R,EAAAj5C,EAEAk5C,EAAAl5C,GAKAk5C,GACA,QAAAlhE,KAAAg4C,aAAA,cACAh4C,KAAAyP,aAAA,mBAEAzP,KAAAmhE,eAAAD,IACKD,IACL,cAAAjhE,KAAAg4C,aAAA,cACAh4C,KAAAyP,aAAA,yBAEAzP,KAAAmhE,eAAAF,KAYAd,EAAAxhE,UAAAwiE,eAAA,SAAAn5C,GACA,GAAuB,mBAAR+oB,EAAA5vC,EAAQqxD,QAAAxqC,EAAA8rC,WAAvB,CAMA,IAFA,IAAA/J,KAEAf,EAAA,EAAoBA,EAAAhhC,EAAA8rC,WAAA7+D,OAA8B+zD,IAClDe,EAAA/1D,KAAAg0B,EAAA8rC,WAAA9K,IAKA,GAFIjY,EAAA5vC,EAAQqxD,OAAAwO,YAAoBjwB,EAAA5vC,EAAQ4oD,EAAA/pD,KAAA2gD,KAExC3gD,KAAAugD,QAAA6gB,kBAQA,IAJA,IAAAC,EAAArhE,KAAAugD,QAAA6gB,kBAAAE,YAEAhuE,EAAAy2D,EAAA90D,OAEA3B,KAAA,CACA,IAAA02D,EAAAD,EAAAz2D,GAEA,GAAA02D,EAAA,CAIA,IAAAuX,EAAAvX,EAAAwX,aAgCA,GA9BAH,EAAAjzD,QACAmzD,EAAArhD,WAAAhX,MAAAkF,MAAAizD,EAAAjzD,OAEAizD,EAAAI,aACAvB,GAAAqB,EAAArhD,WAAA,QAAA8/C,GAAAqB,EAAAjzD,OAAA,OAAAizD,EAAAI,cAEAJ,EAAAK,kBACAH,EAAArhD,WAAAhX,MAAAw4D,gBAAAL,EAAAK,iBAEAL,EAAAM,mBACAzB,GAAAqB,EAAArhD,WAAA,kBAAA8/C,GAAAqB,EAAAK,iBAAA,OAAAL,EAAAM,oBAEAN,EAAAO,cACAP,EAAAQ,cACA3B,GAAAqB,EAAA,kBAAAvB,GAAAqB,EAAAO,YAAAP,EAAAQ,gBAEAN,EAAAr4D,MAAAw4D,gBAAAL,EAAAO,aAGAP,EAAAS,YACA,eAAAT,EAAAS,UACAP,EAAArhD,WAAAhX,MAAA64D,WAAA,uDACS,WAAAV,EAAAS,UACTP,EAAArhD,WAAAhX,MAAA64D,WAAA,2CACS,cAAAV,EAAAS,UACTP,EAAArhD,WAAAhX,MAAA64D,WAAA,wDACS,YAAAV,EAAAS,YACTP,EAAArhD,WAAAhX,MAAA64D,WAAA,2DAGAV,EAAAW,aAAA,IAAAX,EAAAW,YAAA,CACA,IAAAC,EAAuBlxB,EAAA5vC,EAAQo3C,WAAAgpB,EAAAr4D,MAAA+4D,UAE/BV,EAAAr4D,MAAA+4D,WAAAZ,EAAAW,YAAA,KACAT,EAAAr4D,MAAAvW,OAAA,OACA4uE,EAAAr4D,MAAAuyB,IAAA,OACA8lC,EAAAr4D,MAAAg5D,OAAA,MAEAb,EAAAc,YAAA,YAAAd,EAAAc,aACA,eAAAd,EAAAc,WACAZ,EAAArhD,WAAAhX,MAAAk5D,YAAA,aAEAb,EAAArhD,WAAAhX,MAAAi5D,WAAA7C,GAAA+B,EAAAc,iBAMAhC,EA5RA,CA6RC19D,IAEDA,GAAAijD,kBAAA,mBAAAya,IAYA,IAAAkC,GAAA,SAAAliE,GAGA,SAAAkiE,IAEA,OADAvuB,EAAA9zC,KAAAqiE,GACA5tB,EAAAz0C,KAAAG,EAAAqE,MAAAxE,KAAAmD,YA2BA,OA/BA+wC,EAAAmuB,EAAAliE,GAaAkiE,EAAA1jE,UAAAy3C,SAAA,WACA,IAAAksB,EAAAtiE,KAAAugD,QAAA+hB,UACAC,EAAAviE,KAAAmhD,SAAAmhB,EAAA,+BACA1V,EAAAxW,EAAA,QACA/0C,UAAA,mBACAmiB,UAAAxjB,KAAAmhD,SAAA,mBAAmCohB,MAGnCntB,EAAAj1C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,sBACAmhE,IAAA,QAKA,OAFAptB,EAAA1xB,YAAAkpC,GAEAxX,GAGAitB,EAhCA,CAiCC5/D,IAEDA,GAAAijD,kBAAA,iBAAA2c,IAYA,IAAAI,GAAA,SAAAxD,GAGA,SAAAwD,IAEA,OADA3uB,EAAA9zC,KAAAyiE,GACAhuB,EAAAz0C,KAAAi/D,EAAAz6D,MAAAxE,KAAAmD,YAqHA,OAzHA+wC,EAAAuuB,EAAAxD,GAuBAwD,EAAA9jE,UAAAy3C,SAAA,SAAAphD,GACA,IAAA8K,EAAAqD,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAmzC,EAAAnzC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAIArD,EAAA+C,GACA2gB,UAAA,gEACAniB,UAAArB,KAAA+iD,iBACKjjD,GAGLw2C,EAAAzzC,GAGAtF,KAAA,UACK+4C,GAEL,IAAAlB,EAAA3yC,GAAA9D,UAAAy3C,SAAAv3C,KAAAmB,KAdA,SAcAF,EAAAw2C,GAIA,OAFAt2C,KAAAu+D,oBAAAnpB,GAEAA,GAqBAqtB,EAAA9jE,UAAAmjD,SAAA,SAAAzoC,GACA,IAAA6I,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEA9B,EAAArB,KAAA0G,YAAA1Q,KAKA,OAHA49C,EAAAV,KAAA,+DAAA7xC,EAAA,yDAGAoB,GAAA9D,UAAAmjD,SAAAjjD,KAAAmB,KAAAqZ,EAAA6I,IASAugD,EAAA9jE,UAAAgE,OAAA,WACAs8D,EAAAtgE,UAAAgE,OAAA9D,KAAAmB,MACAA,KAAA2gD,IAAAhtC,gBAAA,aASA8uD,EAAA9jE,UAAA00C,QAAA,WACA4rB,EAAAtgE,UAAA00C,QAAAx0C,KAAAmB,MACAA,KAAA2gD,IAAAlxC,aAAA,wBAcAgzD,EAAA9jE,UAAAgtD,eAAA,SAAA7b,GAGA,KAAAA,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,OAKAgyD,EAAAtgE,UAAAgtD,eAAA9sD,KAAAmB,KAAA8vC,IAGA2yB,EA1HA,CA2HCpE,IAED57D,GAAAijD,kBAAA,SAAA+c,IAaA,IAAAC,GAAA,SAAAC,GAGA,SAAAD,EAAA7lB,EAAA36B,GACA4xB,EAAA9zC,KAAA0iE,GAEA,IAAAziE,EAAAw0C,EAAAz0C,KAAA2iE,EAAA9jE,KAAAmB,KAAA68C,EAAA36B,IAKA,OAHAjiB,EAAA2iE,YAAA,EAEA3iE,EAAAu7C,GAAA,YAAAv7C,EAAA4iE,iBACA5iE,EAkEA,OA5EAi0C,EAAAwuB,EAAAC,GAqBAD,EAAA/jE,UAAAokD,cAAA,WACA,6BAgBA2f,EAAA/jE,UAAAuD,YAAA,SAAA4tC,GACA,IAAAgzB,EAAA9iE,KAAAugD,QAAAD,OAGA,GAAAtgD,KAAA4iE,YAAA9yB,EAAA94B,SAAA84B,EAAA74B,QACA2yC,GAAAkZ,OADA,CAKA,IAAAx5D,EAAAtJ,KAAAugD,QAAAsB,SAAA,cACAkhB,EAAAz5D,KAAAu4C,SAAA,cAEA,GAAAkhB,EAAA,CAKA,IAAAC,EAAA,WACA,OAAAD,EAAAx6C,SAGAohC,GAAAmZ,GACAA,EAAA/wD,KAAAixD,EAAA,cAEAhjE,KAAA80B,WAAAkuC,EAAA,QAXAhjE,KAAAugD,QAAAh4B,UAeAm6C,EAAA/jE,UAAAgtD,eAAA,SAAA7b,GACA9vC,KAAA4iE,YAAA,EAEAD,EAAAhkE,UAAAgtD,eAAA9sD,KAAAmB,KAAA8vC,IAGA4yB,EAAA/jE,UAAAkkE,gBAAA,SAAA/yB,GACA9vC,KAAA4iE,YAAA,GAGAF,EA7EA,CA8ECD,IAUDC,GAAA/jE,UAAA+/D,aAAA,aAEAj8D,GAAAijD,kBAAA,gBAAAgd,IAaA,IAAAO,GAAA,SAAAN,GAYA,SAAAM,EAAApmB,EAAA36B,GACA4xB,EAAA9zC,KAAAijE,GAEA,IAAAhjE,EAAAw0C,EAAAz0C,KAAA2iE,EAAA9jE,KAAAmB,KAAA68C,EAAA36B,IAGA,OADAjiB,EAAA2sD,YAAA1qC,KAAA0qC,aAAA3sD,EAAAkhD,SAAA,UACAlhD,EA6CA,OA9DAi0C,EAAA+uB,EAAAN,GA4BAM,EAAAtkE,UAAAokD,cAAA,WACA,0BAAA4f,EAAAhkE,UAAAokD,cAAAlkD,KAAAmB,OAkBAijE,EAAAtkE,UAAAuD,YAAA,SAAA4tC,GAYA9vC,KAAAuuC,SAAkBhxC,KAAA,QAAA4N,SAAA,KAGlB83D,EA/DA,CAgECR,IAEDhgE,GAAAijD,kBAAA,cAAAud,IAYA,IAAAC,GAAA,SAAAP,GAYA,SAAAO,EAAArmB,EAAA36B,GACA4xB,EAAA9zC,KAAAkjE,GAEA,IAAAjjE,EAAAw0C,EAAAz0C,KAAA2iE,EAAA9jE,KAAAmB,KAAA68C,EAAA36B,IAKA,OAHAjiB,EAAAu7C,GAAAqB,EAAA,OAAA58C,EAAAkjE,YACAljE,EAAAu7C,GAAAqB,EAAA,QAAA58C,EAAAmjE,aACAnjE,EAAAu7C,GAAAqB,EAAA,QAAA58C,EAAAojE,aACApjE,EAgHA,OAnIAi0C,EAAAgvB,EAAAP,GA8BAO,EAAAvkE,UAAAokD,cAAA,WACA,0BAAA4f,EAAAhkE,UAAAokD,cAAAlkD,KAAAmB,OAgBAkjE,EAAAvkE,UAAAuD,YAAA,SAAA4tC,GACA9vC,KAAAugD,QAAA0L,SACAjsD,KAAAugD,QAAAD,OAEAtgD,KAAAugD,QAAA4L,SAeA+W,EAAAvkE,UAAA2kE,aAAA,SAAAxzB,GACA9vC,KAAAo3C,YAAA,aAEAp3C,KAAAugD,QAAA0L,SACAjsD,KAAAojE,YAAAtzB,GAEA9vC,KAAAmjE,WAAArzB,IAcAozB,EAAAvkE,UAAAwkE,WAAA,SAAArzB,GACA9vC,KAAAo3C,YAAA,aACAp3C,KAAAo3C,YAAA,cACAp3C,KAAAk3C,SAAA,eAEAl3C,KAAA4sD,YAAA,UAaAsW,EAAAvkE,UAAAykE,YAAA,SAAAtzB,GACA9vC,KAAAo3C,YAAA,eACAp3C,KAAAk3C,SAAA,cAEAl3C,KAAA4sD,YAAA,SAaAsW,EAAAvkE,UAAA0kE,YAAA,SAAAvzB,GACA9vC,KAAAo3C,YAAA,eACAp3C,KAAAk3C,SAAA,aAEAl3C,KAAA4sD,YAAA,UAGA5sD,KAAAi8C,IAAAj8C,KAAAugD,QAAA,SAAAvgD,KAAAsjE,eAGAJ,EApIA,CAqICT,IAUDS,GAAAvkE,UAAA+/D,aAAA,OAEAj8D,GAAAijD,kBAAA,aAAAwd,IAoBA,IAAAK,GAAA,SAAAlyE,EAAAmyE,GACAnyE,IAAA,IAAAA,EACA,IAAAoyE,EAAAhpE,KAAA+oC,MAAAnyC,EAAA,IACAoT,EAAAhK,KAAA+oC,MAAAnyC,EAAA,OACAqS,EAAAjJ,KAAA+oC,MAAAnyC,EAAA,MACAqyE,EAAAjpE,KAAA+oC,MAAAggC,EAAA,OACAxqC,EAAAv+B,KAAA+oC,MAAAggC,EAAA,MAmBA,OAhBAjwD,MAAAliB,QAAAyvC,OAGAp9B,EAAAe,EAAAg/D,EAAA,MAIA//D,IAAA,GAAAs1B,EAAA,EAAAt1B,EAAA,SAIAe,IAAAf,GAAAggE,GAAA,KAAAj/D,EAAA,OAAAA,KAAA,MAGAg/D,IAAA,OAAAA,MAKAz3C,GAAAu3C,GAoBA,SAAAI,GAAAtyE,GACA,IAAAmyE,EAAArgE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAA9R,EAEA,OAAA26B,GAAA36B,EAAAmyE,GAaA,IAAAI,GAAA,SAAAzjE,GAYA,SAAAyjE,EAAA/mB,EAAA36B,GACA4xB,EAAA9zC,KAAA4jE,GAEA,IAAA3jE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAIA,OAFAjiB,EAAA4jE,uBAAAvmB,GAAA99B,GAAAvf,IAAA6jE,eAAA,IACA7jE,EAAAu7C,GAAAqB,EAAA,aAAA58C,EAAA4jE,wBACA5jE,EA8GA,OAhIAi0C,EAAA0vB,EAAAzjE,GA6BAyjE,EAAAjlE,UAAAy3C,SAAA,SAAA2tB,GACA,IAAA1iE,EAAArB,KAAA+iD,gBACA3N,EAAAj1C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,YAAA,gCACAmiB,UAAA,kCAAAxjB,KAAAmhD,SAAAnhD,KAAAgkE,YAAA,aAYA,OATAhkE,KAAA2hD,WAAAvL,EAAA,QACA/0C,YAAA,aAGAo9D,YAAA,QAGAz+D,KAAAikE,kBACA7uB,EAAA1xB,YAAA1jB,KAAA2hD,YACAvM,GAGAwuB,EAAAjlE,UAAAuiD,QAAA,WACAlhD,KAAA2hD,WAAA,KACA3hD,KAAAkkE,UAAA,KAEA/jE,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAWA4jE,EAAAjlE,UAAAslE,gBAAA,WACA,GAAAjkE,KAAA2hD,WAAA,CAIA,KAAA3hD,KAAA2hD,WAAAzhC,YACAlgB,KAAA2hD,WAAAl+B,YAAAzjB,KAAA2hD,WAAAzhC,YAGAlgB,KAAAkkE,UAAqBjzB,EAAA9vC,EAAQg2B,eAAAn3B,KAAAmkE,gBAAAnkE,KAAAokE,YAAA,IAC7BpkE,KAAA2hD,WAAAj+B,YAAA1jB,KAAAkkE,aAgBAN,EAAAjlE,UAAAylE,YAAA,SAAAr1D,GACA,OAAA40D,GAAA50D,IAcA60D,EAAAjlE,UAAA0lE,qBAAA,SAAAt1D,GACA,IAAAu1D,EAAAtkE,KAAAokE,YAAAr1D,GAEAu1D,IAAAtkE,KAAAmkE,iBAIAnkE,KAAAmkE,eAAAG,EACAtkE,KAAAywC,sBAAAzwC,KAAAikE,mBAcAL,EAAAjlE,UAAAmlE,cAAA,SAAAh0B,KAEA8zB,EAjIA,CAkICnhE,IAUDmhE,GAAAjlE,UAAAqlE,WAAA,OAUAJ,GAAAjlE,UAAA+/D,aAAA,OAEAj8D,GAAAijD,kBAAA,cAAAke,IAYA,IAAAW,GAAA,SAAAC,GAYA,SAAAD,EAAA1nB,EAAA36B,GACA4xB,EAAA9zC,KAAAukE,GAEA,IAAAtkE,EAAAw0C,EAAAz0C,KAAAwkE,EAAA3lE,KAAAmB,KAAA68C,EAAA36B,IAGA,OADAjiB,EAAAu7C,GAAAqB,EAAA,QAAA58C,EAAAojE,aACApjE,EAmDA,OApEAi0C,EAAAqwB,EAAAC,GA4BAD,EAAA5lE,UAAAokD,cAAA,WACA,0BAaAwhB,EAAA5lE,UAAAmlE,cAAA,SAAAh0B,GAEA,IAAA/gC,EAAA/O,KAAAugD,QAAAkkB,YAAAzkE,KAAAugD,QAAAmkB,WAAAtQ,YAAAp0D,KAAAugD,QAAA6T,cAEAp0D,KAAAqkE,qBAAAt1D,IAeAw1D,EAAA5lE,UAAA0kE,YAAA,SAAAvzB,GACA9vC,KAAAugD,QAAAxpD,YAGAiJ,KAAAqkE,qBAAArkE,KAAAugD,QAAAxpD,aAGAwtE,EArEA,CAsECX,IAUDW,GAAA5lE,UAAAqlE,WAAA,eAUAO,GAAA5lE,UAAA+/D,aAAA,eAEAj8D,GAAAijD,kBAAA,qBAAA6e,IAYA,IAAAI,GAAA,SAAAH,GAYA,SAAAG,EAAA9nB,EAAA36B,GACA4xB,EAAA9zC,KAAA2kE,GAKA,IAAA1kE,EAAAw0C,EAAAz0C,KAAAwkE,EAAA3lE,KAAAmB,KAAA68C,EAAA36B,IAQA,OANAjiB,EAAAu7C,GAAAqB,EAAA,iBAAA58C,EAAA6jE,eAKA7jE,EAAAu7C,GAAAqB,EAAA,iBAAA58C,EAAA4jE,wBACA5jE,EAqCA,OA9DAi0C,EAAAywB,EAAAH,GAoCAG,EAAAhmE,UAAAokD,cAAA,WACA,sBAgBA4hB,EAAAhmE,UAAAmlE,cAAA,SAAAh0B,GACA,IAAA/4C,EAAAiJ,KAAAugD,QAAAxpD,WAEAA,GAAAiJ,KAAAs3D,YAAAvgE,IACAiJ,KAAAs3D,UAAAvgE,EACAiJ,KAAAqkE,qBAAAttE,KAIA4tE,EA/DA,CAgECf,IAUDe,GAAAhmE,UAAAqlE,WAAA,WAUAW,GAAAhmE,UAAA+/D,aAAA,WAEAj8D,GAAAijD,kBAAA,kBAAAif,IAaA,IAAAC,GAAA,SAAAzkE,GAGA,SAAAykE,IAEA,OADA9wB,EAAA9zC,KAAA4kE,GACAnwB,EAAAz0C,KAAAG,EAAAqE,MAAAxE,KAAAmD,YAgBA,OApBA+wC,EAAA0wB,EAAAzkE,GAaAykE,EAAAjmE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,oCACAmiB,UAAA,+BAIAohD,EArBA,CAsBCniE,IAEDA,GAAAijD,kBAAA,cAAAkf,IAWA,IAAAC,GAAA,SAAAL,GAYA,SAAAK,EAAAhoB,EAAA36B,GACA4xB,EAAA9zC,KAAA6kE,GAEA,IAAA5kE,EAAAw0C,EAAAz0C,KAAAwkE,EAAA3lE,KAAAmB,KAAA68C,EAAA36B,IAIA,OAFAjiB,EAAAu7C,GAAAqB,EAAA,iBAAA58C,EAAA4jE,wBACA5jE,EAAAu7C,GAAAqB,EAAA,QAAA58C,EAAAojE,aACApjE,EA6EA,OA/FAi0C,EAAA2wB,EAAAL,GA6BAK,EAAAlmE,UAAAokD,cAAA,WACA,4BAgBA8hB,EAAAlmE,UAAAylE,YAAA,SAAAr1D,GAEA,UAAAy1D,EAAA7lE,UAAAylE,YAAAvlE,KAAAmB,KAAA+O,IAcA81D,EAAAlmE,UAAAmlE,cAAA,SAAAh0B,GACA9vC,KAAAugD,QAAAxpD,aAMAiJ,KAAAugD,QAAAukB,qBACA9kE,KAAAqkE,qBAAArkE,KAAAugD,QAAAukB,wBAEA9kE,KAAAqkE,qBAAArkE,KAAAugD,QAAAwkB,mBAgBAF,EAAAlmE,UAAA0kE,YAAA,SAAAvzB,GACA9vC,KAAAugD,QAAAxpD,YAGAiJ,KAAAqkE,qBAAA,IAGAQ,EAhGA,CAiGCjB,IAUDiB,GAAAlmE,UAAAqlE,WAAA,iBAUAa,GAAAlmE,UAAA+/D,aAAA,iBAEAj8D,GAAAijD,kBAAA,uBAAAmf,IAcA,IAAAG,GAAA,SAAA7kE,GAYA,SAAA6kE,EAAAnoB,EAAA36B,GACA4xB,EAAA9zC,KAAAglE,GAEA,IAAA/kE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAIA,OAFAjiB,EAAAglE,gBACAhlE,EAAAu7C,GAAAv7C,EAAA48C,SAAA,iBAAA58C,EAAAglE,eACAhlE,EAoDA,OAtEAi0C,EAAA8wB,EAAA7kE,GA6BA6kE,EAAArmE,UAAAy3C,SAAA,WACA,IAAAhB,EAAAj1C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,iCAWA,OARArB,KAAA2hD,WAAAvL,EAAA,OACA/0C,UAAA,mBACAmiB,UAAA,kCAAAxjB,KAAAmhD,SAAA,0BAAAnhD,KAAAmhD,SAAA,UAEAsd,YAAA,QAGArpB,EAAA1xB,YAAA1jB,KAAA2hD,YACAvM,GAGA4vB,EAAArmE,UAAAuiD,QAAA,WACAlhD,KAAA2hD,WAAA,KAEAxhD,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAcAglE,EAAArmE,UAAAsmE,cAAA,SAAAn1B,GACA9vC,KAAA68C,SAAA9lD,aAAA+pC,IACA9gC,KAAAojD,OAEApjD,KAAAqjD,QAIA2hB,EAvEA,CAwECviE,IAEDA,GAAAijD,kBAAA,cAAAsf,IAaA,IAAAE,GAAA,SAAA/kE,GAYA,SAAA+kE,EAAAroB,EAAA36B,GACA4xB,EAAA9zC,KAAAklE,GAGA,IAAAjlE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAQA,OANAjiB,EAAAklE,IAAAllE,EAAA4hD,SAAA5hD,EAAAugD,SAAA4kB,SAGAnlE,EAAAolE,WAAAplE,EAAAugD,SAAA6kB,UAEAplE,EAAA0C,SACA1C,EAmXA,OA1YAi0C,EAAAgxB,EAAA/kE,GAkCA+kE,EAAAvmE,UAAAkwD,QAAA,WACA,OAAA7uD,KAAA6+D,UAQAqG,EAAAvmE,UAAAgE,OAAA,WACA3C,KAAA6uD,YAIA7uD,KAAAw7C,GAAA,YAAAx7C,KAAA6iE,iBACA7iE,KAAAw7C,GAAA,aAAAx7C,KAAA6iE,iBACA7iE,KAAAw7C,GAAA,QAAAx7C,KAAA8+D,aACA9+D,KAAAw7C,GAAA,OAAAx7C,KAAA++D,YACA/+D,KAAAw7C,GAAA,QAAAx7C,KAAAkC,aAEAlC,KAAAw7C,GAAAx7C,KAAAugD,QAAA,kBAAAvgD,KAAAk/D,QAEAl/D,KAAAslE,aACAtlE,KAAAw7C,GAAAx7C,KAAAugD,QAAAvgD,KAAAslE,YAAAtlE,KAAAk/D,QAGAl/D,KAAAo3C,YAAA,YACAp3C,KAAAyP,aAAA,cAEAzP,KAAA6+D,UAAA,IAQAqG,EAAAvmE,UAAA00C,QAAA,WACA,GAAArzC,KAAA6uD,UAAA,CAGA,IAAAzT,EAAAp7C,KAAAmlE,IAAAxkB,IAAAjsC,cAEA1U,KAAAgzC,IAAA,YAAAhzC,KAAA6iE,iBACA7iE,KAAAgzC,IAAA,aAAAhzC,KAAA6iE,iBACA7iE,KAAAgzC,IAAA,QAAAhzC,KAAA8+D,aACA9+D,KAAAgzC,IAAA,OAAAhzC,KAAA++D,YACA/+D,KAAAgzC,IAAA,QAAAhzC,KAAAkC,aACAlC,KAAAgzC,IAAAhzC,KAAAugD,QAAA,kBAAAvgD,KAAAk/D,QACAl/D,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAAulE,iBACAvlE,KAAAgzC,IAAAoI,EAAA,UAAAp7C,KAAAwlE,eACAxlE,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAAulE,iBACAvlE,KAAAgzC,IAAAoI,EAAA,WAAAp7C,KAAAwlE,eACAxlE,KAAA2T,gBAAA,YAEA3T,KAAAk3C,SAAA,YAEAl3C,KAAAslE,aACAtlE,KAAAgzC,IAAAhzC,KAAAugD,QAAAvgD,KAAAslE,YAAAtlE,KAAAk/D,QAEAl/D,KAAA6+D,UAAA,IAoBAqG,EAAAvmE,UAAAy3C,SAAA,SAAA74C,GACA,IAAAuC,EAAAqD,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAmzC,EAAAnzC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAgBA,OAbArD,EAAAuB,UAAAvB,EAAAuB,UAAA,cACAvB,EAAA+C,GACA+R,SAAA,GACK9U,GAELw2C,EAAAzzC,GACAsoD,KAAA,SACAsa,gBAAA,EACAC,gBAAA,EACAC,gBAAA,IACA/wD,SAAA,GACK0hC,GAELn2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAAzC,EAAAuC,EAAAw2C,IAeA4uB,EAAAvmE,UAAAkkE,gBAAA,SAAA/yB,GACA,IAAAsL,EAAAp7C,KAAAmlE,IAAAxkB,IAAAjsC,cAEA,cAAAo7B,EAAAvyC,MACAuyC,EAAAhlC,iBAMA,eAAAglC,EAAAvyC,MAAAgqD,IACAzX,EAAAhlC,iBAEAotC,KAEAl4C,KAAAk3C,SAAA,eAOAl3C,KAAAuuC,QAAA,gBAEAvuC,KAAAw7C,GAAAJ,EAAA,YAAAp7C,KAAAulE,iBACAvlE,KAAAw7C,GAAAJ,EAAA,UAAAp7C,KAAAwlE,eACAxlE,KAAAw7C,GAAAJ,EAAA,YAAAp7C,KAAAulE,iBACAvlE,KAAAw7C,GAAAJ,EAAA,WAAAp7C,KAAAwlE,eAEAxlE,KAAAulE,gBAAAz1B,IAkBAo1B,EAAAvmE,UAAA4mE,gBAAA,SAAAz1B,KAcAo1B,EAAAvmE,UAAA6mE,cAAA,WACA,IAAApqB,EAAAp7C,KAAAmlE,IAAAxkB,IAAAjsC,cAEA0jC,KAEAp4C,KAAAo3C,YAAA,eAOAp3C,KAAAuuC,QAAA,kBAEAvuC,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAAulE,iBACAvlE,KAAAgzC,IAAAoI,EAAA,UAAAp7C,KAAAwlE,eACAxlE,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAAulE,iBACAvlE,KAAAgzC,IAAAoI,EAAA,WAAAp7C,KAAAwlE,eAEAxlE,KAAAk/D,UAYAgG,EAAAvmE,UAAAugE,OAAA,WAKA,GAAAl/D,KAAA2gD,IAAA,CAQA,IAAAilB,EAAA5lE,KAAA6lE,aACAV,EAAAnlE,KAAAmlE,IAGA,GAAAA,EAAA,EAKA,iBAAAS,WAAA,GAAAA,IAAA9kC,OACA8kC,EAAA,GAIA,IAAAE,GAAA,IAAAF,GAAAG,QAAA,OACA78D,EAAAi8D,EAAA/vB,KAAAlsC,MASA,OANAlJ,KAAAqlE,WACAn8D,EAAAvW,OAAAmzE,EAEA58D,EAAAxW,MAAAozE,EAGAF,KAgBAV,EAAAvmE,UAAAqnE,kBAAA,SAAAl2B,GACA,IAAA/H,EAAAgR,GAAA/4C,KAAA2gD,IAAA7Q,GAEA,OAAA9vC,KAAAqlE,WACAt9B,EAAAlN,EAEAkN,EAAA7V,GAaAgzC,EAAAvmE,UAAAmgE,YAAA,WACA9+D,KAAAw7C,GAAAx7C,KAAAmlE,IAAAxkB,IAAAjsC,cAAA,UAAA1U,KAAA2rD,iBAeAuZ,EAAAvmE,UAAAgtD,eAAA,SAAA7b,GAEA,KAAAA,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,OACA6iC,EAAAhlC,iBACA9K,KAAAimE,YAGK,KAAAn2B,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,QACL6iC,EAAAhlC,iBACA9K,KAAAkmE,gBAaAhB,EAAAvmE,UAAAogE,WAAA,WACA/+D,KAAAgzC,IAAAhzC,KAAAmlE,IAAAxkB,IAAAjsC,cAAA,UAAA1U,KAAA2rD,iBAYAuZ,EAAAvmE,UAAAuD,YAAA,SAAA4tC,GACAA,EAAAoL,2BACApL,EAAAhlC,kBAgBAo6D,EAAAvmE,UAAA0mE,SAAA,SAAAc,GACA,QAAAviC,IAAAuiC,EACA,OAAAnmE,KAAAomE,YAAA,EAGApmE,KAAAomE,YAAAD,EAEAnmE,KAAAomE,UACApmE,KAAAk3C,SAAA,uBAEAl3C,KAAAk3C,SAAA,0BAIAguB,EA3YA,CA4YCziE,IAEDA,GAAAijD,kBAAA,SAAAwf,IAYA,IAAAmB,GAAA,SAAAlmE,GAYA,SAAAkmE,EAAAxpB,EAAA36B,GACA4xB,EAAA9zC,KAAAqmE,GAEA,IAAApmE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAIA,OAFAjiB,EAAAqmE,YACArmE,EAAAu7C,GAAAqB,EAAA,WAAA58C,EAAAi/D,QACAj/D,EA0EA,OA5FAi0C,EAAAmyB,EAAAlmE,GA6BAkmE,EAAA1nE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,oBACAmiB,UAAA,wCAAAxjB,KAAAmhD,SAAA,kCAIAklB,EAAA1nE,UAAAuiD,QAAA,WACAlhD,KAAAsmE,SAAA,KAEAnmE,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAaAqmE,EAAA1nE,UAAAugE,OAAA,SAAApvB,GACA,IAAA4Y,EAAA1oD,KAAAugD,QAAAmI,WACA3xD,EAAAiJ,KAAAugD,QAAAxpD,WACAwvE,EAAAvmE,KAAAugD,QAAAgmB,cACAzkD,EAAA9hB,KAAAsmE,SAGAE,EAAA,SAAAz3D,EAAAvR,GAEA,IAAAipE,EAAA13D,EAAAvR,GAAA,EAEA,YAAAipE,GAAA,IAAAA,GAAA,KAIAzmE,KAAA2gD,IAAAz3C,MAAAxW,MAAA8zE,EAAAD,EAAAxvE,GAGA,QAAAzD,EAAA,EAAmBA,EAAAo1D,EAAAzzD,OAAqB3B,IAAA,CACxC,IAAA6tB,EAAAunC,EAAAvnC,MAAA7tB,GACAkK,EAAAkrD,EAAAlrD,IAAAlK,GACAozE,EAAA5kD,EAAAxuB,GAEAozE,IACAA,EAAA1mE,KAAA2gD,IAAAj9B,YAAA0yB,KACAt0B,EAAAxuB,GAAAozE,GAIAA,EAAAx9D,MAAAqyB,KAAAirC,EAAArlD,EAAAolD,GACAG,EAAAx9D,MAAAxW,MAAA8zE,EAAAhpE,EAAA2jB,EAAAolD,GAIA,QAAAvd,EAAAlnC,EAAA7sB,OAAkC+zD,EAAAN,EAAAzzD,OAAsB+zD,IACxDhpD,KAAA2gD,IAAAl9B,YAAA3B,EAAAknC,EAAA,IAEAlnC,EAAA7sB,OAAAyzD,EAAAzzD,QAGAoxE,EA7FA,CA8FC5jE,IAEDA,GAAAijD,kBAAA,kBAAA2gB,IAYA,IAAAM,GAAA,SAAAxmE,GAGA,SAAAwmE,IAEA,OADA7yB,EAAA9zC,KAAA2mE,GACAlyB,EAAAz0C,KAAAG,EAAAqE,MAAAxE,KAAAmD,YA2EA,OA/EA+wC,EAAAyyB,EAAAxmE,GAaAwmE,EAAAhoE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,sBAgBAslE,EAAAhoE,UAAAugE,OAAA,SAAA0H,EAAAC,EAAAtwB,GACA,IAAAuwB,EAAAzuB,GAAAr4C,KAAA2gD,KACAomB,EAAA1uB,GAAAr4C,KAAAugD,QAAAnL,MACA4xB,EAAAJ,EAAAl0E,MAAAm0E,EAIA,GAAAE,GAAAD,EAAA,CAQA,IAAAG,EAAAL,EAAArrC,KAAAwrC,EAAAxrC,KAAAyrC,EAMAE,EAAAN,EAAAl0E,MAAAs0E,GAAAD,EAAAI,MAAAP,EAAAO,OAIAC,EAAAN,EAAAp0E,MAAA,EAIAu0E,EAAAG,EACAA,KAAAH,EACKC,EAAAE,IACLA,EAAAF,GAMAE,EAAA,EACAA,EAAA,EACKA,EAAAN,EAAAp0E,QACL00E,EAAAN,EAAAp0E,OAGAsN,KAAA2gD,IAAAz3C,MAAAi+D,MAAA,IAAAC,EAAA,KACAt9D,EAAA9J,KAAA2gD,IAAApK,KAGAowB,EAhFA,CAiFClkE,IAEDA,GAAAijD,kBAAA,cAAAihB,IAaA,IAAAU,GAAA,SAAAlnE,GAGA,SAAAknE,IAEA,OADAvzB,EAAA9zC,KAAAqnE,GACA5yB,EAAAz0C,KAAAG,EAAAqE,MAAAxE,KAAAmD,YAiDA,OArDA+wC,EAAAmzB,EAAAlnE,GAaAknE,EAAA1oE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,mCACAmiB,UAAA,wCAAAxjB,KAAAmhD,SAAA,oCAiBAkmB,EAAA1oE,UAAAugE,OAAA,SAAA0H,EAAAC,GACA,IAAA5lE,EAAAjB,KAGAA,KAAAsnE,QACAtnE,KAAAylD,qBAAAzlD,KAAAsnE,QAGAtnE,KAAAsnE,OAAAtnE,KAAAywC,sBAAA,WACA,IAEA8F,EAAAotB,GAFA1iE,EAAAs/C,QAAAkkB,YAAAxjE,EAAAs/C,QAAAmkB,WAAAtQ,YAAAnzD,EAAAs/C,QAAA6T,cAEAnzD,EAAAs/C,QAAAxpD,YACAwwE,EAAAtmE,EAAA4gD,SAAA,eAEA0lB,GACAA,EAAArI,OAAA0H,EAAAC,EAAAtwB,MAKA8wB,EAtDA,CAuDC5kE,IAUD4kE,GAAA1oE,UAAA6hD,UACA1+B,aAIAglC,IAAAE,IACAqgB,GAAA1oE,UAAA6hD,SAAA1+B,SAAA9tB,KAAA,eAGAyO,GAAAijD,kBAAA,kBAAA2hB,IAeA,IAAAG,GAAA,SAAArnE,GAYA,SAAAqnE,EAAA3qB,EAAA36B,GACA4xB,EAAA9zC,KAAAwnE,GAEA,IAAAvnE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAGA,OADAjiB,EAAAi/D,OAAA5hB,GAAA99B,GAAAvf,IAAAi/D,QAAA,IACAj/D,EA+CA,OAhEAi0C,EAAAszB,EAAArnE,GA4BAqnE,EAAA7oE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,uBAiBAmmE,EAAA7oE,UAAAugE,OAAA,SAAA0H,EAAAC,GACA,IAAA5lE,EAAAjB,KAGAA,KAAAsnE,QACAtnE,KAAAylD,qBAAAzlD,KAAAsnE,QAGAtnE,KAAAsnE,OAAAtnE,KAAAywC,sBAAA,WACA,IAAA15C,EAAAkK,EAAAs/C,QAAAxpD,WACAw/C,EAAAotB,GAAAkD,EAAA9vE,KAEAkK,EAAA0/C,IAAAz3C,MAAAqyB,KAAAqrC,EAAAl0E,MAAAm0E,EAAA,KACA5lE,EAAA4gD,SAAA,eAAAqd,OAAA0H,EAAAC,EAAAtwB,MAIAixB,EAjEA,CAkEC/kE,IAUD+kE,GAAA7oE,UAAA6hD,UACA1+B,UAAA,gBAGArf,GAAAijD,kBAAA,mBAAA8hB,IAOA,IAYAC,GAAA,SAAAC,GAYA,SAAAD,EAAA5qB,EAAA36B,GACA4xB,EAAA9zC,KAAAynE,GAEA,IAAAxnE,EAAAw0C,EAAAz0C,KAAA0nE,EAAA7oE,KAAAmB,KAAA68C,EAAA36B,IAGA,OADAjiB,EAAA0nE,oBACA1nE,EAuTA,OAxUAi0C,EAAAuzB,EAAAC,GA2BAD,EAAA9oE,UAAAgpE,kBAAA,WACA,IAAA1mE,EAAAjB,KAEAA,KAAAk/D,OAAA5hB,GAAA99B,GAAAxf,UAAAk/D,QAxCA,IA0CAl/D,KAAAw7C,GAAAx7C,KAAAugD,QAAA,aAAAvgD,KAAAk/D,QACAl/D,KAAAw7C,GAAAx7C,KAAAugD,QAAA,QAAAvgD,KAAAqjE,aAIArjE,KAAA4nE,eAAA,KAEA5nE,KAAAw7C,GAAAx7C,KAAAugD,SAAA,sBACAt/C,EAAA0sC,cAAA1sC,EAAA2mE,gBAEA3mE,EAAA2mE,eAAA3mE,EAAAysC,YAAA,WACAzsC,EAAAwvC,sBAAA,WACAxvC,EAAAi+D,YAtDA,MA2DAl/D,KAAAw7C,GAAAx7C,KAAAugD,SAAA,sCACAt/C,EAAA0sC,cAAA1sC,EAAA2mE,kBAGA5nE,KAAAw7C,GAAAx7C,KAAAugD,SAAA,sBAAAvgD,KAAAk/D,SAWAuI,EAAA9oE,UAAAy3C,SAAA,WACA,OAAAsxB,EAAA/oE,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,wBAEAmqD,aAAAxrD,KAAAmhD,SAAA,mBAkBAsmB,EAAA9oE,UAAAkpE,QAAA,SAAAzT,EAAAqS,GACA,IAAA1vE,EAAAiJ,KAAAugD,QAAAxpD,WAGAiJ,KAAA2gD,IAAAlxC,aAAA,qBAAAg3D,GAAAV,QAAA,IAGA/lE,KAAA2gD,IAAAlxC,aAAA,iBAAAzP,KAAAmhD,SAAA,qDAA4GwiB,GAAAvP,EAAAr9D,GAAA4sE,GAAA5sE,MAAA,eAG5GiJ,KAAAmlE,IAAAjG,OAAA7mB,GAAAr4C,KAAA2gD,KAAA8lB,IAgBAgB,EAAA9oE,UAAAugE,OAAA,SAAApvB,GACA,IAAA22B,EAAAiB,EAAA/oE,UAAAugE,OAAArgE,KAAAmB,MAGA,OADAA,KAAA6nE,QAAA7nE,KAAA8nE,kBAAArB,GACAA,GAcAgB,EAAA9oE,UAAAmpE,gBAAA,WACA,OAAA9nE,KAAAugD,QAAAkkB,YAAAzkE,KAAAugD,QAAAmkB,WAAAtQ,YAAAp0D,KAAAugD,QAAA6T,eAcAqT,EAAA9oE,UAAA0kE,YAAA,SAAAvzB,GACA9vC,KAAA6nE,QAAA7nE,KAAAugD,QAAAxpD,WAAA,IAWA0wE,EAAA9oE,UAAAknE,WAAA,WACA,IAAAY,EAAAzmE,KAAA8nE,kBAAA9nE,KAAAugD,QAAAxpD,WAEA,OAAA0vE,GAAA,IAAAA,GAAA,GAaAgB,EAAA9oE,UAAAkkE,gBAAA,SAAA/yB,GACA6J,GAAA7J,KAKAA,EAAA/kC,kBACA/K,KAAAugD,QAAAkkB,WAAA,GAEAzkE,KAAA+nE,iBAAA/nE,KAAAugD,QAAA0L,SACAjsD,KAAAugD,QAAA4L,QAEAub,EAAA/oE,UAAAkkE,gBAAAhkE,KAAAmB,KAAA8vC,KAaA23B,EAAA9oE,UAAA4mE,gBAAA,SAAAz1B,GACA,GAAA6J,GAAA7J,GAAA,CAIA,IAAAk4B,EAAAhoE,KAAAgmE,kBAAAl2B,GAAA9vC,KAAAugD,QAAAxpD,WAGAixE,IAAAhoE,KAAAugD,QAAAxpD,aACAixE,GAAA,IAIAhoE,KAAAugD,QAAA6T,YAAA4T,KAGAP,EAAA9oE,UAAAgE,OAAA,WACA+kE,EAAA/oE,UAAAgE,OAAA9D,KAAAmB,MACA,IAAAioE,EAAAjoE,KAAA6hD,SAAA,oBAEAomB,GAIAA,EAAA7kB,QAGAqkB,EAAA9oE,UAAA00C,QAAA,WACAq0B,EAAA/oE,UAAA00C,QAAAx0C,KAAAmB,MACA,IAAAioE,EAAAjoE,KAAA6hD,SAAA,oBAEAomB,GAIAA,EAAA5kB,QAaAokB,EAAA9oE,UAAA6mE,cAAA,SAAA11B,GACA43B,EAAA/oE,UAAA6mE,cAAA3mE,KAAAmB,KAAA8vC,GAGAA,GACAA,EAAA/kC,kBAEA/K,KAAAugD,QAAAkkB,WAAA,GASAzkE,KAAAugD,QAAAhS,SAA0BhxC,KAAA,aAAA4M,OAAAnK,KAAA43D,mBAAA,IAC1B53D,KAAA+nE,iBACAne,GAAA5pD,KAAAugD,QAAAD,SASAmnB,EAAA9oE,UAAAunE,YAAA,WACAlmE,KAAAugD,QAAA6T,YAAAp0D,KAAAugD,QAAA6T,cA/RA,IAuSAqT,EAAA9oE,UAAAsnE,SAAA,WACAjmE,KAAAugD,QAAA6T,YAAAp0D,KAAAugD,QAAA6T,cAxSA,IAqTAqT,EAAA9oE,UAAAupE,aAAA,SAAAp4B,GACA9vC,KAAAugD,QAAA0L,SACAjsD,KAAAugD,QAAAD,OAEAtgD,KAAAugD,QAAA4L,SAeAsb,EAAA9oE,UAAAgtD,eAAA,SAAA7b,GAGA,KAAAA,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,OACA6iC,EAAAhlC,iBACA9K,KAAAkoE,aAAAp4B,IACK43B,EAAA/oE,UAAAgtD,gBAGL+b,EAAA/oE,UAAAgtD,eAAA9sD,KAAAmB,KAAA8vC,IAIA23B,EAzUA,CA0UCvC,IAUDuC,GAAA9oE,UAAA6hD,UACA1+B,UAAA,qCACAsjD,QAAA,mBAIAte,IAAAE,IACAygB,GAAA9oE,UAAA6hD,SAAA1+B,SAAAg6B,OAAA,wBAQA2rB,GAAA9oE,UAAA2mE,YAAA,aAEA7iE,GAAAijD,kBAAA,UAAA+hB,IAaA,IAAAU,GAAA,SAAAhoE,GAYA,SAAAgoE,EAAAtrB,EAAA36B,GACA4xB,EAAA9zC,KAAAmoE,GAEA,IAAAloE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAMA,OAJAjiB,EAAAslE,gBAAAjoB,GAAA99B,GAAAvf,IAAAslE,iBAAA,IACAtlE,EAAAmoE,yBAAA9qB,GAAA99B,GAAAvf,IAAAooE,iBAAA,IAEApoE,EAAA0C,SACA1C,EA4LA,OAhNAi0C,EAAAi0B,EAAAhoE,GA+BAgoE,EAAAxpE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,sCAeA8mE,EAAAxpE,UAAA4mE,gBAAA,SAAAz1B,GACA,IAAAw4B,EAAAtoE,KAAA6hD,SAAA,WAEA,GAAAymB,EAAA,CACA,IAAAL,EAAAK,EAAAzmB,SAAA,oBACA0mB,EAAAD,EAAAlzB,KACAwxB,EAAAvuB,GAAAkwB,GACA1B,EAAA9tB,GAAAwvB,EAAAz4B,GAAA5d,EAKA20C,EAAA,EACAA,EAAA,EACOA,EAAA,IACPA,EAAA,GAGAoB,GACAA,EAAA/I,OAAA0H,EAAAC,KA2BAsB,EAAAxpE,UAAA0pE,gBAAA,SAAAv4B,GACA,IAAAw4B,EAAAtoE,KAAA6hD,SAAA,WAEAymB,GACAA,EAAA/C,gBAAAz1B,IAYAq4B,EAAAxpE,UAAAkwD,QAAA,WACA,OAAA7uD,KAAA6+D,UAQAsJ,EAAAxpE,UAAA00C,QAAA,WACArzC,KAAA8hB,WAAA3b,QAAA,SAAAkT,GACA,OAAAA,EAAAg6B,SAAAh6B,EAAAg6B,YAGArzC,KAAA6uD,YAIA7uD,KAAAgzC,KAAA,0BAAAhzC,KAAA6iE,iBACA7iE,KAAAgzC,IAAAhzC,KAAA2gD,IAAA,YAAA3gD,KAAAulE,iBACAvlE,KAAAwlE,gBAEAxlE,KAAAk3C,SAAA,YAEAl3C,KAAA6+D,UAAA,IAQAsJ,EAAAxpE,UAAAgE,OAAA,WACA3C,KAAA8hB,WAAA3b,QAAA,SAAAkT,GACA,OAAAA,EAAA1W,QAAA0W,EAAA1W,WAGA3C,KAAA6uD,YAIA7uD,KAAAw7C,IAAA,0BAAAx7C,KAAA6iE,iBACA7iE,KAAAw7C,GAAAx7C,KAAA2gD,IAAA,YAAA3gD,KAAAulE,iBACAvlE,KAAAo3C,YAAA,YAEAp3C,KAAA6+D,UAAA,IAcAsJ,EAAAxpE,UAAAkkE,gBAAA,SAAA/yB,GACA,IAAAsL,EAAAp7C,KAAA2gD,IAAAjsC,cACA4zD,EAAAtoE,KAAA6hD,SAAA,WAEAymB,GACAA,EAAAzF,gBAAA/yB,GAGA9vC,KAAAw7C,GAAAJ,EAAA,YAAAp7C,KAAAooE,0BACApoE,KAAAw7C,GAAAJ,EAAA,YAAAp7C,KAAAooE,0BACApoE,KAAAw7C,GAAAJ,EAAA,UAAAp7C,KAAAwlE,eACAxlE,KAAAw7C,GAAAJ,EAAA,WAAAp7C,KAAAwlE,gBAcA2C,EAAAxpE,UAAA6mE,cAAA,SAAA11B,GACA,IAAAsL,EAAAp7C,KAAA2gD,IAAAjsC,cACA4zD,EAAAtoE,KAAA6hD,SAAA,WAEAymB,GACAA,EAAA9C,cAAA11B,GAGA9vC,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAAooE,0BACApoE,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAAooE,0BACApoE,KAAAgzC,IAAAoI,EAAA,UAAAp7C,KAAAwlE,eACAxlE,KAAAgzC,IAAAoI,EAAA,WAAAp7C,KAAAwlE,gBAGA2C,EAjNA,CAkNC1lE,IAUD0lE,GAAAxpE,UAAA6hD,UACA1+B,UAAA,YAGArf,GAAAijD,kBAAA,kBAAAyiB,IAYA,IAAAK,GAAA,SAAA7F,GAYA,SAAA6F,EAAA3rB,EAAA36B,GACA4xB,EAAA9zC,KAAAwoE,GAEA,IAAAvoE,EAAAw0C,EAAAz0C,KAAA2iE,EAAA9jE,KAAAmB,KAAA68C,EAAA36B,IAOA,OALAjiB,EAAAu7C,GAAAqB,EAAA,mBAAA58C,EAAAwoE,yBAEgB,IAARx3B,EAAA9vC,EAAQynD,GAAA8f,oBAChBzoE,EAAAozC,UAEApzC,EAuDA,OA5EAi0C,EAAAs0B,EAAA7F,GAgCA6F,EAAA7pE,UAAAokD,cAAA,WACA,gCAAA4f,EAAAhkE,UAAAokD,cAAAlkD,KAAAmB,OAcAwoE,EAAA7pE,UAAA8pE,uBAAA,SAAA34B,GACA9vC,KAAAugD,QAAAooB,eACA3oE,KAAA4sD,YAAA,kBAEA5sD,KAAA4sD,YAAA,eAiBA4b,EAAA7pE,UAAAuD,YAAA,SAAA4tC,GACA9vC,KAAAugD,QAAAooB,eAGA3oE,KAAAugD,QAAAqoB,iBAFA5oE,KAAAugD,QAAAsoB,qBAMAL,EA7EA,CA8EC/F,IAUD+F,GAAA7pE,UAAA+/D,aAAA,aAEAj8D,GAAAijD,kBAAA,mBAAA8iB,IAcA,IAAAM,GAAA,SAAA37B,EAAA0P,GAEAA,EAAAyW,QAAAzW,EAAAyW,MAAA6G,uBACAhtB,EAAA+J,SAAA,cAGA/J,EAAAqO,GAAAqB,EAAA,uBACAA,EAAAyW,MAAA6G,sBAGAhtB,EAAAiK,YAAA,cAFAjK,EAAA+J,SAAA,iBAiBA6xB,GAAA,SAAA5oE,GAGA,SAAA4oE,IAEA,OADAj1B,EAAA9zC,KAAA+oE,GACAt0B,EAAAz0C,KAAAG,EAAAqE,MAAAxE,KAAAmD,YAgBA,OApBA+wC,EAAA60B,EAAA5oE,GAaA4oE,EAAApqE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,mBACAmiB,UAAA,4CAIAulD,EArBA,CAsBCtmE,IAEDA,GAAAijD,kBAAA,cAAAqjB,IAYA,IAAAC,GAAA,SAAAtB,GAYA,SAAAsB,EAAAnsB,EAAA36B,GACA4xB,EAAA9zC,KAAAgpE,GAEA,IAAA/oE,EAAAw0C,EAAAz0C,KAAA0nE,EAAA7oE,KAAAmB,KAAA68C,EAAA36B,IAOA,OALAjiB,EAAAu7C,GAAA,eAAAv7C,EAAAgpE,mBACAhpE,EAAAu7C,GAAAqB,EAAA,eAAA58C,EAAAipE,sBACArsB,EAAAwD,MAAA,WACA,OAAApgD,EAAAipE,yBAEAjpE,EAyJA,OA9KAi0C,EAAA80B,EAAAtB,GAgCAsB,EAAArqE,UAAAy3C,SAAA,WACA,OAAAsxB,EAAA/oE,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,kCAEAmqD,aAAAxrD,KAAAmhD,SAAA,gBACAsd,YAAA,YAcAuK,EAAArqE,UAAAkkE,gBAAA,SAAA/yB,GACA6J,GAAA7J,IAIA43B,EAAA/oE,UAAAkkE,gBAAAhkE,KAAAmB,KAAA8vC,IAaAk5B,EAAArqE,UAAA4mE,gBAAA,SAAAz1B,GACA6J,GAAA7J,KAIA9vC,KAAAmpE,aACAnpE,KAAAugD,QAAAzoD,OAAAkI,KAAAgmE,kBAAAl2B,MAQAk5B,EAAArqE,UAAAwqE,WAAA,WACAnpE,KAAAugD,QAAA6oB,SACAppE,KAAAugD,QAAA6oB,OAAA,IAYAJ,EAAArqE,UAAAknE,WAAA,WACA,OAAA7lE,KAAAugD,QAAA6oB,QACA,EAEAppE,KAAAugD,QAAAzoD,UAQAkxE,EAAArqE,UAAAunE,YAAA,WACAlmE,KAAAmpE,aACAnpE,KAAAugD,QAAAzoD,OAAAkI,KAAAugD,QAAAzoD,SAAA,KAQAkxE,EAAArqE,UAAAsnE,SAAA,WACAjmE,KAAAmpE,aACAnpE,KAAAugD,QAAAzoD,OAAAkI,KAAAugD,QAAAzoD,SAAA,KAaAkxE,EAAArqE,UAAAuqE,qBAAA,SAAAp5B,GACA,IAAAu5B,EAAArpE,KAAAugD,QAAA6oB,QAAA,EAAAppE,KAAAspE,sBAEAtpE,KAAA2gD,IAAAlxC,aAAA,gBAAA45D,GACArpE,KAAA2gD,IAAAlxC,aAAA,iBAAA45D,EAAA,MAUAL,EAAArqE,UAAA2qE,oBAAA,WACA,OAAA7uE,KAAAq+C,MAAA,IAAA94C,KAAAugD,QAAAzoD,WAaAkxE,EAAArqE,UAAAsqE,kBAAA,WACA,IAAAhoE,EAAAjB,KAEAupE,EAAAvpE,KAAAugD,QAAAzoD,SAEAkI,KAAAi8C,IAAA,4BACA,IAAAh7C,EAAAs/C,QAAAzoD,UACAmJ,EAAAs/C,QAAAipB,YAAAD,MAKAP,EA/KA,CAgLC9D,IAUD8D,GAAArqE,UAAA6hD,UACA1+B,UAAA,eACAsjD,QAAA,eAQA4D,GAAArqE,UAAA2mE,YAAA,eAEA7iE,GAAAijD,kBAAA,YAAAsjB,IAYA,IAAAS,GAAA,SAAAtpE,GAYA,SAAAspE,EAAA5sB,GACA,IAAA36B,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAypE,GAEAvnD,EAAAmjD,SAAAnjD,EAAAmjD,WAAA,QAIA,IAAAnjD,EAAAwnD,WAAAx0B,EAAAhzB,EAAAwnD,cACAxnD,EAAAwnD,UAAAxnD,EAAAwnD,cACAxnD,EAAAwnD,UAAArE,SAAAnjD,EAAAmjD,UAIA,IAAAplE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAsBA,OApBA4mD,GAAA7oE,EAAA48C,GAEA58C,EAAA0pE,yBAAArsB,GAAA99B,GAAAvf,IAAAslE,iBAAA,IAEAtlE,EAAAu7C,GAAA,YAAAv7C,EAAA4iE,iBACA5iE,EAAAu7C,GAAA,aAAAv7C,EAAA4iE,iBAIA5iE,EAAAu7C,GAAAv7C,EAAAypE,WAAA,mCACAzpE,EAAAypE,UAAAxyB,SAAA,qBACAj3C,EAAAi3C,SAAA,qBACAj3C,EAAAsuC,QAAA,kBAGAtuC,EAAAu7C,GAAAv7C,EAAAypE,WAAA,oCACAzpE,EAAAypE,UAAAtyB,YAAA,qBACAn3C,EAAAm3C,YAAA,qBACAn3C,EAAAsuC,QAAA,oBAEAtuC,EA8EA,OA7HAi0C,EAAAu1B,EAAAtpE,GA0DAspE,EAAA9qE,UAAAy3C,SAAA,WACA,IAAAwzB,EAAA,wBAMA,OAJA5pE,KAAAwgD,SAAA6kB,WACAuE,EAAA,uBAGAzpE,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,kCAAAuoE,KAeAH,EAAA9qE,UAAAkkE,gBAAA,SAAA/yB,GACA,IAAAsL,EAAAp7C,KAAA2gD,IAAAjsC,cAEA1U,KAAAw7C,GAAAJ,EAAA,YAAAp7C,KAAA2pE,0BACA3pE,KAAAw7C,GAAAJ,EAAA,YAAAp7C,KAAA2pE,0BACA3pE,KAAAw7C,GAAAJ,EAAA,UAAAp7C,KAAAwlE,eACAxlE,KAAAw7C,GAAAJ,EAAA,WAAAp7C,KAAAwlE,gBAcAiE,EAAA9qE,UAAA6mE,cAAA,SAAA11B,GACA,IAAAsL,EAAAp7C,KAAA2gD,IAAAjsC,cAEA1U,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAA2pE,0BACA3pE,KAAAgzC,IAAAoI,EAAA,YAAAp7C,KAAA2pE,0BACA3pE,KAAAgzC,IAAAoI,EAAA,UAAAp7C,KAAAwlE,eACAxlE,KAAAgzC,IAAAoI,EAAA,WAAAp7C,KAAAwlE,gBAcAiE,EAAA9qE,UAAA4mE,gBAAA,SAAAz1B,GACA9vC,KAAA0pE,UAAAnE,gBAAAz1B,IAGA25B,EA9HA,CA+HChnE,IAUDgnE,GAAA9qE,UAAA6hD,UACA1+B,UAAA,cAGArf,GAAAijD,kBAAA,gBAAA+jB,IAcA,IAAAI,GAAA,SAAA18B,EAAA0P,GAEAA,EAAAyW,QAAAzW,EAAAyW,MAAA8G,qBACAjtB,EAAA+J,SAAA,cAGA/J,EAAAqO,GAAAqB,EAAA,uBACAA,EAAAyW,MAAA8G,oBAGAjtB,EAAAiK,YAAA,cAFAjK,EAAA+J,SAAA,iBAiBA4yB,GAAA,SAAAnH,GAYA,SAAAmH,EAAAjtB,EAAA36B,GACA4xB,EAAA9zC,KAAA8pE,GAGA,IAAA7pE,EAAAw0C,EAAAz0C,KAAA2iE,EAAA9jE,KAAAmB,KAAA68C,EAAA36B,IAKA,OAHA2nD,GAAA5pE,EAAA48C,GAEA58C,EAAAu7C,GAAAqB,GAAA,4BAAA58C,EAAAi/D,QACAj/D,EAqHA,OAzIAi0C,EAAA41B,EAAAnH,GA+BAmH,EAAAnrE,UAAAokD,cAAA,WACA,0BAAA4f,EAAAhkE,UAAAokD,cAAAlkD,KAAAmB,OAgBA8pE,EAAAnrE,UAAAuD,YAAA,SAAA4tC,GACA,IAAAi6B,EAAA/pE,KAAAugD,QAAAzoD,SACAkyE,EAAAhqE,KAAAugD,QAAAipB,cAEA,OAAAO,EAAA,CACA,IAAAE,EAAAD,EAAA,MAAAA,EAEAhqE,KAAAugD,QAAAzoD,OAAAmyE,GACAjqE,KAAAugD,QAAA6oB,OAAA,QAEAppE,KAAAugD,QAAA6oB,OAAAppE,KAAAugD,QAAA6oB,UAiBAU,EAAAnrE,UAAAugE,OAAA,SAAApvB,GACA9vC,KAAAkqE,cACAlqE,KAAAmqE,sBAgBAL,EAAAnrE,UAAAurE,YAAA,WACA,IAAAH,EAAA/pE,KAAAugD,QAAAzoD,SACAs6C,EAAA,EAKA0U,IACA9mD,KAAAugD,QAAA6oB,MAAAppE,KAAAugD,QAAA+S,MAAA3S,IAAAyoB,OAGA,IAAAW,GAAA/pE,KAAAugD,QAAA6oB,QACAh3B,EAAA,EACK23B,EAAA,IACL33B,EAAA,EACK23B,EAAA,MACL33B,EAAA,GAIA,QAAA9+C,EAAA,EAAmBA,EAAA,EAAOA,IAC1B8jD,GAAAp3C,KAAA2gD,IAAA,WAAArtD,GAEA4jD,GAAAl3C,KAAA2gD,IAAA,WAAAvO,IAYA03B,EAAAnrE,UAAAwrE,mBAAA,WACA,IACA7nE,EADAtC,KAAAugD,QAAA6oB,SAAA,IAAAppE,KAAAugD,QAAAzoD,SACA,gBAEAkI,KAAA4sD,gBAAAtqD,GACAtC,KAAA4sD,YAAAtqD,IAIAwnE,EA1IA,CA2ICrH,IAUDqH,GAAAnrE,UAAA+/D,aAAA,OAEAj8D,GAAAijD,kBAAA,aAAAokB,IAaA,IAAAM,GAAA,SAAAjqE,GAYA,SAAAiqE,EAAAvtB,GACA,IAAA36B,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAoqE,QAEA,IAAAloD,EAAAmoD,OACAnoD,EAAAmoD,OAAAnoD,EAAAmoD,OAEAnoD,EAAAmoD,QAAA,QAKA,IAAAnoD,EAAAooD,eAAAp1B,EAAAhzB,EAAAooD,kBACApoD,EAAAooD,cAAApoD,EAAAooD,kBACApoD,EAAAooD,cAAAjF,UAAAnjD,EAAAmoD,QAGA,IAAApqE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IASA,OAPAjiB,EAAAu7C,GAAAqB,GAAA,aAAA58C,EAAAsqE,mBAIAtqE,EAAAu7C,GAAAv7C,EAAAqqE,eAAA,gBAAArqE,EAAAuqE,eAEAvqE,EAAAu7C,GAAAv7C,EAAAqqE,eAAA,kBAAArqE,EAAAwqE,iBACAxqE,EAsEA,OA3GAi0C,EAAAk2B,EAAAjqE,GAgDAiqE,EAAAzrE,UAAA6rE,cAAA,WACAxqE,KAAAk3C,SAAA,sBAWAkzB,EAAAzrE,UAAA8rE,gBAAA,WACAzqE,KAAAo3C,YAAA,sBAYAgzB,EAAAzrE,UAAA4rE,kBAAA,WAGAvqE,KAAAsqE,cAAAvzB,SAAA,eAAA/2C,KAAA0qE,WAAA3zB,SAAA,eACA/2C,KAAAk3C,SAAA,cAKAl3C,KAAAsqE,cAAAvzB,SAAA,gBAAA/2C,KAAA0qE,WAAA3zB,SAAA,eACA/2C,KAAAk3C,SAAA,yBAYAkzB,EAAAzrE,UAAAy3C,SAAA,WACA,IAAAwzB,EAAA,8BAMA,OAJA5pE,KAAAwgD,SAAA6pB,SACAT,EAAA,6BAGAzpE,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,gCAAAuoE,KAIAQ,EA5GA,CA6GC3nE,IAUD2nE,GAAAzrE,UAAA6hD,UACA1+B,UAAA,+BAGArf,GAAAijD,kBAAA,cAAA0kB,IAaA,IAAAzvD,GAAA,SAAAxa,GAaA,SAAAwa,EAAAkiC,EAAA36B,GACA4xB,EAAA9zC,KAAA2a,GAEA,IAAA1a,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IASA,OAPAA,IACAjiB,EAAA0qE,YAAAzoD,EAAA0oD,YAGA3qE,EAAA4qE,eAAA,EAEA5qE,EAAAu7C,GAAA,UAAAv7C,EAAA0rD,gBACA1rD,EAsJA,OA9KAi0C,EAAAv5B,EAAAxa,GAoCAwa,EAAAhc,UAAAmsE,QAAA,SAAA/oB,GACA/hD,KAAA8hD,SAAAC,GACAA,EAAAvG,GAAA,QAAAh8B,GAAAxf,KAAA,SAAA8vC,GAEA9vC,KAAA2qE,cACA3qE,KAAA2qE,YAAAI,gBAIA,4BAAAhpB,EAAA/rD,QACAgK,KAAA2qE,YAAApiD,aAcA5N,EAAAhc,UAAAy3C,SAAA,WACA,IAAA40B,EAAAhrE,KAAAwgD,SAAAwqB,eAAA,KAEAhrE,KAAA2hD,WAAAvL,EAAA40B,GACA3pE,UAAA,qBAGArB,KAAA2hD,WAAAlyC,aAAA,eAEA,IAAA2lC,EAAAj1C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAirE,OAAAjrE,KAAA2hD,WACAtgD,UAAA,aAYA,OATA+zC,EAAA1xB,YAAA1jB,KAAA2hD,YAIAnG,GAAApG,EAAA,iBAAAtF,GACAA,EAAAhlC,iBACAglC,EAAAoL,6BAGA9F,GAGAz6B,EAAAhc,UAAAuiD,QAAA,WACAlhD,KAAA2hD,WAAA,KAEAxhD,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAaA2a,EAAAhc,UAAAgtD,eAAA,SAAA7b,GAEA,KAAAA,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,OACA6iC,EAAAhlC,iBACA9K,KAAAkmE,eAGK,KAAAp2B,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,QACL6iC,EAAAhlC,iBACA9K,KAAAimE,aASAtrD,EAAAhc,UAAAunE,YAAA,WACA,IAAAgF,EAAA,OAEAtnC,IAAA5jC,KAAA6qE,gBACAK,EAAAlrE,KAAA6qE,cAAA,GAEA7qE,KAAAuoB,MAAA2iD,IAQAvwD,EAAAhc,UAAAsnE,SAAA,WACA,IAAAiF,EAAA,OAEAtnC,IAAA5jC,KAAA6qE,gBACAK,EAAAlrE,KAAA6qE,cAAA,GAEA7qE,KAAAuoB,MAAA2iD,IAWAvwD,EAAAhc,UAAA4pB,MAAA,WACA,IAAA4iD,EAAAhoE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,KAEA2e,EAAA9hB,KAAA8hB,WAAAljB,QACAkjB,EAAA7sB,QAAA6sB,EAAA,GAAAzgB,WAAA,iBAAAoS,KAAAqO,EAAA,GAAAzgB,YAGAygB,EAAA2oB,QAGA3oB,EAAA7sB,OAAA,IACAk2E,EAAA,EACAA,EAAA,EACOA,GAAArpD,EAAA7sB,SACPk2E,EAAArpD,EAAA7sB,OAAA,GAGA+K,KAAA6qE,cAAAM,EAEArpD,EAAAqpD,GAAAxqB,IAAAp4B,UAIA5N,EA/KA,CAgLClY,IAEDA,GAAAijD,kBAAA,OAAA/qC,IAYA,IAAAywD,GAAA,SAAAjrE,GAYA,SAAAirE,EAAAvuB,GACA,IAAA36B,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAAorE,GAEA,IAAAnrE,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA36B,IAEAjiB,EAAA0qE,YAAA,IAAAlI,GAAA5lB,EAAA36B,GAEAjiB,EAAA0qE,YAAA/d,YAAA3sD,EAAAy+D,cACAz+D,EAAA0qE,YAAAhqB,IAAAlxC,aAAA,wBAGA,IAAA47D,EAAA5I,GAAA9jE,UAAAokD,gBAiBA,OAfA9iD,EAAA0qE,YAAAhqB,IAAAt/C,UAAApB,EAAA8iD,gBAAA,IAAAsoB,EACAprE,EAAA0qE,YAAAvzB,YAAA,eAEAn3C,EAAA6hD,SAAA7hD,EAAA0qE,aAEA1qE,EAAAi/D,SAEAj/D,EAAA4+D,UAAA,EAEA5+D,EAAAu7C,GAAAv7C,EAAA0qE,YAAA,MAAA1qE,EAAAiC,aACAjC,EAAAu7C,GAAAv7C,EAAA0qE,YAAA,QAAA1qE,EAAAiC,aACAjC,EAAAu7C,GAAAv7C,EAAA0qE,YAAA,QAAA1qE,EAAA6+D,aACA7+D,EAAAu7C,GAAAv7C,EAAA0qE,YAAA,OAAA1qE,EAAA8+D,YAEA9+D,EAAAu7C,GAAA,UAAAv7C,EAAAqrE,uBACArrE,EAmXA,OA3ZAi0C,EAAAk3B,EAAAjrE,GAgDAirE,EAAAzsE,UAAAugE,OAAA,WACA,IAAAqM,EAAAvrE,KAAAwrE,aAEAxrE,KAAAurE,OACAvrE,KAAAurE,KAAArqB,UACAlhD,KAAAyjB,YAAAzjB,KAAAurE,OAGAvrE,KAAAurE,OACAvrE,KAAA8hD,SAAAypB,GAQAvrE,KAAAyrE,gBAAA,EACAzrE,KAAA2qE,YAAAhqB,IAAAlxC,aAAA,yBAEAzP,KAAA0rE,OAAA1rE,KAAA0rE,MAAAz2E,QAAA+K,KAAA2rE,eACA3rE,KAAAqjD,OAEArjD,KAAAojD,QAYAgoB,EAAAzsE,UAAA6sE,WAAA,WACA,IAAAD,EAAA,IAAA5wD,GAAA3a,KAAAugD,SAAuCqqB,WAAA5qE,OAavC,GAHAA,KAAA2rE,eAAA,EAGA3rE,KAAAwgD,SAAA7/C,MAAA,CACA,IAAAA,EAAAy1C,EAAA,MACA/0C,UAAA,iBACAmiB,UAAA08B,GAAAlgD,KAAAwgD,SAAA7/C,OACAiU,UAAA,IAGA5U,KAAA2rE,gBAAA,EAEAJ,EAAA3qB,UAAAjO,QAAAhyC,GACAm2C,EAAAn2C,EAAA4qE,EAAA7pB,aAKA,GAFA1hD,KAAA0rE,MAAA1rE,KAAA4rE,cAEA5rE,KAAA0rE,MAEA,QAAAp4E,EAAA,EAAqBA,EAAA0M,KAAA0rE,MAAAz2E,OAAuB3B,IAC5Ci4E,EAAAT,QAAA9qE,KAAA0rE,MAAAp4E,IAIA,OAAAi4E,GAUAH,EAAAzsE,UAAAitE,YAAA,aAUAR,EAAAzsE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAArB,KAAA6rE,6BAYAT,EAAAzsE,UAAAktE,qBAAA,WACA,IAAAC,EAAA,kBAYA,OATA,IAAA9rE,KAAAwgD,SAAA6pB,OACAyB,GAAA,UAEAA,GAAA,SAMA,mBAAAA,EAAA,IAFArJ,GAAA9jE,UAAAokD,gBAEA,IAAA5iD,EAAAxB,UAAAokD,cAAAlkD,KAAAmB,OAWAorE,EAAAzsE,UAAAokD,cAAA,WACA,IAAA+oB,EAAA,kBASA,OANA,IAAA9rE,KAAAwgD,SAAA6pB,OACAyB,GAAA,UAEAA,GAAA,SAGA,mBAAAA,EAAA,IAAA3rE,EAAAxB,UAAAokD,cAAAlkD,KAAAmB,OAmBAorE,EAAAzsE,UAAAiuD,YAAA,SAAAtqD,GACA,IAAA8yC,EAAAjyC,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAAnD,KAAA2qE,YAAAv1B,KAEA,OAAAp1C,KAAA2qE,YAAA/d,YAAAtqD,EAAA8yC,IAgBAg2B,EAAAzsE,UAAAuD,YAAA,SAAA4tC,GAKA9vC,KAAAi8C,IAAAj8C,KAAAurE,KAAA7pB,YAAA,aAAAliC,GAAAxf,KAAA,SAAAuD,GACAvD,KAAA+qE,gBACA/qE,KAAA2gD,IAAAr4B,UAEAtoB,KAAAyrE,eACAzrE,KAAA+qE,gBAEA/qE,KAAA+rE,eASAX,EAAAzsE,UAAA4pB,MAAA,WACAvoB,KAAA2qE,YAAApiD,SAQA6iD,EAAAzsE,UAAA2pB,KAAA,WACAtoB,KAAA2qE,YAAAriD,QAeA8iD,EAAAzsE,UAAAmgE,YAAA,WACAtjB,GAAOvK,EAAA9vC,EAAQ,UAAAqe,GAAAxf,UAAA2rD,kBAcfyf,EAAAzsE,UAAAogE,WAAA,WACA/rB,GAAQ/B,EAAA9vC,EAAQ,UAAAqe,GAAAxf,UAAA2rD,kBAchByf,EAAAzsE,UAAAgtD,eAAA,SAAA7b,GAGA,KAAAA,EAAA7iC,OAAA,IAAA6iC,EAAA7iC,OACAjN,KAAAyrE,gBACAzrE,KAAA+qE,gBAGA,IAAAj7B,EAAA7iC,QACA6iC,EAAAhlC,iBAEA9K,KAAA2qE,YAAAhqB,IAAAp4B,UAGK,KAAAunB,EAAA7iC,OAAA,KAAA6iC,EAAA7iC,OACLjN,KAAAyrE,iBACAzrE,KAAA+rE,cACAj8B,EAAAhlC,mBAgBAsgE,EAAAzsE,UAAA2sE,sBAAA,SAAAx7B,GAGA,KAAAA,EAAA7iC,OAAA,IAAA6iC,EAAA7iC,QACAjN,KAAAyrE,gBACAzrE,KAAA+qE,gBAGA,IAAAj7B,EAAA7iC,QACA6iC,EAAAhlC,iBAEA9K,KAAA2qE,YAAAhqB,IAAAp4B,WAUA6iD,EAAAzsE,UAAAotE,YAAA,WACA,GAAA/rE,KAAA6+D,SAAA,CAOA,GANA7+D,KAAAyrE,gBAAA,EACAzrE,KAAAurE,KAAAjoB,cACAtjD,KAAA2qE,YAAAhqB,IAAAlxC,aAAA,wBAIAq3C,IAAAhR,IAEA,OAGA91C,KAAAurE,KAAAhjD,UASA6iD,EAAAzsE,UAAAosE,cAAA,WACA/qE,KAAA6+D,WACA7+D,KAAAyrE,gBAAA,EACAzrE,KAAAurE,KAAAhoB,gBACAvjD,KAAA2qE,YAAAhqB,IAAAlxC,aAAA,2BASA27D,EAAAzsE,UAAA00C,QAAA,WACArzC,KAAA+qE,gBAEA/qE,KAAA6+D,UAAA,EACA7+D,KAAAk3C,SAAA,gBAEAl3C,KAAA2qE,YAAAt3B,WAQA+3B,EAAAzsE,UAAAgE,OAAA,WACA3C,KAAA6+D,UAAA,EACA7+D,KAAAo3C,YAAA,gBAEAp3C,KAAA2qE,YAAAhoE,UAGAyoE,EA5ZA,CA6ZC3oE,IAEDA,GAAAijD,kBAAA,aAAA0lB,IAYA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAnvB,EAAA36B,GACA4xB,EAAA9zC,KAAAgsE,GAEA,IAAAppC,EAAA1gB,EAAA0gB,OAEA3iC,EAAAw0C,EAAAz0C,KAAAisE,EAAAptE,KAAAmB,KAAA68C,EAAA36B,IAMA,GAJAjiB,EAAAyrE,MAAAz2E,QAAA,GACAgL,EAAAojD,QAGAzgB,EACA,OAAA6R,EAAAx0C,GAGA,IAAAisE,EAAA1sD,GAAAvf,IAAAi/D,QAUA,OARAt8B,EAAAnjB,iBAAA,cAAAysD,GACAtpC,EAAAnjB,iBAAA,WAAAysD,GACAjsE,EAAAsgD,QAAA/E,GAAA,QAAA0wB,GAEAjsE,EAAAsgD,QAAA/E,GAAA,qBACA5Y,EAAA+X,oBAAA,cAAAuxB,GACAtpC,EAAA+X,oBAAA,WAAAuxB,KAEAjsE,EAGA,OAvCAi0C,EAAA83B,EAAAC,GAuCAD,EAxCA,CAyCCZ,IAED3oE,GAAAijD,kBAAA,cAAAsmB,IAYA,IAAAG,GAAA,SAAAlN,GAaA,SAAAkN,EAAAtvB,EAAA36B,GACA4xB,EAAA9zC,KAAAmsE,GAEA,IAAAlsE,EAAAw0C,EAAAz0C,KAAAi/D,EAAApgE,KAAAmB,KAAA68C,EAAA36B,IAiBA,OAfAjiB,EAAAmsE,WAAAlqD,EAAAkqD,WACAnsE,EAAAosE,YAAAnqD,EAAAC,WAAA,EACAliB,EAAAqsE,gBAAApqD,EAAAoqD,gBAEArsE,EAAAkiB,SAAAliB,EAAAosE,aAEApsE,EAAAmsE,WACAnsE,EAAAqsE,gBACArsE,EAAA0gD,IAAAlxC,aAAA,2BAEAxP,EAAA0gD,IAAAlxC,aAAA,wBAGAxP,EAAA0gD,IAAAlxC,aAAA,mBAEAxP,EA2EA,OA3GAi0C,EAAAi4B,EAAAlN,GAoDAkN,EAAAxtE,UAAAy3C,SAAA,SAAA74C,EAAAuC,EAAAg4C,GAIA,OAFA93C,KAAA4+D,gBAAA,EAEAK,EAAAtgE,UAAAy3C,SAAAv3C,KAAAmB,KAAA,KAAA6C,GACAxB,UAAA,gBACAmiB,UAAA,oCAAAxjB,KAAAmhD,SAAAnhD,KAAAwgD,SAAAiL,OAAA,UACA72C,UAAA,GACK9U,GAAAg4C,IAgBLq0B,EAAAxtE,UAAAuD,YAAA,SAAA4tC,GACA9vC,KAAAmiB,UAAA,IAWAgqD,EAAAxtE,UAAAwjB,SAAA,SAAAoqD,GACAvsE,KAAAosE,aACAG,GACAvsE,KAAAk3C,SAAA,gBACAl3C,KAAA2gD,IAAAlxC,aAAA,uBAGAzP,KAAA4sD,YAAA,cACA5sD,KAAAqsE,aAAA,IAEArsE,KAAAo3C,YAAA,gBACAp3C,KAAA2gD,IAAAlxC,aAAA,wBAEAzP,KAAA4sD,YAAA,IACA5sD,KAAAqsE,aAAA,KAKAF,EA5GA,CA6GC9N,IAED57D,GAAAijD,kBAAA,WAAAymB,IAYA,IAAAK,GAAA,SAAAC,GAYA,SAAAD,EAAA3vB,EAAA36B,GACA4xB,EAAA9zC,KAAAwsE,GAEA,IAAAxkD,EAAA9F,EAAA8F,MACA4a,EAAAia,EAAA2N,aAGAtoC,EAAAupC,MAAAzjC,EAAAyjC,OAAAzjC,EAAArxB,UAAA,UACAurB,EAAAC,SAAA,YAAA6F,EAAAkD,KAEA,IAAAjrB,EAAAw0C,EAAAz0C,KAAAysE,EAAA5tE,KAAAmB,KAAA68C,EAAA36B,IAEAjiB,EAAA+nB,QACA,IAAA0kD,EAAA,WACA,QAAA75B,EAAA1vC,UAAAlO,OAAAmN,EAAApE,MAAA60C,GAAAC,EAAA,EAAqEA,EAAAD,EAAaC,IAClF1wC,EAAA0wC,GAAA3vC,UAAA2vC,GAGA7yC,EAAA0sE,mBAAAnoE,MAAAvE,EAAAmC,IAEAwqE,EAAA,WACA,QAAAt5B,EAAAnwC,UAAAlO,OAAAmN,EAAApE,MAAAs1C,GAAAC,EAAA,EAAwEA,EAAAD,EAAeC,IACvFnxC,EAAAmxC,GAAApwC,UAAAowC,GAGAtzC,EAAA4sE,6BAAAroE,MAAAvE,EAAAmC,IAkBA,GAfAy6C,EAAArB,IAAA,+BAAAkxB,GACA9pC,EAAAnjB,iBAAA,SAAAitD,GACA9pC,EAAAnjB,iBAAA,yBAAAmtD,GACA3sE,EAAAu7C,GAAA,qBACAqB,EAAA7J,KAAA,+BAAA05B,GACA9pC,EAAA+X,oBAAA,SAAA+xB,GACA9pC,EAAA+X,oBAAA,yBAAAiyB,UASAhpC,IAAAhB,EAAAkqC,SAAA,CACA,IAAAh9B,OAAA,EAEA7vC,EAAAu7C,IAAA,0BACA,GAA4B,WAA5B3H,EAAoB9C,EAAA5vC,EAAQ4rE,OAE5B,IACAj9B,EAAA,IAAwBiB,EAAA5vC,EAAQ4rE,MAAA,UACrB,MAAAtoC,IAKXqL,IACAA,EAAkBmB,EAAA9vC,EAAQ6rE,YAAA,UAC1BC,UAAA,gBAGArqC,EAAAob,cAAAlO,KAMA,OADA7vC,EAAA0sE,qBACA1sE,EAwFA,OAtKAi0C,EAAAs4B,EAAAC,GA8FAD,EAAA7tE,UAAAuD,YAAA,SAAA4tC,GACA,IAAAsf,EAAApvD,KAAAgoB,MAAAonC,KACA8d,EAAAltE,KAAAgoB,MAAAklD,MACAtqC,EAAA5iC,KAAAugD,QAAAiK,aAQA,GANA0iB,IACAA,GAAA9d,IAGAqd,EAAA9tE,UAAAuD,YAAArD,KAAAmB,KAAA8vC,GAEAlN,EAIA,QAAAtvC,EAAA,EAAmBA,EAAAsvC,EAAA3tC,OAAmB3B,IAAA,CACtC,IAAA00B,EAAA4a,EAAAtvC,GAEA00B,IAAAhoB,KAAAgoB,OAAAklD,EAAAroE,QAAAmjB,EAAAonC,OAAA,EACA,YAAApnC,EAAAkD,OACAlD,EAAAkD,KAAA,WAEO,aAAAlD,EAAAkD,OACPlD,EAAAkD,KAAA,cAeAshD,EAAA7tE,UAAAguE,mBAAA,SAAA78B,GACA,IAAAq9B,EAAA,YAAAntE,KAAAgoB,MAAAkD,KAIAiiD,IAAAntE,KAAAqsE,aACArsE,KAAAmiB,SAAAgrD,IAIAX,EAAA7tE,UAAAkuE,6BAAA,SAAA/8B,GACA,eAAA9vC,KAAAgoB,MAAAkD,KAAA,CACA,IAAAw1C,EAAA1gE,KAAAugD,QAAAkgB,OAAAC,iBAGA,GAAAA,KAAA7R,SAAA6R,EAAA/pE,WAAAqJ,KAAAgoB,MAAArxB,UAAA+pE,EAAAtR,OAAApvD,KAAAgoB,MAAAonC,KACA,OAGApvD,KAAAugD,QAAAkgB,OAAAC,kBACA7R,SAAA,EACAl4D,SAAAqJ,KAAAgoB,MAAArxB,SACAy4D,KAAApvD,KAAAgoB,MAAAonC,QAKAod,EAAA7tE,UAAAuiD,QAAA,WAEAlhD,KAAAgoB,MAAA,KAEAykD,EAAA9tE,UAAAuiD,QAAAriD,KAAAmB,OAGAwsE,EAvKA,CAwKCL,IAED1pE,GAAAijD,kBAAA,oBAAA8mB,IAYA,IAAAY,GAAA,SAAAC,GAYA,SAAAD,EAAAvwB,EAAA36B,GA4BA,OA3BA4xB,EAAA9zC,KAAAotE,GAIAlrD,EAAA8F,OACA60B,SACAuS,KAAAltC,EAAAktC,KACA8d,MAAAhrD,EAAAgrD,MACAl5C,SAAA,EACA9I,KAAA,YAGAhJ,EAAAgrD,QACAhrD,EAAAgrD,OAAAhrD,EAAAktC,OAGAltC,EAAAupC,MACAvpC,EAAA8F,MAAAyjC,MAAAvpC,EAAAupC,MAEAvpC,EAAA8F,MAAAyjC,MAAAvpC,EAAAgrD,MAAAjvE,KAAA,gBAIAikB,EAAAkqD,YAAA,EAEAlqD,EAAAoqD,iBAAA,EAEA73B,EAAAz0C,KAAAqtE,EAAAxuE,KAAAmB,KAAA68C,EAAA36B,IAmDA,OA1FAgyB,EAAAk5B,EAAAC,GAkDAD,EAAAzuE,UAAAguE,mBAAA,SAAA78B,GAIA,IAHA,IAAAlN,EAAA5iC,KAAA68C,SAAA2N,aACA2iB,GAAA,EAEA75E,EAAA,EAAAuQ,EAAA++B,EAAA3tC,OAAsC3B,EAAAuQ,EAAOvQ,IAAA,CAC7C,IAAA00B,EAAA4a,EAAAtvC,GAEA,GAAA0M,KAAAwgD,SAAA0sB,MAAAroE,QAAAmjB,EAAAonC,OAAA,eAAApnC,EAAAkD,KAAA,CACAiiD,GAAA,EACA,OAMAA,IAAAntE,KAAAqsE,aACArsE,KAAAmiB,SAAAgrD,IAIAC,EAAAzuE,UAAAkuE,6BAAA,SAAA/8B,GAIA,IAHA,IAAAlN,EAAA5iC,KAAA68C,SAAA2N,aACA8iB,GAAA,EAEAh6E,EAAA,EAAAuQ,EAAA++B,EAAA3tC,OAAsC3B,EAAAuQ,EAAOvQ,IAAA,CAC7C,IAAA00B,EAAA4a,EAAAtvC,GAEA,2CAAAuR,QAAAmjB,EAAAonC,OAAA,eAAApnC,EAAAkD,KAAA,CACAoiD,GAAA,EACA,OAIAA,IACAttE,KAAAugD,QAAAkgB,OAAAC,kBACA7R,SAAA,KAKAue,EA3FA,CA4FCZ,IAED/pE,GAAAijD,kBAAA,uBAAA0nB,IAYA,IAAAG,GAAA,SAAAC,GAYA,SAAAD,EAAA1wB,GACA,IAAA36B,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAKA,OAJA2wC,EAAA9zC,KAAAutE,GAEArrD,EAAA0gB,OAAAia,EAAA2N,aAEA/V,EAAAz0C,KAAAwtE,EAAA3uE,KAAAmB,KAAA68C,EAAA36B,IA+DA,OAhFAgyB,EAAAq5B,EAAAC,GA+BAD,EAAA5uE,UAAAitE,YAAA,WACA,IAAAF,EAAAvoE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAsqE,EAAAtqE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAAqpE,GAKA/gB,OAAA,EAEAzrD,KAAA0tE,SACAjiB,EAAAzrD,KAAA0tE,OAAA,QAGAhC,EAAA13E,KAAA,IAAAo5E,GAAAptE,KAAAugD,SACA2sB,MAAAltE,KAAA2tE,OACAve,KAAApvD,KAAA4tE,MACAniB,WAGAzrD,KAAA2rE,gBAAA,EAEA,IAAA/oC,EAAA5iC,KAAAugD,QAAAiK,aAEAxsD,MAAAgI,QAAAhG,KAAA2tE,UACA3tE,KAAA2tE,QAAA3tE,KAAA4tE,QAGA,QAAAt6E,EAAA,EAAmBA,EAAAsvC,EAAA3tC,OAAmB3B,IAAA,CACtC,IAAA00B,EAAA4a,EAAAtvC,GAGA,GAAA0M,KAAA2tE,OAAA9oE,QAAAmjB,EAAAonC,OAAA,GAEA,IAAA+b,EAAA,IAAAsC,EAAAztE,KAAAugD,SACAv4B,QAEAokD,YAAA,EAEAE,iBAAA,IAGAnB,EAAAj0B,SAAA,OAAAlvB,EAAAonC,KAAA,cACAsc,EAAA13E,KAAAm3E,IAIA,OAAAO,GAGA6B,EAjFA,CAkFCvB,IAEDvpE,GAAAijD,kBAAA,kBAAA6nB,IAYA,IAAAM,GAAA,SAAApB,GAYA,SAAAoB,EAAAhxB,EAAA36B,GACA4xB,EAAA9zC,KAAA6tE,GAEA,IAAA7lD,EAAA9F,EAAA8F,MACAgiC,EAAA9nC,EAAA8nC,IACAoK,EAAAvX,EAAAuX,cAGAlyC,EAAAkqD,YAAA,EACAlqD,EAAAoqD,iBAAA,EACApqD,EAAAupC,MAAAzB,EAAA1nD,KACA4f,EAAAC,SAAA6nC,EAAA7pB,WAAAi0B,KAAApK,EAAAC,QAEA,IAAAhqD,EAAAw0C,EAAAz0C,KAAAysE,EAAA5tE,KAAAmB,KAAA68C,EAAA36B,IAKA,OAHAjiB,EAAA+nB,QACA/nB,EAAA+pD,MACAhiC,EAAAvI,iBAAA,YAAAD,GAAAvf,IAAAi/D,SACAj/D,EAwCA,OArEAi0C,EAAA25B,EAAApB,GA6CAoB,EAAAlvE,UAAAuD,YAAA,SAAA4tC,GACA28B,EAAA9tE,UAAAuD,YAAArD,KAAAmB,MACAA,KAAAugD,QAAA6T,YAAAp0D,KAAAgqD,IAAA7pB,WACAngC,KAAAk/D,OAAAl/D,KAAAgqD,IAAA7pB,YAaA0tC,EAAAlvE,UAAAugE,OAAA,SAAApvB,GACA,IAAAka,EAAAhqD,KAAAgqD,IACAoK,EAAAp0D,KAAAugD,QAAA6T,cAGAp0D,KAAAmiB,SAAA6nC,EAAA7pB,WAAAi0B,KAAApK,EAAAC,UAGA4jB,EAtEA,CAuEC1B,IAED1pE,GAAAijD,kBAAA,wBAAAmoB,IAcA,IAAAC,GAAA,SAAAC,GAeA,SAAAD,EAAAjxB,EAAA36B,EAAAm+B,GAEA,OADAvM,EAAA9zC,KAAA8tE,GACAr5B,EAAAz0C,KAAA+tE,EAAAlvE,KAAAmB,KAAA68C,EAAA36B,EAAAm+B,IAkKA,OAlLAnM,EAAA45B,EAAAC,GA2BAD,EAAAnvE,UAAAokD,cAAA,WACA,6BAAAgrB,EAAApvE,UAAAokD,cAAAlkD,KAAAmB,OAGA8tE,EAAAnvE,UAAAktE,qBAAA,WACA,6BAAAkC,EAAApvE,UAAAktE,qBAAAhtE,KAAAmB,OAeA8tE,EAAAnvE,UAAAugE,OAAA,SAAApvB,GACA9vC,KAAAguE,UAAAl+B,GAAA,aAAAA,EAAAvyC,MAAA,gBAAAuyC,EAAAvyC,OACAyC,KAAAiuE,SAAAjuE,KAAAkuE,qBAEAH,EAAApvE,UAAAugE,OAAArgE,KAAAmB,OAYA8tE,EAAAnvE,UAAAsvE,SAAA,SAAAjmD,GACA,GAAAhoB,KAAAguE,SAAAhmD,EAAA,CASA,GALAhoB,KAAAmuE,iBACAnuE,KAAAmuE,eAAAnuE,KAAAk/D,OAAA1/C,KAAAxf,OAIAA,KAAAguE,OAAA,CACA,IAAAI,EAAApuE,KAAAugD,QAAA8Y,qBAAA3J,wBAAA1vD,KAAAguE,QAEAI,GACAA,EAAAzzB,oBAAA,OAAA36C,KAAAmuE,gBAGAnuE,KAAAguE,OAAA,KAMA,GAHAhuE,KAAAguE,OAAAhmD,EAGAhoB,KAAAguE,OAAA,CACAhuE,KAAAguE,OAAA9iD,KAAA,SAEA,IAAAmjD,EAAAruE,KAAAugD,QAAA8Y,qBAAA3J,wBAAA1vD,KAAAguE,QAEAK,GACAA,EAAA5uD,iBAAA,OAAAzf,KAAAmuE,mBAaAL,EAAAnvE,UAAAuvE,kBAAA,WAGA,IAFA,IAAAtrC,EAAA5iC,KAAAugD,QAAAiK,iBAEAl3D,EAAAsvC,EAAA3tC,OAAA,EAAmC3B,GAAA,EAAQA,IAAA,CAE3C,IAAA00B,EAAA4a,EAAAtvC,GAEA,GAAA00B,EAAAonC,OAAApvD,KAAA4tE,MACA,OAAA5lD,IAcA8lD,EAAAnvE,UAAA2vE,eAAA,WACA,OAAAtuE,KAAAguE,QAAAhuE,KAAAguE,OAAAviB,MACAzrD,KAAAguE,OAAAviB,MAEAzrD,KAAAmhD,SAAAjB,GAAAlgD,KAAA4tE,SAWAE,EAAAnvE,UAAA6sE,WAAA,WAEA,OADAxrE,KAAAwgD,SAAA7/C,MAAAX,KAAAsuE,iBACAP,EAAApvE,UAAA6sE,WAAA3sE,KAAAmB,OAWA8tE,EAAAnvE,UAAAitE,YAAA,WACA,IAAAF,KAEA,IAAA1rE,KAAAguE,OACA,OAAAtC,EAGA,IAAA3hB,EAAA/pD,KAAAguE,OAAAjkB,KAEA,IAAAA,EACA,OAAA2hB,EAGA,QAAAp4E,EAAA,EAAAuQ,EAAAkmD,EAAA90D,OAAoC3B,EAAAuQ,EAAOvQ,IAAA,CAC3C,IAAA02D,EAAAD,EAAAz2D,GACAi7E,EAAA,IAAAV,GAAA7tE,KAAAugD,SAAwDv4B,MAAAhoB,KAAAguE,OAAAhkB,QAExD0hB,EAAA13E,KAAAu6E,GAGA,OAAA7C,GAGAoC,EAnLA,CAoLCP,IAUDO,GAAAnvE,UAAAivE,MAAA,WAQAE,GAAAnvE,UAAA+/D,aAAA,WAEAj8D,GAAAijD,kBAAA,iBAAAooB,IAYA,IAAAU,GAAA,SAAAT,GAeA,SAAAS,EAAA3xB,EAAA36B,EAAAm+B,GACAvM,EAAA9zC,KAAAwuE,GAEA,IAAAvuE,EAAAw0C,EAAAz0C,KAAA+tE,EAAAlvE,KAAAmB,KAAA68C,EAAA36B,EAAAm+B,IAEAzd,EAAAia,EAAA2N,aACAkiB,EAAAltD,GAAAvf,IAAA0sE,oBAMA,OAJA/pC,EAAAnjB,iBAAA,SAAAitD,GACAzsE,EAAAu7C,GAAA,qBACA5Y,EAAA+X,oBAAA,SAAA+xB,KAEAzsE,EAmDA,OA7EAi0C,EAAAs6B,EAAAT,GAuCAS,EAAA7vE,UAAAguE,mBAAA,SAAA78B,GAKA,IAJA,IAAAlN,EAAA5iC,KAAA68C,SAAA2N,aACArjD,GAAA,EAGA7T,EAAA,EAAAuQ,EAAA++B,EAAA3tC,OAAsC3B,EAAAuQ,EAAOvQ,IAAA,CAC7C,IAAA00B,EAAA4a,EAAAtvC,GAEA,GAAA00B,EAAAonC,OAAApvD,KAAA4tE,OAAA,YAAA5lD,EAAAkD,KAAA,CACA/jB,GAAA,EACA,OAKAA,EACAnH,KAAAqzC,UAEArzC,KAAA2C,UAYA6rE,EAAA7vE,UAAAokD,cAAA,WACA,iCAAAgrB,EAAApvE,UAAAokD,cAAAlkD,KAAAmB,OAGAwuE,EAAA7vE,UAAAktE,qBAAA,WACA,iCAAAkC,EAAApvE,UAAAktE,qBAAAhtE,KAAAmB,OAGAwuE,EA9EA,CA+ECjB,IAUDiB,GAAA7vE,UAAAivE,MAAA,eAQAY,GAAA7vE,UAAA+/D,aAAA,eAEAj8D,GAAAijD,kBAAA,qBAAA8oB,IAYA,IAAAC,GAAA,SAAAV,GAeA,SAAAU,EAAA5xB,EAAA36B,EAAAm+B,GAEA,OADAvM,EAAA9zC,KAAAyuE,GACAh6B,EAAAz0C,KAAA+tE,EAAAlvE,KAAAmB,KAAA68C,EAAA36B,EAAAm+B,IAmBA,OAnCAnM,EAAAu6B,EAAAV,GA2BAU,EAAA9vE,UAAAokD,cAAA,WACA,8BAAAgrB,EAAApvE,UAAAokD,cAAAlkD,KAAAmB,OAGAyuE,EAAA9vE,UAAAktE,qBAAA,WACA,8BAAAkC,EAAApvE,UAAAktE,qBAAAhtE,KAAAmB,OAGAyuE,EApCA,CAqCClB,IAUDkB,GAAA9vE,UAAAivE,MAAA,YAQAa,GAAA9vE,UAAA+/D,aAAA,YAEAj8D,GAAAijD,kBAAA,kBAAA+oB,IAYA,IAAAC,GAAA,SAAArB,GAYA,SAAAqB,EAAA7xB,EAAA36B,GACA4xB,EAAA9zC,KAAA0uE,GAEAxsD,EAAA8F,OACA60B,SACAuS,KAAAltC,EAAAktC,KACA3D,MAAAvpC,EAAAktC,KAAA,YACAgd,YAAA,EACAp4C,SAAA,EACA9I,KAAA,YAIAhJ,EAAAkqD,YAAA,EAEAlqD,EAAAlsB,KAAA,0BAEA,IAAAiK,EAAAw0C,EAAAz0C,KAAAqtE,EAAAxuE,KAAAmB,KAAA68C,EAAA36B,IAIA,OAFAjiB,EAAAi3C,SAAA,0BACAj3C,EAAA2sD,YAAA,WAAA1qC,EAAAktC,KAAA,oBACAnvD,EAoBA,OApDAi0C,EAAAw6B,EAAArB,GAgDAqB,EAAA/vE,UAAAuD,YAAA,SAAA4tC,GACA9vC,KAAA68C,SAAAgF,SAAA,qBAAAjb,QAGA8nC,EArDA,CAsDClC,IAED/pE,GAAAijD,kBAAA,0BAAAgpB,IAYA,IAAAC,GAAA,SAAAZ,GAeA,SAAAY,EAAA9xB,EAAA36B,EAAAm+B,GAEA,OADAvM,EAAA9zC,KAAA2uE,GACAl6B,EAAAz0C,KAAA+tE,EAAAlvE,KAAAmB,KAAA68C,EAAA36B,EAAAm+B,IAuCA,OAvDAnM,EAAAy6B,EAAAZ,GA2BAY,EAAAhwE,UAAAokD,cAAA,WACA,6BAAAgrB,EAAApvE,UAAAokD,cAAAlkD,KAAAmB,OAGA2uE,EAAAhwE,UAAAktE,qBAAA,WACA,6BAAAkC,EAAApvE,UAAAktE,qBAAAhtE,KAAAmB,OAWA2uE,EAAAhwE,UAAAitE,YAAA,WACA,IAAAF,KAQA,OANA1rE,KAAA68C,SAAAyW,OAAAtzD,KAAA68C,SAAAyW,MAAAkD,2BAAAx2D,KAAA68C,SAAAgF,SAAA,uBACA6pB,EAAA13E,KAAA,IAAA06E,GAAA1uE,KAAAugD,SAA4D6O,KAAApvD,KAAA4tE,SAE5D5tE,KAAA2rE,gBAAA,GAGAoC,EAAApvE,UAAAitE,YAAA/sE,KAAAmB,KAAA0rE,IAGAiD,EAxDA,CAyDCpB,IAUDoB,GAAAhwE,UAAAivE,MAAA,WAQAe,GAAAhwE,UAAA+/D,aAAA,WAEAj8D,GAAAijD,kBAAA,iBAAAipB,IAaA,IAAAC,GAAA,SAAAvB,GAGA,SAAAuB,IAEA,OADA96B,EAAA9zC,KAAA4uE,GACAn6B,EAAAz0C,KAAAqtE,EAAA7oE,MAAAxE,KAAAmD,YAmBA,OAvBA+wC,EAAA06B,EAAAvB,GAOAuB,EAAAjwE,UAAAy3C,SAAA,SAAA74C,EAAAuC,EAAAg4C,GACA,IAAAt0B,EAAA,oCAAAxjB,KAAAmhD,SAAAnhD,KAAAwgD,SAAAiL,OAYA,MAVA,aAAAzrD,KAAAwgD,SAAAx4B,MAAAonC,OACA5rC,GAAA,oHAAAxjB,KAAAmhD,SAAA,+BAGA39B,GAAA,UAEA6pD,EAAA1uE,UAAAy3C,SAAAv3C,KAAAmB,KAAAzC,EAAAsF,GACA2gB,aACK1jB,GAAAg4C,IAKL82B,EAxBA,CAyBCpC,IAED/pE,GAAAijD,kBAAA,mBAAAkpB,IAWA,IAAAC,GAAA,SAAAd,GAGA,SAAAc,EAAAhyB,GACA,IAAA36B,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA2wC,EAAA9zC,KAAA6uE,GAIA,IAAA5uE,EAAAw0C,EAAAz0C,KAAA+tE,EAAAlvE,KAAAmB,KAAA68C,EAAA36B,IAOA,OALAjiB,EAAAytE,OAAA,aACA,8BAAA7oE,QAAA5E,EAAAsgD,QAAAuuB,YAAA,IACA7uE,EAAAytE,OAAA,YAEAztE,EAAA0qE,YAAA/d,YAAA1M,GAAAjgD,EAAAytE,SACAztE,EAwCA,OAvDAi0C,EAAA26B,EAAAd,GA0BAc,EAAAlwE,UAAAokD,cAAA,WACA,8BAAAgrB,EAAApvE,UAAAokD,cAAAlkD,KAAAmB,OAGA6uE,EAAAlwE,UAAAktE,qBAAA,WACA,8BAAAkC,EAAApvE,UAAAktE,qBAAAhtE,KAAAmB,OAWA6uE,EAAAlwE,UAAAitE,YAAA,WACA,IAAAF,KASA,OAPA1rE,KAAA68C,SAAAyW,OAAAtzD,KAAA68C,SAAAyW,MAAAkD,2BAAAx2D,KAAA68C,SAAAgF,SAAA,uBACA6pB,EAAA13E,KAAA,IAAA06E,GAAA1uE,KAAAugD,SAA4D6O,KAAApvD,KAAA0tE,UAE5D1tE,KAAA2rE,gBAAA,GAGAD,EAAAqC,EAAApvE,UAAAitE,YAAA/sE,KAAAmB,KAAA0rE,EAAAkD,KAIAC,EAxDA,CAyDCtB,IAUDsB,GAAAlwE,UAAAgvE,QAAA,wBASAkB,GAAAlwE,UAAA+/D,aAAA,YAEAj8D,GAAAijD,kBAAA,iBAAAmpB,IAYA,IAAAE,GAAA,SAAAtC,GAYA,SAAAsC,EAAAlyB,EAAA36B,GACA4xB,EAAA9zC,KAAA+uE,GAEA,IAAA/mD,EAAA9F,EAAA8F,MACA4a,EAAAia,EAAAmyB,cAGA9sD,EAAAupC,MAAAzjC,EAAAyjC,OAAAzjC,EAAArxB,UAAA,UACAurB,EAAAC,SAAA6F,EAAA6mC,QAEA,IAAA5uD,EAAAw0C,EAAAz0C,KAAAysE,EAAA5tE,KAAAmB,KAAA68C,EAAA36B,IAEAjiB,EAAA+nB,QAEA/nB,EAAAi3C,SAAA,OAAAlvB,EAAAonC,KAAA,cAEA,IAAAsd,EAAA,WACA,QAAA75B,EAAA1vC,UAAAlO,OAAAmN,EAAApE,MAAA60C,GAAAC,EAAA,EAAqEA,EAAAD,EAAaC,IAClF1wC,EAAA0wC,GAAA3vC,UAAA2vC,GAGA7yC,EAAA0sE,mBAAAnoE,MAAAvE,EAAAmC,IAOA,OAJAwgC,EAAAnjB,iBAAA,SAAAitD,GACAzsE,EAAAu7C,GAAA,qBACA5Y,EAAA+X,oBAAA,SAAA+xB,KAEAzsE,EA0DA,OAjGAi0C,EAAA66B,EAAAtC,GA0CAsC,EAAApwE,UAAAy3C,SAAA,SAAA74C,EAAAuC,EAAAg4C,GACA,IAAAt0B,EAAA,oCAAAxjB,KAAAmhD,SAAAnhD,KAAAwgD,SAAAiL,OAYA,MAVA,cAAAzrD,KAAAwgD,SAAAx4B,MAAAonC,OACA5rC,GAAA,oHAAAxjB,KAAAmhD,SAAA,mCAGA39B,GAAA,UAEAipD,EAAA9tE,UAAAy3C,SAAAv3C,KAAAmB,KAAAzC,EAAAsF,GACA2gB,aACK1jB,GAAAg4C,IAkBLi3B,EAAApwE,UAAAuD,YAAA,SAAA4tC,GACA,IAAAlN,EAAA5iC,KAAAugD,QAAAyuB,cAEAvC,EAAA9tE,UAAAuD,YAAArD,KAAAmB,KAAA8vC,GAEA,QAAAx8C,EAAA,EAAmBA,EAAAsvC,EAAA3tC,OAAmB3B,IAAA,CACtC,IAAA00B,EAAA4a,EAAAtvC,GAEA00B,EAAA6mC,QAAA7mC,IAAAhoB,KAAAgoB,QAcA+mD,EAAApwE,UAAAguE,mBAAA,SAAA78B,GACA9vC,KAAAmiB,SAAAniB,KAAAgoB,MAAA6mC,UAGAkgB,EAlGA,CAmGC5C,IAED1pE,GAAAijD,kBAAA,qBAAAqpB,IAYA,IAAAE,GAAA,SAAAzB,GAYA,SAAAyB,EAAApyB,GACA,IAAA36B,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAKA,OAJA2wC,EAAA9zC,KAAAivE,GAEA/sD,EAAA0gB,OAAAia,EAAAmyB,cAEAv6B,EAAAz0C,KAAAwtE,EAAA3uE,KAAAmB,KAAA68C,EAAA36B,IAqDA,OAtEAgyB,EAAA+6B,EAAAzB,GA4BAyB,EAAAtwE,UAAAokD,cAAA,WACA,0BAAAyqB,EAAA7uE,UAAAokD,cAAAlkD,KAAAmB,OAGAivE,EAAAtwE,UAAAktE,qBAAA,WACA,0BAAA2B,EAAA7uE,UAAAktE,qBAAAhtE,KAAAmB,OAcAivE,EAAAtwE,UAAAitE,YAAA,WACA,IAAAF,EAAAvoE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAGAnD,KAAA2rE,eAAA,EAIA,IAFA,IAAA/oC,EAAA5iC,KAAAugD,QAAAyuB,cAEA17E,EAAA,EAAmBA,EAAAsvC,EAAA3tC,OAAmB3B,IAAA,CACtC,IAAA00B,EAAA4a,EAAAtvC,GAEAo4E,EAAA13E,KAAA,IAAA+6E,GAAA/uE,KAAAugD,SACAv4B,QAEAokD,YAAA,EAEAE,iBAAA,KAIA,OAAAZ,GAGAuD,EAvEA,CAwECjD,IAUDiD,GAAAtwE,UAAA+/D,aAAA,cACAj8D,GAAAijD,kBAAA,mBAAAupB,IAYA,IAAAC,GAAA,SAAAzC,GAYA,SAAAyC,EAAAryB,EAAA36B,GACA4xB,EAAA9zC,KAAAkvE,GAEA,IAAAzjB,EAAAvpC,EAAArqB,KACAA,EAAA0gD,WAAAkT,EAAA,IAGAvpC,EAAAupC,QACAvpC,EAAAC,SAAA,IAAAtqB,EACAqqB,EAAAkqD,YAAA,EACAlqD,EAAAoqD,iBAAA,EAEA,IAAArsE,EAAAw0C,EAAAz0C,KAAAysE,EAAA5tE,KAAAmB,KAAA68C,EAAA36B,IAMA,OAJAjiB,EAAAwrD,QACAxrD,EAAApI,OAEAoI,EAAAu7C,GAAAqB,EAAA,aAAA58C,EAAAi/D,QACAj/D,EAmCA,OAhEAi0C,EAAAg7B,EAAAzC,GA6CAyC,EAAAvwE,UAAAuD,YAAA,SAAA4tC,GACA28B,EAAA9tE,UAAAuD,YAAArD,KAAAmB,MACAA,KAAA68C,SAAAsyB,aAAAnvE,KAAAnI,OAaAq3E,EAAAvwE,UAAAugE,OAAA,SAAApvB,GACA9vC,KAAAmiB,SAAAniB,KAAA68C,SAAAsyB,iBAAAnvE,KAAAnI,OAGAq3E,EAjEA,CAkEC/C,IAUD+C,GAAAvwE,UAAAqsE,cAAA,SAEAvoE,GAAAijD,kBAAA,uBAAAwpB,IAYA,IAAAE,GAAA,SAAAnD,GAYA,SAAAmD,EAAAvyB,EAAA36B,GACA4xB,EAAA9zC,KAAAovE,GAEA,IAAAnvE,EAAAw0C,EAAAz0C,KAAAisE,EAAAptE,KAAAmB,KAAA68C,EAAA36B,IAOA,OALAjiB,EAAAovE,mBACApvE,EAAAqvE,cAEArvE,EAAAu7C,GAAAqB,EAAA,YAAA58C,EAAAovE,kBACApvE,EAAAu7C,GAAAqB,EAAA,aAAA58C,EAAAqvE,aACArvE,EAsKA,OA3LAi0C,EAAAk7B,EAAAnD,GAgCAmD,EAAAzwE,UAAAy3C,SAAA,WACA,IAAAhB,EAAA62B,EAAAttE,UAAAy3C,SAAAv3C,KAAAmB,MASA,OAPAA,KAAAuvE,SAAAn5B,EAAA,OACA/0C,UAAA,0BACAmiB,UAAA,OAGA4xB,EAAA1xB,YAAA1jB,KAAAuvE,UAEAn6B,GAGAg6B,EAAAzwE,UAAAuiD,QAAA,WACAlhD,KAAAuvE,SAAA,KAEAtD,EAAAttE,UAAAuiD,QAAAriD,KAAAmB,OAWAovE,EAAAzwE,UAAAokD,cAAA,WACA,2BAAAkpB,EAAAttE,UAAAokD,cAAAlkD,KAAAmB,OAGAovE,EAAAzwE,UAAAktE,qBAAA,WACA,2BAAAI,EAAAttE,UAAAktE,qBAAAhtE,KAAAmB,OAWAovE,EAAAzwE,UAAA6sE,WAAA,WACA,IAAAD,EAAA,IAAA5wD,GAAA3a,KAAA68C,UACA2yB,EAAAxvE,KAAAyvE,gBAEA,GAAAD,EACA,QAAAl8E,EAAAk8E,EAAAv6E,OAAA,EAAoC3B,GAAA,EAAQA,IAC5Ci4E,EAAAzpB,SAAA,IAAAotB,GAAAlvE,KAAA68C,UAA+DhlD,KAAA23E,EAAAl8E,GAAA,OAI/D,OAAAi4E,GAQA6D,EAAAzwE,UAAAuqE,qBAAA,WAEAlpE,KAAAo1C,KAAA3lC,aAAA,gBAAAzP,KAAA68C,SAAAsyB,iBAgBAC,EAAAzwE,UAAAuD,YAAA,SAAA4tC,GAQA,IANA,IAAA4/B,EAAA1vE,KAAA68C,SAAAsyB,eACAK,EAAAxvE,KAAAyvE,gBAGAE,EAAAH,EAAA,GAEAl8E,EAAA,EAAmBA,EAAAk8E,EAAAv6E,OAAkB3B,IACrC,GAAAk8E,EAAAl8E,GAAAo8E,EAAA,CACAC,EAAAH,EAAAl8E,GACA,MAGA0M,KAAA68C,SAAAsyB,aAAAQ,IAWAP,EAAAzwE,UAAA8wE,cAAA,WACA,OAAAzvE,KAAAwgD,SAAAivB,eAAAzvE,KAAAwgD,SAAAqC,eAAA7iD,KAAAwgD,SAAAqC,cAAA4sB,eAYAL,EAAAzwE,UAAAixE,sBAAA,WACA,OAAA5vE,KAAA68C,SAAAyW,OAAAtzD,KAAA68C,SAAAyW,MAAAgH,sBAAAt6D,KAAAyvE,iBAAAzvE,KAAAyvE,gBAAAx6E,OAAA,GAaAm6E,EAAAzwE,UAAA0wE,iBAAA,SAAAv/B,GACA9vC,KAAA4vE,wBACA5vE,KAAAo3C,YAAA,cAEAp3C,KAAAk3C,SAAA,eAcAk4B,EAAAzwE,UAAA2wE,YAAA,SAAAx/B,GACA9vC,KAAA4vE,0BACA5vE,KAAAuvE,SAAA/rD,UAAAxjB,KAAA68C,SAAAsyB,eAAA,MAIAC,EA5LA,CA6LChE,IAUDgE,GAAAzwE,UAAA+/D,aAAA,gBAEAj8D,GAAAijD,kBAAA,yBAAA0pB,IAaA,IAAAS,GAAA,SAAA1vE,GAGA,SAAA0vE,IAEA,OADA/7B,EAAA9zC,KAAA6vE,GACAp7B,EAAAz0C,KAAAG,EAAAqE,MAAAxE,KAAAmD,YA2BA,OA/BA+wC,EAAA27B,EAAA1vE,GAaA0vE,EAAAlxE,UAAAokD,cAAA,WACA,oBAAA5iD,EAAAxB,UAAAokD,cAAAlkD,KAAAmB,OAWA6vE,EAAAlxE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAArB,KAAA+iD,mBAIA8sB,EAhCA,CAiCCptE,IAEDA,GAAAijD,kBAAA,SAAAmqB,IAYA,IAAAC,GAAA,SAAAC,GAGA,SAAAD,IAEA,OADAh8B,EAAA9zC,KAAA8vE,GACAr7B,EAAAz0C,KAAA+vE,EAAAvrE,MAAAxE,KAAAmD,YAgCA,OApCA+wC,EAAA47B,EAAAC,GAaAD,EAAAnxE,UAAAokD,cAAA,WACA,mCAAAgtB,EAAApxE,UAAAokD,cAAAlkD,KAAAmB,OAWA8vE,EAAAnxE,UAAAy3C,SAAA,WACA,IAAAhB,EAAA26B,EAAApxE,UAAAy3C,SAAAv3C,KAAAmB,MACAqB,UAAArB,KAAA+iD,kBAMA,OADA3N,EAAA5xB,UAAA,IACA4xB,GAGA06B,EArCA,CAsCCD,IAEDptE,GAAAijD,kBAAA,sBAAAoqB,IAYA,IAAAE,GAAA,SAAA7vE,GAGA,SAAA6vE,IAEA,OADAl8B,EAAA9zC,KAAAgwE,GACAv7B,EAAAz0C,KAAAG,EAAAqE,MAAAxE,KAAAmD,YAgBA,OApBA+wC,EAAA87B,EAAA7vE,GAaA6vE,EAAArxE,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,OACAqB,UAAA,kBACAmhE,IAAA,SAIAwN,EArBA,CAsBCvtE,IAUDutE,GAAArxE,UAAA6hD,UACA1+B,UAAA,qRAGArf,GAAAijD,kBAAA,aAAAsqB,IAaA,IAAAC,GAAA,SAAAC,GAYA,SAAAD,EAAApzB,EAAA36B,GACA4xB,EAAA9zC,KAAAiwE,GAEA,IAAAhwE,EAAAw0C,EAAAz0C,KAAAkwE,EAAArxE,KAAAmB,KAAA68C,EAAA36B,IAGA,OADAjiB,EAAAu7C,GAAAqB,EAAA,QAAA58C,EAAA2mC,MACA3mC,EA+BA,OAhDAi0C,EAAA+7B,EAAAC,GA8BAD,EAAAtxE,UAAAokD,cAAA,WACA,2BAAAmtB,EAAAvxE,UAAAokD,cAAAlkD,KAAAmB,OAWAiwE,EAAAtxE,UAAA43C,QAAA,WACA,IAAA1hB,EAAA70B,KAAA68C,SAAAhoB,QAEA,OAAAA,EAAA70B,KAAAmhD,SAAAtsB,EAAAq0B,SAAA,IAGA+mB,EAjDA,CAkDCplB,IASDolB,GAAAtxE,UAAA6hD,SAAAJ,GAAAyK,GAAAlsD,UAAA6hD,UACA0L,aAAA,EACAJ,YAAA,EACAW,WAAA,EACAvB,aAAA,IAGAzoD,GAAAijD,kBAAA,eAAAuqB,IAMA,IAEAE,IAAA,gBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,gBACAC,IAAA,kBACAC,IAAA,cACAC,IAAA,gBACAC,IAAA,iBAEAC,IAAA,cACAC,IAAA,0BACAC,IAAA,mBAaAC,IACApP,iBACAzrB,SAAA,yBACAj9B,GAAA,+BACAyyC,MAAA,QACAvpC,SAAAiuD,GAAAM,GAAAD,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAGA1O,mBACA1rB,SAAA,2BACAj9B,GAAA,iCACAyyC,MAAA,eACAvpC,SAAAyuD,GAAAC,GAAAC,KAGAziE,OACA6nC,SAAA,yBACAj9B,GAAA,+BACAyyC,MAAA,QACAvpC,SAAAuuD,GAAAN,GAAAK,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAGAvO,WACA7rB,SAAA,2BACAj9B,GAAA,KACAyyC,MAAA,kBACAvpC,UAAA,iHAGAigD,YACAlsB,SAAA,4BACAj9B,GAAA,0BACAyyC,MAAA,cACAvpC,UAAA,uPAGA8/C,aACA/rB,SAAA,6BACAj9B,GAAA,wBACAyyC,MAAA,YACAvpC,UAAA,8IACA8R,QAAA,EACAu+B,OAAA,SAAA30D,GACA,eAAAA,EAAA,KAAAmzE,OAAAnzE,KAIA6jE,aACAxrB,SAAA,6BACAj9B,GAAA,iCACAyyC,MAAA,eACAvpC,SAAAyuD,GAAAC,KAIAhP,aACA3rB,SAAA,6BACAj9B,GAAA,2BACAyyC,MAAA,SAIAoW,eACA5rB,SAAA,+BACAj9B,GAAA,6BACAyyC,MAAA,eACAvpC,SAAA2uD,GAAAD,GAAAD,MAsBA,SAAAK,GAAAvyE,EAAA8zD,GAKA,GAJAA,IACA9zD,EAAA8zD,EAAA9zD,IAGAA,GAAA,SAAAA,EACA,OAAAA,EAxBAqyE,GAAAlP,YAAA1/C,QAAA4uD,GAAApP,gBAAAx/C,QAoFA,IAAA+uD,GAAA,SAAAf,GAYA,SAAAe,EAAAp0B,EAAA36B,GACA4xB,EAAA9zC,KAAAixE,GAEA/uD,EAAAuqC,WAAA,EAEA,IAAAxsD,EAAAw0C,EAAAz0C,KAAAkwE,EAAArxE,KAAAmB,KAAA68C,EAAA36B,IAsCA,OApCAjiB,EAAA44D,cAAAr5C,GAAAvf,IAAA44D,eAGA54D,EAAA8rD,OACA9rD,EAAA8qD,eAAA9qD,EAAA+qD,gBAAA,EAEA/qD,EAAAixE,UAAA96B,EAAA,KACA/0C,UAAA,mBACAyI,YAAA7J,EAAAkhD,SAAA,2BAEAlhD,EAAAm1C,KAAA1xB,YAAAzjB,EAAAixE,WAEAjxE,EAAAkxE,mBAGAvtC,IAAA1hB,EAAAkvD,2BACAnxE,EAAAugD,SAAA4wB,yBAAAnxE,EAAAugD,SAAAqC,cAAAuuB,0BAGAnxE,EAAAu7C,GAAAv7C,EAAA25C,EAAA,uCACA35C,EAAAoxE,eACApxE,EAAA2rD,UAGA3rD,EAAAu7C,GAAAv7C,EAAA25C,EAAA,0CACA35C,EAAAkxE,cACAlxE,EAAA44D,kBAGA7jB,EAAA87B,GAAA,SAAA99E,GACAiN,EAAAu7C,GAAAv7C,EAAA25C,EAAA5mD,EAAAijD,UAAA,SAAAh2C,EAAA44D,iBAGA54D,EAAAugD,SAAA4wB,0BACAnxE,EAAAqxE,kBAEArxE,EA8RA,OApVAi0C,EAAA+8B,EAAAf,GAyDAe,EAAAtyE,UAAAuiD,QAAA,WACAlhD,KAAAkxE,UAAA,KAEAhB,EAAAvxE,UAAAuiD,QAAAriD,KAAAmB,OAgBAixE,EAAAtyE,UAAA4yE,gBAAA,SAAAhzE,GACA,IAAA0C,EAAAjB,KAEAwxE,EAAAruE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACA5F,EAAA4F,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,WAEAnQ,EAAA89E,GAAAvyE,GACAya,EAAAhmB,EAAAgmB,GAAAlV,QAAA,KAAA9D,KAAAygD,KACAgxB,GAAAD,EAAAx4D,GAAA/a,KAAA,KAAA4oB,OAEA,WAAAtpB,EAAA,QAAAyb,EAAA,uBAAAzb,EAAA,qBAAAyC,KAAAmhD,SAAAnuD,EAAAy4D,OAAA,KAAAluD,EAAA,gCAAAk0E,EAAA,MAAAxrE,OAAAjT,EAAAkvB,QAAAhkB,IAAA,SAAAwzE,GACA,IAAAC,EAAA34D,EAAA,IAAA04D,EAAA,GAAA5tE,QAAA,WAEA,sBAAA6tE,EAAA,YAAAD,EAAA,4BAAAD,EAAA,IAAAE,EAAA,KAAA1wE,EAAAkgD,SAAAuwB,EAAA,iBAAAzzE,KAAA,OACKgI,OAAA,aAAAhI,KAAA,KAaLgzE,EAAAtyE,UAAAizE,iBAAA,WACA,IAAAJ,EAAA,wBAAAxxE,KAAAygD,IAEA,0EAAA+wB,EAAA,KAAAxxE,KAAAmhD,SAAA,oBAAAnhD,KAAAuxE,gBAAA,QAAAC,GAAA,8CAAAxxE,KAAAuxE,gBAAA,cAAAC,GAAA,yBAAAvzE,KAAA,KAaAgzE,EAAAtyE,UAAAkzE,iBAAA,WACA,IAAAL,EAAA,uBAAAxxE,KAAAygD,IAEA,0EAAA+wB,EAAA,KAAAxxE,KAAAmhD,SAAA,0BAAAnhD,KAAAuxE,gBAAA,kBAAAC,GAAA,4CAAAxxE,KAAAuxE,gBAAA,oBAAAC,GAAA,yBAAAvzE,KAAA,KAaAgzE,EAAAtyE,UAAAmzE,kBAAA,WACA,IAAAN,EAAA,mBAAAxxE,KAAAygD,IAEA,8EAAA+wB,EAAA,KAAAxxE,KAAAmhD,SAAA,sBAAAnhD,KAAAuxE,gBAAA,cAAAC,GAAA,gDAAAxxE,KAAAuxE,gBAAA,gBAAAC,GAAA,yBAAAvzE,KAAA,KAaAgzE,EAAAtyE,UAAAozE,gBAAA,WACA,OAAA37B,EAAA,OACA/0C,UAAA,4BACAmiB,WAAAxjB,KAAA4xE,mBAAA5xE,KAAA6xE,mBAAA7xE,KAAA8xE,qBAAA7zE,KAAA,OAcAgzE,EAAAtyE,UAAAqzE,cAAA,WACA,OAAA57B,EAAA,OACA/0C,UAAA,0BACAmiB,WAAA,wDAAAxjB,KAAAuxE,gBAAA,+FAAAvxE,KAAAuxE,gBAAA,8FAAAvxE,KAAAuxE,gBAAA,yCAAAtzE,KAAA,OAcAgzE,EAAAtyE,UAAAszE,kBAAA,WACA,IAAAC,EAAAlyE,KAAAmhD,SAAA,8CAEA,OAAA/K,EAAA,OACA/0C,UAAA,8BACAmiB,WAAA,6CAAA0uD,EAAA,KAAAlyE,KAAAmhD,SAAA,4CAAA+wB,EAAA,yDAAAlyE,KAAAmhD,SAAA,qBAAAljD,KAAA,OAIAgzE,EAAAtyE,UAAA43C,QAAA,WACA,OAAAv2C,KAAA+xE,kBAAA/xE,KAAAgyE,gBAAAhyE,KAAAiyE,sBAGAhB,EAAAtyE,UAAA8sD,MAAA,WACA,OAAAzrD,KAAAmhD,SAAA,4BAGA8vB,EAAAtyE,UAAA0sD,YAAA,WACA,OAAArrD,KAAAmhD,SAAA,yEAGA8vB,EAAAtyE,UAAAokD,cAAA,WACA,OAAAmtB,EAAAvxE,UAAAokD,cAAAlkD,KAAAmB,MAAA,4BAWAixE,EAAAtyE,UAAA2iE,UAAA,WACA,IAAAjc,EAAArlD,KAEA,OAh+fA,SAAA80C,EAAAlC,GACA,IAAAu/B,EAAAhvE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,KAEA,OAAA9E,EAAAy2C,GAAArU,OAAA,SAAA2xC,EAAA7zE,GACA,OAAAq0C,EAAAw/B,EAAAt9B,EAAAv2C,OACG4zE,GA29fH1xC,CAAAqwC,GAAA,SAAAsB,EAAAp/E,EAAAuL,GACA,IAvQA62C,EAAAmd,EAuQA9zD,GAvQA22C,EAuQAiQ,EAAAzL,EAAA5mD,EAAAijD,UAvQAsc,EAuQAv/D,EAAAu/D,OApQAye,GAFA57B,EAAAlzB,QAAAkzB,EAAAlzB,QAAAmwD,eAAA5zE,MAEA8zD,IA0QA,YAJA3uB,IAAAnlC,IACA2zE,EAAA7zE,GAAAE,GAGA2zE,QAYAnB,EAAAtyE,UAAA2zE,UAAA,SAAAC,GACA,IAAAhtB,EAAAvlD,KAEAg1C,EAAA87B,GAAA,SAAA99E,EAAAuL,IAvQA,SAAA62C,EAAA32C,EAAA8zD,GACA,GAAA9zD,EAIA,QAAAnL,EAAA,EAAiBA,EAAA8hD,EAAAlzB,QAAAjtB,OAAuB3B,IACxC,GAAA09E,GAAA57B,EAAAlzB,QAAA5uB,GAAAmL,MAAA8zD,KAAA9zD,EAAA,CACA22C,EAAAi9B,cAAA/+E,EACA,OAgQAk/E,CAAAjtB,EAAA3L,EAAA5mD,EAAAijD,UAAAs8B,EAAAh0E,GAAAvL,EAAAu/D,WASA0e,EAAAtyE,UAAAwyE,YAAA,WACA,IAAA7Y,EAAAt4D,KAEAg1C,EAAA87B,GAAA,SAAA99E,GACA,IAAAmL,EAAAnL,EAAAkS,eAAA,WAAAlS,EAAAghC,QAAA,EAEAskC,EAAA1e,EAAA5mD,EAAAijD,UAAAo8B,cAAAl0E,KASA8yE,EAAAtyE,UAAA2yE,gBAAA,WACA,IAAAiB,OAAA,EAEA,IACAA,EAAArzE,KAAAlN,MAA0B++C,EAAA5vC,EAAQsxE,aAAAC,QArclC,4BAscK,MAAAjuC,GACLmP,EAAAV,KAAAzO,GAGA8tC,GACAvyE,KAAAsyE,UAAAC,IASAtB,EAAAtyE,UAAA0yE,aAAA,WACA,GAAArxE,KAAAwgD,SAAA4wB,yBAAA,CAIA,IAAAmB,EAAAvyE,KAAAshE,YAEA,IACAljE,OAAAC,KAAAk0E,GAAAt9E,OACQ87C,EAAA5vC,EAAQsxE,aAAAE,QA7dhB,0BA6dgBzzE,KAAAC,UAAAozE,IAERxhC,EAAA5vC,EAAQsxE,aAAAG,WA/dhB,2BAieK,MAAAnuC,GACLmP,EAAAV,KAAAzO,MASAwsC,EAAAtyE,UAAAk6D,cAAA,WACA,IAAAga,EAAA7yE,KAAAugD,QAAAsB,SAAA,oBAEAgxB,GACAA,EAAAha,iBAWAoY,EAAAtyE,UAAA6tD,iBAAA,WACAxsD,KAAA0rD,oBAAA,KACA1rD,KAAAgzC,IAAa/B,EAAA9vC,EAAQ,UAAAnB,KAAAqtD,eAErB,IAAA/jD,EAAAtJ,KAAAugD,QAAAuyB,WACAC,EAAAzpE,KAAA0pE,eACAC,EAAA3pE,KAAA4pE,eAEAH,EACAA,EAAAxqD,QACK0qD,GACLA,EAAA1qD,SAIA0oD,EArVA,CAsVCpmB,IAEDpoD,GAAAijD,kBAAA,oBAAAurB,IAuBA,IAAAkC,GAAA,SAAAhzE,GAgBA,SAAAgzE,EAAAt2B,EAAA36B,GACA4xB,EAAA9zC,KAAAmzE,GAEA,IAAAC,EAAAlxD,EAAAmxD,gBAA8DtiC,EAAA5vC,EAAQkyE,eAGtE,OAAAnxD,EAAAmxD,iBACAD,GAAA,GAIA,IAAA5yB,EAAAJ,IACAhK,UAAAg9B,EACApyB,qBAAA,GACK9+B,GAELjiB,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA68C,EAAA2D,IAsBA,OApBAvgD,EAAAozE,eAAAnxD,EAAAmxD,gBAAqDtiC,EAAA5vC,EAAQkyE,eAC7DpzE,EAAAqzE,cAAA,KACArzE,EAAAszE,gBAAA,KACAtzE,EAAAuzE,kBAAAh2B,GAAA,WACAv9C,EAAAwzE,iBACK,OAAA52B,GAELu2B,GACAnzE,EAAAszE,gBAAA,IAAAtzE,EAAAozE,eAAApzE,EAAAuzE,mBACAvzE,EAAAszE,gBAAA3lC,QAAAiP,EAAAzH,QAEAn1C,EAAAqzE,cAAA,WACArzE,EAAA0gD,IAAA+yB,eACAl4B,GAAAv7C,EAAA0gD,IAAA+yB,cAAA,SAAAzzE,EAAAuzE,mBAEAvzE,EAAA+yC,IAAA,OAAA/yC,EAAAqzE,gBAGArzE,EAAAu7C,GAAA,OAAAv7C,EAAAqzE,gBAEArzE,EAqDA,OA1GAi0C,EAAAi/B,EAAAhzE,GAwDAgzE,EAAAx0E,UAAAy3C,SAAA,WACA,OAAAj2C,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,UACAqB,UAAA,wBAWA8xE,EAAAx0E,UAAA80E,cAAA,WAOAzzE,KAAAugD,QAAAhS,QAAA,iBAGA4kC,EAAAx0E,UAAAuiD,QAAA,WACAlhD,KAAAuzE,kBACAvzE,KAAAugD,QAAAnL,MACAp1C,KAAAuzE,gBAAAI,UAAA3zE,KAAAugD,QAAAnL,MAEAp1C,KAAAuzE,gBAAAK,cAGA5zE,KAAA2gD,KAAA3gD,KAAA2gD,IAAA+yB,eACA1gC,GAAAhzC,KAAA2gD,IAAA+yB,cAAA,SAAA1zE,KAAAwzE,mBAGAxzE,KAAAszE,eACAtzE,KAAAgzC,IAAA,OAAAhzC,KAAAszE,eAGAtzE,KAAAwzE,mBACAxzE,KAAAwzE,kBAAA51B,SAGA59C,KAAAqzE,eAAA,KACArzE,KAAA6zE,eAAA,KACA7zE,KAAAwzE,kBAAA,KACAxzE,KAAAszE,cAAA,KACAnzE,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAGAmzE,EA3GA,CA4GC1wE,IAEDA,GAAAijD,kBAAA,gBAAAytB,IAeA,IAAAW,GAAA,SAAA3pB,GACA,IAAA/U,EAAA+U,EAAA/U,KAGA,GAAAA,EAAApX,aAAA,OAEA,OADAmsB,EAAA0M,iBAAAzhB,EAAAmV,MACA,EAeA,IAAAtV,EAAAkV,EAAAtQ,GAAA,UACAk6B,KACAxpB,EAAA,GAGA,IAAAtV,EAAAhgD,OACA,SAIA,QAAA3B,EAAA,EAAiBA,EAAA2hD,EAAAhgD,OAAoB3B,IAAA,CACrC,IAAA0b,EAAAimC,EAAA3hD,GAAAi3D,IAEAv7C,IAAA,IAAA+kE,EAAAlvE,QAAAmK,IACA+kE,EAAA//E,KAAAgb,GAKA,QAAA+kE,EAAA9+E,SAMA,IAAA8+E,EAAA9+E,SACAs1D,EAAAwpB,EAAA,IAGA5pB,EAAA0M,iBAAAtM,IACA,IAOAypB,GAAA51E,OAAA4R,kBAA0D,aAC1DF,IAAA,WACA,OAAA9P,KAAAi0E,WAAA,GAAAzwD,WAEAzT,IAAA,SAAAnS,GAEA,IAAAs2E,EAAgBjjC,EAAA9vC,EAAQC,cAAApB,KAAAmP,SAAAzG,eAGxBwrE,EAAA1wD,UAAA5lB,EAOA,IAJA,IAAAu2E,EAAkBljC,EAAA9vC,EAAQizE,yBAI1BF,EAAAG,WAAAp/E,QACAk/E,EAAAzwD,YAAAwwD,EAAAG,WAAA,IAWA,OAPAr0E,KAAA62C,UAAA,GAII9F,EAAA5vC,EAAQmzE,QAAA31E,UAAA+kB,YAAA7kB,KAAAmB,KAAAm0E,GAGZn0E,KAAAwjB,aAQA+wD,GAAA,SAAAC,EAAAn/B,GAGA,IAFA,IAAAo/B,KAEAnhF,EAAA,EAAiBA,EAAAkhF,EAAAv/E,WACjBw/E,EAAAr2E,OAAAyR,yBAAA2kE,EAAAlhF,GAAA+hD,KAEAo/B,EAAA1kE,KAAA0kE,EAAA3kE,KAHsCxc,KAWtC,OAHAmhF,EAAAvkE,YAAA,EACAukE,EAAAxkE,cAAA,EAEAwkE,GAyBAC,GAAA,SAAAvqB,GACA,IAAA/U,EAAA+U,EAAA/U,KAGA,IAAAA,EAAAu/B,kBAAA,CAIA,IAAA15B,KACA25B,EA/BA,SAAAzqB,GACA,OAAAoqB,IAAApqB,EAAA/U,KAAmCrE,EAAA5vC,EAAQ0zE,iBAAAl2E,UAA6BoyC,EAAA5vC,EAAQmzE,QAAA31E,UAAAq1E,IAAA,aA8BhFc,CAAA3qB,GACA4qB,EAAA,SAAAC,GACA,kBACA,QAAAniC,EAAA1vC,UAAAlO,OAAAmN,EAAApE,MAAA60C,GAAAC,EAAA,EAAqEA,EAAAD,EAAaC,IAClF1wC,EAAA0wC,GAAA3vC,UAAA2vC,GAGA,IAAAmiC,EAAAD,EAAAxwE,MAAA4wC,EAAAhzC,GAIA,OAFA0xE,GAAA3pB,GAEA8qB,KAIA,6CAAA9uE,QAAA,SAAAvC,GACAwxC,EAAAxxC,KAKAq3C,EAAAr3C,GAAAwxC,EAAAxxC,GAIAwxC,EAAAxxC,GAAAmxE,EAAA95B,EAAAr3C,OAGAxF,OAAA4R,eAAAolC,EAAA,YAAAgL,GAAAw0B,GACA7kE,IAAAglE,EAAAH,EAAA7kE,QAGAqlC,EAAAu/B,kBAAA,WACAv/B,EAAAu/B,kBAAA,KACAv2E,OAAAC,KAAA48C,GAAA90C,QAAA,SAAAvC,GACAwxC,EAAAxxC,GAAAq3C,EAAAr3C,KAGAxF,OAAA4R,eAAAolC,EAAA,YAAAw/B,IAIAzqB,EAAAlO,IAAA,YAAA7G,EAAAu/B,qBAOAO,GAAA92E,OAAA4R,kBAAoD,OACpDF,IAAA,WACA,OAAA9P,KAAAg+B,aAAA,OACA8zB,GAA4B/gB,EAAA5vC,EAAQmzE,QAAA31E,UAAAq5C,aAAAn5C,KAAAmB,KAAA,QAGpC,IAEA+P,IAAA,SAAAnS,GAGA,OAFImzC,EAAA5vC,EAAQmzE,QAAA31E,UAAA8Q,aAAA5Q,KAAAmB,KAAA,MAAApC,GAEZA,KAuBAu3E,GAAA,SAAAhrB,GACA,GAAAA,EAAAoQ,kBAAA,CAIA,IAAAnlB,EAAA+U,EAAA/U,KAGA,IAAAA,EAAAggC,gBAAA,CAIA,IAAAC,EA/BA,SAAAlrB,GACA,OAAAoqB,IAAApqB,EAAA/U,KAAmCrE,EAAA5vC,EAAQ0zE,iBAAAl2E,UAAAu2E,IAAA,OA8B3CI,CAAAnrB,GACAorB,EAAAngC,EAAA3lC,aACA+lE,EAAApgC,EAAA+f,KAEA/2D,OAAA4R,eAAAolC,EAAA,MAAAgL,GAAAi1B,GACAtlE,IAAA,SAAAnS,GACA,IAAAq3E,EAAAI,EAAAtlE,IAAAlR,KAAAu2C,EAAAx3C,GAKA,OAFAusD,EAAA0M,iBAAAzhB,EAAAmV,KAEA0qB,MAIA7/B,EAAA3lC,aAAA,SAAA1M,EAAAnF,GACA,IAAAq3E,EAAAM,EAAA12E,KAAAu2C,EAAAryC,EAAAnF,GAMA,MAJA,OAAA6V,KAAA1Q,IACAonD,EAAA0M,iBAAAzhB,EAAAmV,KAGA0qB,GAGA7/B,EAAA+f,KAAA,WACA,IAAA8f,EAAAO,EAAA32E,KAAAu2C,GAWA,OALA0+B,GAAA3pB,KACAA,EAAA0M,iBAAA,IACA6d,GAAAvqB,IAGA8qB,GAGA7/B,EAAAqgC,WACAtrB,EAAA0M,iBAAAzhB,EAAAqgC,YACG3B,GAAA3pB,IACHuqB,GAAAvqB,GAGA/U,EAAAggC,gBAAA,WACAhgC,EAAAggC,gBAAA,KACAhgC,EAAA+f,KAAAqgB,EACApgC,EAAA3lC,aAAA8lE,EACAn3E,OAAA4R,eAAAolC,EAAA,MAAAigC,GACAjgC,EAAAu/B,mBACAv/B,EAAAu/B,wBAKAe,GAAA/gC,GAAA,8SASAghC,GAAA,SAAAlb,GAYA,SAAAkb,EAAAzzD,EAAAm+B,GACAvM,EAAA9zC,KAAA21E,GAEA,IAAA11E,EAAAw0C,EAAAz0C,KAAAy6D,EAAA57D,KAAAmB,KAAAkiB,EAAAm+B,IAEAt4B,EAAA7F,EAAA6F,OACA6tD,GAAA,EAiBA,GAXA7tD,IAAA9nB,EAAA0gD,IAAA80B,aAAA1tD,EAAAwiC,KAAAroC,EAAAltB,KAAA,IAAAktB,EAAAltB,IAAA6gF,mBACA51E,EAAAi7D,UAAAnzC,GAEA9nB,EAAA61E,gBAAA71E,EAAA0gD,KAIAz+B,EAAA6zD,iBACA91E,EAAA+1E,0BAGA/1E,EAAA0gD,IAAAs1B,gBAAA,CAMA,IAJA,IAAAC,EAAAj2E,EAAA0gD,IAAA0zB,WACA8B,EAAAD,EAAAjhF,OACAmhF,KAEAD,KAAA,CACA,IAAA/1D,EAAA81D,EAAAC,GAGA,UAFA/1D,EAAAjR,SAAAzG,gBAGAzI,EAAAu2D,0BAQAv2D,EAAAo5D,qBAAA7J,iBAAApvC,GACAngB,EAAAy4D,mBAAArK,SAAAjuC,EAAA4H,OACA/nB,EAAAuqD,aAAA6D,SAAAjuC,EAAA4H,OACA4tD,GAAA31E,EAAA0gD,IAAA3iB,aAAA,iBAAAi0B,GAAA7xC,EAAAmqC,OACAqrB,GAAA,IAPAQ,EAAApiF,KAAAosB,IAaA,QAAA9sB,EAAA,EAAqBA,EAAA8iF,EAAAnhF,OAAwB3B,IAC7C2M,EAAA0gD,IAAAl9B,YAAA2yD,EAAA9iF,IAyBA,OArBA2M,EAAAo2E,qBACAp2E,EAAAu2D,0BAAAof,GACAhiC,EAAAV,KAAiB/B,IAAIukC,KAIrBz1E,EAAAq2E,2CAMA1uB,IAAAhB,IAAAQ,MAAA,IAAAllC,EAAA00C,wBACA32D,EAAAs2E,aAAA,GAKAt2E,EAAAu2E,yBAEAv2E,EAAAijD,eACAjjD,EA4yBA,OAr4BAi0C,EAAAyhC,EAAAlb,GAiGAkb,EAAAh3E,UAAAuiD,QAAA,WACAlhD,KAAA2gD,KAAA3gD,KAAA2gD,IAAAy0B,iBACAp1E,KAAA2gD,IAAAy0B,kBAEAO,EAAAc,oBAAAz2E,KAAA2gD,KACA3gD,KAAAwgD,SAAA,KAGAia,EAAA97D,UAAAuiD,QAAAriD,KAAAmB,OASA21E,EAAAh3E,UAAAq3E,wBAAA,WACAb,GAAAn1E,OAaA21E,EAAAh3E,UAAA23E,wCAAA,WACA,IAAA9rB,EAAAxqD,KAAAwqD,aACAksB,OAAA,EAGAC,EAAA,WACAD,KAEA,QAAApjF,EAAA,EAAqBA,EAAAk3D,EAAAv1D,OAAuB3B,IAAA,CAC5C,IAAA00B,EAAAwiC,EAAAl3D,GAEA,aAAA00B,EAAAonC,MACAsnB,EAAA1iF,MACAg0B,QACA4uD,WAAA5uD,EAAAkD,SAQAyrD,IACAnsB,EAAA/qC,iBAAA,SAAAk3D,GAEA32E,KAAAw7C,GAAA,qBACA,OAAAgP,EAAA7P,oBAAA,SAAAg8B,KAGA,IAAAE,EAAA,SAAAA,IACA,QAAAvjF,EAAA,EAAqBA,EAAAojF,EAAAzhF,OAA6C3B,IAAA,CAClE,IAAAwjF,EAAAJ,EAAApjF,GAEA,aAAAwjF,EAAA9uD,MAAAkD,MAAA4rD,EAAA9uD,MAAAkD,OAAA4rD,EAAAF,aACAE,EAAA9uD,MAAAkD,KAAA4rD,EAAAF,YAIApsB,EAAA7P,oBAAA,SAAAk8B,IAKA72E,KAAAw7C,GAAA,mCACAgP,EAAA7P,oBAAA,SAAAg8B,GAGAnsB,EAAA7P,oBAAA,SAAAk8B,GACArsB,EAAA/qC,iBAAA,SAAAo3D,KAIA72E,KAAAw7C,GAAA,iCAEAgP,EAAA7P,oBAAA,SAAAg8B,GACAnsB,EAAA/qC,iBAAA,SAAAk3D,GAGAnsB,EAAA7P,oBAAA,SAAAk8B,MAeAlB,EAAAh3E,UAAAo4E,gBAAA,SAAAx5E,EAAAy5E,GACA,IAAA/1E,EAAAjB,KAGA,GAAAg3E,IAAAh3E,KAAA,iBAAAzC,EAAA,WAIA,IAAA05E,EAAA15E,EAAAmL,cAEA1I,KAAAi3E,EAAA,qBACA74E,OAAAC,KAAA2B,KAAAi3E,EAAA,qBAAA9wE,QAAA,SAAA+wE,GACAj2E,EAAAm0C,KAAA6hC,EAAA,UAEAt8B,oBAAAu8B,EAAAj2E,EAAAg2E,EAAA,oBAAAC,MAIAl3E,KAAA,iBAAAzC,EAAA,WAAAy5E,EACAh3E,KAAAi3E,EAAA,yBAEAj3E,KAAAm3E,0BAAAF,KAWAtB,EAAAh3E,UAAA+6D,0BAAA,SAAAsd,GACAh3E,KAAA+2E,gBAAA,QAAAC,IAWArB,EAAAh3E,UAAAg7D,0BAAA,SAAAqd,GACAh3E,KAAA+2E,gBAAA,QAAAC,IAYArB,EAAAh3E,UAAAw4E,0BAAA,SAAAnhF,GACA,IAAAqvD,EAAArlD,KAEAF,EAAAw1D,GAAAt/D,GACAohF,EAAAp3E,KAAAo1C,KAAAt1C,EAAA41D,YACA2hB,EAAAr3E,KAAAF,EAAA41D,cAEA,GAAA11D,KAAA,iBAAAF,EAAA21D,YAAA,WAAA2hB,KAAA33D,iBAAA,CAGA,IAAA63D,GACAxiE,OAAA,SAAAvR,GACA8zE,EAAA9oC,SACAhxC,KAAA,SACA4M,OAAAktE,EACAxxE,cAAAwxE,EACAhoE,WAAAgoE,KAGA5oB,SAAA,SAAAlrD,GACA8zE,EAAAhpB,SAAA9qD,EAAAykB,QAEA0mC,YAAA,SAAAnrD,GACA8zE,EAAA/oB,YAAA/qD,EAAAykB,SAGAuvD,EAAA,WAGA,IAFA,IAAAC,KAEAlkF,EAAA,EAAqBA,EAAA+jF,EAAApiF,OAAuB3B,IAAA,CAG5C,IAFA,IAAAmkF,GAAA,EAEAzZ,EAAA,EAAuBA,EAAAoZ,EAAAniF,OAAqB+oE,IAC5C,GAAAoZ,EAAApZ,KAAAqZ,EAAA/jF,GAAA,CACAmkF,GAAA,EACA,MAIAA,GACAD,EAAAxjF,KAAAqjF,EAAA/jF,IAIA,KAAAkkF,EAAAviF,QACAoiF,EAAA/oB,YAAAkpB,EAAA/sC,UAIAzqC,KAAAF,EAAA41D,WAAA,cAAA4hB,EAEAl5E,OAAAC,KAAAi5E,GAAAnxE,QAAA,SAAA+wE,GACA,IAAAv4B,EAAA24B,EAAAJ,GAEAE,EAAA33D,iBAAAy3D,EAAAv4B,GACA0G,EAAA7J,GAAA,mBAAAj4C,GACA,OAAA6zE,EAAAz8B,oBAAAu8B,EAAAv4B,OAKA3+C,KAAAw7C,GAAA,YAAA+7B,GACAv3E,KAAAw7C,GAAA,mBAAAj4C,GACA,OAAA8hD,EAAArS,IAAA,YAAAukC,OAYA5B,EAAAh3E,UAAA03E,mBAAA,WACA,IAAA9wB,EAAAvlD,KAEAs1D,GAAAU,MAAA7vD,QAAA,SAAAnQ,GACAuvD,EAAA4xB,0BAAAnhF,MAYA2/E,EAAAh3E,UAAAy3C,SAAA,WACA,IAAAhB,EAAAp1C,KAAAwgD,SAAAxrD,IAMA,IAAAogD,IAAAp1C,KAAAwgD,SAAAk3B,iBAAA13E,KAAA23E,wBAAA,CAGA,GAAAviC,EAAA,CACA,IAAAwiC,EAAAxiC,EAAA6+B,WAAA,GAEA7+B,EAAA1tC,YACA0tC,EAAA1tC,WAAA4tB,aAAAsiD,EAAAxiC,GAEAugC,EAAAc,oBAAArhC,GACAA,EAAAwiC,MACO,CACPxiC,EAAanE,EAAA9vC,EAAQC,cAAA,SAGrB,IACAk1C,EAAA8J,MADApgD,KAAAwgD,SAAAxrD,KAAA4iD,GAAA53C,KAAAwgD,SAAAxrD,MAGA4yD,KAAA,IAAA5nD,KAAAwgD,SAAAoW,+BACAtgB,EAAA+V,SAGA3U,GAAAtC,EAAAvyC,EAAAyzC,GACAt9B,GAAAhZ,KAAAwgD,SAAAq3B,OACAC,MAAA,cAIA1iC,EAAA2iC,SAAA/3E,KAAAwgD,SAAAu3B,cAGA,IAAA/3E,KAAAwgD,SAAAw3B,SACAvoE,GAAA2lC,EAAA,UAAAp1C,KAAAwgD,SAAAw3B,SAQA,IAFA,IAAAC,GAAA,yCAEA3kF,EAAA,EAAmBA,EAAA2kF,EAAAhjF,OAA0B3B,IAAA,CAC7C,IAAA4kF,EAAAD,EAAA3kF,GACAmL,EAAAuB,KAAAwgD,SAAA03B,QAEA,IAAAz5E,IACAA,EACAgR,GAAA2lC,EAAA8iC,KAEAvkE,GAAAyhC,EAAA8iC,GAEA9iC,EAAA8iC,GAAAz5E,GAIA,OAAA22C,GAkBAugC,EAAAh3E,UAAAm3E,gBAAA,SAAA1gC,GACA,OAAAA,EAAA+iC,cAAA,IAAA/iC,EAAA+iC,aAAA,CAMA,OAAA/iC,EAAA9O,WAAA,CAWA,IAAA8xC,GAAA,EACAC,EAAA,WACAD,GAAA,GAGAp4E,KAAAw7C,GAAA,YAAA68B,GAEA,IAAAC,EAAA,WAGAF,GACAp4E,KAAAuuC,QAAA,cAgBA,OAZAvuC,KAAAw7C,GAAA,iBAAA88B,QAEAt4E,KAAAqgD,MAAA,WACArgD,KAAAgzC,IAAA,YAAAqlC,GACAr4E,KAAAgzC,IAAA,iBAAAslC,GAEAF,GAEAp4E,KAAAuuC,QAAA,eAWA,IAAAgqC,GAAA,aAGAA,EAAAvkF,KAAA,kBAGAohD,EAAA9O,YAAA,GACAiyC,EAAAvkF,KAAA,cAIAohD,EAAA9O,YAAA,GACAiyC,EAAAvkF,KAAA,WAIAohD,EAAA9O,YAAA,GACAiyC,EAAAvkF,KAAA,kBAIAgM,KAAAqgD,MAAA,WACAk4B,EAAApyE,QAAA,SAAA5I,GACAyC,KAAAuuC,QAAAhxC,IACOyC,UAYP21E,EAAAh3E,UAAAw5D,eAAA,SAAA9mE,GACA,IACA2O,KAAA2gD,IAAAyT,YAAA/iE,EACK,MAAAkS,GACLqwC,EAAArwC,EAAA,oCAaAoyE,EAAAh3E,UAAA5H,SAAA,WACA,IAAAuhE,EAAAt4D,KAMA,GAAAA,KAAA2gD,IAAA5pD,WAAA+pC,KAAAkmB,IAAAO,IAAA,IAAAvnD,KAAA2gD,IAAAyT,YAAA,CAcA,OADAp0D,KAAAw7C,GAAA,aAVA,SAAAg9B,IACAlgB,EAAA3X,IAAAyT,YAAA,IAEAkE,EAAA3X,IAAA5pD,WAAA+pC,KACAw3B,EAAA/pB,QAAA,kBAEA+pB,EAAAtlB,IAAA,aAAAwlC,MAKAC,IAEA,OAAAz4E,KAAA2gD,IAAA5pD,UAAA0hF,KAWA9C,EAAAh3E,UAAAjM,MAAA,WACA,OAAAsN,KAAA2gD,IAAA1H,aAWA08B,EAAAh3E,UAAAhM,OAAA,WACA,OAAAqN,KAAA2gD,IAAAxH,cAeAw8B,EAAAh3E,UAAA63E,uBAAA,WACA,IAAAhe,EAAAx4D,KAEA,kCAAAA,KAAA2gD,IAAA,CAIA,IAAA+3B,EAAA,WACA14E,KAAAuuC,QAAA,oBAAwCo6B,cAAA,KAGxCgQ,EAAA,WACA,2BAAA34E,KAAA2gD,KAAA,uBAAA3gD,KAAA2gD,IAAAi4B,yBACA54E,KAAAi8C,IAAA,sBAAAy8B,GAEA14E,KAAAuuC,QAAA,oBAA0Co6B,cAAA,MAI1C3oE,KAAAw7C,GAAA,wBAAAm9B,GACA34E,KAAAw7C,GAAA,qBACAgd,EAAAxlB,IAAA,wBAAA2lC,GACAngB,EAAAxlB,IAAA,sBAAA0lC,OAaA/C,EAAAh3E,UAAAk6E,mBAAA,WACA,sBAAA74E,KAAA2gD,IAAAm4B,sBAAA,CACA,IAAAvyB,EAAsBxV,EAAA5vC,EAAQmlD,WAAcvV,EAAA5vC,EAAQmlD,UAAAC,WAAA,GAGpD,aAAA9yC,KAAA8yC,KAAA,uBAAA9yC,KAAA8yC,GACA,SAGA,UAQAovB,EAAAh3E,UAAAo6E,gBAAA,WACA,IAAAx3E,EAAAvB,KAAA2gD,IAEAp/C,EAAA0qD,QAAA1qD,EAAA42E,cAAA52E,EAAAy3E,eAGAh5E,KAAA2gD,IAAAL,OAIAtgD,KAAA80B,WAAA,WACAvzB,EAAA4qD,QACA5qD,EAAAu3E,yBACO,IAEPv3E,EAAAu3E,yBASAnD,EAAAh3E,UAAAs6E,eAAA,WACAj5E,KAAA2gD,IAAAu4B,wBAkBAvD,EAAAh3E,UAAA4rD,IAAA,SAAA8R,GACA,QAAAz4B,IAAAy4B,EACA,OAAAr8D,KAAA2gD,IAAA4J,IAIAvqD,KAAAo/D,OAAA/C,IASAsZ,EAAAh3E,UAAAq5D,MAAA,WACA2d,EAAAwD,kBAAAn5E,KAAA2gD,MAaAg1B,EAAAh3E,UAAA82E,WAAA,WACA,OAAAz1E,KAAAq7D,eACAr7D,KAAAq7D,eAAA9Q,IAEAvqD,KAAA2gD,IAAA80B,YAWAE,EAAAh3E,UAAA43E,YAAA,SAAA7/B,GACA12C,KAAA2gD,IAAA0L,WAAA3V,GAoBAi/B,EAAAh3E,UAAAo6D,aAAA,SAAA3J,EAAA3D,EAAA90D,GACA,OAAAqJ,KAAAw2D,yBAIAx2D,KAAA2gD,IAAAoY,aAAA3J,EAAA3D,EAAA90D,GAHA8jE,EAAA97D,UAAAo6D,aAAAl6D,KAAAmB,KAAAovD,EAAA3D,EAAA90D,IAoCAg/E,EAAAh3E,UAAAs6D,sBAAA,SAAA/2C,GACA,IAAAliB,KAAAw2D,yBACA,OAAAiE,EAAA97D,UAAAs6D,sBAAAp6D,KAAAmB,KAAAkiB,GAEA,IAAAk3C,EAA2BnoB,EAAA9vC,EAAQC,cAAA,SAqBnC,OAnBA8gB,EAAAktC,OACAgK,EAAAhK,KAAAltC,EAAAktC,MAEAltC,EAAAupC,QACA2N,EAAA3N,MAAAvpC,EAAAupC,QAEAvpC,EAAAvrB,UAAAurB,EAAAyxC,WACAyF,EAAAzF,QAAAzxC,EAAAvrB,UAAAurB,EAAAyxC,SAEAzxC,EAAA8R,UACAolC,EAAAplC,QAAA9R,EAAA8R,SAEA9R,EAAAlJ,KACAogD,EAAApgD,GAAAkJ,EAAAlJ,IAEAkJ,EAAAqoC,MACA6O,EAAA7O,IAAAroC,EAAAqoC,KAGA6O,GAiBAuc,EAAAh3E,UAAA+rD,mBAAA,SAAAxoC,EAAAi3C,GACA,IAAAC,EAAAqB,EAAA97D,UAAA+rD,mBAAA7rD,KAAAmB,KAAAkiB,EAAAi3C,GAMA,OAJAn5D,KAAAw2D,0BACAx2D,KAAAo1C,KAAA1xB,YAAA01C,GAGAA,GAWAuc,EAAAh3E,UAAAm5D,sBAAA,SAAA9vC,GAGA,GAFAyyC,EAAA97D,UAAAm5D,sBAAAj5D,KAAAmB,KAAAgoB,GAEAhoB,KAAAw2D,yBAKA,IAJA,IAAA5zB,EAAA5iC,KAAA65C,GAAA,SAEAvmD,EAAAsvC,EAAA3tC,OAEA3B,KACA00B,IAAA4a,EAAAtvC,IAAA00B,IAAA4a,EAAAtvC,GAAA00B,OACAhoB,KAAAo1C,KAAA3xB,YAAAmf,EAAAtvC,KAiBAqiF,EAAAh3E,UAAA26D,wBAAA,WACA,sBAAAt5D,KAAAo1C,KAAAkkB,wBACA,OAAAt5D,KAAAo1C,KAAAkkB,0BAGA,IAAA8f,KAaA,YAXA,IAAAp5E,KAAAo1C,KAAAikC,8BAAA,IAAAr5E,KAAAo1C,KAAAkkC,0BACAF,EAAAG,mBAAAv5E,KAAAo1C,KAAAikC,wBACAD,EAAAI,iBAAAx5E,KAAAo1C,KAAAkkC,yBAGQvoC,EAAA5vC,EAAQs4E,aAA+B,mBAAR1oC,EAAA5vC,EAAQs4E,YAAAnuE,IAC/C8tE,EAAAxiF,aAA0Cm6C,EAAA5vC,EAAQs4E,YAAAnuE,MACnCylC,EAAA5vC,EAAQs4E,aAAgB1oC,EAAA5vC,EAAQs4E,YAAAC,QAAsC,iBAAR3oC,EAAA5vC,EAAQs4E,YAAAC,OAAAC,kBACrFP,EAAAxiF,aAA0Cm6C,EAAA5vC,EAAQ7P,KAAAga,MAAcylC,EAAA5vC,EAAQs4E,YAAAC,OAAAC,iBAGxEP,GAGAzD,EAt4BA,CAu4BClzB,IAID,GAAA7M,IAAA,CASA+/B,GAAAiE,SAAmB3oC,EAAA9vC,EAAQC,cAAA,SAC3B,IAAA4mB,GAAcipB,EAAA9vC,EAAQC,cAAA,SAEtB4mB,GAAAonC,KAAA,WACApnC,GAAA2rC,QAAA,KACA3rC,GAAAyjC,MAAA,UACAkqB,GAAAiE,SAAAl2D,YAAAsE,IAUA2tD,GAAAxX,YAAA,WAEA,IACAwX,GAAAiE,SAAA9hF,OAAA,GACG,MAAAyL,GACH,SAGA,SAAAoyE,GAAAiE,WAAAjE,GAAAiE,SAAAhgB,cAUA+b,GAAA/b,YAAA,SAAAr8D,GACA,OAAAo4E,GAAAiE,SAAAhgB,YAAAr8D,IAWAo4E,GAAA9b,cAAA,SAAAC,EAAA53C,GACA,OAAAyzD,GAAA/b,YAAAE,EAAAv8D,OAYAo4E,GAAAkE,iBAAA,WAEA,IACA,IAAA/hF,EAAA69E,GAAAiE,SAAA9hF,OAGA,OADA69E,GAAAiE,SAAA9hF,SAAA,KACAA,IAAA69E,GAAAiE,SAAA9hF,OACG,MAAAyL,GACH,WAaAoyE,GAAAmE,cAAA,WACA,IACA,IAAA1Q,EAAAuM,GAAAiE,SAAAxQ,MAUA,OANAuM,GAAAiE,SAAAxQ,SACAuM,GAAAiE,SAAAxQ,MACA35D,GAAAkmE,GAAAiE,SAAA,iBAEAjmE,GAAAgiE,GAAAiE,SAAA,SAEAxQ,IAAAuM,GAAAiE,SAAAxQ,MACG,MAAA7lE,GACH,WAWAoyE,GAAAoE,uBAAA,WAGA,GAAA/yB,IAAAO,IAAAC,GAAA,GACA,SAGA,IACA,IAAA2nB,EAAAwG,GAAAiE,SAAAzK,aAGA,OADAwG,GAAAiE,SAAAzK,eAAA,KACAA,IAAAwG,GAAAiE,SAAAzK,aACG,MAAA5rE,GACH,WAYAoyE,GAAAqE,sBAAA,WAGA,IACA,IAAAC,EAAA,aAEA77E,OAAA4R,eAA0BihC,EAAA9vC,EAAQC,cAAA,gBAAiC0O,IAAAmqE,EAAAlqE,IAAAkqE,IACnE77E,OAAA4R,eAA0BihC,EAAA9vC,EAAQC,cAAA,gBAAiC0O,IAAAmqE,EAAAlqE,IAAAkqE,IACnE77E,OAAA4R,eAA0BihC,EAAA9vC,EAAQC,cAAA,sBAAuC0O,IAAAmqE,EAAAlqE,IAAAkqE,IACzE77E,OAAA4R,eAA0BihC,EAAA9vC,EAAQC,cAAA,sBAAuC0O,IAAAmqE,EAAAlqE,IAAAkqE,IACtE,MAAA12E,GACH,SAGA,UAUAoyE,GAAAuE,yBAAA,WACA,OAAAvyB,IAAAb,IAAAS,IAUAouB,GAAAwE,0BAAA,WACA,SAAAxE,GAAAiE,WAAAjE,GAAAiE,SAAAQ,cAUAzE,GAAA0E,0BAAA,WACA,SAAA1E,GAAAiE,WAAAjE,GAAAiE,SAAA5K,cASA2G,GAAAx2C,QAAA,gQAQAw2C,GAAAh3E,UAAAw7D,sBAAAwb,GAAAkE,mBAQAlE,GAAAh3E,UAAAy7D,oBAAAub,GAAAmE,gBAWAnE,GAAAh3E,UAAA27D,qBAAAqb,GAAAoE,yBAQApE,GAAAh3E,UAAA47D,kBAAAob,GAAAqE,wBAUArE,GAAAh3E,UAAAg5E,yBAAA7wB,GAWA6uB,GAAAh3E,UAAA07D,0BAAA,EASAsb,GAAAh3E,UAAAu3D,wBAAA,EAQAyf,GAAAh3E,UAAAy3D,0BAAA,EAQAuf,GAAAh3E,UAAA63D,yBAAAmf,GAAAuE,2BAQAvE,GAAAh3E,UAAA27E,0BAAA3E,GAAAwE,4BAQAxE,GAAAh3E,UAAA47E,0BAAA5E,GAAA0E,4BAGA,IAAAzgB,GAAA+b,GAAAiE,UAAAjE,GAAAiE,SAAAlzE,YAAA/H,UAAAi7D,YACA4gB,GAAA,4CAEA7E,GAAA8E,iBAAA,WAIAxzB,IAAA,IAAAI,KAAAE,KACAouB,GAAAiE,SAAAlzE,YAAA/H,UAAAi7D,YAAA,SAAAr8D,GACA,OAAAA,GAAAi9E,GAAA/mE,KAAAlW,GACA,QAEAq8D,GAAA/6D,KAAAmB,KAAAzC,MAKAo4E,GAAA+E,mBAAA,WACA,IAAA5sD,EAAA6nD,GAAAiE,SAAAlzE,YAAA/H,UAAAi7D,YAGA,OADA+b,GAAAiE,SAAAlzE,YAAA/H,UAAAi7D,eACA9rC,GAIA6nD,GAAA8E,mBAEA9E,GAAAc,oBAAA,SAAArhC,GACA,GAAAA,EAAA,CASA,IALAA,EAAA1tC,YACA0tC,EAAA1tC,WAAA+b,YAAA2xB,GAIAA,EAAA6gC,iBACA7gC,EAAA3xB,YAAA2xB,EAAAl1B,YAKAk1B,EAAAzhC,gBAAA,OAIA,mBAAAyhC,EAAA+f,MAEA,WACA,IACA/f,EAAA+f,OACO,MAAA5xD,KAHP,KAUAoyE,GAAAwD,kBAAA,SAAA/jC,GACA,GAAAA,EAAA,CAOA,IAHA,IAAAH,EAAAG,EAAAhX,iBAAA,UACA9qC,EAAA2hD,EAAAhgD,OAEA3B,KACA8hD,EAAA3xB,YAAAwxB,EAAA3hD,IAKA8hD,EAAAzhC,gBAAA,OAEA,mBAAAyhC,EAAA+f,MAEA,WACA,IACA/f,EAAA+f,OACO,MAAA5xD,KAHP,MA2BA,QAgBA,eAcA,WAcA,WAiBA,OAeA,eAAA4C,QAAA,SAAAkvC,GACAsgC,GAAAh3E,UAAA02C,GAAA,WACA,OAAAr1C,KAAA2gD,IAAAtL,IAAAr1C,KAAA2gD,IAAA3iB,aAAAqX,OAoBA,QAaA,eAaA,WAgBA,OAcA,eAAAlvC,QAAA,SAAAkvC,GACAsgC,GAAAh3E,UAAA,MAAAuhD,GAAA7K,IAAA,SAAAz3C,GACAoC,KAAA2gD,IAAAtL,GAAAz3C,EAEAA,EACAoC,KAAA2gD,IAAAlxC,aAAA4lC,KAEAr1C,KAAA2gD,IAAAhtC,gBAAA0hC,OAqBA,SAYA,cAaA,WAaA,SAaA,SAmBA,UAcA,QAcA,UAaA,WAcA,QAeA,eAkBA,sBAaA,SAiBA,eAmBA,aAaA,aAaA,eAAAlvC,QAAA,SAAAkvC,GACAsgC,GAAAh3E,UAAA02C,GAAA,WACA,OAAAr1C,KAAA2gD,IAAAtL,OAoBA,SAYA,MAaA,SAmBA,UAeA,eAkBA,uBAAAlvC,QAAA,SAAAkvC,GACAsgC,GAAAh3E,UAAA,MAAAuhD,GAAA7K,IAAA,SAAAz3C,GACAoC,KAAA2gD,IAAAtL,GAAAz3C,MAeA,QASA,OASA,QAAAuI,QAAA,SAAAkvC,GACAsgC,GAAAh3E,UAAA02C,GAAA,WACA,OAAAr1C,KAAA2gD,IAAAtL,QAIAoN,GAAA+X,mBAAAmb,IAWAA,GAAAxa,uBAWAwa,GAAAxa,oBAAAvB,YAAA,SAAAr8D,GAEA,IACA,OAAAo4E,GAAAiE,SAAAhgB,YAAAr8D,GACG,MAAAgG,GACH,WAgBAoyE,GAAAxa,oBAAAJ,gBAAA,SAAAhzC,EAAA7F,GAGA,GAAA6F,EAAAxqB,KACA,OAAAo4E,GAAAxa,oBAAAvB,YAAA7xC,EAAAxqB,MAGG,GAAAwqB,EAAAwiC,IAAA,CACH,IAAAqT,EAAA7L,GAAAhqC,EAAAwiC,KAEA,OAAAorB,GAAAxa,oBAAAvB,YAAA,SAAAgE,GAGA,UAeA+X,GAAAxa,oBAAAG,aAAA,SAAAvzC,EAAAoiC,EAAAjoC,GACAioC,EAAAiV,OAAAr3C,EAAAwiC,MAMAorB,GAAAxa,oBAAAja,QAAA,aAGAy0B,GAAAjb,sBAAAib,GAAAxa,qBAEA1Y,GAAAsX,aAAA,QAAA4b,IAEA,IAAAgF,GAAAhmC,GAAA,8VAIAimC,IAeA,WAgBA,QAgBA,UAgBA,UAeA,UAgBA,iBAgBA,aAgBA,aAgBA,SAgBA,eAgBA,mBAKAC,IACAC,QAAA,UACAC,eAAA,iBACAC,QAAA,UACAC,OAAA,UAcAj1B,GAAA,SAAA7lD,GAeA,SAAA6lD,EAAAhxD,EAAAktB,EAAAm+B,GA4BA,GA3BAvM,EAAA9zC,KAAAgmD,GAGAhxD,EAAAgkB,GAAAhkB,EAAAgkB,IAAAkJ,EAAAlJ,IAAA,aAAAihC,MAOA/3B,EAAArf,EAAAmjD,EAAAk1B,eAAAlmF,GAAAktB,IAIA6+B,cAAA,EAGA7+B,EAAAk0B,UAAA,EAGAl0B,EAAAs9B,SAAA,EAIAt9B,EAAA8+B,qBAAA,GAGA9+B,EAAAvrB,SACA,sBAAA3B,EAAAmmF,QAAA,CACA,IAAAA,EAAAnmF,EAAAmmF,QAAA,UAEAA,KAAAnjC,eACA91B,EAAAvrB,SAAAwkF,EAAAnjC,aAAA,cAKA,IAFA,IAAA7jB,EAAAn/B,EAEAm/B,GAAA,IAAAA,EAAA5kB,UAAA,CACA,GAAAqoC,GAAAzjB,GAAAjvB,eAAA,SACAgd,EAAAvrB,SAAAw9B,EAAA6jB,aAAA,QACA,MAEA7jB,IAAAzsB,WAQA,IAAAzH,EAAAw0C,EAAAz0C,KAAAG,EAAAtB,KAAAmB,KAAA,KAAAkiB,EAAAm+B,IAmBA,GAjBApgD,EAAAm7E,mBAAA,EAIAn7E,EAAAo7E,oBAGAp7E,EAAA+iD,UAAA,EAGA/iD,EAAAg2D,aAAA,EAGAh2D,EAAAq7E,aAAA,GAIAr7E,EAAAugD,WAAAvgD,EAAAugD,SAAAyd,YAAAh+D,EAAAugD,SAAAyd,UAAAhpE,OACA,UAAA0O,MAAA,2HAaA,GATA1D,EAAAjL,MAGAiL,EAAAs7E,cAAAvmF,GAAA4iD,GAAA5iD,GAGAiL,EAAAtJ,SAAAsJ,EAAAugD,SAAA7pD,UAGAurB,EAAAm/B,UAAA,CAEA,IAAAm6B,KAEAp9E,OAAAo4C,oBAAAt0B,EAAAm/B,WAAAl7C,QAAA,SAAAs1E,GACAD,EAAAC,EAAA/yE,eAAAwZ,EAAAm/B,UAAAo6B,KAEAx7E,EAAAy7E,WAAAF,OAEAv7E,EAAAy7E,WAAA11B,EAAArnD,UAAA6hD,SAAAa,UAIAphD,EAAAwgE,UAGAxgE,EAAA07E,QAAAz5D,EAAAi9C,QAAA,GAGAl/D,EAAA27E,YAAA15D,EAAAmqC,SAGApsD,EAAAwgE,OAAAuJ,WAAA,EAKAh1E,EAAAq3D,UAAA,EACAr3D,EAAA2e,gBAAA,YAGA3e,EAAAgpC,aAAA,YACA/9B,EAAAugD,SAAA/+C,UAAA,EAIAxB,EAAAwB,SAAAxB,EAAAugD,SAAA/+C,UASAxB,EAAA47E,YAAA,EAEA57E,EAAA0gD,IAAA1gD,EAAAm2C,WAGAn2C,EAAAwgE,OAAAqb,iBAAA77E,EAAA87E,sBAGAv8B,GAAAv/C,GAAoBw/C,YAAA,QAMpB,IAAAu8B,EAAA57B,GAAAngD,EAAAugD,UAGA,GAAAt+B,EAAA+5D,QAAA,CACA,IAAAA,EAAA/5D,EAAA+5D,QAEA79E,OAAAC,KAAA49E,GAAA91E,QAAA,SAAAs1E,GACA,sBAAAz7E,KAAAy7E,GAGA,UAAA93E,MAAA,WAAA83E,EAAA,oBAFAz7E,KAAAy7E,GAAAQ,EAAAR,KAIOx7E,GAGPA,EAAAugD,SAAAqC,cAAAm5B,EAEA/7E,EAAAi8E,eAEAj8E,EAAA8gD,eAGA9gD,EAAAqiE,QAAA,UAAAttE,EAAAma,SAAAzG,eAIAzI,EAAAosD,WACApsD,EAAAi3C,SAAA,wBAEAj3C,EAAAi3C,SAAA,yBAIAj3C,EAAA0gD,IAAAlxC,aAAA,iBACAxP,EAAAqiE,UACAriE,EAAA0gD,IAAAlxC,aAAA,aAAAxP,EAAAkhD,SAAA,iBAEAlhD,EAAA0gD,IAAAlxC,aAAA,aAAAxP,EAAAkhD,SAAA,iBAGAlhD,EAAAqiE,WACAriE,EAAAi3C,SAAA,aAGAj3C,EAAAk8E,qBACAl8E,EAAAi3C,SAAA,eAUA4P,IACA7mD,EAAAi3C,SAAA,oBAIA8O,EAAAC,QAAAhmD,EAAAwgD,KAAAxgD,EAGA,IAAAm8E,EAAA5nF,EAAA4K,MAAA,QAgBA,OAdAa,EAAAi3C,SAAA,QAAAklC,GAIAn8E,EAAAo8E,YAAA,GACAp8E,EAAA6kD,qBAEA7kD,EAAAg8C,IAAA,OAAAh8C,EAAAq8E,wBACAr8E,EAAAu7C,GAAA,mBAAAv7C,EAAAs8E,yBACAt8E,EAAAu7C,GAAA,aAAAv7C,EAAAu8E,mBAEAv8E,EAAAw8E,cAAA,EACAx8E,EAAAy8E,sBAAA,EACAz8E,EAAA08E,iBAAA,KACA18E,EAs3GA,OAlmHAi0C,EAAA8R,EAAA7lD,GAyPA6lD,EAAArnD,UAAAuiD,QAAA,WAOAlhD,KAAAuuC,QAAA,WAEAvuC,KAAAgzC,IAAA,WAEAhzC,KAAA48E,UAAA58E,KAAA48E,SAAAl1E,aACA1H,KAAA48E,SAAAl1E,WAAA+b,YAAAzjB,KAAA48E,UACA58E,KAAA48E,SAAA,MAIA52B,EAAAC,QAAAjmD,KAAAygD,KAAA,KAEAzgD,KAAAhL,KAAAgL,KAAAhL,IAAA6nD,SACA78C,KAAAhL,IAAA6nD,OAAA,MAGA78C,KAAA2gD,KAAA3gD,KAAA2gD,IAAA9D,SACA78C,KAAA2gD,IAAA9D,OAAA,MAGA78C,KAAAszD,QACAtzD,KAAAszD,MAAApS,UACAlhD,KAAAo7E,mBAAA,EACAp7E,KAAA27E,QAAA,IAGA37E,KAAA68E,kBACA78E,KAAA68E,gBAAA,MAGA78E,KAAAhL,MACAgL,KAAAhL,IAAA,MA16UAwmE,GA66UAx7D,KA76UAgZ,MAAA,KAg7UA7Y,EAAAxB,UAAAuiD,QAAAriD,KAAAmB,OAWAgmD,EAAArnD,UAAAy3C,SAAA,WACA,IAAAphD,EAAAgL,KAAAhL,IACAogD,OAAA,EACAsiC,EAAA13E,KAAA68E,gBAAA7nF,EAAA0S,YAAA1S,EAAA0S,WAAAs2B,cAAAhpC,EAAA0S,WAAAs2B,aAAA,mBACA8+C,EAAA,aAAA98E,KAAAhL,IAAAs6B,QAAA5mB,cAEAgvE,EACAtiC,EAAAp1C,KAAA2gD,IAAA3rD,EAAA0S,WACKo1E,IACL1nC,EAAAp1C,KAAA2gD,IAAAxgD,EAAAxB,UAAAy3C,SAAAv3C,KAAAmB,KAAA,QAKA,IAAA83C,EAAAF,GAAA5iD,GAEA,GAAA8nF,EAAA,CAGA,IAFA1nC,EAAAp1C,KAAA2gD,IAAA3rD,EACAA,EAAAgL,KAAAhL,IAAuBi8C,EAAA9vC,EAAQC,cAAA,SAC/Bg0C,EAAAtzB,SAAA7sB,QACAD,EAAA0uB,YAAA0xB,EAAAl1B,YAGA62B,EAAA3B,EAAA,aACA8B,GAAA9B,EAAA,YAGAA,EAAA1xB,YAAA1uB,GAEA0iF,EAAA13E,KAAA68E,gBAAAznC,EAKAh3C,OAAAC,KAAA+2C,GAAAjvC,QAAA,SAAAvC,GACA5O,EAAA4O,GAAAwxC,EAAAxxC,KA8CA,GAzCA5O,EAAAya,aAAA,iBAKAg4C,IACAzyD,EAAAya,aAAA,sBAIAza,EAAA2e,gBAAA,SACA3e,EAAA2e,gBAAA,UAEAvV,OAAAo4C,oBAAAsB,GAAA3xC,QAAA,SAAA+xE,GAIA4E,GAAA,UAAA5E,GACA9iC,EAAA3lC,aAAAyoE,EAAApgC,EAAAogC,IAGA4E,GACA9nF,EAAAya,aAAAyoE,EAAApgC,EAAAogC,MAOAljF,EAAA+iF,SAAA/iF,EAAAgkB,GACAhkB,EAAAgkB,IAAA,aACAhkB,EAAAqM,UAAA,WAGArM,EAAA6nD,OAAAzH,EAAAyH,OAAA78C,KAEAA,KAAAk3C,SAAA,eAKgB,IAARnG,EAAA5vC,EAAQ47E,yBAAA,CAChB/8E,KAAA48E,SAAA5/B,GAAA,yBACA,IAAAggC,EAAApjC,GAAA,wBACAqjC,EAAArjC,GAAA,QAEAqjC,EAAA3nD,aAAAt1B,KAAA48E,SAAAI,IAAA38D,YAAA48D,EAAA/8D,YAIAlgB,KAAAtN,MAAAsN,KAAAwgD,SAAA9tD,OACAsN,KAAArN,OAAAqN,KAAAwgD,SAAA7tD,QACAqN,KAAAk9E,MAAAl9E,KAAAwgD,SAAA08B,OACAl9E,KAAAm9E,YAAAn9E,KAAAwgD,SAAA28B,aAMA,IAFA,IAAAC,EAAApoF,EAAAunD,qBAAA,KAEAjpD,EAAA,EAAmBA,EAAA8pF,EAAAnoF,OAAkB3B,IAAA,CACrC,IAAA+pF,EAAAD,EAAAjS,KAAA73E,GAEA4jD,GAAAmmC,EAAA,cACAA,EAAA5tE,aAAA,mBA0BA,OArBAza,EAAA6gF,kBAAA7gF,EAAAmjF,aAGAnjF,EAAA0S,aAAAgwE,GACA1iF,EAAA0S,WAAA4tB,aAAA8f,EAAApgD,GAQA8hD,EAAA9hD,EAAAogD,GACAp1C,KAAA4gD,UAAAjO,QAAA39C,GAIAgL,KAAA2gD,IAAAlxC,aAAA,OAAAzP,KAAA8uE,WAEA9uE,KAAA2gD,IAAAvL,EAEAA,GAeA4Q,EAAArnD,UAAAjM,MAAA,SAAA+L,GACA,OAAAuB,KAAA0jD,UAAA,QAAAjlD,IAeAunD,EAAArnD,UAAAhM,OAAA,SAAA8L,GACA,OAAAuB,KAAA0jD,UAAA,SAAAjlD,IAmBAunD,EAAArnD,UAAA+kD,UAAA,SAAA45B,EAAA7+E,GACA,IAAA8+E,EAAAD,EAAA,IAEA,QAAA15C,IAAAnlC,EACA,OAAAuB,KAAAu9E,IAAA,EAGA,QAAA9+E,EAIA,OAFAuB,KAAAu9E,QAAA35C,OACA5jC,KAAAw9E,iBAIA,IAAAC,EAAAllC,WAAA95C,GAEA8U,MAAAkqE,GACA7pC,EAAA/e,MAAA,mBAAAp2B,EAAA,sBAAA6+E,IAIAt9E,KAAAu9E,GAAAE,EACAz9E,KAAAw9E,mBAiBAx3B,EAAArnD,UAAAu+E,MAAA,SAAA/W,GACA,QAAAviC,IAAAuiC,EACA,QAAAnmE,KAAA09E,OAGA19E,KAAA09E,SAAAvX,EAEAA,EACAnmE,KAAAk3C,SAAA,aAEAl3C,KAAAo3C,YAAA,aAGAp3C,KAAAw9E,kBAyBAx3B,EAAArnD,UAAAw+E,YAAA,SAAAQ,GACA,QAAA/5C,IAAA+5C,EACA,OAAA39E,KAAA49E,aAIA,iBAAAnqE,KAAAkqE,GACA,UAAAh6E,MAAA,kGAEA3D,KAAA49E,aAAAD,EAIA39E,KAAAk9E,OAAA,GAEAl9E,KAAAw9E,kBAWAx3B,EAAArnD,UAAA6+E,eAAA,WACA,IAAgB,IAARzsC,EAAA5vC,EAAQ47E,yBAAhB,CAiBA,IAAArqF,OAAA,EACAC,OAAA,EAEAkrF,OAAA,EAeAC,QAZAl6C,IAAA5jC,KAAA49E,cAAA,SAAA59E,KAAA49E,aAEA59E,KAAA49E,aACK59E,KAAA+9E,aAAA,EAEL/9E,KAAA+9E,aAAA,IAAA/9E,KAAAg+E,cAGA,QAIA5+E,MAAA,KACA6+E,EAAAH,EAAA,GAAAA,EAAA,GAIAprF,OAFAkxC,IAAA5jC,KAAAk+E,OAEAl+E,KAAAk+E,YACKt6C,IAAA5jC,KAAAm+E,QAELn+E,KAAAm+E,QAAAF,EAGAj+E,KAAA+9E,cAAA,IAKAprF,OAFAixC,IAAA5jC,KAAAm+E,QAEAn+E,KAAAm+E,QAGAzrF,EAAAurF,EAKAJ,EADA,aAAApqE,KAAAzT,KAAAgZ,MACA,cAAAhZ,KAAAgZ,KAEAhZ,KAAAgZ,KAAA,cAIAhZ,KAAAk3C,SAAA2mC,GAEA5gC,GAAAj9C,KAAA48E,SAAA,YAAAiB,EAAA,sBAA6DnrF,EAAA,wBAAiCC,EAAA,0BAA4CkrF,EAAA,sCAAsC,IAAAI,EAAA,yBAnEhL,CACA,IAAAG,EAAA,iBAAAp+E,KAAAk+E,OAAAl+E,KAAAk+E,OAAAl+E,KAAAwgD,SAAA9tD,MACA2rF,EAAA,iBAAAr+E,KAAAm+E,QAAAn+E,KAAAm+E,QAAAn+E,KAAAwgD,SAAA7tD,OACA2rF,EAAAt+E,KAAAszD,OAAAtzD,KAAAszD,MAAAle,KAEAkpC,IACAF,GAAA,IACAE,EAAA5rF,MAAA0rF,GAEAC,GAAA,IACAC,EAAA3rF,OAAA0rF,MA0EAr4B,EAAArnD,UAAAy/D,UAAA,SAAAF,EAAAn2C,GACA,IAAA9mB,EAAAjB,KAGAA,KAAAszD,OACAtzD,KAAAu+E,cAGA,IAAAC,EAAAt+B,GAAAge,GACAugB,EAAAvgB,EAAAn3C,OAAA,GAAAre,cAAAw1D,EAAAt/D,MAAA,GAGA,UAAA4/E,GAAAx+E,KAAAhL,MACAytD,GAAAyX,QAAA,SAAAuc,oBAAAz2E,KAAAhL,KACAgL,KAAAhL,IAAA6nD,OAAA,KACA78C,KAAAhL,IAAA,MAGAgL,KAAA0+E,UAAAF,EAGAx+E,KAAAgjD,UAAA,EAIA,IAGA27B,GACA52D,SACAtmB,SALA,iBAAAzB,KAAAyB,YAAAzB,KAAAyB,WAMAm1D,uBAAA52D,KAAAwgD,SAAAoW,uBACAmhB,SAAA/3E,KAAAgZ,KACA6+D,OAAA73E,KAAAgZ,KAAA,IAAAwlE,EAAA,OACAhlB,YAAAx5D,KAAAwgD,SAAAgZ,YACAwe,QAAAh4E,KAAAwgD,SAAAw3B,QACAx2E,KAAAxB,KAAAwgD,SAAAh/C,KACA4nE,MAAAppE,KAAAwgD,SAAA4oB,MACAjK,OAAAn/D,KAAAm/D,SACAxoE,SAAAqJ,KAAArJ,WACA+gF,eAAA13E,KAAA68E,kBAAA,EACA+B,SAAA5+E,KAAAwgD,SAAA,UACAq+B,oBAAA7+E,KAAAwgD,SAAAs+B,sBACA/I,gBAAA/1E,KAAAwgD,SAAAu1B,iBAGAhgB,GAAAC,MAAA7vD,QAAA,SAAAs1E,GACA,IAAA37E,EAAAi2D,GAAA0lB,GAEAkD,EAAA7+E,EAAA41D,YAAAz0D,EAAAnB,EAAA61D,eAGA9yD,EAAA87E,EAAA3+E,KAAAwgD,SAAAg+B,IACA37E,EAAA87E,EAAA3+E,KAAAwgD,SAAAi+B,IACA57E,EAAA87E,EAAA3+E,KAAAwgD,SAAA0d,EAAAx1D,gBAEA1I,KAAAhL,MACA2pF,EAAA3pF,IAAAgL,KAAAhL,KAGA+yB,KAAAwiC,MAAAvqD,KAAAygE,OAAAlW,KAAAvqD,KAAAygE,OAAArM,YAAA,IACAuqB,EAAAx+C,UAAAngC,KAAAygE,OAAArM,aAIA,IAAA2qB,EAAAt8B,GAAAyX,QAAAgE,GAEA,IAAA6gB,EACA,UAAAp7E,MAAA,kBAAA66E,EAAA,cAAAA,EAAA,wDAGAx+E,KAAAszD,MAAA,IAAAyrB,EAAAJ,GAGA3+E,KAAAszD,MAAAjT,MAAA7gC,GAAAxf,UAAAg/E,mBAAA,GAEA90B,GAAAlqD,KAAAi/E,oBAAAj/E,KAAAszD,OAGAsnB,GAAAz0E,QAAA,SAAA2pC,GACA7uC,EAAAu6C,GAAAv6C,EAAAqyD,MAAAxjB,EAAA7uC,EAAA,aAAAi/C,GAAApQ,GAAA,QAGA1xC,OAAAC,KAAAw8E,IAAA10E,QAAA,SAAA2pC,GACA7uC,EAAAu6C,GAAAv6C,EAAAqyD,MAAAxjB,EAAA,SAAAovC,GACA,IAAAj+E,EAAAqyD,MAAA6b,gBAAAluE,EAAAqyD,MAAA6rB,UACAl+E,EAAAo6E,iBAAArnF,MACAs5B,SAAArsB,EAAA,aAAA45E,GAAA/qC,GAAA,KAAAtwB,KAAAve,GACA6uC,MAAAovC,IAIAj+E,EAAA,aAAA45E,GAAA/qC,GAAA,KAAAovC,OAIAl/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,YAAAtzD,KAAAo/E,sBACAp/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,YAAAtzD,KAAAq/E,sBACAr/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,UAAAtzD,KAAAs/E,oBACAt/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,QAAAtzD,KAAAu/E,kBACAv/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,UAAAtzD,KAAAw/E,oBACAx/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,OAAAtzD,KAAAy/E,iBACAz/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,YAAAtzD,KAAA0/E,sBACA1/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,QAAAtzD,KAAA2/E,kBACA3/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,iBAAAtzD,KAAA4/E,2BACA5/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,mBAAAtzD,KAAA6/E,6BACA7/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,QAAAtzD,KAAA8/E,kBACA9/E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,iBAAAtzD,KAAAw9E,gBACAx9E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,eAAAtzD,KAAA+/E,yBACA//E,KAAAw7C,GAAAx7C,KAAAszD,MAAA,WAAAtzD,KAAAggF,qBACAhgF,KAAAw7C,GAAAx7C,KAAAszD,MAAA,aAAAtzD,KAAAigF,uBAEAjgF,KAAAkgF,oBAAAlgF,KAAAmgF,SAAA,aAEAngF,KAAAqsD,aAAArsD,KAAAkgF,uBACAlgF,KAAAogF,4BAKApgF,KAAAszD,MAAAle,KAAA1tC,aAAA1H,KAAAo1C,MAAA,UAAAopC,GAAAx+E,KAAAhL,KACA8hD,EAAA92C,KAAAszD,MAAAle,KAAAp1C,KAAAo1C,MAIAp1C,KAAAhL,MACAgL,KAAAhL,IAAA6nD,OAAA,KACA78C,KAAAhL,IAAA,OAWAgxD,EAAArnD,UAAA4/E,YAAA,WACA,IAAAl5B,EAAArlD,KAGA+1D,GAAAC,MAAA7vD,QAAA,SAAAs1E,GACA,IAAA37E,EAAAi2D,GAAA0lB,GAEAp2B,EAAAvlD,EAAA61D,aAAAtQ,EAAAvlD,EAAA41D,gBAEA11D,KAAAi/E,gBAAA/0B,GAAAlqD,KAAAszD,OAEAtzD,KAAAgjD,UAAA,EAEAhjD,KAAAszD,MAAApS,UAEAlhD,KAAAszD,OAAA,EAEAtzD,KAAAo7E,oBACAp7E,KAAA27E,QAAA,GACA37E,KAAAuuC,QAAA,iBAGAvuC,KAAAo7E,mBAAA,GAgBAp1B,EAAArnD,UAAAwrD,KAAA,SAAAk2B,GAKA,YAJAz8C,IAAAy8C,GACAzsC,EAAAV,KAAiB/B,IAAIwpC,KAGrB36E,KAAAszD,OA0BAtN,EAAArnD,UAAAyhF,0BAAA,WAEApgF,KAAAsgF,+BAMAtgF,KAAAw7C,GAAAx7C,KAAAszD,MAAA,YAAAtzD,KAAAugF,kBACAvgF,KAAAw7C,GAAAx7C,KAAAszD,MAAA,WAAAtzD,KAAAwgF,wBAKAxgF,KAAAw7C,GAAAx7C,KAAAszD,MAAA,aAAAtzD,KAAAygF,uBACAzgF,KAAAw7C,GAAAx7C,KAAAszD,MAAA,YAAAtzD,KAAA0gF,sBACA1gF,KAAAw7C,GAAAx7C,KAAAszD,MAAA,WAAAtzD,KAAA2gF,qBAIA3gF,KAAAw7C,GAAAx7C,KAAAszD,MAAA,MAAAtzD,KAAA4gF,iBAWA56B,EAAArnD,UAAA2hF,6BAAA,WAGAtgF,KAAAgzC,IAAAhzC,KAAAszD,MAAA,MAAAtzD,KAAA4gF,gBACA5gF,KAAAgzC,IAAAhzC,KAAAszD,MAAA,aAAAtzD,KAAAygF,uBACAzgF,KAAAgzC,IAAAhzC,KAAAszD,MAAA,YAAAtzD,KAAA0gF,sBACA1gF,KAAAgzC,IAAAhzC,KAAAszD,MAAA,WAAAtzD,KAAA2gF,qBACA3gF,KAAAgzC,IAAAhzC,KAAAszD,MAAA,YAAAtzD,KAAAugF,kBACAvgF,KAAAgzC,IAAAhzC,KAAAszD,MAAA,WAAAtzD,KAAAwgF,yBAUAx6B,EAAArnD,UAAAqgF,iBAAA,WACAh/E,KAAAkjD,eAGAljD,KAAAygE,OAAA3oE,QACAkI,KAAA6gF,UAAA,YAAA7gF,KAAAygE,OAAA3oE,QAIAkI,KAAA+/E,0BAGA//E,KAAA4/E,6BAeA55B,EAAArnD,UAAAygF,qBAAA,WAGAp/E,KAAAo3C,YAAA,aACAp3C,KAAAo3C,YAAA,eAGAp3C,KAAA60B,MAAA,MAKA70B,KAAAisD,UAWAjsD,KAAA8gF,YAAA,GACA9gF,KAAAuuC,QAAA,eALAvuC,KAAAuuC,QAAA,aACAvuC,KAAAuuC,QAAA,cASAvuC,KAAA+gF,gBAAA/gF,KAAAyB,aAWAukD,EAAArnD,UAAAoiF,gBAAA,SAAAxjF,GACA,IAAAgoD,EAAAvlD,KAEA,GAAAA,KAAAszD,OAAA,iBAAA/1D,EAAA,CAIA,IAAA6rE,EAAA,WACA,IAAA4X,EAAAz7B,EAAA6jB,QAEA7jB,EAAA6jB,OAAA,GAEA,IAAAtG,EAAAvd,EAAAjF,OAEA,GAAAwiB,KAAA/wD,MAAA+wD,EAAAme,MAIA,OAAAne,EAAAme,MAAA,SAAA19E,GAEAgiD,EAAA6jB,MAAA4X,MAIAE,OAAA,EAgBA,GAdA,QAAA3jF,GACA2jF,EAAAlhF,KAAAsgD,SAEA4gC,EAAAnvE,MAAAmvE,EAAAD,OACAC,EAAAD,MAAA,WACA,OAAA7X,MAIA8X,EADK,UAAA3jF,EACL6rE,IAEAppE,KAAAsgD,OAGA4gC,KAAAnvE,MAAAmvE,EAAAD,MAIA,OAAAC,EAAAnvE,KAAA,WACAwzC,EAAAhX,SAAsBhxC,KAAA,mBAAAkE,SAAAlE,MACjB0jF,MAAA,SAAA19E,GACLgiD,EAAAhX,SAAsBhxC,KAAA,mBAAAkE,SAAAlE,QAiBtByoD,EAAArnD,UAAAwiF,oBAAA,WACA,IAAArnB,EAAA32D,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAGAonD,EAAAuP,EACAv8D,EAAA,GAUA,GARA,iBAAAgtD,IACAA,EAAAuP,EAAAvP,IACAhtD,EAAAu8D,EAAAv8D,OAMA,SAAAkW,KAAA82C,GAAA,CAMAvqD,KAAAygE,OAAA14C,OAAA/nB,KAAAygE,OAAA14C,WACA/nB,KAAAygE,OAAAxrB,QAAAj1C,KAAAygE,OAAAxrB,YAGAsV,IAAAhtD,IACAA,EA5jWA,SAAAs/C,EAAA0N,GACA,IAAAA,EACA,SAIA,GAAA1N,EAAA4jB,OAAA14C,OAAAwiC,SAAA1N,EAAA4jB,OAAA14C,OAAAxqB,KACA,OAAAs/C,EAAA4jB,OAAA14C,OAAAxqB,KAIA,IAAA6jF,EAAAvkC,EAAA4jB,OAAAxrB,QAAA32C,OAAA,SAAAmlE,GACA,OAAAA,EAAAlZ,UAGA,GAAA62B,EAAAnsF,OACA,OAAAmsF,EAAA,GAAA7jF,KAMA,IAFA,IAAA03C,EAAA4H,EAAAhD,GAAA,UAEAvmD,EAAA,EAAiBA,EAAA2hD,EAAAhgD,OAAoB3B,IAAA,CACrC,IAAAmwE,EAAAxuB,EAAA3hD,GAEA,GAAAmwE,EAAAlmE,MAAAkmE,EAAAlZ,KAAAkZ,EAAAlZ,QACA,OAAAkZ,EAAAlmE,KAKA,OAAAogE,GAAApT,GA6hWA82B,CAAArhF,KAAAuqD,IAIAvqD,KAAAygE,OAAA14C,OAAAq4B,MAAwC0Z,GAAWvP,MAAAhtD,SASnD,IAPA,IAAA6jF,EAAAphF,KAAAygE,OAAAxrB,QAAA32C,OAAA,SAAAmlE,GACA,OAAAA,EAAAlZ,KAAAkZ,EAAAlZ,UAEA+2B,KACAC,EAAAvhF,KAAA65C,GAAA,UACA2nC,KAEAluF,EAAA,EAAmBA,EAAAiuF,EAAAtsF,OAAsB3B,IAAA,CACzC,IAAAmuF,EAAA7pC,GAAA2pC,EAAAjuF,IAEAguF,EAAAttF,KAAAytF,GAEAA,EAAAl3B,KAAAk3B,EAAAl3B,SACAi3B,EAAAxtF,KAAAytF,EAAAl3B,KAMAi3B,EAAAvsF,SAAAmsF,EAAAnsF,OACA+K,KAAAygE,OAAAxrB,QAAAqsC,EAGKF,EAAAnsF,SACL+K,KAAAygE,OAAAxrB,SAAAj1C,KAAAygE,OAAA14C,SAIA/nB,KAAAygE,OAAAlW,QAwCAvE,EAAArnD,UAAA0gF,qBAAA,SAAAvvC,GACA,IAAAwoB,EAAAt4D,KAIA,IAAAA,KAAAy8E,eAGAz8E,KAAAmhF,oBAAArxC,EAAAya,MAMAza,EAAAya,KAAA,CASAvqD,KAAAszD,MAAArX,KAAA,yBARA,SAAAylC,EAAAn+E,GACA,cAAAA,EAAAhG,MACA+6D,EAAA6oB,oBAAA7oB,EAAA6nB,SAAA,eAGA7nB,EAAAhF,MAAAtgB,KAAA,yBAAA0uC,KAOA1hF,KAAAuuC,SACAgc,IAAAza,EAAAya,IACAhtD,KAAA,eAkBAyoD,EAAArnD,UAAAmiF,WAAA,SAAAa,GACA,QAAA/9C,IAAA+9C,EAEA,OAAA3hF,KAAAi2D,YAGA0rB,IAAA3hF,KAAAi2D,cAIAj2D,KAAAi2D,YAAA0rB,EAEA3hF,KAAAi2D,aACAj2D,KAAAk3C,SAAA,mBACAl3C,KAAAuuC,QAAA,cAEAvuC,KAAAo3C,YAAA,qBAcA4O,EAAArnD,UAAA8gF,gBAAA,WACAz/E,KAAAo3C,YAAA,aACAp3C,KAAAo3C,YAAA,cACAp3C,KAAAk3C,SAAA,eAGAl3C,KAAA8gF,YAAA,GAQA9gF,KAAAuuC,QAAA,SAgBAyX,EAAArnD,UAAAshF,sBAAA,WACAjgF,KAAAszD,MAAA6b,eAAA,OAAAnvE,KAAAygE,OAAAqb,mBACA97E,KAAAq7E,iBAAAl1E,QAAA,SAAAy7E,GACA,OAAAA,EAAAt0D,SAAAs0D,EAAA9xC,SAEA9vC,KAAAq7E,qBAEAr7E,KAAAygE,OAAAqb,iBAAA97E,KAAAszD,MAAA6b,eAOAnvE,KAAAuuC,QAAA,eAYAyX,EAAArnD,UAAA2gF,mBAAA,WACA,IAAA9mB,EAAAx4D,KAEAA,KAAAk3C,SAAA,eAOAl3C,KAAAuuC,QAAA,WACAvuC,KAAAi8C,IAAA,wBACA,OAAAuc,EAAAphB,YAAA,kBAcA4O,EAAArnD,UAAAkjF,mBAAA,WACA7hF,KAAAo3C,YAAA,eAOAp3C,KAAAuuC,QAAA,YAYAyX,EAAArnD,UAAAmjF,0BAAA,WACA9hF,KAAAo3C,YAAA,eAQAp3C,KAAAuuC,QAAA,mBAYAyX,EAAArnD,UAAAojF,mBAAA,WACA/hF,KAAAo3C,YAAA,eAOAp3C,KAAAuuC,QAAA,YAYAyX,EAAArnD,UAAA6gF,mBAAA,WACAx/E,KAAAk3C,SAAA,eAOAl3C,KAAAuuC,QAAA,YAYAyX,EAAArnD,UAAAqjF,kBAAA,WACAhiF,KAAAo3C,YAAA,eAOAp3C,KAAAuuC,QAAA,WAcAyX,EAAArnD,UAAA+gF,qBAAA,WAGA1/E,KAAAwgD,SAAAyhC,YACAruC,EAAAV,KAAA,0EACAlzC,KAAAo0D,YAAAp0D,KAAAwgD,SAAAyhC,YAGAjiF,KAAAk3C,SAAA,mBAUAl3C,KAAAuuC,QAAA,cAYAyX,EAAArnD,UAAAghF,iBAAA,WACA3/E,KAAAo3C,YAAA,eACAp3C,KAAAk3C,SAAA,cAOAl3C,KAAAuuC,QAAA,UAYAyX,EAAArnD,UAAA4gF,iBAAA,WACAv/E,KAAAk3C,SAAA,aACAl3C,KAAAwgD,SAAAh/C,MACAxB,KAAAo0D,YAAA,GACAp0D,KAAAsgD,QACKtgD,KAAAisD,UACLjsD,KAAAmsD,QASAnsD,KAAAuuC,QAAA,UAWAyX,EAAArnD,UAAAihF,0BAAA,WACA5/E,KAAAjJ,SAAAiJ,KAAAmgF,SAAA,cAcAn6B,EAAArnD,UAAA4hF,iBAAA,SAAAzwC,GACA6J,GAAA7J,IAMA9vC,KAAA47E,YAIA57E,KAAAisD,SACArC,GAAA5pD,KAAAsgD,QAEAtgD,KAAAmsD,UAeAnG,EAAArnD,UAAA6hF,uBAAA,SAAA1wC,GACA9vC,KAAA47E,YAMA59E,MAAAW,UAAA+jD,KAAA7jD,KAAAmB,KAAA65C,GAAA,gDAAAzE,GACA,OAAAA,EAAAra,SAAA+U,EAAA3lC,YAIAnK,KAAA2oE,eACA3oE,KAAA4oE,iBAEA5oE,KAAA6oE,uBAcA7iB,EAAArnD,UAAAiiF,eAAA,WACA5gF,KAAAq8E,YAAAr8E,KAAAq8E,eAWAr2B,EAAArnD,UAAA8hF,sBAAA,WACAzgF,KAAAkiF,cAAAliF,KAAAq8E,cAWAr2B,EAAArnD,UAAA+hF,qBAAA,WACA1gF,KAAAkiF,eACAliF,KAAA8kD,sBAgBAkB,EAAArnD,UAAAgiF,oBAAA,SAAA7wC,GAEAA,EAAAhlC,kBAWAk7C,EAAArnD,UAAA49E,wBAAA,WACAv8E,KAAA2oE,eACA3oE,KAAAk3C,SAAA,kBAEAl3C,KAAAo3C,YAAA,mBAaA4O,EAAArnD,UAAA69E,kBAAA,WACAx8E,KAAA8kD,sBAkBAkB,EAAArnD,UAAAkhF,4BAAA,SAAA/vC,EAAA59C,GACAA,GACA8N,KAAA2oE,aAAAz2E,EAAAy2E,cAQA3oE,KAAAuuC,QAAA,qBAWAyX,EAAArnD,UAAAmhF,iBAAA,WACA,IAAAjrD,EAAA70B,KAAAszD,MAAAz+B,QAEA70B,KAAA60B,UAYAmxB,EAAArnD,UAAAqhF,oBAAA,WACA,IAAA9tF,EAAA,KAEAiR,UAAAlO,OAAA,IACA/C,EAAAiR,UAAA,IASAnD,KAAAuuC,QAAA,WAAAr8C,IAWA8zD,EAAArnD,UAAA+lE,SAAA,WACA,OAAA1kE,KAAAygE,QAgBAza,EAAArnD,UAAAkiF,UAAA,SAAAj7C,EAAA22B,GAGAv8D,KAAAqgD,MAAA,WACA,GAAAza,KAAAm3B,GACA,OA95XA,SAAApB,EAAAxR,EAAAvkB,EAAA22B,GACA,OAAApS,EAAAvkB,GAAA+1B,EAAAl7B,OAAAi8B,GAAA92B,GAAA22B,IA65XA4lB,CAAAniF,KAAAk8E,YAAAl8E,KAAAszD,MAAA1tB,EAAA22B,GACO,GAAA32B,KAAAo3B,GACP,OAAAV,GAAAt8D,KAAAk8E,YAAAl8E,KAAAszD,MAAA1tB,EAAA22B,GAGA,IACAv8D,KAAAszD,OACAtzD,KAAAszD,MAAA1tB,GAAA22B,GAEO,MAAAh5D,GAEP,MADAqwC,EAAArwC,GACAA,KAEK,IAgBLyiD,EAAArnD,UAAAwhF,SAAA,SAAAv6C,GACA,GAAA5lC,KAAAszD,OAAAtzD,KAAAszD,MAAAtQ,SAAA,CAIA,GAAApd,KAAAi3B,GACA,OAz8XA,SAAAlB,EAAAxR,EAAAvkB,GACA,OAAA+1B,EAAAymB,YAAA1lB,GAAA92B,GAAAukB,EAAAvkB,MAw8XAy8C,CAAAriF,KAAAk8E,YAAAl8E,KAAAszD,MAAA1tB,GACK,GAAAA,KAAAo3B,GACL,OAAAV,GAAAt8D,KAAAk8E,YAAAl8E,KAAAszD,MAAA1tB,GAMA,IACA,OAAA5lC,KAAAszD,MAAA1tB,KACK,MAAAriC,GAGL,QAAAqgC,IAAA5jC,KAAAszD,MAAA1tB,GAEA,MADAgO,EAAA,aAAAhO,EAAA,2BAAA5lC,KAAA0+E,UAAA,wBAAAn7E,GACAA,EAIA,iBAAAA,EAAAvN,KAGA,MAFA49C,EAAA,aAAAhO,EAAA,mBAAA5lC,KAAA0+E,UAAA,gCAAAn7E,GACAvD,KAAAszD,MAAAtQ,UAAA,EACAz/C,EAKA,MADAqwC,EAAArwC,GACAA,KAgBAyiD,EAAArnD,UAAA2hD,KAAA,WACA,IAAA4Y,EAAAl5D,KAEAsiF,EAAAtiF,KAAAwgD,SAAA99C,SAAgDquC,EAAA5vC,EAAQuB,QAExD,OAAA4/E,EACA,IAAAA,EAAA,SAAAC,GACArpB,EAAAspB,MAAAD,KAIAviF,KAAAwiF,SAcAx8B,EAAArnD,UAAA6jF,MAAA,WACA,IAAAC,EAAAziF,KAEAstB,EAAAnqB,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAAymD,GAWA,GAPA5pD,KAAA28E,kBACA38E,KAAAgzC,IAAA,YAAAhzC,KAAA28E,kBAMA38E,KAAAgjD,SAcK,KAAAhjD,KAAAy8E,eAAAz8E,KAAAuqD,OAAAvqD,KAAAy1E,cAEL,YADAnoD,EAAAttB,KAAAmgF,SAAA,SAWAngF,KAAA28E,iBAAA,WACA8F,EAAA9F,iBAAA,KACArvD,EAAAm1D,EAAAniC,SAGAtgD,KAAAi8C,IAAA,YAAAj8C,KAAA28E,sBA/BA,CAGA,GAAA38E,KAAA08E,qBACA,OAGA18E,KAAA08E,sBAAA,EACA18E,KAAAqgD,MAAA,WACAoiC,EAAA/F,sBAAA,EACApvD,EAAAm1D,EAAAniC,YAiCA0F,EAAArnD,UAAAwtD,MAAA,WACAnsD,KAAA6gF,UAAA,UAYA76B,EAAArnD,UAAAstD,OAAA,WAEA,WAAAjsD,KAAAmgF,SAAA,WAaAn6B,EAAArnD,UAAAu5D,OAAA,WACA,OAAAl4D,KAAAmgF,SAAA,WAAA33B,GAAA,MAgBAxC,EAAArnD,UAAA8lE,UAAA,SAAAie,GACA,YAAAA,EACA,OAAA1iF,KAAA67E,WAEA77E,KAAA67E,aAAA6G,EAEAA,EACA1iF,KAAAk3C,SAAA,iBAEAl3C,KAAAo3C,YAAA,kBAeA4O,EAAArnD,UAAAy1D,YAAA,SAAA/iE,GACA,gBAAAA,GACAA,EAAA,IACAA,EAAA,QAEA2O,KAAA6gF,UAAA,iBAAAxvF,KAUA2O,KAAAygE,OAAArM,YAAAp0D,KAAAmgF,SAAA,kBACAngF,KAAAygE,OAAArM,cAqBApO,EAAArnD,UAAA5H,SAAA,SAAA1F,GACA,QAAAuyC,IAAAvyC,EAEA,YAAAuyC,IAAA5jC,KAAAygE,OAAA1pE,SAAAiJ,KAAAygE,OAAA1pE,SAAA0hF,KAGApnF,EAAAknD,WAAAlnD,IAGA,IACAA,EAAAyvC,KAGAzvC,IAAA2O,KAAAygE,OAAA1pE,WAEAiJ,KAAAygE,OAAA1pE,SAAA1F,EAEAA,IAAAyvC,IACA9gC,KAAAk3C,SAAA,YAEAl3C,KAAAo3C,YAAA,YAMAp3C,KAAAuuC,QAAA,oBAaAyX,EAAArnD,UAAAomE,cAAA,WACA,OAAA/kE,KAAAjJ,WAAAiJ,KAAAo0D,eAYApO,EAAArnD,UAAAmmE,qBAAA,WACA,OAAArqE,KAAA+oC,MAAAxjC,KAAAjJ,YAAA0D,KAAA+oC,MAAAxjC,KAAAo0D,gBAkBApO,EAAArnD,UAAA+pD,SAAA,WACA,IAAAA,EAAA1oD,KAAAmgF,SAAA,YAMA,OAJAz3B,KAAAzzD,SACAyzD,EAAAF,GAAA,MAGAE,GAaA1C,EAAArnD,UAAA8pD,gBAAA,WACA,OAAAA,GAAAzoD,KAAA0oD,WAAA1oD,KAAAjJ,aAYAivD,EAAArnD,UAAA4nE,YAAA,WACA,IAAA7d,EAAA1oD,KAAA0oD,WACA3xD,EAAAiJ,KAAAjJ,WACAyG,EAAAkrD,EAAAlrD,IAAAkrD,EAAAzzD,OAAA,GAMA,OAJAuI,EAAAzG,IACAyG,EAAAzG,GAGAyG,GAiBAwoD,EAAArnD,UAAA7G,OAAA,SAAA6qF,GACA,IAAA5Y,OAAA,EAEA,YAAAnmC,IAAA++C,GAEA5Y,EAAAtvE,KAAA6+C,IAAA,EAAA7+C,KAAAwgC,IAAA,EAAAsd,WAAAoqC,KACA3iF,KAAAygE,OAAA3oE,OAAAiyE,EACA/pE,KAAA6gF,UAAA,YAAA9W,QAEAA,EAAA,GACA/pE,KAAAwpE,YAAAO,MAOAA,EAAAxxB,WAAAv4C,KAAAmgF,SAAA,WACA5sE,MAAAw2D,GAAA,EAAAA,IAgBA/jB,EAAArnD,UAAAyqE,MAAA,SAAAwZ,GACA,QAAAh/C,IAAAg/C,EAIA,OAAA5iF,KAAAmgF,SAAA,aAHAngF,KAAA6gF,UAAA,WAAA+B,IAkCA58B,EAAArnD,UAAAkkF,aAAA,SAAAC,GACA,YAAAl/C,IAAAk/C,EACA9iF,KAAA6gF,UAAA,kBAAAiC,GAEA9iF,KAAAmgF,SAAA,qBAmBAn6B,EAAArnD,UAAA6qE,YAAA,SAAAmZ,GACA,QAAA/+C,IAAA++C,GAAA,IAAAA,EAIA,OAAA3iF,KAAAygE,OAAAuJ,WAHAhqE,KAAAygE,OAAAuJ,WAAA2Y,GAeA38B,EAAArnD,UAAAk6E,mBAAA,WACA,OAAA74E,KAAAmgF,SAAA,2BAoBAn6B,EAAArnD,UAAAgqE,aAAA,SAAAoa,GACA,QAAAn/C,IAAAm/C,EAIA,QAAA/iF,KAAAgjF,cAHAhjF,KAAAgjF,gBAAAD,GAmBA/8B,EAAArnD,UAAAkqE,kBAAA,WACA,IAAAoa,EAAAr6B,GAEA5oD,KAAA2oE,cAAA,GAEAsa,EAAApa,mBASArtB,GAASvK,EAAA9vC,EAAQ8hF,EAAAC,iBAAA1jE,GAAAxf,KAAA,SAAAmjF,EAAA5/E,GACjBvD,KAAA2oE,aAA0B13B,EAAA9vC,EAAQ8hF,EAAAG,qBAGlC,IAAApjF,KAAA2oE,gBACA31B,GAAc/B,EAAA9vC,EAAQ8hF,EAAAC,iBAAAC,GAMtBnjF,KAAAuuC,QAAA,uBAGAvuC,KAAA2gD,IAAAsiC,EAAApa,sBACK7oE,KAAAszD,MAAAulB,qBAGL74E,KAAA6gF,UAAA,oBAIA7gF,KAAAqjF,kBAKArjF,KAAAuuC,QAAA,sBAWAyX,EAAArnD,UAAAiqE,eAAA,WACA,IAAAqa,EAAAr6B,GAEA5oD,KAAA2oE,cAAA,GAGAsa,EAAApa,kBACM53B,EAAA9vC,EAAQ8hF,EAAAra,kBACT5oE,KAAAszD,MAAAulB,qBACL74E,KAAA6gF,UAAA,mBAEA7gF,KAAAsjF,iBAKAtjF,KAAAuuC,QAAA,sBAYAyX,EAAArnD,UAAA0kF,gBAAA,WACArjF,KAAAujF,cAAA,EAGAvjF,KAAAwjF,gBAA2BvyC,EAAA9vC,EAAQkuB,gBAAAnmB,MAAAu6E,SAGnCjoC,GAAOvK,EAAA9vC,EAAQ,UAAAqe,GAAAxf,UAAA0jF,qBAGXzyC,EAAA9vC,EAAQkuB,gBAAAnmB,MAAAu6E,SAAA,SAGZvsC,GAAajG,EAAA9vC,EAAQ6e,KAAA,mBAMrBhgB,KAAAuuC,QAAA,oBAYAyX,EAAArnD,UAAA+kF,mBAAA,SAAA5zC,GACA,KAAAA,EAAAnjC,WACA,IAAA3M,KAAA2oE,eACA3oE,KAAA4oE,iBAEA5oE,KAAAsjF,mBAYAt9B,EAAArnD,UAAA2kF,eAAA,WACAtjF,KAAAujF,cAAA,EACAvwC,GAAQ/B,EAAA9vC,EAAQ,UAAAnB,KAAA0jF,oBAGZzyC,EAAA9vC,EAAQkuB,gBAAAnmB,MAAAu6E,SAAAzjF,KAAAwjF,gBAGZpsC,GAAgBnG,EAAA9vC,EAAQ6e,KAAA,mBAQxBhgB,KAAAuuC,QAAA,mBAgBAyX,EAAArnD,UAAAi7D,YAAA,SAAAr8D,GAIA,IAHA,IAAAs9D,OAAA,EAGAvnE,EAAA,EAAA0qE,EAAAh+D,KAAAwgD,SAAAyd,UAAgD3qE,EAAA0qE,EAAA/oE,OAAc3B,IAAA,CAC9D,IAAA4qE,EAAAF,EAAA1qE,GACA62D,EAAA1H,GAAAyX,QAAAgE,GASA,GALA/T,IACAA,EAAA1nD,GAAA0/C,aAAA+b,IAIA/T,GAMA,GAAAA,EAAAgU,gBACAtD,EAAA1Q,EAAAyP,YAAAr8D,IAGA,OAAAs9D,OATAjnB,EAAA/e,MAAA,QAAAqpC,EAAA,qEAcA,UAgBAlY,EAAArnD,UAAAglF,aAAA,SAAA1uC,GACA,IAwCArC,EAxCAgxC,EAAA5jF,KAIA6jF,EAAA7jF,KAAAwgD,SAAAyd,UAAA//D,IAAA,SAAAggE,GACA,OAAAA,EAAAzb,GAAAyX,QAAAgE,MACK5/D,OAAA,SAAAwlF,GACL,IAAA5lB,EAAA4lB,EAAA,GACA35B,EAAA25B,EAAA,GAGA,OAAA35B,EAEAA,EAAAgU,eAGAvqB,EAAA/e,MAAA,QAAAqpC,EAAA,sEACA,KAMA6lB,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAzM,OAAA,EAYA,OAVAuM,EAAAthC,KAAA,SAAAyhC,GACA,OAAAF,EAAAvhC,KAAA,SAAA0hC,GAGA,GAFA3M,EAAAyM,EAAAC,EAAAC,GAGA,aAKA3M,GASA4M,EAAA,SAAAC,EAAAv8D,GACA,IAAAm2C,EAAAomB,EAAA,GAGA,GAFAA,EAAA,GAEAzqB,cAAA9xC,EAAA67D,EAAApjC,SAAA0d,EAAAx1D,gBACA,OAAgBqf,SAAAoiC,KAAA+T,IAchB,OARAl+D,KAAAwgD,SAAA+jC,YAEAR,EAAA9uC,EAAA4uC,GAlBAjxC,EAkBAyxC,EAjBA,SAAAljF,EAAA+B,GACA,OAAA0vC,EAAA1vC,EAAA/B,MAmBA4iF,EAAAF,EAAA5uC,EAAAovC,MAGA,GAoBAr+B,EAAArnD,UAAA4rD,IAAA,SAAAxiC,GACA,IAAAy8D,EAAAxkF,KAGA,YAAA+nB,EACA,OAAA/nB,KAAAygE,OAAAlW,KAAA,GAIA,IAAAtV,EA5+YA,SAAAwvC,EAAAl6B,GAEA,GAAAvsD,MAAAgI,QAAAukD,GAAA,CACA,IAAAm6B,KAEAn6B,EAAApkD,QAAA,SAAAw+E,GACAA,EAAAF,EAAAE,GAEA3mF,MAAAgI,QAAA2+E,GACAD,IAAAz+E,OAAA0+E,GACO5vC,EAAA4vC,IACPD,EAAA1wF,KAAA2wF,KAIAp6B,EAAAm6B,OAGAn6B,EAFG,iBAAAA,KAAA1jC,QAEHg3C,IAAsBtT,SACnBxV,EAAAwV,IAAA,iBAAAA,oBAAA1jC,QAEHg3C,GAAAtT,OAMA,OAAAA,EAi9YAk6B,CAAA18D,GAKAktB,EAAAhgD,QAQA+K,KAAAy8E,cAAA,EAEAz8E,KAAAygE,OAAAxrB,UACAj1C,KAAAmhF,oBAAAlsC,EAAA,IAGAimB,GAAAl7D,KAAAi1C,EAAA,YAAA2vC,EAAA5oB,GAQA,IA3xZAL,EAAAxR,EA6xZA,GATAq6B,EAAAtI,YAAAlgB,EAIAwoB,EAAA/jB,OAAAxrB,UACAuvC,EAAArD,oBAAAyD,GAEAJ,EAAAK,KAAAD,GAGA,OAAA3vC,EAAAhgD,OAAA,EACAuvF,EAAAj6B,IAAAtV,EAAAr2C,MAAA,KAGA4lF,EAAA/H,cAAA,EAGA+H,EAAA1vD,WAAA,WACA90B,KAAA60B,OAAsBmS,KAAA,EAAAkiB,QAAAlpD,KAAAmhD,SAAAnhD,KAAAwgD,SAAAskC,wBACb,QAITN,EAAAthC,gBA3yZAyY,EAgzZAK,EAhzZA7R,EAgzZAq6B,EAAAlxB,MA/yZAqI,EAAAx1D,QAAA,SAAA41D,GACA,OAAAA,EAAAgpB,SAAAhpB,EAAAgpB,QAAA56B,QAowZAnqD,KAAA80B,WAAA,WACA90B,KAAA60B,OAAoBmS,KAAA,EAAAkiB,QAAAlpD,KAAAmhD,SAAAnhD,KAAAwgD,SAAAskC,wBACb,IA2DP9+B,EAAArnD,UAAAkmF,KAAA,SAAA98D,GACA,IAjulBAi9D,EAAAC,EAiulBAC,EAAAllF,KAEAmlF,EAAAnlF,KAAA2jF,cAAA57D,IAEA,OAAAo9D,IArulBAH,EAyulBAG,EAAAh7B,KAzulBA86B,EAyulBAjlF,KAAA0+E,UAxulBAx+B,GAAA8kC,KAAA9kC,GAAA+kC,IAyulBAjlF,KAAAy8E,cAAA,EAEAz8E,KAAAo+D,UAAA+mB,EAAAh7B,KAAAg7B,EAAAp9D,QACA/nB,KAAAszD,MAAAjT,MAAA,WACA6kC,EAAAzI,cAAA,KAEA,IAKAz8E,KAAAqgD,MAAA,WAMArgD,KAAAszD,MAAA5sD,YAAA/H,UAAAuG,eAAA,aACAlF,KAAA6gF,UAAA,YAAA94D,GAEA/nB,KAAA6gF,UAAA,MAAA94D,EAAAwiC,KAGAvqD,KAAAy8E,cAAA,IACK,IAEL,KAQAz2B,EAAArnD,UAAAw2D,KAAA,WACAn1D,KAAA6gF,UAAA,SASA76B,EAAArnD,UAAAq5D,MAAA,WACAh4D,KAAAszD,OACAtzD,KAAAszD,MAAAuE,YAAA,QAEA73D,KAAAo+D,UAAAp+D,KAAAwgD,SAAAyd,UAAA,SACAj+D,KAAA6gF,UAAA,UAWA76B,EAAArnD,UAAAymF,eAAA,WACA,IAAAr9D,EAAA/nB,KAAAqlF,gBACApwC,KAOA,OAJA,IAAA72C,OAAAC,KAAA0pB,GAAA9yB,QACAggD,EAAAjhD,KAAA+zB,GAGA/nB,KAAAygE,OAAAxrB,YAWA+Q,EAAArnD,UAAA0mF,cAAA,WACA,OAAArlF,KAAAygE,OAAA14C,YAYAi+B,EAAArnD,UAAA82E,WAAA,WACA,OAAAz1E,KAAAqlF,iBAAArlF,KAAAqlF,gBAAA96B,KAAA,IAaAvE,EAAArnD,UAAA2mF,YAAA,WACA,OAAAtlF,KAAAqlF,iBAAArlF,KAAAqlF,gBAAA9nF,MAAA,IAeAyoD,EAAArnD,UAAAq5E,QAAA,SAAAv5E,GACA,YAAAmlC,IAAAnlC,GACAuB,KAAA6gF,UAAA,aAAApiF,QACAuB,KAAAwgD,SAAAw3B,QAAAv5E,IAGAuB,KAAAmgF,SAAA,YAqBAn6B,EAAArnD,UAAA8C,SAAA,SAAAhD,GAEA,QAAAmlC,IAAAnlC,EACA,OAAAuB,KAAAwgD,SAAA/+C,WAAA,EAGA,IAAA8jF,OAAA,EAGA,iBAAA9mF,GAAA,mBAAAgV,KAAAhV,IACAuB,KAAAwgD,SAAA/+C,SAAAhD,EACAuB,KAAA+gF,gBAAAtiF,GACA8mF,GAAA,GASAvlF,KAAAwgD,SAAA/+C,WALKhD,EAQL8mF,KAAAvlF,KAAAwgD,SAAA/+C,SAMAzB,KAAAszD,OACAtzD,KAAA6gF,UAAA,cAAA0E,IAsBAv/B,EAAArnD,UAAA66D,YAAA,SAAA/6D,GACA,YAAAmlC,IAAAnlC,GACAuB,KAAA6gF,UAAA,iBAAApiF,GACAuB,KAAAwgD,SAAAgZ,YAAA/6D,EACAuB,MAEAA,KAAAmgF,SAAA,gBAeAn6B,EAAArnD,UAAA6C,KAAA,SAAA/C,GACA,YAAAmlC,IAAAnlC,GACAuB,KAAA6gF,UAAA,UAAApiF,QACAuB,KAAAwgD,SAAAh/C,KAAA/C,IAGAuB,KAAAmgF,SAAA,SAgBAn6B,EAAArnD,UAAAwgE,OAAA,SAAA5U,GACA,QAAA3mB,IAAA2mB,EACA,OAAAvqD,KAAA27E,QAKApxB,IACAA,EAAA,IAGAA,IAAAvqD,KAAA27E,UAKA37E,KAAA27E,QAAApxB,EAGAvqD,KAAA6gF,UAAA,YAAAt2B,GAEAvqD,KAAAo7E,mBAAA,EASAp7E,KAAAuuC,QAAA,kBAiBAyX,EAAArnD,UAAAohF,wBAAA,WACA,KAAA//E,KAAA27E,SAAA37E,KAAAwgD,SAAAs+B,wBAAA9+E,KAAAszD,OAAAtzD,KAAAszD,MAAA6L,OAAA,CACA,IAAAqmB,EAAAxlF,KAAAszD,MAAA6L,UAAA,GAEAqmB,IAAAxlF,KAAA27E,UACA37E,KAAA27E,QAAA6J,EACAxlF,KAAAo7E,mBAAA,EAGAp7E,KAAAuuC,QAAA,mBAmBAyX,EAAArnD,UAAA0tD,SAAA,SAAA8Z,GACA,QAAAviC,IAAAuiC,EACA,QAAAnmE,KAAA47E,UAGAzV,MAGAnmE,KAAA47E,YAAAzV,IAIAnmE,KAAA47E,UAAAzV,EAEAnmE,KAAAkgF,uBACAlgF,KAAA6gF,UAAA,cAAA1a,GAGAnmE,KAAA47E,WACA57E,KAAAo3C,YAAA,yBACAp3C,KAAAk3C,SAAA,wBAKAl3C,KAAAuuC,QAAA,mBACAvuC,KAAAkgF,uBACAlgF,KAAAogF,8BAGApgF,KAAAo3C,YAAA,wBACAp3C,KAAAk3C,SAAA,yBAKAl3C,KAAAuuC,QAAA,oBACAvuC,KAAAkgF,uBACAlgF,KAAAsgF,kCAwBAt6B,EAAArnD,UAAAuhF,oBAAA,SAAA/Z,GACA,QAAAviC,IAAAuiC,EACA,QAAAnmE,KAAAylF,qBAGAtf,MAGAnmE,KAAAylF,uBAAAtf,IAIAnmE,KAAAylF,qBAAAtf,EAEAnmE,KAAAylF,sBACAzlF,KAAAk3C,SAAA,6BAQAl3C,KAAAuuC,QAAA,yBAEAvuC,KAAAo3C,YAAA,6BAQAp3C,KAAAuuC,QAAA,0BAkBAyX,EAAArnD,UAAAk2B,MAAA,SAAA4P,GACA,YAAAb,IAAAa,EACAzkC,KAAAi4D,QAAA,KAIA,OAAAxzB,GACAzkC,KAAAi4D,OAAAxzB,EACAzkC,KAAAo3C,YAAA,kBACAp3C,KAAA0lF,cACA1lF,KAAA0lF,aAAA95B,WAKA5rD,KAAAi4D,OAAA,IAAAhP,GAAAxkB,GAGAzkC,KAAAk3C,SAAA,aAIAtD,EAAA/e,MAAA,SAAA70B,KAAAi4D,OAAAjxB,KAAA,IAAAiiB,GAAAG,WAAAppD,KAAAi4D,OAAAjxB,MAAA,IAAAhnC,KAAAi4D,OAAA/O,QAAAlpD,KAAAi4D,aAMAj4D,KAAAuuC,QAAA,WAaAyX,EAAArnD,UAAAmmD,mBAAA,SAAAhV,GACA9vC,KAAA2lF,eAAA,GAkBA3/B,EAAArnD,UAAA09E,WAAA,SAAAlW,GACA,QAAAviC,IAAAuiC,EACA,OAAAnmE,KAAAs7E,YAKA,IAFAnV,SAEAnmE,KAAAs7E,YAAA,CAMA,GAFAt7E,KAAAs7E,YAAAnV,EAEAnmE,KAAAs7E,YASA,OARAt7E,KAAA2lF,eAAA,EACA3lF,KAAAo3C,YAAA,qBACAp3C,KAAAk3C,SAAA,wBAKAl3C,KAAAuuC,QAAA,cAYAvuC,KAAAszD,OACAtzD,KAAAszD,MAAArX,IAAA,qBAAA14C,GACAA,EAAAwH,kBACAxH,EAAAuH,mBAIA9K,KAAA2lF,eAAA,EACA3lF,KAAAo3C,YAAA,mBACAp3C,KAAAk3C,SAAA,qBAKAl3C,KAAAuuC,QAAA,kBAUAyX,EAAArnD,UAAA29E,uBAAA,WACA,IAAAsJ,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,EAAAvmE,GAAAxf,UAAA8kD,oBA+BA9kD,KAAAw7C,GAAA,YAnBA,WACAuqC,IAIA/lF,KAAA2tC,cAAAi4C,GAIAA,EAAA5lF,KAAA0tC,YAAAq4C,EAAA,OAWA/lF,KAAAw7C,GAAA,YA9BA,SAAAj4C,GAGAA,EAAAuT,UAAA+uE,GAAAtiF,EAAAwT,UAAA+uE,IACAD,EAAAtiF,EAAAuT,QACAgvE,EAAAviF,EAAAwT,QACAgvE,OAyBA/lF,KAAAw7C,GAAA,UATA,SAAA1L,GACAi2C,IAEA/lF,KAAA2tC,cAAAi4C,KAUA5lF,KAAAw7C,GAAA,UAAAuqC,GACA/lF,KAAAw7C,GAAA,QAAAuqC,GAOA,IAAAC,OAAA,EAEAhmF,KAAA0tC,YAAA,WAEA,GAAA1tC,KAAA2lF,cAAA,CAKA3lF,KAAA2lF,eAAA,EAGA3lF,KAAAq8E,YAAA,GAGAr8E,KAAA4kC,aAAAohD,GAEA,IAAAnsD,EAAA75B,KAAAwgD,SAAAwlC,kBAEAnsD,GAAA,IAMAmsD,EAAAhmF,KAAA80B,WAAA,WAIA90B,KAAA2lF,eACA3lF,KAAAq8E,YAAA,IAEOxiD,MACF,MAkBLmsB,EAAArnD,UAAAwwE,aAAA,SAAAt3E,GACA,QAAA+rC,IAAA/rC,EAOA,OAAAmI,KAAAszD,OAAAtzD,KAAAszD,MAAAgH,qBACAt6D,KAAAygE,OAAAqb,kBAAA97E,KAAAmgF,SAAA,gBAEA,EAPAngF,KAAA6gF,UAAA,kBAAAhpF,IA2BAmuD,EAAArnD,UAAAo9E,oBAAA,SAAAlkF,GACA,YAAA+rC,IAAA/rC,EACAmI,KAAA6gF,UAAA,yBAAAhpF,GAGAmI,KAAAszD,OAAAtzD,KAAAszD,MAAAgH,qBACAt6D,KAAAmgF,SAAA,uBAEA,GAeAn6B,EAAArnD,UAAA2jE,QAAA,SAAA6D,GACA,QAAAviC,IAAAuiC,EAKA,QAAAnmE,KAAAimF,SAJAjmF,KAAAimF,WAAA9f,GA8BAngB,EAAArnD,UAAAo6D,aAAA,SAAA3J,EAAA3D,EAAA90D,GACA,GAAAqJ,KAAAszD,MACA,OAAAtzD,KAAAszD,MAAAyF,aAAA3J,EAAA3D,EAAA90D,IAyBAqvD,EAAArnD,UAAA+rD,mBAAA,SAAAxoC,EAAAi3C,GACA,GAAAn5D,KAAAszD,MACA,OAAAtzD,KAAAszD,MAAA5I,mBAAAxoC,EAAAi3C,IAgBAnT,EAAArnD,UAAAm5D,sBAAA,WACA,IACAouB,GADA/iF,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,OACA6kB,MACAA,OAAA4b,IAAAsiD,EAAA/iF,UAAA,GAAA+iF,EAKA,GAAAlmF,KAAAszD,MACA,OAAAtzD,KAAAszD,MAAAwE,sBAAA9vC,IAgBAg+B,EAAArnD,UAAA26D,wBAAA,WACA,OAAAt5D,KAAAmgF,SAAA,4BAWAn6B,EAAArnD,UAAAo/E,WAAA,WACA,OAAA/9E,KAAAszD,OAAAtzD,KAAAszD,MAAAyqB,YAAA/9E,KAAAszD,MAAAyqB,cAAA,GAWA/3B,EAAArnD,UAAAq/E,YAAA,WACA,OAAAh+E,KAAAszD,OAAAtzD,KAAAszD,MAAA0qB,aAAAh+E,KAAAszD,MAAA0qB,eAAA,GAiBAh4B,EAAArnD,UAAAhI,SAAA,SAAAqwC,GACA,QAAApD,IAAAoD,EACA,OAAAhnC,KAAA8uE,UAGA9uE,KAAA8uE,UAAA74E,OAAA+wC,GAAAt+B,eAaAs9C,EAAArnD,UAAA0iD,UAAA,WACA,OAAAjB,GAAA4F,EAAArnD,UAAA6hD,SAAAa,UAAArhD,KAAA07E,aAYA11B,EAAArnD,UAAAwnF,OAAA,WACA,IAAAjkE,EAAAk+B,GAAApgD,KAAAwgD,UACA5d,EAAA1gB,EAAA0gB,OAEA1gB,EAAA0gB,UAEA,QAAAtvC,EAAA,EAAmBA,EAAAsvC,EAAA3tC,OAAmB3B,IAAA,CACtC,IAAA00B,EAAA4a,EAAAtvC,IAGA00B,EAAAo4B,GAAAp4B,IACA60B,YAAAjZ,EACA1hB,EAAA0gB,OAAAtvC,GAAA00B,EAGA,OAAA9F,GAqBA8jC,EAAArnD,UAAAynF,YAAA,SAAA7vC,EAAAr0B,GACA,IAAAmkE,EAAArmF,MAEAkiB,SACAq0B,WAAA,GAEA,IAAA+vC,EAAA,IAAAz7B,GAAA7qD,KAAAkiB,GAQA,OANAliB,KAAA8hD,SAAAwkC,GACAA,EAAA9qC,GAAA,qBACA6qC,EAAA5iE,YAAA6iE,KAGAA,EAAA1/C,OACA0/C,GAeAtgC,EAAAk1B,eAAA,SAAAlmF,GACA,IAAAuxF,GACAtxC,WACArS,WAGA4jD,EAAA5uC,GAAA5iD,GACAyxF,EAAAD,EAAA,cAOA,GALAzvC,EAAA/hD,EAAA,eACAwxF,EAAAtJ,OAAA,GAIA,OAAAuJ,EAAA,CAGA,IAAAC,EAA4Bj1C,IAAcg1C,GAAA,MAC1ChiD,EAAAiiD,EAAA,GACAx0F,EAAAw0F,EAAA,GAEAjiD,GACAmP,EAAA/e,MAAA4P,GAEA5hC,EAAA2jF,EAAAt0F,GAMA,GAHA2Q,EAAA0jF,EAAAC,GAGAxxF,EAAAihF,gBAGA,IAFA,IAAAn0D,EAAA9sB,EAAAq/E,WAEA/gF,EAAA,EAAA0qE,EAAAl8C,EAAA7sB,OAA0C3B,EAAA0qE,EAAO1qE,IAAA,CACjD,IAAA+lB,EAAAyI,EAAAxuB,GAEAqzF,EAAAttE,EAAAlK,SAAAzG,cAEA,WAAAi+E,EACAJ,EAAAtxC,QAAAjhD,KAAA4jD,GAAAv+B,IACS,UAAAstE,GACTJ,EAAA3jD,OAAA5uC,KAAA4jD,GAAAv+B,IAKA,OAAAktE,GAYAvgC,EAAArnD,UAAAw9E,kBAAA,WACA,IAAA1hC,EAAexJ,EAAA9vC,EAAQC,cAAA,KAIvB,sBAAAq5C,EAAAvxC,OAAA,oBAAAuxC,EAAAvxC,OAAA,iBAAAuxC,EAAAvxC,OAAA,gBAAAuxC,EAAAvxC,OAEA,gBAAAuxC,EAAAvxC,QAGA88C,EAnmHA,CAomHCvjD,IAmDDszD,GAAAC,MAAA7vD,QAAA,SAAAs1E,GACA,IAAA37E,EAAAi2D,GAAA0lB,GAEAz1B,GAAArnD,UAAAmB,EAAA41D,YAAA,WACA,OAAA11D,KAAAszD,MACAtzD,KAAAszD,MAAAxzD,EAAA41D,eAKA11D,KAAAF,EAAA61D,aAAA31D,KAAAF,EAAA61D,cAAA,IAAA71D,EAAAy1D,UACAv1D,KAAAF,EAAA61D,iBASA3P,GAAAC,WAEA,IAAAK,GAAgBvV,EAAA5vC,EAAQmlD,UAUxBN,GAAArnD,UAAA6hD,UAEAyd,UAAAxb,GAAAwX,kBAEA2sB,SACAC,SAGAb,kBAAA,IAGAvW,iBAKA3tD,UAAA,iJAEAnrB,SAAA2vD,QAAAjF,WAAAiF,GAAAjF,UAAA,IAAAiF,GAAAwgC,cAAAxgC,GAAA3vD,WAAA,KAGA0qD,aAGAyjC,oBAAA,mDAUA,QAOA,UAQA,WAqBA,eAwBA,cAAA3+E,QAAA,SAAAysC,GACAoT,GAAArnD,UAAAi0C,GAAA,WACA,OAAA5yC,KAAAmgF,SAAAvtC,MAIAgoC,GAAAz0E,QAAA,SAAA2pC,GACAkW,GAAArnD,UAAA,aAAAuhD,GAAApQ,GAAA,gBACA,OAAA9vC,KAAAuuC,QAAAuB,MA8DArtC,GAAAijD,kBAAA,SAAAM,IAaA,IAiBA+gC,MAYAC,GAAA,SAAAhxF,GACA,OAAA+wF,GAAA7hF,eAAAlP,IAaAixF,GAAA,SAAAjxF,GACA,OAAAgxF,GAAAhxF,GAAA+wF,GAAA/wF,QAAA4tC,GAeAsjD,GAAA,SAAArqC,EAAA7mD,GACA6mD,EAAA,eAAAA,EAAA,mBACAA,EAAA,eAAA7mD,IAAA,GAiBAmxF,GAAA,SAAAtqC,EAAAnB,EAAA0rC,GACA,IAAAlQ,GAAAkQ,EAAA,2BAEAvqC,EAAAtO,QAAA2oC,EAAAx7B,GACAmB,EAAAtO,QAAA2oC,EAAA,IAAAx7B,EAAA1lD,KAAA0lD,IA2DA2rC,GAAA,SAAArxF,EAAAsxF,GAMA,OAFAA,EAAA3oF,UAAA3I,OAEA,WACAmxF,GAAAnnF,MAA6BhK,OAAAuxF,OAAAD,EAAAvzC,SAAA,OAAqD,GAElF,QAAAlB,EAAA1vC,UAAAlO,OAAAmN,EAAApE,MAAA60C,GAAAC,EAAA,EAAmEA,EAAAD,EAAaC,IAChF1wC,EAAA0wC,GAAA3vC,UAAA2vC,GAGA,IAAAiB,EAAA,IAAAyzC,SAAA7oF,UAAA6gB,KAAAhb,MAAA8iF,GAAA,MAAArhF,QAAAjG,MAAAiG,OAAA7D,MASA,OANApC,KAAAhK,GAAA,WACA,OAAA+9C,GAGAozC,GAAAnnF,KAAA+zC,EAAA0zC,gBAEA1zC,IAmBA2zC,GAAA,WAUA,SAAAA,EAAA7qC,GAGA,GAFA/I,EAAA9zC,KAAA0nF,GAEA1nF,KAAA0G,cAAAghF,EACA,UAAA/jF,MAAA,0DAGA3D,KAAA68C,SAIA2C,GAAAx/C,aACAA,KAAAuuC,QAEAwR,GAAA//C,UAAA0G,YAAAs5C,cACAknC,GAAArqC,EAAA78C,KAAAhK,MAIAgK,KAAAkhD,QAAA1hC,GAAAxf,UAAAkhD,SAGArE,EAAArB,GAAA,UAAAx7C,KAAAkhD,SA+OA,OAvOAwmC,EAAA/oF,UAAAnK,QAAA,WACA,OAAAwL,KAAA0G,YAAAihF,SAiBAD,EAAA/oF,UAAA8oF,aAAA,WACA,IAAA/rC,EAAAv4C,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAKA,OAHAu4C,EAAA1lD,KAAAgK,KAAAhK,KACA0lD,EAAA6rC,OAAAvnF,KAAA0G,YACAg1C,EAAA3H,SAAA/zC,KACA07C,GAmBAgsC,EAAA/oF,UAAA4vC,QAAA,SAAAuB,GACA,IAAA4L,EAAAv4C,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEA,OAAAorC,GAAAvuC,KAAAq+C,YAAAvO,EAAA9vC,KAAAynF,aAAA/rC,KAiBAgsC,EAAA/oF,UAAAshD,mBAAA,SAAA18C,KAYAmkF,EAAA/oF,UAAAuiD,QAAA,WACA,IAAAlrD,EAAAgK,KAAAhK,KACA6mD,EAAA78C,KAAA68C,OASA78C,KAAAuuC,QAAA,WACAvuC,KAAAgzC,MACA6J,EAAA7J,IAAA,UAAAhzC,KAAAkhD,SAKArE,EAAA,eAAA7mD,IAAA,EACAgK,KAAA68C,OAAA78C,KAAAe,MAAA,KAIA87C,EAAA7mD,GAAAqxF,GAAArxF,EAAA+wF,GAAA/wF,KAeA0xF,EAAAE,QAAA,SAAAL,GACA,IAAA31D,EAAA,iBAAA21D,EAAAN,GAAAM,KAEA,yBAAA31D,IAAA81D,EAAA/oF,UAAAknD,cAAAj0B,EAAAjzB,YAoBA+oF,EAAAG,eAAA,SAAA7xF,EAAAuxF,GACA,oBAAAvxF,EACA,UAAA2N,MAAA,yBAAA3N,EAAA,sCAAAA,EAAA,YAAA69C,EAAA79C,IAAA,KAGA,GAAAgxF,GAAAhxF,GACA49C,EAAAV,KAAA,mBAAAl9C,EAAA,wEACK,GAAAgwD,GAAArnD,UAAAuG,eAAAlP,GACL,UAAA2N,MAAA,yBAAA3N,EAAA,0DAGA,sBAAAuxF,EACA,UAAA5jF,MAAA,uBAAA3N,EAAA,wCAAAuxF,EAAA,YAAA1zC,EAAA0zC,IAAA,KAeA,OAZAR,GAAA/wF,GAAAuxF,EArXA,WAyXAvxF,IACA0xF,EAAAE,QAAAL,GACAvhC,GAAArnD,UAAA3I,GAxRA,SAAAA,EAAAuxF,GACA,IAAAO,EAAA,WAQAX,GAAAnnF,MAA6BhK,OAAAuxF,SAAAxzC,SAAA,OAA6C,GAE1E,IAAAA,EAAAwzC,EAAA/iF,MAAAxE,KAAAmD,WAKA,OAHA+jF,GAAAlnF,KAAAhK,GACAmxF,GAAAnnF,MAA6BhK,OAAAuxF,SAAAxzC,aAE7BA,GAOA,OAJA31C,OAAAC,KAAAkpF,GAAAphF,QAAA,SAAAkvC,GACAyyC,EAAAzyC,GAAAkyC,EAAAlyC,KAGAyyC,EAiQAC,CAAA/xF,EAAAuxF,GAEAvhC,GAAArnD,UAAA3I,GAAAqxF,GAAArxF,EAAAuxF,IAIAA,GAWAG,EAAAM,iBAAA,SAAAhyF,GACA,GA7YA,WA6YAA,EACA,UAAA2N,MAAA,mCAEAqjF,GAAAhxF,YACA+wF,GAAA/wF,UACAgwD,GAAArnD,UAAA3I,KAiBA0xF,EAAAO,WAAA,WACA,IAEA10F,OAAA,EAWA,OAbA4P,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAA/E,OAAAC,KAAA0oF,KAIA5gF,QAAA,SAAAnQ,GACA,IAAAuxF,EAAAN,GAAAjxF,GAEAuxF,KACAh0F,SACAyC,GAAAuxF,KAIAh0F,GAcAm0F,EAAAQ,iBAAA,SAAAlyF,GACA,IAAAuxF,EAAAN,GAAAjxF,GAEA,OAAAuxF,KAAAI,SAAA,IAGAD,EA/QA,GAgSAA,GAAAT,aAOAS,GAAAS,iBA7dA,SA+dAT,GAAAG,eA/dA,SA+dAH,IAOA1hC,GAAArnD,UAAAypF,YAAA,SAAApyF,GACA,QAAAgK,KAAA,qBAAAA,KAAA,eAAAhK,IAQAgwD,GAAArnD,UAAA0pF,UAAA,SAAAryF,GACA,QAAAgxF,GAAAhxF,IAqBA,IAgFAsyF,GAAA,SAAAtvE,GACA,WAAAA,EAAAnU,QAAA,KAAAmU,EAAApa,MAAA,GAAAoa,GAoBA,SAAAuvE,GAAAvvE,EAAAkJ,EAAAm+B,GACA,IAAAxD,EAAA0rC,GAAAC,UAAAxvE,GAEA,GAAA6jC,EAOA,OANA36B,GACA0xB,EAAAV,KAAA,WAAAl6B,EAAA,0DAEAqnC,GACAxD,EAAAwD,SAEAxD,EAGA,IAAAzH,EAAA,iBAAAp8B,EAAA4gC,GAAA,IAAA0uC,GAAAtvE,MAEA,IAAA68B,EAAAT,GACA,UAAAnB,UAAA,sDAGOhD,EAAA9vC,EAAQ6e,KAAA+a,SAAAqa,IACfxB,EAAAV,KAAA,mDAGAhxB,QAEAqmE,GAAAE,MAAA,eAAAtiF,QAAA,SAAAuiF,GACA,IAAAptC,EAAAotC,EAAAtzC,EAAAgL,GAAAl+B,IAEA6yB,EAAAuG,KAAAt9C,MAAAgI,QAAAs1C,GAKAp5B,EAAAk+B,GAAAl+B,EAAAo5B,GAJA1H,EAAA/e,MAAA,kDASA,IAAA8zD,EAAAlmF,GAAA0/C,aAAA,UAQA,OANAtF,EAAA,IAAA8rC,EAAAvzC,EAAAlzB,EAAAm+B,GAEAkoC,GAAAE,MAAA,SAAAtiF,QAAA,SAAAuiF,GACA,OAAAA,EAAA7rC,KAGAA,EAyFA,GAlFA0rC,GAAAK,UAeAL,GAAAE,MAAA,SAAAlrF,EAAAq1C,GAKA,OAJA21C,GAAAK,OAAArrF,GAAAgrF,GAAAK,OAAArrF,OACAq1C,IACA21C,GAAAK,OAAArrF,GAAAgrF,GAAAK,OAAArrF,GAAA0I,OAAA2sC,IAEA21C,GAAAK,OAAArrF,IAYAgrF,GAAAM,KAAA,SAAAtrF,EAAAq1C,GACA21C,GAAAE,MAAAlrF,EAAAq1C,IAYA21C,GAAAO,SAAA,SAAAvrF,EAAAq1C,GACA21C,GAAAE,MAAAlrF,KAAA0I,OAAA2sC,GAAA10C,IAAA,SAAA6qF,GAMA,OALA,SAAA3pC,IAEA,OADAmpC,GAAAS,WAAAzrF,EAAA6hD,GACA2pC,EAAAvkF,WAAAo/B,EAAAzgC,gBAmBAolF,GAAAS,WAAA,SAAAzrF,EAAAq1C,GACA,IAAAz0C,EAAAoqF,GAAAE,MAAAlrF,GAAAsH,QAAA+tC,GAEA,QAAAz0C,IAAA,KAIAoqF,GAAAK,OAAArrF,GAAAgrF,GAAAK,OAAArrF,GAAAqB,QACA2pF,GAAAK,OAAArrF,GAAAu+C,OAAA39C,EAAA,IAEA,KAIY,IAAR4yC,EAAA5vC,EAAQ47E,0BAAAnnC,IAAA,CACZ,IAAAqzC,GAAArvC,GAAA,wBAEA,IAAAqvC,GAAA,CACAA,GAAAjsC,GAAA,uBACA,IAAAigC,GAAArjC,GAAA,QAEAqjC,IACAA,GAAA3nD,aAAA2zD,GAAAhM,GAAA/8D,YAEA+8B,GAAAgsC,GAAA,kJAOArsC,GAAA,EAAA2rC,IAOAA,GAAAZ,QAAAnzF,EAQA+zF,GAAArmE,QAAA8jC,GAAArnD,UAAA6hD,SAQA+nC,GAAAW,WAAA,WACA,OAAAljC,GAAAC,SAiBAsiC,GAAAC,UAAA,SAAAxvE,GACA,IAAAitC,EAAAD,GAAAC,QACAjxD,OAAA,EAEA,oBAAAgkB,EAAA,CACA,IAAAmwE,EAAAb,GAAAtvE,GACA6jC,EAAAoJ,EAAAkjC,GAEA,GAAAtsC,EACA,OAAAA,EAGA7nD,EAAA4kD,GAAA,IAAAuvC,QAEAn0F,EAAAgkB,EAGA,GAAA68B,EAAA7gD,GAAA,CACA,IAAAo0F,EAAAp0F,EACAq0F,EAAAD,EAAAvsC,OACAk7B,EAAAqR,EAAArR,SAKA,GAAAsR,GAAApjC,EAAA8xB,GACA,OAAAsR,GAAApjC,EAAA8xB,KAcAwQ,GAAAe,cAAA,WACA,OAIAlrF,OAAAC,KAAA2nD,GAAAC,SAAA/nD,IAAA,SAAA0F,GACA,OAAAoiD,GAAAC,QAAAriD,KACKtF,OAAA8nD,UAULmiC,GAAAtiC,QAAAD,GAAAC,QAOAsiC,GAAApmC,aAAA1/C,GAAA0/C,aAmBAomC,GAAA7iC,kBAAA,SAAA+1B,EAAA8N,GACA9mC,GAAAG,OAAA2mC,IACA31C,EAAAV,KAAA,OAAAuoC,EAAA,+GAGAh5E,GAAAijD,kBAAA7mD,KAAA4D,GAAAg5E,EAAA8N,IAQAhB,GAAAruB,QAAAzX,GAAAyX,QAQAquB,GAAAxuB,aAAAtX,GAAAsX,aAQAwuB,GAAAiB,IA7+dA,SAAAjsF,EAAAo+D,GACAJ,GAAAh+D,GAAAg+D,GAAAh+D,OACAg+D,GAAAh+D,GAAAvJ,KAAA2nE,IAq/dAv9D,OAAA4R,eAAAu4E,GAAA,cACA9pF,SACAgrF,WAAA,EACAv5E,YAAA,IAGA9R,OAAA4R,eAAAu4E,GAAA5sB,WAAA,cACAl9D,MAAAg9D,GACAguB,WAAA,EACAv5E,YAAA,IASAq4E,GAAAxgC,WAUAwgC,GAAA3gC,iBAQA2gC,GAAA/8E,OAhaA,SAAA4oC,GACA,IAAAs1C,EAAAvmF,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEAgxC,EAAA,WACAC,EAAA5vC,MAAAxE,KAAAmD,YAGAwmF,KAcA,QAAA3zF,IAZA,qBAAA0zF,EAAA,YAAA71C,EAAA61C,KACAA,EAAAhjF,cAAAtI,OAAAO,UAAA+H,cACAytC,EAAAu1C,EAAAhjF,aAEAijF,EAAAD,GACG,mBAAAA,IACHv1C,EAAAu1C,GAnDA,SAAAv1C,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAH,UAAA,qEAAAG,EAAA,YAAAP,EAAAO,KAGAD,EAAAx1C,UAAAP,OAAAi2C,OAAAD,KAAAz1C,WACA+H,aACAjI,MAAA01C,EACAjkC,YAAA,EACAokC,UAAA,EACArkC,cAAA,KAIAmkC,IAEAD,EAAAy1C,OAAAx1C,GAsCAy1C,CAAA11C,EAAAC,GAGAu1C,EACAA,EAAAzkF,eAAAlP,KACAm+C,EAAAx1C,UAAA3I,GAAA2zF,EAAA3zF,IAIA,OAAAm+C,GA+YAo0C,GAAAnoC,gBAUAmoC,GAAA/oE,QAoBA+oE,GAAAV,eAAAH,GAAAG,eAcAU,GAAAP,iBAAAN,GAAAM,iBAcAO,GAAAhB,OAAA,SAAA9L,EAAA8L,GAEA,OADA3zC,EAAAV,KAAA,wEACAw0C,GAAAG,eAAApM,EAAA8L,IAcAgB,GAAAN,WAAAP,GAAAO,WAWAM,GAAAtB,UAAAS,GAAAT,UAWAsB,GAAAL,iBAAAR,GAAAQ,iBAeAK,GAAAuB,YAAA,SAAA9iD,EAAA90C,GACA,IAAA63F,EAMA,OAJA/iD,GAAA,GAAAA,GAAAt+B,cAEA6/E,GAAArmE,QAAAm/B,UAAAjB,GAAAmoC,GAAArmE,QAAAm/B,YAAA0oC,MAA6F/iD,GAAA90C,EAAA63F,IAE7FxB,GAAArmE,QAAAm/B,UAAAra,IAQAuhD,GAAAhoF,IAAAqzC,EAUA20C,GAAAyB,gBAAAzB,GAAA//B,oBASA+/B,GAAA5kB,cAaA4kB,GAAA0B,cA/9aA,SAAAC,GACAl+D,GAAAk+D,GAu+aA3B,GAAA4B,gBAj+aA,WACAn+D,GAAAu3C,IAw+aAglB,GAAAh3B,YAOAg3B,GAAAt2B,iBAOAs2B,GAAA1qC,eAUA0qC,GAAA/sC,MAOA+sC,GAAAtsC,OAOAssC,GAAAv1C,OAOAu1C,GAAAh6C,WAaAg6C,GAAAnjD,IAAgBiM,EAAAlwC,EAOhBonF,GAAA/0B,aAQA+0B,GAAA3zB,cAQA2zB,GAAAzzB,eA4HA,4JAAA3uD,QAAA,SAAAvC,GACA2kF,GAAA3kF,GAAA,WAEA,OADAgwC,EAAAV,KAAA,WAAAtvC,EAAA,qCAAkDA,EAAA,cAClDk2C,GAAAl2C,GAAAY,MAAA,KAAArB,cAcAolF,GAAApzC,gBAMAozC,GAAA6B,IAAAtwC,GAMAyuC,GAAAv5E,IAAAojD,GAaA,IAAAi4B,GAAA,SAAAC,EAAAC,GAEA,kBAAA92E,KAAA82E,GACAA,GAIA,QAAA92E,KAAA62E,KACAA,EAAc34C,EAAAxwC,EAAUqpF,iBAAkBz5C,EAAA5vC,EAAQkc,SAAAm0C,KAAA84B,IAGzC34C,EAAAxwC,EAAUqpF,iBAAAF,EAAAC,KAGnBE,GAAA,SAAA12C,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAy2C,GAAA,WACA,SAAAz2B,EAAA9pD,EAAArK,GACA,QAAAxM,EAAA,EAAmBA,EAAAwM,EAAA7K,OAAkB3B,IAAA,CACrC,IAAAmhF,EAAA30E,EAAAxM,GACAmhF,EAAAvkE,WAAAukE,EAAAvkE,aAAA,EACAukE,EAAAxkE,cAAA,EACA,UAAAwkE,MAAAngC,UAAA,GACAl2C,OAAA4R,eAAA7F,EAAAsqE,EAAAl2E,IAAAk2E,IAIA,gBAAAzgC,EAAA22C,EAAAC,GAGA,OAFAD,GAAA12B,EAAAjgB,EAAAr1C,UAAAgsF,GACAC,GAAA32B,EAAAjgB,EAAA42C,GACA52C,GAdA,GA2CA62C,GAAA,SAAA12C,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAH,UAAA,qEAAAG,EAAA,YAAAP,EAAAO,KAGAD,EAAAx1C,UAAAP,OAAAi2C,OAAAD,KAAAz1C,WACA+H,aACAjI,MAAA01C,EACAjkC,YAAA,EACAokC,UAAA,EACArkC,cAAA,KAGAmkC,IAAAh2C,OAAAm2C,eAAAn2C,OAAAm2C,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,IAGA02C,GAAA,SAAA39C,EAAAtuC,GACA,IAAAsuC,EACA,UAAAuH,eAAA,6DAGA,OAAA71C,GAAA,qBAAAA,EAAA,YAAAg1C,EAAAh1C,KAAA,mBAAAA,EAAAsuC,EAAAtuC,GAGAksF,GAAA,WA2BA,gBAAAC,EAAA13F,GACA,GAAA0K,MAAAgI,QAAAglF,GACA,OAAAA,EACK,GAAAn6E,OAAAa,YAAAtT,OAAA4sF,GACL,OA9BA,SAAAA,EAAA13F,GACA,IAAA23F,KACAC,GAAA,EACAC,GAAA,EACAC,OAAAxnD,EAEA,IACA,QAAAynD,EAAAriC,EAAAgiC,EAAAn6E,OAAAa,cAA+Cw5E,GAAAG,EAAAriC,EAAAz7B,QAAA0E,QAC/Cg5D,EAAAj3F,KAAAq3F,EAAA5sF,QAEAnL,GAAA23F,EAAAh2F,SAAA3B,GAH8E43F,GAAA,IAKzE,MAAAzmD,GACL0mD,GAAA,EACAC,EAAA3mD,EACK,QACL,KACAymD,GAAAliC,EAAA,QAAAA,EAAA,SACO,QACP,GAAAmiC,EAAA,MAAAC,GAIA,OAAAH,EAOAK,CAAAN,EAAA13F,GAEA,UAAA2gD,UAAA,yDAjCA,GA8CAs3C,GAAAhD,GAAAnoC,aACAorC,GAAAjD,GAAA1qC,YACA4tC,GAAAlD,GAAAhoF,IAYAmrF,GAAA,SAAAC,EAAAr+D,IACA,qBAAAnnB,QAAA,SAAAylF,GACA,QAAAC,KAAAF,EAAAG,YAAAF,GACA,QAAAG,KAAAJ,EAAAG,YAAAF,GAAAC,GAAA,CACA,IAAAG,EAAAL,EAAAG,YAAAF,GAAAC,GAAAE,GAEAz+D,EAAA0+D,EAAAJ,EAAAC,EAAAE,OAyDAE,GAAA,SAAAN,EAAAO,GACA,IAAA34F,EAAAg4F,GAAAI,MACAQ,EAAA54F,EAAA64F,UAAAF,EAAA9nD,KAEA,IAAA+nD,EACA,YAKA,GAAAA,EAAAE,UAAAH,EAAAG,UAAAF,EAAAE,SAAAp3F,SAAAi3F,EAAAG,SAAAp3F,QAAAk3F,EAAAG,gBAAAJ,EAAAI,cACA,YAGA,IAAAC,EAAAhB,GAAAY,EAAAD,GAGAC,EAAAE,WACAE,EAAAF,SAtDA,SAAAtD,EAAA7pB,EAAA7rE,GACA,IAAAE,EAAA2rE,EAAAtgE,QAEAvL,KAAA,EAGA,IAFA,IAAA4B,EAAAwF,KAAAwgC,IAAA8tD,EAAA9zF,OAAAiqE,EAAAjqE,OAAA5B,GAEAC,EAAAD,EAAsBC,EAAA2B,EAAY3B,IAClCC,EAAAD,EAAAD,GAAAk4F,GAAAxC,EAAAz1F,GAAAC,EAAAD,EAAAD,IAEA,OAAAE,EA6CAi5F,CAAAL,EAAAE,SAAAH,EAAAG,SAAAH,EAAAI,cAAAH,EAAAG,gBAIAC,EAAAF,SAAAlmF,QAAA,SAAAsmF,IA9CA,SAAAA,EAAAC,GACAD,EAAAE,cACAF,EAAAE,YAAAtC,GAAAqC,EAAAD,EAAAroD,MAEAqoD,EAAAluF,MAAAkuF,EAAAluF,IAAAouF,cACAF,EAAAluF,IAAAouF,YAAAtC,GAAAqC,EAAAD,EAAAluF,IAAA6lC,MAEAqoD,EAAAvuF,MAAAuuF,EAAAvuF,IAAAyuF,cACAF,EAAAvuF,IAAAyuF,YAAAtC,GAAAqC,EAAAD,EAAAvuF,IAAAkmC,MAuCAwoD,CAAAH,EAAAF,EAAAI,eAMA,QAAAr5F,EAAA,EAAiBA,EAAAC,EAAA64F,UAAAn3F,OAA6B3B,IAC9CC,EAAA64F,UAAA94F,GAAA8wC,MAAA8nD,EAAA9nD,MACA7wC,EAAA64F,UAAA94F,GAAAi5F,GAKA,OAFAh5F,EAAA64F,UAAAF,EAAA9nD,KAAAmoD,EAEAh5F,GAGAs5F,GAAA,SAAAlB,GAIA,IAFA,IAAAr4F,EAAAq4F,EAAAS,UAAAn3F,OAEA3B,KAAA,CACA,IAAA64F,EAAAR,EAAAS,UAAA94F,GAEAq4F,EAAAS,UAAAD,EAAA/nD,KAAA+nD,EACAA,EAAAQ,YAAAtC,GAAAsB,EAAAvnD,IAAA+nD,EAAA/nD,KACA+nD,EAAAnzE,GAAA1lB,EAEA64F,EAAA71C,aAMA61C,EAAA71C,cAEAm1C,GAAAv4C,KAAA,yEAKA45C,GAAA,SAAAnB,GACAD,GAAAC,EAAA,SAAAt1C,GACAA,EAAAjS,MACAiS,EAAAs2C,YAAAtC,GAAAsB,EAAAvnD,IAAAiS,EAAAjS,SAeA2oD,GAAA,SAAAb,EAAAhtB,GACA,IAAA8tB,EAAAd,EAAAG,SAAAH,EAAAG,SAAAp3F,OAAA,GAUA,OAPAiqE,GAAA8tB,KAAAj2F,SACA,IAAAi2F,EAAAj2F,SAIA,KAAAm1F,EAAAe,gBAAA,KAeAC,GAAA,SAAA/+B,GAGA,SAAA++B,EAAAC,EAAAC,EAAAtmD,GACA2jD,GAAAzqF,KAAAktF,GAEA,IAAAjtF,EAAA6qF,GAAA9qF,MAAAktF,EAAA14C,WAAAp2C,OAAAivF,eAAAH,IAAAruF,KAAAmB,OAMA,GAJAC,EAAAktF,SACAltF,EAAAqtF,KAAAF,EACAntF,EAAA6mC,mBAEA7mC,EAAAktF,OACA,UAAAxpF,MAAA,wCA+BA,OA3BA1D,EAAAc,MAAA,eAGAd,EAAAu7C,GAAA,gCACA,kBAAAv7C,EAAAc,QAKAd,EAAAc,MAAA,wBAEAd,EAAA0hF,QAAA1hF,EAAAqtF,KAAAloD,KACAhB,IAAAimD,GAAApqF,EAAA0rF,OAAAvnD,IAAAnkC,EAAAisF,QAAA9nD,KACA0C,gBAAA7mC,EAAA6mC,iBACO,SAAAjS,EAAA04D,GAEP,GAAAttF,EAAA0hF,QAIA,OAAA9sD,EACA50B,EAAAutF,qBAAAvtF,EAAA0hF,QAAA1hF,EAAAisF,QAAA9nD,IAAA,sBAGAnkC,EAAAwtF,aAAAxtF,EAAA0hF,QAAA1hF,EAAAisF,QAAA9nD,UAGAnkC,EA6VA,OAxYA4qF,GAAAqC,EAyYC1B,IA3VDd,GAAAwC,IACA3uF,IAAA,uBACAE,MAAA,SAAAivF,EAAA1+E,EAAA2+E,GAEA3tF,KAAA2hF,QAAA,KAEAgM,IACA3tF,KAAAe,MAAA4sF,GAGA3tF,KAAA60B,OACAs3D,SAAAnsF,KAAA2rF,OAAAS,UAAAp9E,GACAk2B,OAAAwoD,EAAAxoD,OACAgkB,QAAA,sCAAAl6C,EACAq2B,aAAAqoD,EAAAroD,aACA2B,KAAA0mD,EAAAxoD,QAAA,SAGAllC,KAAAuuC,QAAA,YAOAhwC,IAAA,eACAE,MAAA,SAAAivF,EAAA1+E,GACA,IAAA/N,EAAAjB,KAGAA,KAAA2hF,QAAA,KACA3hF,KAAAe,MAAA,gBAEA,IAAAwxD,EAAA,IAAuB3gB,EAAA,EAEvB2gB,EAAAv+D,KAAA05F,EAAAroD,cACAktB,EAAA/0D,MACA+0D,EAAAq7B,SAAAxpD,IAAAp1B,EAGAujD,EAAAq7B,SAAAt3C,WAAAic,EAAAq7B,SAAAt3C,eAGA,IAAA4oB,EAAA+sB,GAAAjsF,KAAA2rF,OAAAp5B,EAAAq7B,UAEA5tF,KAAAitF,eAAA16B,EAAAq7B,SAAAX,eAEA/tB,GACAl/D,KAAA2rF,OAAAzsB,EACAl/D,KAAA6tF,OAAA7tF,KAAA2rF,OAAAS,UAAA75B,EAAAq7B,SAAAxpD,MAEApkC,KAAAuuC,QAAA,qBAIAvuC,KAAAksF,QAAA4B,UACQ/8C,EAAA5vC,EAAQyjC,aAAA5kC,KAAA+tF,oBAChB/tF,KAAA+tF,mBAAkCh9C,EAAA5vC,EAAQ2zB,WAAA,WAC1C7zB,EAAAstC,QAAA,uBACSw+C,GAAA/sF,KAAAksF,UAAAhtB,KAGTl/D,KAAAuuC,QAAA,qBAQAhwC,IAAA,UACAE,MAAA,WACAuB,KAAAguF,cACMj9C,EAAA5vC,EAAQyjC,aAAA5kC,KAAA+tF,uBAGdxvF,IAAA,cACAE,MAAA,WACA,GAAAuB,KAAA2hF,QAAA,CACA,IAAAsM,EAAAjuF,KAAA2hF,QAEA3hF,KAAA2hF,QAAA,KACAsM,EAAA5nD,mBAAA,KACA4nD,EAAAlnD,YAkBAxoC,IAAA,QACAE,MAAA,SAAA0tF,GACA,IAAA9mC,EAAArlD,KAGA,IAAAmsF,EACA,OAAAnsF,KAAA6tF,OAIA,oBAAA7tF,KAAAe,MACA,UAAA4C,MAAA,qCAAA3D,KAAAe,OAGA,IAAA4sF,EAAA3tF,KAAAe,MAIA,oBAAAorF,EAAA,CACA,IAAAnsF,KAAA2rF,OAAAS,UAAAD,GACA,UAAAxoF,MAAA,yBAAAwoF,GAEAA,EAAAnsF,KAAA2rF,OAAAS,UAAAD,GAGA,IAAA+B,GAAAluF,KAAA6tF,QAAA1B,EAAA/nD,MAAApkC,KAAA6tF,OAAAzpD,IAGA,GAAApkC,KAAA2rF,OAAAS,UAAAD,EAAA/nD,KAAA0pD,QAeA,OAbA9tF,KAAA2hF,UACA3hF,KAAA2hF,QAAAt7C,mBAAA,KACArmC,KAAA2hF,QAAA56C,QACA/mC,KAAA2hF,QAAA,MAEA3hF,KAAAe,MAAA,gBACAf,KAAA6tF,OAAA1B,OAGA+B,IACAluF,KAAAuuC,QAAA,iBACAvuC,KAAAuuC,QAAA,iBAMA,GAAA2/C,EAAA,CAOA,GAHAluF,KAAAe,MAAA,kBAGAf,KAAA2hF,QAAA,CACA,GAAA0I,GAAArqF,KAAA2rF,OAAAvnD,IAAA+nD,EAAA/nD,OAAApkC,KAAA2hF,QAAA3yE,IAGA,OAEAhP,KAAA2hF,QAAAt7C,mBAAA,KACArmC,KAAA2hF,QAAA56C,QACA/mC,KAAA2hF,QAAA,KAIA3hF,KAAA6tF,QACA7tF,KAAAuuC,QAAA,iBAGAvuC,KAAA2hF,QAAA3hF,KAAAstF,KAAAloD,KACAhB,IAAAimD,GAAArqF,KAAA2rF,OAAAvnD,IAAA+nD,EAAA/nD,KACA0C,gBAAA9mC,KAAA8mC,iBACO,SAAAjS,EAAA04D,GAEP,GAAAloC,EAAAs8B,QAAA,CAIA,GAAA9sD,EACA,OAAAwwB,EAAAmoC,qBAAAnoC,EAAAs8B,QAAAwK,EAAA/nD,IAAAupD,GAGAtoC,EAAAooC,aAAAF,EAAApB,EAAA/nD,KAGA,gBAAAupD,EACAtoC,EAAA9W,QAAA,kBAEA8W,EAAA9W,QAAA,sBAUAhwC,IAAA,QACAE,MAAA,WACAuB,KAAAguF,cACMj9C,EAAA5vC,EAAQyjC,aAAA5kC,KAAA+tF,oBACd,iBAAA/tF,KAAAe,QAGAf,KAAAmuF,SAAA,GAGA,oBAAAnuF,KAAAe,MAIAf,KAAA6tF,OACA7tF,KAAAe,MAAA,gBAEAf,KAAAe,MAAA,cAEO,0BAAAf,KAAAe,QACPf,KAAAe,MAAA,oBASAxC,IAAA,OACAE,MAAA,SAAA2vF,GACA,IAAA7oC,EAAAvlD,KAEM+wC,EAAA5vC,EAAQyjC,aAAA5kC,KAAA+tF,oBAEd,IAAA7B,EAAAlsF,KAAAksF,QAEA,GAAAkC,EAAA,CACA,IAAAC,EAAAnC,IAAAe,eAAA,UAEAjtF,KAAA+tF,mBAAkCh9C,EAAA5vC,EAAQ2zB,WAAA,WAC1C,OAAAywB,EAAA4P,QACSk5B,QAITruF,KAAAmuF,QAKAjC,MAAA4B,QACA9tF,KAAAuuC,QAAA,sBAEAvuC,KAAAuuC,QAAA,kBAPAvuC,KAAAmhB,WAgBA5iB,IAAA,QACAE,MAAA,WACA,IAAA65D,EAAAt4D,KAEAA,KAAAmuF,SAAA,EAGAnuF,KAAA2hF,QAAA3hF,KAAAstF,KAAAloD,KACAhB,IAAApkC,KAAAmtF,OACArmD,gBAAA9mC,KAAA8mC,iBACO,SAAAjS,EAAA04D,GAEP,GAAAj1B,EAAAqpB,QAAA,CAOA,GAFArpB,EAAAqpB,QAAA,KAEA9sD,EAWA,OAVAyjC,EAAAzjC,OACAqQ,OAAAqoD,EAAAroD,OACAgkB,QAAA,sCAAAoP,EAAA60B,OACA9nD,aAAAkoD,EAAAloD,aAEA2B,KAAA,GAEA,iBAAAsxB,EAAAv3D,QACAu3D,EAAA61B,SAAA,GAEA71B,EAAA/pB,QAAA,SAGA,IAAAgkB,EAAA,IAAyB3gB,EAAA,EAUzB,OARA2gB,EAAAv+D,KAAAu5F,EAAAloD,cACAktB,EAAA/0D,MAEA86D,EAAAv3D,MAAA,cAEAwxD,EAAAq7B,SAAAxpD,IAAAk0B,EAAA60B,OAGA56B,EAAAq7B,SAAAxB,WACA9zB,EAAAqzB,OAAAp5B,EAAAq7B,SAEAf,GAAAv0B,EAAAqzB,QACAmB,GAAAx0B,EAAAqzB,QAEArzB,EAAA/pB,QAAA,uBACA+pB,EAAAqpB,SAGArpB,EAAA4zB,MAAA35B,EAAAq7B,SAAAxB,UAAA,OAOA9zB,EAAAqzB,QACAG,aACAwC,SACAC,SACAC,qBACAC,cAEArqD,IAAe2M,EAAA5vC,EAAQkc,SAAAm0C,KACvB46B,YACAhoD,IAAAk0B,EAAA60B,OACAn0E,GAAA,KAGAs/C,EAAAqzB,OAAAS,UAAA9zB,EAAA60B,QAAA70B,EAAAqzB,OAAAS,UAAA,GACA9zB,EAAAqzB,OAAAS,UAAA,GAAAO,YAAAr0B,EAAA60B,OAGA70B,EAAAqzB,OAAAS,UAAA,GAAA91C,WAAAgiB,EAAAqzB,OAAAS,UAAA,GAAA91C,eACAgiB,EAAAm1B,aAAAF,EAAAj1B,EAAA60B,QACA70B,EAAA/pB,QAAA,0BAIA2+C,EAzYA,GAkZAlD,GAAAzB,GAAAyB,gBA8FA0E,GAAA,SAAAvC,EAAAwC,EAAAC,GACA,IAAAC,EACAC,EAMA,YAJA,IAAAH,IACAA,EAAAxC,EAAAG,cAAAH,EAAAE,SAAAp3F,QAGA05F,EAAAxC,EAAAG,cACA,GAIAuC,EAjGA,SAAA1C,EAAAwC,GACA,IAAAp7F,EAAA,EACAD,EAAAq7F,EAAAxC,EAAAG,cAGAG,EAAAN,EAAAE,SAAA/4F,GAIA,GAAAm5F,EAAA,CACA,YAAAA,EAAAtrE,MACA,OAAc5tB,OAAAk5F,EAAAtrE,MAAA4tE,SAAA,GAEd,YAAAtC,EAAAjvF,IACA,OACAjK,OAAAk5F,EAAAjvF,IAAAivF,EAAA11F,SACAg4F,SAAA,GAIA,KAAAz7F,KAAA,CAEA,aADAm5F,EAAAN,EAAAE,SAAA/4F,IACAkK,IACA,OAAcjK,SAAAk5F,EAAAjvF,IAAAuxF,SAAA,GAKd,GAFAx7F,GAAAk5F,EAAA11F,cAEA,IAAA01F,EAAAtrE,MACA,OAAc5tB,SAAAk5F,EAAAtrE,MAAA4tE,SAAA,GAGd,OAAUx7F,SAAAw7F,SAAA,GAiEVC,CAAA7C,EAAAwC,IACAI,QAIAF,EAAAt7F,QAKAu7F,EAjEA,SAAA3C,EAAAwC,GAOA,IANA,IAAAp7F,EAAA,EACAk5F,OAAA,EACAn5F,EAAAq7F,EAAAxC,EAAAG,cAIQh5F,EAAA64F,EAAAE,SAAAp3F,OAA8B3B,IAAA,CAEtC,aADAm5F,EAAAN,EAAAE,SAAA/4F,IACA6tB,MACA,OACA5tB,OAAAk5F,EAAAtrE,MAAA5tB,EACAw7F,SAAA,GAMA,GAFAx7F,GAAAk5F,EAAA11F,cAEA,IAAA01F,EAAAjvF,IACA,OACAjK,OAAAk5F,EAAAjvF,IAAAjK,EACAw7F,SAAA,GAKA,OAAUx7F,QAAA,EAAAw7F,SAAA,GAuCVE,CAAA9C,EAAAwC,IACAI,QAGAD,EAAAv7F,OAIAs7F,EAAAt7F,OAAAq7F,GAkBA73F,GAAA,SAAAo1F,EAAAwC,EAAAC,GACA,IAAAzC,EACA,SASA,GANA,iBAAAyC,IACAA,EAAA,QAKA,IAAAD,EAAA,CAEA,GAAAxC,EAAA+C,cACA,OAAA/C,EAAA+C,cAIA,IAAA/C,EAAA2B,QACA,OAAa/8C,EAAA5vC,EAAQ2/B,SAKrB,OAAA4tD,GAAAvC,EAAAwC,EAAAC,IAcAO,GAAA,SAAAhD,EAAAviD,EAAAC,GACA,IAAAulD,EAAA,EAEA,GAAAxlD,EAAAC,EAAA,CACA,IAAAi6C,GAAAj6C,EAAAD,GACAA,EAAAk6C,EAAA,GACAj6C,EAAAi6C,EAAA,GAGA,GAAAl6C,EAAA,GACA,QAAAt2C,EAAAs2C,EAA4Bt2C,EAAAmH,KAAAwgC,IAAA,EAAA4O,GAA2Bv2C,IACvD87F,GAAAjD,EAAAc,eAEArjD,EAAA,EAGA,QAAAof,EAAApf,EAA2Bof,EAAAnf,EAAemf,IAC1ComC,GAAAjD,EAAAE,SAAArjC,GAAAjyD,SAGA,OAAAq4F,GAeAC,GAAA,SAAAlD,GACA,IAAAA,EAAAE,SAAAp3F,OACA,SAOA,IAJA,IAAA3B,EAAA64F,EAAAE,SAAAp3F,OAAA,EACAq6F,EAAAnD,EAAAE,SAAA/4F,GAAAyD,UAAAo1F,EAAAc,eACAsC,EAAAD,EAAA,EAAAnD,EAAAc,eAEA35F,QACAg8F,GAAAnD,EAAAE,SAAA/4F,GAAAyD,WAEAw4F,KAKA,OAAA90F,KAAA6+C,IAAA,EAAAhmD,IAgBAk8F,GAAA,SAAArD,EAAAyC,EAAAa,GACA,IAAAtD,MAAAE,SACA,YAEA,GAAAF,EAAA2B,QACA,OAAA/2F,GAAAo1F,GAGA,UAAAyC,EACA,YAGAA,KAAA,EAEA,IAAAD,EAAAc,EAAAJ,GAAAlD,KAAAE,SAAAp3F,OAEA,OAAAy5F,GAAAvC,IAAAG,cAAAqC,EAAAC,IA6BAc,GAAA,SAAAlsC,GACA,OAAAA,EAAA/oD,KAAA+oC,MAAAggB,IAAA,GAGAmsC,GAAA,SAAAC,EAAApsC,GAEA,GAAAksC,GAAAlsC,GACA,OAAAA,EAAA,GAAAosC,EAKA,IAFA,IAAAC,EAAArsC,EAAAzkD,WAAAK,MAAA,QAAAnK,OAEA3B,EAAA,EAAiBA,GAAAu8F,EAAuBv8F,IAAA,CACxC,IAAAutC,EAAApmC,KAAAC,IAAA,GAAApH,GACAq5D,EAAAnJ,EAAA3iB,EAEA,GAAA6uD,GAAA/iC,IAAAr5D,IAAAu8F,EACA,OAAAljC,EAAAijC,GAAA/uD,IAKAivD,GAAAH,GAAAnwE,KAAA,QACAuwE,GAAAJ,GAAAnwE,KAAA,SAsFAwwE,GAAA,SAAA7D,GACA,OAAAA,EAAA8D,cAAA9D,EAAA8D,aAAA3+F,KAAAga,OAWA4kF,GAAA,SAAA/D,GACA,OAAAA,EAAA8D,cAAA9D,EAAA8D,eAAAnvD,KAUAqvD,GAAA,SAAAhE,GACA,IAAAiE,EAAAJ,GAAA7D,GAEA,OAAAA,EAAAhlF,WAAAipF,GAqDApyD,GAAA,SAAAk6C,EAAAiU,GACA,OAAAA,EAAA71C,YAAA61C,EAAA71C,WAAA4hC,IAoCAmY,GAAA,SAAA1E,EAAAO,GACA,OAAAP,EAAAS,UAAAn3F,OACA,SAGA,IAAAq7F,EAAApE,EAAA51C,WAAAi6C,WAAAxf,OAAAyf,UAEA,OAMG,IANH7E,EAAAS,UAAA9tF,OAAA,SAAA6tF,GACA,QAAAgE,GAAAhE,KAIAA,EAAA71C,WAAAi6C,WAAA,GAAAD,IACGr7F,QAIHw7F,IACA15F,YACA+lE,SA/PA,SAAAqvB,EAAAyC,GACA,IACA8B,EAAA9B,GAAA,EACA+B,EAAAnB,GAAArD,EAAAyC,GAFA,GAIA,cAAA+B,EACA3G,KAEAA,GAAA0G,EAAAC,IAwPAtB,iBACAuB,oBAlNA,SAAAzE,EAAA/3B,EAAAxqB,EAAAzJ,GACA,IAAA7sC,OAAA,EACAm5F,OAAA,EACAoE,EAAA1E,EAAAE,SAAAp3F,OAEA8Z,EAAAqlD,EAAAj0B,EAEA,GAAApxB,EAAA,GAGA,GAAA66B,EAAA,EACA,IAAAt2C,EAAAs2C,EAAA,EAA8Bt2C,GAAA,EAAQA,IAGtC,GAFAm5F,EAAAN,EAAAE,SAAA/4F,IACAyb,GAAAghF,GAAAtD,EAAA11F,WACA,EACA,OACA+5F,WAAAx9F,EACA6sC,YAAAgvD,GAAAhD,EAAAviD,EAAAt2C,IAOA,OACAw9F,WAAA,EACA3wD,UAAAi0B,GAOA,GAAAxqB,EAAA,GACA,IAAAt2C,EAAAs2C,EAAwBt2C,EAAA,EAAOA,IAE/B,IADAyb,GAAAo9E,EAAAc,gBACA,EACA,OACA6D,WAAA,EACA3wD,UAAAi0B,GAIAxqB,EAAA,EAKA,IAAAt2C,EAAAs2C,EAAsBt2C,EAAAu9F,EAAiBv9F,IAGvC,GAFAm5F,EAAAN,EAAAE,SAAA/4F,IACAyb,GAAA+gF,GAAArD,EAAA11F,WACA,EACA,OACA+5F,WAAAx9F,EACA6sC,YAAAgvD,GAAAhD,EAAAviD,EAAAt2C,IAMA,OACAw9F,WAAAD,EAAA,EACA1wD,UAAAi0B,IAqJA+7B,aACA5wD,WAvGA,SAAA4sD,GACA,OAAAA,EAAAhlF,UAuGA6oF,iBACAE,kBACAV,eACAuB,MAlGA,SAAA7E,GACA,QAAA54F,EAAA,EAAiBA,EAAA44F,EAAAG,SAAAp3F,OAA2B3B,IAC5C,GAAA44F,EAAAG,SAAA/4F,GAAAiL,IACA,SAGA,UA6FAyyF,OArFA,SAAA9E,GACA,QAAA54F,EAAA,EAAiBA,EAAA44F,EAAAG,SAAAp3F,OAA2B3B,IAC5C,GAAA44F,EAAAG,SAAA/4F,GAAA4K,IACA,SAGA,UAgFA8/B,gBACAizD,2BA/CA,SAAAC,EAAAC,EAAAhF,GACA,IAAAiF,EAAAjuF,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,KAEA,OAAA66B,GAAA,YAAAmuD,IAIA+E,EAAA/E,EAAA71C,WAAAi6C,UAEA,EAAAa,GAAAD,EALA1Y,KA4CA4X,6BAOAgB,GAAA9I,GAAAnjD,IACAksD,GAAA/I,GAAAnoC,aAEAmxC,GAAA,WA8DA,OA7DA,SAAAC,EAAAtvE,EAAAoL,GAEApL,EAAAovE,IACAz3D,QAAA,MACK3X,GAIL,IAAAuvE,EAAAD,EAAAC,eAAAlJ,GAAAmJ,IAAAtsD,IAAAqsD,cAEA,GAAAA,GAAA,mBAAAA,EAAA,CACA,IAAAE,EAAAF,EAAAvvE,GAEAyvE,IACAzvE,EAAAyvE,GAIA,IAAAhQ,EAAA0P,GAAAnvE,EAAA,SAAA2S,EAAA6P,GACA,IAAAktD,EAAAjQ,EAAAj9C,UAEA7P,GAAA+8D,IACAjQ,EAAAkQ,aAAAvgG,KAAAga,MACAq2E,EAAAmQ,cAAAnQ,EAAAkQ,aAAAlQ,EAAAoQ,YACApQ,EAAAyP,cAAAQ,EAAAr/F,YAAAq/F,EAAA38F,OACA0sF,EAAAwP,YACAxP,EAAAwP,UAAA12F,KAAA+oC,MAAAm+C,EAAAyP,cAAAzP,EAAAmQ,cAAA,SAIAptD,EAAAmB,UACA87C,EAAAqQ,gBAAAttD,EAAAmB,SAMAhR,GAAA,cAAAA,EAAAmS,OACA26C,EAAAsQ,UAAA,GAMAp9D,GAAA8sD,EAAA18C,SAAA,MAAAP,EAAAI,YAAA,MAAAJ,EAAAI,YAAA,IAAAJ,EAAAI,aACAjQ,EAAA,IAAAlxB,MAAA,mCAAAg+E,IAAAiQ,GAAAjQ,EAAAt8C,iBAGA/X,EAAAuH,EAAA8sD,KAEAuQ,EAAAvQ,EAAA56C,MAQA,OANA46C,EAAA56C,MAAA,WAEA,OADA46C,EAAA18C,SAAA,EACAitD,EAAA1tF,MAAAm9E,EAAAx+E,YAEAw+E,EAAAv9C,IAAAliB,EAAAkiB,IACAu9C,EAAAoQ,YAAAzgG,KAAAga,MACAq2E,IAgBAwQ,GAAA,SAAAvjF,EAAAtb,GACA,OAAAsb,EAAAuS,MAAA7tB,GAAA,IAAAsb,EAAApR,IAAAlK,IASA8+F,GAAA,SAAA7uF,EAAAjQ,GACA,IAAAmL,EAAA8E,EAAAxE,SAAA,IAEA,WAAAioB,UAAA,IAAAvoB,EAAAxJ,QAAAwJ,GAAAnL,EAAA,WAEA++F,GAAA,SAAA9uF,GACA,OAAAA,GAAA,IAAAA,EAAA,IACAtN,OAAAC,aAAAqN,GAEA,KAaA+uF,GAAA,SAAAppC,GACA,IAAAqpC,KAgBA,OAdAn0F,OAAAC,KAAA6qD,GAAA/iD,QAAA,SAAA5H,GACA,IAAAE,EAAAyqD,EAAA3qD,GAEAZ,YAAA60F,OAAA/zF,GACA8zF,EAAAh0F,IACAG,MAAAD,EAAApM,OACAC,WAAAmM,EAAAnM,WACAC,WAAAkM,EAAAlM,YAGAggG,EAAAh0F,GAAAE,IAIA8zF,GAOAE,GAAA,SAAA5uD,GACA,IAAA6uD,EAAA7uD,EAAA6uD,YACAz9F,OAAA6rC,IACAztC,OAAA,GAGA,OAAAq/F,EAAAz9F,OAAAy9F,EAAAr/F,OAAAwwC,EAAA8oD,aAAA1uF,KAAA,MAMA00F,GAAA,SAAAzgG,GAOA,IANA,IAAAwM,EAAAV,MAAAW,UAAAC,MAAAC,KAAA3M,GAEAqB,EAAA,GAIAyqE,EAAA,EAAiBA,EAAAt/D,EAAAzJ,OALjB,GAK0C+oE,IAG1CzqE,GAFAmL,EAAAE,MANA,GAMAo/D,EANA,GAMAA,EANA,IAMA9/D,IAAAk0F,IAAAn0F,KAAA,IAEA,IADAS,EAAAE,MAPA,GAOAo/D,EAPA,GAOAA,EAPA,IAOA9/D,IAAAm0F,IAAAp0F,KAAA,IACA,KAGA,OAAA1K,GAkBAq/F,GAAAx0F,OAAA27C,QACAu4C,6BACAG,iBACAE,WACAE,QAnBA,SAAA/O,GACA,IAAAplF,EAAAolF,EAAAplF,MACA,OAAAi0F,GAAAj0F,IAkBAo0F,WAfA,SAAA3qC,GACA,IAAA50D,EAAA,GACAD,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAA60D,EAAAlzD,OAAmB3B,IAChCC,GAAA4+F,GAAAhqC,EAAA70D,GAAA,IAEA,OAAAC,KA0BAw/F,GAAA,SAAAC,EAAAv7C,GACA,IAAAlX,KACAjtC,OAAA,EAEA,GAAA0/F,KAAA/9F,OAEA,IAAA3B,EAAA,EAAeA,EAAA0/F,EAAA/9F,OAAuB3B,IACtCmkD,EAAAu7C,EAAA7xE,MAAA7tB,GAAA0/F,EAAAx1F,IAAAlK,KACAitC,EAAAvsC,MAAAg/F,EAAA7xE,MAAA7tB,GAAA0/F,EAAAx1F,IAAAlK,KAKA,OAAAi1F,GAAA//B,iBAAAjoB,IAUA0yD,GAAA,SAAAvqC,EAAA35C,GACA,OAAAgkF,GAAArqC,EAAA,SAAAvnC,EAAA3jB,GACA,OAAA2jB,EAhCA,MAgCApS,GAAAvR,EAhCA,MAgCAuR,KAUAmkF,GAAA,SAAAF,EAAAjkF,GACA,OAAAgkF,GAAAC,EAAA,SAAA7xE,GACA,OAAAA,EA5CA,MA4CApS,KAgCAokF,GAAA,SAAAvkF,GACA,IAAAwkF,KAEA,IAAAxkF,MAAA3Z,OACA,SAGA,QAAA3B,EAAA,EAAiBA,EAAAsb,EAAA3Z,OAAkB3B,IACnC8/F,EAAAp/F,KAAA4a,EAAAuS,MAAA7tB,GAAA,OAAAsb,EAAApR,IAAAlK,IAGA,OAAA8/F,EAAAn1F,KAAA,OA8BAo1F,GAAA,SAAAL,GAGA,IAFA,IAAAM,KAEAhgG,EAAA,EAAiBA,EAAA0/F,EAAA/9F,OAAuB3B,IACxCggG,EAAAt/F,MACAmtB,MAAA6xE,EAAA7xE,MAAA7tB,GACAkK,IAAAw1F,EAAAx1F,IAAAlK,KAIA,OAAAggG,GAoEAC,GAAA,SAAApyE,EAAA3jB,EAAAwqB,GACA,IAAA10B,OAAA,EACA02D,OAAA,EAEA,GAAAhiC,GAIAA,EAAA+hC,KAMA,IAFAz2D,EAAA00B,EAAA+hC,KAAA90D,OAEA3B,MACA02D,EAAAhiC,EAAA+hC,KAAAz2D,IAGA6sC,WAAA3iC,GAAAwsD,EAAAC,SAAA9oC,GACA6G,EAAAysC,UAAAzK,IAuCAwpC,GAAA,SAAAz8F,GAQA,OALAwc,MAAAxc,IAAA0D,KAAAg5F,IAAA18F,KAAA+pC,IACAiwC,OAAAyf,UAEAz5F,GAaA28F,GAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAY/iD,EAAA5vC,EAAQ4yF,eAAkBhjD,EAAA5vC,EAAQozD,OAU9C,GARAq/B,GACAA,EAAAztF,QAAA,SAAA6tF,GACA,IAAAhsE,EAAAgsE,EAAAtkD,OAEA1vC,KAAAi0F,kBAAAjsE,GAAA2iC,OAAA,IAAAmpC,EAAAE,EAAA7zD,UAAAngC,KAAAk0F,gBAAAF,EAAA/pC,QAAAjqD,KAAAk0F,gBAAAF,EAAA1xF,QACKqxF,GAGLE,EAAA,CACA,IAAAM,EAAAX,GAAAG,EAAAS,aAAAr9F,UAmBA,GAjBA88F,EAAA1tF,QAAA,SAAA8qD,GACA,IAAAliD,EAAAkiD,EAAAojC,QAAAr0F,KAAAk0F,gBAEAjjC,EAAAqjC,OAAAnuF,QAAA,SAAAkkC,GACA,IAAA2f,EAAA,IAAA8pC,EAAA/kF,IAAAs7B,EAAA5rC,OAAA4rC,EAAAr7B,KAAAq7B,EAAAn4C,MAAA,IAEA83D,EAAA3f,QACA2f,EAAAvrD,MAAA4rC,EA/DA,SAAA2f,GACA5rD,OAAA61D,iBAAAjK,EAAA3f,OACArxB,IACAlJ,IAAA,WAEA,OADAy4E,GAAAhoF,IAAA2yC,KAAA,0DACA8W,EAAAvrD,MAAAF,MAGAE,OACAqR,IAAA,WAEA,OADAy4E,GAAAhoF,IAAA2yC,KAAA,8DACA8W,EAAAvrD,MAAAvM,OAGAqiG,aACAzkF,IAAA,WAEA,OADAy4E,GAAAhoF,IAAA2yC,KAAA,oEACA8W,EAAAvrD,MAAAvM,SA+CAsiG,CAAAxqC,GAEAhqD,KAAAy0F,eAAA9pC,OAAAX,IACOhqD,OACF2zF,GAKLA,EAAAc,gBAAAd,EAAAc,eAAA1qC,MAAA4pC,EAAAc,eAAA1qC,KAAA90D,OAAA,CAMA,IALA,IAAA80D,EAAA4pC,EAAAc,eAAA1qC,KACA2qC,KAIAphG,EAAA,EAAqBA,EAAAy2D,EAAA90D,OAAiB3B,IACtCy2D,EAAAz2D,IACAohG,EAAA1gG,KAAA+1D,EAAAz2D,IAKA,IAAAqhG,EAAAD,EAAAj0D,OAAA,SAAAyG,EAAA8iB,GACA,IAAA4qC,EAAA1tD,EAAA8iB,EAAA7pB,eAKA,OAHAy0D,EAAA5gG,KAAAg2D,GACA9iB,EAAA8iB,EAAA7pB,WAAAy0D,EAEA1tD,OAIA2tD,EAAAz2F,OAAAC,KAAAs2F,GAAAG,KAAA,SAAA3zF,EAAA+B,GACA,OAAA6tE,OAAA5vE,GAAA4vE,OAAA7tE,KAIA2xF,EAAA1uF,QAAA,SAAAg6B,EAAA40D,GACA,IAAAC,EAAAL,EAAAx0D,GACA80D,EAAAlkB,OAAA8jB,EAAAE,EAAA,KAAAZ,EAGAa,EAAA7uF,QAAA,SAAA6jD,GACAA,EAAAC,QAAAgrC,SAOAC,GAAA,oBAAAtyF,iBACAuyF,GAAA,oBAAAtkF,OAAA,WAAAA,SACAukF,GAAA,yBACAC,GAAAH,GAAAG,aAAAH,GAAAI,mBAAAJ,GAAAK,gBAAAL,GAAAM,cACAjzF,GAAA2yF,GAAA3yF,KAAA2yF,GAAAO,WAAAlzF,OAAAmzF,MACAC,GAAAT,GAAAS,OAUA,SAAAC,GAAAC,EAAAjjD,GACA,gBAAAkjD,GACA,IAAApkB,EAAA1xE,KAEA,IAAA4yC,EACA,WAAA+iD,GAAAE,GACK,GAAAF,KAAAG,EAAA,CAEL,IACAC,EAAAC,GADApjD,EAAA7zC,WAAA+E,QAAA,gBAAuD,IAAAlF,MAAA,OAKvD,OAFAoB,KAAAm1F,IAAA,IAAAQ,GAAAI,GAuDA,SAAAE,EAAAF,GACA,IAAAE,IAAAF,EAAA,OACA,IAAAG,EAAAD,EAAAE,UACAF,EAAAF,SACAE,EAAAE,UAAA,WACAF,EAAAF,QAAAxzF,GAAA6zF,gBAAAH,EAAAF,QACAG,EAAAr3F,KAAAo3F,IA5DAI,CAAAr2F,KAAAm1F,IAAAY,GACA/1F,KAAAm1F,IAEA,IAAAmB,GACAC,YAAA,SAAA9xF,GACAitE,EAAA8kB,WACA1hE,WAAA,WACA48C,EAAA8kB,WAA2BtkG,KAAAuS,EAAA0F,OAAAmsF,QAM3B1jD,EAAA/zC,KAAAy3F,GACAt2F,KAAAu2F,YAAA,SAAA9xF,GACAqwB,WAAA,WACAwhE,EAAAE,WAA8BtkG,KAAAuS,EAAA0F,OAAAunE,OAG9B1xE,KAAAy2F,cAAA,GAKA,GAAAd,GAAA,CACA,IAAAe,GACAX,GAAAC,GAAA,mCACAW,GAAA,IAAA1iG,WAAA,GAEA,KACAyiG,GAAA,IAAAf,GAAAI,KAGAQ,YAAAI,OAAAtkG,SACG,MAAAkR,GACHoyF,GAAA,KACG,QACHpzF,GAAA6zF,gBAAAL,IACAW,IACAA,GAAAP,aAKA,SAAAH,GAAAtgD,GACA,IACA,OAAAnzC,GAAAq0F,gBAAA,IAAAC,MAAAnhD,IAAgDn4C,KAAA63F,MAC7C,MAAA7xF,GACH,IAAAuzF,EAAA,IAAAzB,GAEA,OADAyB,EAAA7rB,OAAAv1B,GACAnzC,GAAAq0F,gBAAAE,EAAAC,QAAAx5F,QAcA,IAAAy5F,GAAA,IAAApB,GAAA,yCAAAhzF,EAAAq0F,GACA,IAAA9pD,EAAAntC,MACA,WAYA,IAEAvC,EAAAhI,EAAAlB,EAAAc,EAAA4B,EAAAE,EAAAM,EAAAC,EAAAC,EAAAC,EAAAiE,EAAAJ,EAAAzE,EAAAN,EAAAb,EAAAuC,EAAAgB,EAAAS,EAAA+B,EAAAE,EAAAQ,EAAA6kC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAoSAC,EAAAC,EAqLAC,EAAAC,EAAAC,EA3dAC,EAAA7nC,KAAAC,IAAA,SAKA,WACA,IAAApH,EAyCA,GAxCA6tC,GACAlvC,QACAiB,QACAgB,QACAuB,QACAE,QACApB,QACAc,QACAQ,QACAQ,QACAK,QACAM,QACAC,QACAE,QACAM,QACAC,QACAN,QACAO,QACAC,QACAQ,QACAc,QACAE,QACAC,QACAG,QACAK,QACAE,QACAG,QACAI,QACAC,QACAI,QACAiB,QACAC,QACAS,QACAR,QACAL,QACA0B,SAKA,oBAAAlJ,WAAA,CAIA,IAAAX,KAAA6tC,EACAA,EAAAj8B,eAAA5R,KACA6tC,EAAA7tC,MAAAivC,WAAA,GAAAjvC,EAAAivC,WAAA,GAAAjvC,EAAAivC,WAAA,GAAAjvC,EAAAivC,WAAA,KAIAnB,EAAA,IAAAntC,YAAA,IAAAsuC,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAjB,EAAA,IAAArtC,YAAA,IAAAsuC,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAlB,EAAA,IAAAptC,YAAA,UACAstC,EAAA,IAAAttC,YAAA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEAutC,EAAA,IAAAvtC,YAAA,EACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEAwtC,GACAlgC,MAAAggC,EACAiB,MAAAhB,GAEAI,EAAA,IAAA3tC,YAAA,EACA,MACA,QACA,SACA,eACA,EACA,QAEA0tC,EAAA,IAAA1tC,YAAA,EACA,MACA,IACA,MAEA4tC,EAAA,IAAA5tC,YAAA,EACA,MACA,UAEA6tC,EAAAD,EACAE,EAAA,IAAA9tC,YAAA,EACA,MACA,QACA,UAEA+tC,EAAAH,EACAH,EAAA,IAAAztC,YAAA,EACA,MACA,IACA,eAxGA,GA4GAwJ,EAAA,SAAAF,GACA,IAEAjK,EACAC,EAHA85B,KACArwB,EAAA,EAKA,IAAA1J,EAAA,EAAiBA,EAAA6P,UAAAlO,OAAsB3B,IACvC+5B,EAAAr5B,KAAAmP,UAAA7P,IAMA,IAHAA,EAAA+5B,EAAAp4B,OAGA3B,KACA0J,GAAAqwB,EAAA/5B,GAAAf,WAQA,IANAgB,EAAA,IAAAU,WAAA+I,EAAA,GACA,IAAA5K,SAAAmB,EAAAlB,OAAAkB,EAAAjB,WAAAiB,EAAAhB,YACAkwC,UAAA,EAAAlvC,EAAAhB,YACAgB,EAAAwc,IAAAxS,EAAA,GAGAjK,EAAA,EAAA0J,EAAA,EAA2B1J,EAAA+5B,EAAAp4B,OAAoB3B,IAC/CC,EAAAwc,IAAAsd,EAAA/5B,GAAA0J,GACAA,GAAAqwB,EAAA/5B,GAAAf,WAEA,OAAAgB,GAGAkC,EAAA,WACA,OAAAgI,EAAA0jC,EAAA1rC,KAAAgI,EAAA0jC,EAAAxrC,KAAAisC,KAGArtC,EAAA,SAAAyzB,GACA,OAAAvqB,EAAA0jC,EAAA5sC,KAAA,IAAAN,YAAA,EACA,MAGA,EACA,GACA,IACA,EAGA,EACA,GACA,GACA,GACA,MACA,YACA,YAGA,EACA,EAGA+zB,EAAA0a,iBAAA,EAAA1a,EAAA2a,yBAAA,EAAA3a,EAAA2a,wBAAA,EAAA3a,EAAA3wB,cAAA,YAQAxB,EAAA,SAAA0H,GACA,OAAAE,EAAA0jC,EAAAtrC,KAAA4rC,EAAAlkC,KAKA7G,EAAA,SAAAsxB,GACA,IAAAz0B,EAAA,IAAAU,YAAA,EACA,MACA,QACA,QACA,WAEA+zB,EAAAjxB,WAAA,OAAAixB,EAAAjxB,WAAA,OAAAixB,EAAAjxB,WAAA,UAAAixB,EAAAjxB,SACA,OACA,MAYA,OAPAixB,EAAAzwB,aACAhE,EAAA,IAAAy0B,EAAAzwB,aAAA,OACAhE,EAAA,IAAAy0B,EAAAzwB,aAAA,OACAhE,EAAA,IAAAy0B,EAAAzwB,aAAA,MACAhE,EAAA,QAAAy0B,EAAAzwB,YAGAkG,EAAA0jC,EAAAzqC,KAAAnD,IAEAyD,EAAA,SAAAgxB,GACA,OAAAvqB,EAAA0jC,EAAAnqC,KAAAN,EAAAsxB,GAAAnyB,EAAAmyB,EAAAzqB,MAAApG,EAAA6wB,KAEA/wB,EAAA,SAAAC,GACA,OAAAuG,EAAA0jC,EAAAlqC,KAAA,IAAAhD,YAAA,SACA,WAAAiD,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,MAGAC,EAAA,SAAA6wB,GACA,OAAAvqB,EAAA0jC,EAAAhqC,KAAA,UAAA6wB,EAAAzqB,KAAAE,EAAA0jC,EAAAhkC,KAAAukC,GAAAjkC,EAAA0jC,EAAAjoC,KAAAyoC,GAAAlsC,IAAA2D,EAAA4uB,KAEAvwB,EAAA,SAAAP,EAAA0rC,GAIA,IAHA,IAAAC,KACAvvC,EAAAsvC,EAAA3tC,OAEA3B,KACAuvC,EAAAvvC,GAAAsI,EAAAgnC,EAAAtvC,IAEA,OAAAmK,EAAA+G,MAAA,MAAA28B,EAAA1pC,KAAAR,EAAAC,IAAA+O,OAAA48B,KAOAnrC,EAAA,SAAAkrC,GAIA,IAHA,IAAAtvC,EAAAsvC,EAAA3tC,OACAS,KAEApC,KACAoC,EAAApC,GAAAuI,EAAA+mC,EAAAtvC,IAGA,OAAAmK,EAAA+G,MAAA,MAAA28B,EAAAzpC,KAAAE,EAAA,aAAAqO,OAAAvQ,GAAAuQ,OAAAtO,EAAAirC,MAEAjrC,EAAA,SAAAirC,GAIA,IAHA,IAAAtvC,EAAAsvC,EAAA3tC,OACAS,KAEApC,KACAoC,EAAApC,GAAAwI,EAAA8mC,EAAAtvC,IAEA,OAAAmK,EAAA+G,MAAA,MAAA28B,EAAAxpC,MAAAsO,OAAAvQ,KAEAkC,EAAA,SAAAb,GACA,IAAA2H,EAAA,IAAAzK,YAAA,EACA,MACA,QACA,QACA,YACA,WAAA8C,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,EACA,QACA,IACA,IACA,QACA,QACA,yEACA,gDACA,kBAEA,OAAA0G,EAAA0jC,EAAAvpC,KAAA8G,IAGAtG,EAAA,SAAA4vB,GACA,IAEAx2B,EACA8B,EAHA+E,EAAA2vB,EAAA3vB,YACAqG,EAAA,IAAAzK,WAAA,EAAAoE,EAAApD,QAOA,IAAA3B,EAAA,EAAiBA,EAAA+E,EAAApD,OAAoB3B,IACrC9B,EAAA6G,EAAA/E,GAAA9B,MAEAkN,EAAApL,EAAA,GAAA9B,EAAAE,WAAA,EAAAF,EAAAG,cAAA,EAAAH,EAAAI,cAGA,OAAA6L,EAAA0jC,EAAA/oC,KAAAsG,IAGAtF,EAAA,SAAA4uB,GACA,OAAAvqB,EAAA0jC,EAAA/nC,KAAAS,EAAAmuB,GAAAvqB,EAAA0jC,EAAAjnC,KAAA8nC,GAAAvkC,EAAA0jC,EAAA3nC,KAAAsoC,GAAArkC,EAAA0jC,EAAApnC,KAAAgoC,GAAAtkC,EAAA0jC,EAAA9nC,KAAAwoC,KAMAhoC,EAAA,SAAAmuB,GAEA,OAAAvqB,EAAA0jC,EAAAtnC,KAAA,IAAA5F,YAAA,EACA,MACA,oBAAA+zB,EAAAzqB,KAAA0kC,EAAAja,GAAAka,EAAAla,KAGAia,EAAA,SAAAja,GACA,IAIA10B,EAJAO,EAAAm0B,EAAAn0B,QACAC,EAAAk0B,EAAAl0B,QACAgvC,KACAC,KAIA,IAAAzvC,EAAA,EAAmBA,EAAAO,EAAAoB,OAAgB3B,IACnCwvC,EAAA9uC,MAAA,MAAAH,EAAAP,GAAAf,cAAA,GACAuwC,EAAA9uC,KAAA,IAAAH,EAAAP,GAAAf,YACAuwC,IAAA78B,OAAAjI,MAAAW,UAAAC,MAAAC,KAAAhL,EAAAP,KAIA,IAAAA,EAAA,EAAmBA,EAAAQ,EAAAmB,OAAgB3B,IACnCyvC,EAAA/uC,MAAA,MAAAF,EAAAR,GAAAf,cAAA,GACAwwC,EAAA/uC,KAAA,IAAAF,EAAAR,GAAAf,YACAwwC,IAAA98B,OAAAjI,MAAAW,UAAAC,MAAAC,KAAA/K,EAAAR,KAGA,OAAAmK,EAAA0jC,EAAAlvC,KAAA,IAAAgC,YAAA,YACA,IACA,IACA,IACA,yBACA,MAAA+zB,EAAAt1B,QAAA,MAAAs1B,EAAAt1B,OACA,MAAAs1B,EAAAr1B,SAAA,MAAAq1B,EAAAr1B,OACA,SACA,SACA,QACA,IACA,mGACA,KACA,QACA8K,EAAA0jC,EAAAjuC,KAAA,IAAAe,YAAA,EACA+zB,EAAAgb,WACAhb,EAAAt0B,qBACAs0B,EAAAib,SACA,KACAh9B,QAAApS,EAAAoB,SACAgR,OAAA68B,GAAA78B,QAAAnS,EAAAmB,SACAgR,OAAA88B,KACAtlC,EAAA0jC,EAAAjtC,KAAA,IAAAD,YAAA,aACA,aACA,kBAIAiuC,EAAA,SAAAla,GACA,OAAAvqB,EAAA0jC,EAAA/pC,KAAA,IAAAnD,YAGA,YACA,IAGA,QACA,SACA,MAAA+zB,EAAA3wB,eAAA,MAAA2wB,EAAA3wB,cAEA,MAAA2wB,EAAA1wB,aAAA,MAAA0wB,EAAA1wB,WACA,IACA,KAEA,MAAA0wB,EAAAzwB,aAAA,MAAAywB,EAAAzwB,WAAA,MAGAhD,EAAAyzB,KAIAvsB,EAAA,SAAAusB,GACA,IAAAz0B,EAAA,IAAAU,YAAA,EACA,MACA,QACA,SACA,WAAA+zB,EAAAhP,KAAA,aAAAgP,EAAAhP,KAAA,UAAAgP,EAAAhP,KAAA,MAAAgP,EAAAhP,GACA,SACA,WAAAgP,EAAAjxB,WAAA,aAAAixB,EAAAjxB,WAAA,UAAAixB,EAAAjxB,WAAA,MAAAixB,EAAAjxB,SACA,gBACA,IACA,IACA,IACA,IACA,0EACA,MAAAixB,EAAAt1B,QAAA,MAAAs1B,EAAAt1B,MAAA,KACA,MAAAs1B,EAAAr1B,SAAA,MAAAq1B,EAAAr1B,OAAA,MAGA,OAAA8K,EAAA0jC,EAAA1lC,KAAAlI,IAOAqI,EAAA,SAAAosB,GACA,IAAAkb,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA8BA,OA5BAL,EAAAzlC,EAAA0jC,EAAAxmC,KAAA,IAAA1G,YAAA,EACA,QACA,WAAA+zB,EAAAhP,KAAA,aAAAgP,EAAAhP,KAAA,UAAAgP,EAAAhP,KAAA,MAAAgP,EAAAhP,GACA,QACA,QACA,QACA,WAGAsqB,EAAA7oC,KAAA+oC,MAAAxb,EAAAxtB,qBAAA8nC,EAAA,IACAiB,EAAA9oC,KAAA+oC,MAAAxb,EAAAxtB,qBAAA8nC,EAAA,IAEAa,EAAA1lC,EAAA0jC,EAAA5mC,KAAA,IAAAtG,YAAA,EACA,MAEAqvC,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,EAAAC,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,KAKA,GAQA,UAAAvb,EAAAzqB,MACA6lC,EAAA9mC,EAAA0rB,EATA,IAUAvqB,EAAA0jC,EAAAvlC,KAAAsnC,EAAAC,EAAAC,KAMAC,EAAAjrC,EAAA4vB,GACAob,EAAA9mC,EAAA0rB,EAAAqb,EAAApuC,OAjBA,IAkBAwI,EAAA0jC,EAAAvlC,KAAAsnC,EAAAC,EAAAC,EAAAC,KAQAxnC,EAAA,SAAAmsB,GAEA,OADAA,EAAAjxB,SAAAixB,EAAAjxB,UAAA,WACA0G,EAAA0jC,EAAAtlC,KAAAJ,EAAAusB,GAAAhxB,EAAAgxB,KAGAlsB,EAAA,SAAAksB,GACA,IAAAz0B,EAAA,IAAAU,YAAA,EACA,OACA,WAAA+zB,EAAAhP,KAAA,aAAAgP,EAAAhP,KAAA,UAAAgP,EAAAhP,KAAA,MAAAgP,EAAAhP,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAAgP,EAAAzqB,OACAhK,IAAA0B,OAAA,MAGAwI,EAAA0jC,EAAArlC,KAAAvI,IAUA8uC,EAAA,SAAAhqC,EAAAhF,GACA,IAAAowC,EAAA,EACAC,EAAA,EACAC,EAAA,EACA1mC,EAAA,EAkBA,OAfA5E,EAAApD,cACA2uC,IAAAvrC,EAAA,GAAAtB,WACA0sC,EAAA,QAEAG,IAAAvrC,EAAA,GAAA2E,OACA0mC,EAAA,QAEAE,IAAAvrC,EAAA,GAAA7G,QACAmyC,EAAA,QAEAC,IAAAvrC,EAAA,GAAA4E,wBACAA,EAAA,KAIA,EACA,EAAAwmC,EAAAC,EAAAC,EAAA1mC,EAAA,GACA,WAAA5E,EAAApD,UAAA,aAAAoD,EAAApD,UAAA,UAAAoD,EAAApD,UAAA,MAAAoD,EAAApD,QACA,WAAA5B,KAAA,aAAAA,KAAA,UAAAA,KAAA,MAAAA,IAIA+uC,EAAA,SAAApa,EAAA30B,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAOA,IAJAD,GAAA,OADAgF,EAAA2vB,EAAA3vB,aACApD,OAEAyJ,EAAA2jC,EAAAhqC,EAAAhF,GAEAC,EAAA,EAAmBA,EAAA+E,EAAApD,OAAoB3B,IACvCiJ,EAAAlE,EAAA/E,GACAoL,IAAAuH,SAAA,WAAA1J,EAAAxF,YAAA,aAAAwF,EAAAxF,YAAA,UAAAwF,EAAAxF,YAAA,MAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,aAAAT,EAAAS,QAAA,UAAAT,EAAAS,QAAA,MAAAT,EAAAS,KACAT,EAAA/K,MAAAC,WAAA,EAAA8K,EAAA/K,MAAAE,UAAA6K,EAAA/K,MAAAG,cAAA,EAAA4K,EAAA/K,MAAAI,eAAA,EAAA2K,EAAA/K,MAAAK,cAAA,EAAA0K,EAAA/K,MAAAM,gBAAA,MAAAyK,EAAA/K,MAAAO,oBAAA,GAAAwK,EAAA/K,MAAAO,qBACA,WAAAwK,EAAAU,yBAAA,aAAAV,EAAAU,yBAAA,UAAAV,EAAAU,yBAAA,MAAAV,EAAAU,wBAGA,OAAAQ,EAAA0jC,EAAA7kC,KAAA,IAAArI,WAAAyK,KAGAyjC,EAAA,SAAAna,EAAA30B,GACA,IAAAqL,EAAArG,EAAAkE,EAAAjJ,EAOA,IAJAD,GAAA,MADAgF,EAAA2vB,EAAA3vB,aACApD,OAEAyJ,EAAA2jC,EAAAhqC,EAAAhF,GAEAC,EAAA,EAAmBA,EAAA+E,EAAApD,OAAoB3B,IACvCiJ,EAAAlE,EAAA/E,GACAoL,IAAAuH,SAAA,WAAA1J,EAAAxF,YAAA,aAAAwF,EAAAxF,YAAA,UAAAwF,EAAAxF,YAAA,MAAAwF,EAAAxF,UACA,WAAAwF,EAAAS,QAAA,aAAAT,EAAAS,QAAA,UAAAT,EAAAS,QAAA,MAAAT,EAAAS,OAGA,OAAAS,EAAA0jC,EAAA7kC,KAAA,IAAArI,WAAAyK,KAGApC,EAAA,SAAA0rB,EAAA30B,GACA,gBAAA20B,EAAAzqB,KACA4kC,EAAAna,EAAA30B,GAGA+uC,EAAApa,EAAA30B,IAIA,IA0BA6jG,EAAAhmG,EA1BAimG,GACA9hG,KA7XAA,EAAA,WACA,OAAAoI,EAAA0jC,EAAA9rC,KAAA+rC,EAAAC,EAAAD,EAAAE,IA6XAjrC,KAvXA,SAAAnE,GACA,OAAAuL,EAAA0jC,EAAA9qC,KAAAnE,IAuXAuF,OACAC,OACAmsC,YAAA,SAAAjB,GACA,IAEArvC,EAFAuwC,EAAAzuC,IACA0uC,EAAArsC,EAAAkrC,GAMA,OAHArvC,EAAA,IAAAU,WAAA6vC,EAAAvxC,WAAAwxC,EAAAxxC,aACAwd,IAAA+zB,GACAvwC,EAAAwc,IAAAg0B,EAAAD,EAAAvxC,YACAgB,IAYA6jG,EARA,SAAA34F,GACA,OAAAA,IAAA,GA6MA0qC,GACAjJ,QAnMAg3D,EAAA,SAAAhlG,EAAAmO,GACA,IACA/M,EACA0J,EACAO,EACAC,EACA8iC,EALAC,KAOA,IAAAlgC,EAAApL,OAEA,YAGA,IAAA3B,EAAA,EAAiBA,EAAApB,EAAAK,YACjByK,EAAAo6F,EAAAllG,EAAAoB,IAAA,GAAApB,EAAAoB,EAAA,OAAApB,EAAAoB,EAAA,MAAApB,EAAAoB,EAAA,IAEAiK,EAAArM,EAAAgB,EAAAe,SAAAK,EAAA,EAAAA,EAAA,IAEAkK,EAAAR,EAAA,EAAA1J,EAAA0J,EAAA9K,EAAAK,WAEAgL,IAAA8C,EAAA,KACA,IAAAA,EAAApL,OAGAsrC,EAAAvsC,KAAA9B,EAAAe,SAAAK,EAAA,EAAAkK,KAGA8iC,EAAA42D,EAAAhlG,EAAAe,SAAAK,EAAA,EAAAkK,GAAA6C,EAAAzB,MAAA,KACA3J,SACAsrC,IAAAt6B,OAAAq6B,KAIAhtC,EAAAkK,EAIA,OAAA+iC,GA+JArvC,UAvJAA,EAAA,SAAAmB,GACA,IAAAkB,EAAA,GAKA,OAJAA,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,IACAkB,GAAA0C,OAAAC,aAAA7D,EAAA,KAmJAyE,UA7HA,SAAA0pC,GAKA,OAHA02D,EAAA12D,GAAA,gBAGAC,OAAA,SAAAltC,EAAAsI,GACA,IAAAJ,EAAAjH,EAAA2J,EAAA6a,EAAAtiB,EAGA,OADA+E,EAAAy7F,EAAAr7F,GAAA,cAIArH,EAAAiH,EAAA,GAEAud,EAAAo+E,EAAA37F,EADA0C,EAAA,IAAA3J,EAAA,QACA,GAAAiH,EAAA0C,EAAA,OAAA1C,EAAA0C,EAAA,MAAA1C,EAAA0C,EAAA,KAEAzH,EAAAwgG,EAAAr7F,GAAA,qBAKAsC,EAAA,KADA3J,EAAAkC,EAAA,IACA,MACAnD,EAAAylB,GAAAo+E,EAAA1gG,EAAAyH,IAAA,GAAAzH,EAAAyH,EAAA,OAAAzH,EAAAyH,EAAA,MAAAzH,EAAAyH,EAAA,IACA5K,GALA,MARA,WAoHA4sC,UAnFA,SAAArpC,EAAA4pC,GACA,IAAAC,EAAAC,EAAArtC,EAoCA,OAjCAotC,EAAAu2D,EAAAx2D,GAAA,gBAGAE,KAAA36B,OAAAzB,SAAAm8B,EAAAziC,IAAA,SAAAtC,GACA,OAAAs7F,EAAAt7F,GAAA,SAAAsC,IAAA,SAAAvD,GACA,IAAAqe,EAAA6nB,EAsBA,OAnBA7nB,EAAAo+E,EAAAz8F,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAkmC,EAAA/pC,EAAAkiB,IAAA,KAGAk+E,EAAAt7F,GAAA,SAAAsC,IAAA,SAAA3D,GACA,IAAA/F,EAAAjB,EAQA,OANAiB,EAAA+F,EAAA,GACAhH,EAAA6jG,EAAA78F,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IACA,IAAA/F,IACAjB,GAAAkH,KAAAC,IAAA,MACAnH,GAAA6jG,EAAA78F,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAEAhH,IACW,IACXutC,KAGAD,OAKAttC,EAAAkH,KAAAwgC,IAAAz2B,MAAA,KAAAo8B,GACAG,SAAAxtC,KAAA,GA+CAytC,cAjCA,SAAAR,GACA,IACAQ,KAuBA,OAxBAk2D,EAAA12D,GAAA,gBAGAr6B,QAAA,SAAAtK,GACA,IAAAolC,EAAAi2D,EAAAr7F,GAAA,gBACAqlC,EAAAg2D,EAAAr7F,GAAA,SAEAolC,EAAA96B,QAAA,SAAAtQ,EAAAsI,GACA,IAEAhM,EAEAyI,EAJA7E,EAAA7E,EAAA2E,EAAA5C,SAAA,OACAwI,EAAAylC,EAAA/iC,GAKA,SAAApI,IAGA6E,EAAA,KAFAzI,EAAA,IAAAC,SAAAqJ,EAAApJ,OAAAoJ,EAAAnJ,WAAAmJ,EAAAlJ,aACAuD,SAAA,GACA3D,EAAAiC,UAAA,IAAAjC,EAAAiC,UAAA,IAEA4sC,EAAAhtC,KAAA4G,QAKAomC,IAqBAiN,EAAA,WACAjuC,KAAAwgC,KAAA,WACA,IAAA82C,KAOAt3E,KAAAw7C,GAAA,SAAAj+C,EAAAohD,GACA24B,EAAA/5E,KACA+5E,EAAA/5E,OAEA+5E,EAAA/5E,GAAA+5E,EAAA/5E,GAAA0I,OAAA04C,IAQA3+C,KAAAgzC,IAAA,SAAAz1C,EAAAohD,GACA,IAAAxgD,EACA,QAAAm5E,EAAA/5E,KAGAY,EAAAm5E,EAAA/5E,GAAAsH,QAAA85C,GACA24B,EAAA/5E,GAAA+5E,EAAA/5E,GAAAqB,QACA04E,EAAA/5E,GAAAu+C,OAAA39C,EAAA,GACAA,GAAA,IAOA6B,KAAAuuC,QAAA,SAAAhxC,GACA,IAAA85F,EAAA/jG,EAAA2B,EAAAmN,EAEA,GADAi1F,EAAA/f,EAAA/5E,GAQA,OAAA4F,UAAAlO,OAEA,IADAA,EAAAoiG,EAAApiG,OACA3B,EAAA,EAAuBA,EAAA2B,IAAY3B,EACnC+jG,EAAA/jG,GAAAuL,KAAAmB,KAAAmD,UAAA,QAEW,CAGX,IAFAf,KACA9O,EAAA6P,UAAAlO,OACA3B,EAAA,EAAuBA,EAAA6P,UAAAlO,SAAsB3B,EAC7C8O,EAAApO,KAAAmP,UAAA7P,IAGA,IADA2B,EAAAoiG,EAAApiG,OACA3B,EAAA,EAAuBA,EAAA2B,IAAY3B,EACnC+jG,EAAA/jG,GAAAkR,MAAAxE,KAAAoC,KAOApC,KAAAkhD,QAAA,WACAo2B,QAcArpC,EAAAtvC,UAAA24F,KAAA,SAAAC,GASA,OARAv3F,KAAAw7C,GAAA,gBAAAtpD,GACAqlG,EAAAvjG,KAAA9B,KAGA8N,KAAAw7C,GAAA,gBAAAg8C,GACAD,EAAA3qD,MAAA4qD,KAGAD,GAOAtpD,EAAAtvC,UAAA3K,KAAA,SAAA9B,GACA8N,KAAAuuC,QAAA,OAAAr8C,IAGA+7C,EAAAtvC,UAAAiuC,MAAA,SAAA4qD,GACAx3F,KAAAuuC,QAAA,OAAAipD,IAGA,IAAA9nD,EAAAzB,EA2KAwpD,EAAA,SAAAptD,EAAAvtC,GACA,IAAAP,GArBAS,KAAA,EACAxL,OACAC,UAAA,EACAC,UAAA,EACAC,aAAA,EACAC,cAAA,EACAG,oBAAA,EACAD,gBAAA,IA2BA,OAXAyK,EAAAO,aACAP,EAAAU,sBAAAotC,EAAAwB,IAAAxB,EAAAuB,IACArvC,EAAAxF,SAAAszC,EAAAtzC,SACAwF,EAAAS,KAAA,EAAAqtC,EAAAp1C,OACAsH,EAAAS,MAAAqtC,EAAA93C,WAEA83C,EAAAqtD,WACAn7F,EAAA/K,MAAAE,UAAA,EACA6K,EAAA/K,MAAAM,gBAAA,GAGAyK,GAkEAo7F,EArPA,SAAAC,GACA,IAAAtkG,EACAukG,EACAttD,KACA+pD,KAIA,IAFA/pD,EAAAh4C,WAAA,EAEAe,EAAA,EAAiBA,EAAAskG,EAAA3iG,OAAqB3B,IAItC,gCAHAukG,EAAAD,EAAAtkG,IAGAwkG,aAGAvtD,EAAAt1C,SACAs1C,EAAAxzC,SAAA8gG,EAAAjsD,IAAArB,EAAAqB,IACA0oD,EAAAtgG,KAAAu2C,KAEAA,GAAAstD,IACAtlG,WAAAslG,EAAA3lG,KAAAK,WACAg4C,EAAAsB,IAAAgsD,EAAAhsD,IACAtB,EAAAqB,IAAAisD,EAAAjsD,MAGA,8CAAAisD,EAAAC,cACAvtD,EAAAmtD,UAAA,GAEAntD,EAAAxzC,SAAA8gG,EAAAjsD,IAAArB,EAAAqB,IACArB,EAAAh4C,YAAAslG,EAAA3lG,KAAAK,WACAg4C,EAAAv2C,KAAA6jG,IAYA,OANAvD,EAAAr/F,UAAAs1C,EAAAxzC,UAAAwzC,EAAAxzC,UAAA,KACAwzC,EAAAxzC,SAAAu9F,IAAAr/F,OAAA,GAAA8B,UAIAu9F,EAAAtgG,KAAAu2C,GACA+pD,GA2MAqD,EApMA,SAAArD,GACA,IAAAhhG,EACAi3C,EACAwtD,KACAC,KAiBA,IAbAD,EAAAxlG,WAAA,EACAwlG,EAAAE,SAAA,EACAF,EAAAhhG,SAAA,EACAghG,EAAAlsD,IAAAyoD,EAAA,GAAAzoD,IACAksD,EAAAnsD,IAAA0oD,EAAA,GAAA1oD,IAGAosD,EAAAzlG,WAAA,EACAylG,EAAAC,SAAA,EACAD,EAAAjhG,SAAA,EACAihG,EAAAnsD,IAAAyoD,EAAA,GAAAzoD,IACAmsD,EAAApsD,IAAA0oD,EAAA,GAAA1oD,IAEAt4C,EAAA,EAAiBA,EAAAghG,EAAAr/F,OAAmB3B,KACpCi3C,EAAA+pD,EAAAhhG,IAEAokG,UAGAK,EAAA9iG,SACA+iG,EAAAhkG,KAAA+jG,GACAC,EAAAzlG,YAAAwlG,EAAAxlG,WACAylG,EAAAC,UAAAF,EAAAE,SACAD,EAAAjhG,UAAAghG,EAAAhhG,WAGAghG,GAAAxtD,IACA0tD,SAAA1tD,EAAAt1C,OACA8iG,EAAAxlG,WAAAg4C,EAAAh4C,WACAwlG,EAAAlsD,IAAAtB,EAAAsB,IACAksD,EAAAnsD,IAAArB,EAAAqB,IACAmsD,EAAAhhG,SAAAwzC,EAAAxzC,WAEAghG,EAAAhhG,UAAAwzC,EAAAxzC,SACAghG,EAAAE,UAAA1tD,EAAAt1C,OACA8iG,EAAAxlG,YAAAg4C,EAAAh4C,WACAwlG,EAAA/jG,KAAAu2C,IAaA,OATAytD,EAAA/iG,QAAA8iG,EAAAhhG,UAAA,IACAghG,EAAAhhG,SAAAihG,IAAA/iG,OAAA,GAAA8B,UAEAihG,EAAAzlG,YAAAwlG,EAAAxlG,WACAylG,EAAAC,UAAAF,EAAAE,SACAD,EAAAjhG,UAAAghG,EAAAhhG,SAGAihG,EAAAhkG,KAAA+jG,GACAC,GA2IAL,EA/HA,SAAAK,GACA,IAAAD,EAiBA,OAfAC,EAAA,MAAAN,UAAAM,EAAA/iG,OAAA,IAEA8iG,EAAAC,EAAAvtD,QAEAutD,EAAAzlG,YAAAwlG,EAAAxlG,WACAylG,EAAAC,UAAAF,EAAAE,SAKAD,EAAA,MAAApsD,IAAAmsD,EAAAnsD,IACAosD,EAAA,MAAAnsD,IAAAksD,EAAAlsD,IACAmsD,EAAA,MAAAjhG,UAAAghG,EAAAhhG,UAGAihG,GA6GAL,GA9DA,SAAAK,EAAA58F,GACA,IAAAsI,EACApQ,EACAiJ,EACAw7F,EACAxtD,EACAztC,EAAA1B,GAAA,EACA/C,KAEA,IAAAqL,EAAA,EAAiBA,EAAAs0F,EAAA/iG,OAAiByO,IAGlC,IAFAq0F,EAAAC,EAAAt0F,GAEApQ,EAAA,EAAmBA,EAAAykG,EAAA9iG,OAAuB3B,IAC1Ci3C,EAAAwtD,EAAAzkG,GAIAwJ,IAFAP,EAAAk7F,EAAAltD,EAAAztC,IAEAE,KAEA3E,EAAArE,KAAAuI,GAGA,OAAAlE,GAwCAs/F,GApCA,SAAAK,GACA,IAAAt0F,EACApQ,EACA0qE,EACA+5B,EACAxtD,EACAstD,EACA/6F,EAAA,EACAo7F,EAAAF,EAAAzlG,WACA4lG,EAAAH,EAAAC,SAEA/lG,EAAA,IAAA+B,WADAikG,EAAA,EAAAC,GAEAhmG,EAAA,IAAAC,SAAAF,EAAAG,QAGA,IAAAqR,EAAA,EAAiBA,EAAAs0F,EAAA/iG,OAAiByO,IAIlC,IAHAq0F,EAAAC,EAAAt0F,GAGApQ,EAAA,EAAmBA,EAAAykG,EAAA9iG,OAAuB3B,IAI1C,IAHAi3C,EAAAwtD,EAAAzkG,GAGA0qE,EAAA,EAAqBA,EAAAzzB,EAAAt1C,OAAyB+oE,IAC9C65B,EAAAttD,EAAAyzB,GAEA7rE,EAAAswC,UAAA3lC,EAAA+6F,EAAA3lG,KAAAK,YACAuK,GAAA,EACA5K,EAAA6d,IAAA8nF,EAAA3lG,KAAA4K,GACAA,GAAA+6F,EAAA3lG,KAAAK,WAIA,OAAAL,GA0GAkmG,GA9CA,SAAApwE,UACAA,EAAAqwE,qBACArwE,EAAAswE,qBACAtwE,EAAAuwE,qBACAvwE,EAAAwwE,eA0CAJ,GA/BA,SAAApwE,EAAAywE,GACA,IAAAj+F,EAEA69F,EAAArwE,EAAAqwE,cAyBA,OAtBAI,IACAJ,GAAArwE,EAAAkoB,kBAAAtE,KAKApxC,EAAAwtB,EAAAkoB,kBAAA11C,oBAGAA,GAAA69F,EAGA79F,EAAAC,KAAA6+C,IAAA,EAAA9+C,GAEA,UAAAwtB,EAAAzqB,OAIA/C,GADAwtB,EAAAzwB,WAvFA,IAyFAiD,EAAAC,KAAA+oC,MAAAhpC,IAGAA,GAGA49F,GAxFA,SAAApwE,EAAA91B,GACA,iBAAAA,EAAA25C,WACAjI,IAAA5b,EAAAkoB,kBAAArE,MACA7jB,EAAAkoB,kBAAArE,IAAA35C,EAAA25C,UAGAjI,IAAA5b,EAAAuwE,cACAvwE,EAAAuwE,cAAArmG,EAAA25C,IAEA7jB,EAAAuwE,cAAA99F,KAAAwgC,IAAAjT,EAAAuwE,cAAArmG,EAAA25C,UAGAjI,IAAA5b,EAAAwwE,cACAxwE,EAAAwwE,cAAAtmG,EAAA25C,IAEA7jB,EAAAwwE,cAAA/9F,KAAA6+C,IAAAtxB,EAAAwwE,cAAAtmG,EAAA25C,MAIA,iBAAA35C,EAAA05C,WACAhI,IAAA5b,EAAAkoB,kBAAAtE,MACA5jB,EAAAkoB,kBAAAtE,IAAA15C,EAAA05C,UAGAhI,IAAA5b,EAAAqwE,cACArwE,EAAAqwE,cAAAnmG,EAAA05C,IAEA5jB,EAAAqwE,cAAA59F,KAAAwgC,IAAAjT,EAAAqwE,cAAAnmG,EAAA05C,UAGAhI,IAAA5b,EAAAswE,cACAtwE,EAAAswE,cAAApmG,EAAA05C,IAEA5jB,EAAAswE,cAAA79F,KAAA6+C,IAAAtxB,EAAAswE,cAAApmG,EAAA05C,OA+OA8sD,GArJA,SAAAh6F,GAUA,IATA,IAAApL,EAAA,EACAC,GACAolG,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAGAtlG,EAAAoL,EAAAnM,YApBA,MAsBAmM,EAAApL,IAFA,CAOA,WAAAoL,EAAApL,IACAqlG,GAAA,IACArlG,IAKA,IAHAqlG,GAAAj6F,EAAApL,KAGA,MAAAoL,EAAApL,IACAslG,GAAA,IACAtlG,IAMA,GAJAslG,GAAAl6F,EAAApL,MAIAC,EAAA85B,SA3CA,IA2CAsrE,EAAA,CACAplG,EAAAolG,cACAplG,EAAAqlG,cACArlG,EAAA85B,QAAA3uB,EAAAzL,SAAAK,IAAAslG,GACA,MAIAtlG,GAAAslG,EACAD,EAAA,EACAC,EAAA,EAGA,OAAArlG,GAwGAmlG,GApGA,SAAAG,GAGA,aAAAA,EAAAxrE,QAAA,GACA,KAIA,KAAAwrE,EAAAxrE,QAAA,MAAAwrE,EAAAxrE,QAAA,IACA,KAIA,SAAAp3B,OAAAC,aAAA2iG,EAAAxrE,QAAA,GAAAwrE,EAAAxrE,QAAA,GAAAwrE,EAAAxrE,QAAA,GAAAwrE,EAAAxrE,QAAA,IACA,KAIA,IAAAwrE,EAAAxrE,QAAA,GACA,KAKAwrE,EAAAxrE,QAAAp6B,SAAA,EAAA4lG,EAAAxrE,QAAAp4B,OAAA,IA4EAyjG,GAxEA,SAAA7sD,EAAAitD,GACA,IACAxlG,EACA60C,EACA90C,EACAnB,EAJAquC,KAOA,QAAAu4D,EAAA,IACA,OAAAv4D,EAKA,IADA4H,EAAA,GAAA2wD,EAAA,GACAxlG,EAAA,EAAiBA,EAAA60C,EAAW70C,IAE5BpB,GACAqL,KAAA,EAAAu7F,EAAA,GAFAzlG,EAAA,EAAAC,IAGAu4C,OAIA,EAAAitD,EAAAzlG,EAAA,KACAnB,EAAA6mG,OAAAD,EAAAzlG,EAAA,MAAAylG,EAAAzlG,EAAA,GACAktC,EAAAvsC,KAAA9B,IAGA,OAAAquC,GA6CAm4D,GA1CA,SAAAxmG,GAQA,IAPA,IAGA66C,EACAisD,EAJA/jG,EAAA/C,EAAAK,WACA0mG,KACA3lG,EAAA,EAKAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACA2lG,EAAAjlG,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2lG,EAAAhkG,OACA,OAAA/C,EAIA66C,EAAA93C,EAAAgkG,EAAAhkG,OACA+jG,EAAA,IAAA/kG,WAAA84C,GACA,IAAAmsD,EAAA,EAEA,IAAA5lG,EAAA,EAAiBA,EAAAy5C,EAAemsD,IAAA5lG,IAChC4lG,IAAAD,EAAA,KAEAC,IAEAD,EAAAxuD,SAEAuuD,EAAA1lG,GAAApB,EAAAgnG,GAGA,OAAAF,GAIAN,GAhKA,EA6KAxqD,GAAA,SAAAA,IAEAA,EAAAvvC,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAm5F,mBAEAn5F,KAAAo5F,YAAA,IAAA7oD,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,MAGAvwC,KAAAg4D,QAGAh4D,KAAAo5F,WAAAjzF,QAAA,SAAA+K,GACAA,EAAAsqC,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,SACAkR,EAAAsqC,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,UACOA,QAGPkuC,GAAAvvC,UAAA,IAAA+wC,GACA17C,KAAA,SAAA87C,GACA,IAAA+oD,EAAAC,EAAAO,EAGA,gBAAAvpD,EAAAgoD,cAKAe,EAAAH,GAAA5oD,EAAAwpD,cAGAX,cAAAD,KAKAI,EAAAJ,GAAAG,IAeA,GAAA/oD,EAAAlE,IAAA5rC,KAAAu5F,WAEAv5F,KAAAw5F,qBAAA,MAFA,CAIO,GAAA1pD,EAAAlE,MAAA5rC,KAAAu5F,YAAAv5F,KAAAw5F,oBAMP,OALAx5F,KAAAy5F,mBACAz5F,KAAAy5F,cAEAz5F,KAAAw5F,qBAAA,IAMAH,EAAAX,GAAA5oD,EAAAjE,IAAAitD,GACA94F,KAAAm5F,gBAAAn5F,KAAAm5F,gBAAAlzF,OAAAozF,GACAr5F,KAAAu5F,aAAAzpD,EAAAlE,MACA5rC,KAAAy5F,YAAA,GAEAz5F,KAAAy5F,cACAz5F,KAAAu5F,WAAAzpD,EAAAlE,MAGAsC,GAAAvvC,UAAAiuC,MAAA,WAEA5sC,KAAAm5F,gBAAAlkG,QASA+K,KAAAm5F,gBAAAhzF,QAAA,SAAAs0C,EAAAs6C,GACAt6C,EAAAi/C,aAAA3E,IAIA/0F,KAAAm5F,gBAAArE,KAAA,SAAA3zF,EAAA+B,GACA,OAAA/B,EAAA0qC,MAAA3oC,EAAA2oC,IACA1qC,EAAAu4F,aAAAx2F,EAAAw2F,aAEAv4F,EAAA0qC,IAAA3oC,EAAA2oC,MAGA7rC,KAAAm5F,gBAAAhzF,QAAA,SAAAqjC,GACAA,EAAAjsC,KAAA,GAEAyC,KAAA25F,qBAAAnwD,IAIOxpC,MAEPA,KAAAm5F,gBAAAlkG,OAAA,EACA+K,KAAAo5F,WAAAjzF,QAAA,SAAA+K,GACAA,EAAA07B,SACO5sC,OAhCPA,KAAAo5F,WAAAjzF,QAAA,SAAA+K,GACAA,EAAA07B,SACS5sC,OAkCTkuC,GAAAvvC,UAAAq5D,MAAA,WACAh4D,KAAAu5F,WAAA,KACAv5F,KAAAw5F,qBAAA,EACAx5F,KAAAy5F,YAAA,EACAz5F,KAAA45F,sBAAA,WACA55F,KAAAo5F,WAAAjzF,QAAA,SAAA0zF,GACAA,EAAA7hC,WAIA9pB,GAAAvvC,UAAAg7F,qBAAA,SAAAnwD,GAEAxpC,KAAA85F,mBAAAtwD,GACAxpC,KAAA45F,qBAAApwD,EAAAjsC,MAAA,EACOyC,KAAA+5F,mBAAAvwD,KACPxpC,KAAA45F,qBAAApwD,EAAAjsC,MAAA,GAEA,OAAAyC,KAAA45F,qBAAApwD,EAAAjsC,OAKAyC,KAAAo5F,YAAA5vD,EAAAjsC,MAAA,GAAAyC,KAAA45F,qBAAApwD,EAAAjsC,OAAAvJ,KAAAw1C,IAGA0E,GAAAvvC,UAAAm7F,mBAAA,SAAAtwD,GACA,oBAAAA,EAAAuvD,SAEA7qD,GAAAvvC,UAAAo7F,mBAAA,SAAAvwD,GACA,oBAAAA,EAAAuvD,SAcA,IAAAiB,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAr9E,IAAA,IACAs9E,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,KACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,MAGAC,GAAA,SAAA14D,GACA,cAAAA,EACA,IAEAA,EAAAgzD,GAAAhzD,MACA/wC,OAAAC,aAAA8wC,KAQA24D,IAAA,4EAIAC,GAAA,WAGA,IAFA,IAAArsG,KACAD,EAAAusG,GACAvsG,KACAC,EAAAS,KAAA,IAEA,OAAAT,GAGAg9C,GAAA,SAAAA,EAAAuvD,EAAAC,GACAxvD,EAAA5xC,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAggG,OAAAF,GAAA,EACA9/F,KAAAigG,aAAAF,GAAA,EAEA//F,KAAA0gD,MAAA,SAAA1gD,KAAAggG,QAAA,EAAAhgG,KAAAigG,eAEAjgG,KAAAkgG,eACAlgG,KAAAg4D,QAEAh4D,KAAAhM,KAAA,SAAAw1C,GACA,IAAAt3C,EAAAiuG,EAAAC,EAAAC,EAAA/9F,EAKA,IAHApQ,EAAA,MAAAs3C,EAAAuvD,UAGA/4F,KAAAsgG,kBAeA,GATA,aAAApuG,GACA8N,KAAAsgG,iBAAApuG,EACSA,IAAA8N,KAAAugG,WACTvgG,KAAAsgG,iBAAA,MAGAF,EAAAluG,IAAA,EACAmuG,EAAA,IAAAnuG,EAEAA,IAAA8N,KAAAugG,SAES,GAAAruG,IAAA8N,KAAAwgG,wBACTxgG,KAAAygG,MAAA,aACS,GAAAvuG,IAAA8N,KAAA0gG,gBAKT1gG,KAAAygG,MAAA,QACAzgG,KAAA2gG,gBAAAn3D,EAAAqC,KAEA7rC,KAAA4gG,eAAAp3D,EAAAqC,KAGAs0D,EAAAngG,KAAA6gG,WACA7gG,KAAA6gG,WAAA7gG,KAAA8gG,cACA9gG,KAAA8gG,cAAAX,EAGAngG,KAAA+gG,UAAAv3D,EAAAqC,SACS,GAAA35C,IAAA8N,KAAAghG,gBACThhG,KAAAihG,YAAA,EACAjhG,KAAAkhG,UAAA13D,EAAAqC,UACS,GAAA35C,IAAA8N,KAAAmhG,gBACTnhG,KAAAihG,YAAA,EACAjhG,KAAAkhG,UAAA13D,EAAAqC,UACS,GAAA35C,IAAA8N,KAAAohG,gBACTphG,KAAAihG,YAAA,EACAjhG,KAAAkhG,UAAA13D,EAAAqC,UACS,GAAA35C,IAAA8N,KAAAqhG,iBACTrhG,KAAA2gG,gBAAAn3D,EAAAqC,KACA7rC,KAAA4gG,eAAAp3D,EAAAqC,KACA7rC,KAAAshG,eACAthG,KAAA+gG,UAAAv3D,EAAAqC,SACS,GAAA35C,IAAA8N,KAAAuhG,WACT,UAAAvhG,KAAAygG,MACAzgG,KAAA8gG,cAAA9gG,KAAAwhG,MAAAxhG,KAAA8gG,cAAA9gG,KAAAwhG,MAAA5iG,MAAA,MAEAoB,KAAA6gG,WAAA7gG,KAAAwhG,MAAAxhG,KAAA6gG,WAAA7gG,KAAAwhG,MAAA5iG,MAAA,WAES,GAAA1M,IAAA8N,KAAAyhG,wBACTzhG,KAAA4gG,eAAAp3D,EAAAqC,KACA7rC,KAAA6gG,WAAAjB,UACS,GAAA1tG,IAAA8N,KAAA0hG,4BACT1hG,KAAA8gG,cAAAlB,UACS,GAAA1tG,IAAA8N,KAAA2hG,0BACT,YAAA3hG,KAAAygG,QAGAzgG,KAAA4gG,eAAAp3D,EAAAqC,KACA7rC,KAAA6gG,WAAAjB,MAEA5/F,KAAAygG,MAAA,UACAzgG,KAAA+gG,UAAAv3D,EAAAqC,SAGS,GAAA7rC,KAAA4hG,mBAAAxB,EAAAC,GAMT/9F,EAAAo9F,IADAU,GAAA,EAAAA,IAAA,GACAC,GACArgG,UAAAygG,OAAAj3D,EAAAqC,IAAAvpC,GACAtC,KAAA6hG,eAGS,GAAA7hG,KAAA8hG,eAAA1B,EAAAC,GAOT,UAAArgG,KAAAygG,MACAzgG,KAAA8gG,cAAA9gG,KAAAwhG,MAAAxhG,KAAA8gG,cAAA9gG,KAAAwhG,MAAA5iG,MAAA,MAEAoB,KAAA6gG,WAAA7gG,KAAAwhG,MAAAxhG,KAAA6gG,WAAA7gG,KAAAwhG,MAAA5iG,MAAA,MAQA0D,EAAAo9F,IADAU,GAAA,EAAAA,IAAA,GACAC,GACArgG,UAAAygG,OAAAj3D,EAAAqC,IAAAvpC,GACAtC,KAAA6hG,eAGS,GAAA7hG,KAAA+hG,aAAA3B,EAAAC,GAETrgG,KAAA2gG,gBAAAn3D,EAAAqC,KAIA7rC,UAAAygG,OAAAj3D,EAAAqC,IAAA,KACA7rC,KAAA6hG,UAEA,QAAAxB,IACArgG,KAAAgiG,cAAAx4D,EAAAqC,KAAA,MAGA,MAAAw0D,IACArgG,KAAAgiG,cAAAx4D,EAAAqC,KAAA,WAIS,GAAA7rC,KAAAiiG,oBAAA7B,EAAAC,GAKTrgG,KAAA6hG,SAAA,EAAAxB,OAGS,GAAArgG,KAAAkiG,MAAA9B,EAAAC,GAAA,CAIT,IAAA8B,EAAAxC,GAAA96F,QAAA,KAAA3S,GAGA,WAAA8N,KAAAygG,OACAzgG,KAAAkhG,UAAA13D,EAAAqC,IAAAs2D,GAGAA,IAAAniG,KAAAwhG,OAEAxhG,KAAA2gG,gBAAAn3D,EAAAqC,KACA7rC,KAAAwhG,KAAAW,GAIA,EAAA9B,IAAA,IAAArgG,KAAAoiG,YAAAv9F,QAAA,MACA7E,KAAAgiG,cAAAx4D,EAAAqC,KAAA,MAGA,QAAA35C,KAKA8N,KAAA6hG,QAAA,OAAA3vG,IAAA,IAGA8N,KAAAqiG,WAAAhC,IAKA,QAAAA,IACArgG,KAAAgiG,cAAAx4D,EAAAqC,KAAA,WAKS7rC,KAAAsiG,aAAAlC,KACT,IAAAC,IACAA,EAAA,MAEA/9F,EAAAo9F,GAAAU,GACA99F,GAAAo9F,GAAAW,GACArgG,UAAAygG,OAAAj3D,EAAAqC,IAAAvpC,GACAtC,KAAA6hG,SAAAv/F,EAAArN,aAnLA+K,KAAAsgG,iBAAA,OAuLA/vD,GAAA5xC,UAAA,IAAA+wC,EAGAa,GAAA5xC,UAAAiiG,eAAA,SAAA/0D,GACA,IAAA0K,EAAAv2C,KAAA6gG,WAEA3iG,IAAA,SAAAikG,GACA,OAAAA,EAAAt7E,SAGA5oB,KAAA,MAEA6F,QAAA,iBAEAyyC,EAAAthD,QACA+K,KAAAuuC,QAAA,QACAg0D,SAAAviG,KAAA+gG,UACAyB,OAAA32D,EACAvpC,KAAAi0C,EACA7G,OAAA1vC,KAAA0gD,SAQAnQ,GAAA5xC,UAAAq5D,MAAA,WACAh4D,KAAAygG,MAAA,QAKAzgG,KAAAyiG,QAAA,EACAziG,KAAA+gG,UAAA,EACA/gG,KAAA6gG,WAAAjB,KACA5/F,KAAA8gG,cAAAlB,KACA5/F,KAAAsgG,iBAAA,KAGAtgG,KAAA6hG,QAAA,EACA7hG,KAAAwhG,KAnQA,GAoQAxhG,KAAAihG,YAAA,EAGAjhG,KAAAoiG,gBAMA7xD,GAAA5xC,UAAAuhG,aAAA,WAaA,IAAAlgG,KAAAigG,cACAjgG,KAAA0iG,MAAA,GACA1iG,KAAA2iG,KAAA,GACA3iG,KAAA4iG,UAAA,GAAA5iG,KAAAggG,SAAA,EACAhgG,KAAA6iG,QAAA,IACO,IAAA7iG,KAAAigG,eACPjgG,KAAA0iG,MAAA,GACA1iG,KAAA2iG,KAAA,GACA3iG,KAAA4iG,UAAA,GAAA5iG,KAAAggG,SAAA,EACAhgG,KAAA6iG,QAAA,IAOA7iG,KAAAugG,SAAA,EAEAvgG,KAAAwgG,wBAAA,GAAAxgG,KAAA4iG,SACA5iG,KAAA0gG,gBAAA,GAAA1gG,KAAA4iG,SAEA5iG,KAAAghG,gBAAA,GAAAhhG,KAAA4iG,SACA5iG,KAAAmhG,gBAAA,GAAAnhG,KAAA4iG,SACA5iG,KAAAohG,gBAAA,GAAAphG,KAAA4iG,SACA5iG,KAAAqhG,iBAAA,GAAArhG,KAAA4iG,SAEA5iG,KAAA2hG,0BAAA,GAAA3hG,KAAA4iG,SAEA5iG,KAAAuhG,WAAA,GAAAvhG,KAAA4iG,SACA5iG,KAAAyhG,wBAAA,GAAAzhG,KAAA4iG,SACA5iG,KAAA0hG,4BAAA,GAAA1hG,KAAA4iG,UAcAryD,GAAA5xC,UAAAijG,mBAAA,SAAAxB,EAAAC,GACA,OAAAD,IAAApgG,KAAA2iG,MAAAtC,GAAA,IAAAA,GAAA,IAcA9vD,GAAA5xC,UAAAmjG,eAAA,SAAA1B,EAAAC,GACA,OAAAD,IAAApgG,KAAA2iG,KAAA,GAAAvC,IAAApgG,KAAA2iG,KAAA,IAAAtC,GAAA,IAAAA,GAAA,IAcA9vD,GAAA5xC,UAAAojG,aAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAApgG,KAAA2iG,MAAAtC,GAAA,IAAAA,GAAA,IAcA9vD,GAAA5xC,UAAAsjG,oBAAA,SAAA7B,EAAAC,GACA,OAAAD,IAAApgG,KAAA6iG,SAAAxC,GAAA,IAAAA,GAAA,IAcA9vD,GAAA5xC,UAAAujG,MAAA,SAAA9B,EAAAC,GACA,OAAAD,GAAApgG,KAAA0iG,OAAAtC,EAAApgG,KAAA0iG,MAAA,GAAArC,GAAA,IAAAA,GAAA,KAYA9vD,GAAA5xC,UAAA0jG,WAAA,SAAAhC,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAWA9vD,GAAA5xC,UAAA2jG,aAAA,SAAAh1F,GACA,OAAAA,GAAA,IAAAA,GAAA,KAUAijC,GAAA5xC,UAAAuiG,UAAA,SAAAr1D,EAAAi3D,GAWA,GATA,WAAA9iG,KAAAygG,QACAzgG,KAAAwhG,KAzaA,GA0aAxhG,KAAAygG,MAAA,SAEAzgG,KAAA4gG,eAAA/0D,GACA7rC,KAAA8gG,cAAAlB,KACA5/F,KAAA6gG,WAAAjB,WAGAh8D,IAAAk/D,OAAA9iG,KAAAwhG,KAEA,QAAAluG,EAAA,EAAuBA,EAAA0M,KAAAihG,YAAsB3tG,IAC7C0M,KAAA6gG,WAAAiC,EAAAxvG,GAAA0M,KAAA6gG,WAAA7gG,KAAAwhG,KAAAluG,GACA0M,KAAA6gG,WAAA7gG,KAAAwhG,KAAAluG,GAAA,QAIAswC,IAAAk/D,IACAA,EAAA9iG,KAAAwhG,MAEAxhG,KAAAyiG,QAAAK,EAAA9iG,KAAAihG,YAAA,GAKA1wD,GAAA5xC,UAAAqjG,cAAA,SAAAn2D,EAAAk3D,GACA/iG,KAAAoiG,YAAApiG,KAAAoiG,YAAAn8F,OAAA88F,GACA,IAAAzgG,EAAAygG,EAAAtiE,OAAA,SAAAn+B,EAAAygG,GACA,OAAAzgG,EAAA,IAAAygG,EAAA,KACO,IACP/iG,UAAAygG,OAAA50D,EAAAvpC,IAKAiuC,GAAA5xC,UAAAgiG,gBAAA,SAAA90D,GACA,GAAA7rC,KAAAoiG,YAAAntG,OAAA,CAGA,IAAAqN,EAAAtC,KAAAoiG,YAAAY,UAAAviE,OAAA,SAAAn+B,EAAAygG,GACA,OAAAzgG,EAAA,KAAAygG,EAAA,KACO,IACP/iG,KAAAoiG,eACApiG,UAAAygG,OAAA50D,EAAAvpC,KAIAiuC,GAAA5xC,UAAAskG,MAAA,SAAAp3D,EAAAvpC,GACA,IAAA4gG,EAAAljG,KAAA8gG,cAAA9gG,KAAAwhG,MAGA0B,GAAA5gG,EACAtC,KAAA8gG,cAAA9gG,KAAAwhG,MAAA0B,GAGA3yD,GAAA5xC,UAAAwkG,OAAA,SAAAt3D,EAAAvpC,GACA,IAAA4gG,EAAAljG,KAAA6gG,WAAA7gG,KAAAwhG,MAEA0B,GAAA5gG,EACAtC,KAAA6gG,WAAA7gG,KAAAwhG,MAAA0B,GAGA3yD,GAAA5xC,UAAA2iG,aAAA,WACA,IAAAhuG,EAEA,IAAAA,EAAA,EAAiBA,EAAA0M,KAAAyiG,QAAkBnvG,IACnC0M,KAAA6gG,WAAAvtG,GAAA,GAEA,IAAAA,EAAA0M,KAAAwhG,KAAA,EAA6BluG,EAAAusG,GAAoBvsG,IACjD0M,KAAA6gG,WAAAvtG,GAAA,GAGA,IAAAA,EAAA0M,KAAAyiG,QAA4BnvG,EAAA0M,KAAAwhG,KAAeluG,IAC3C0M,KAAA6gG,WAAAvtG,GAAA0M,KAAA6gG,WAAAvtG,EAAA,GAGA0M,KAAA6gG,WAAA7gG,KAAAwhG,MAAA,IAGAjxD,GAAA5xC,UAAAykG,QAAA,SAAAv3D,EAAAvpC,GACA,IAAA4gG,EAAAljG,KAAA6gG,WAAA7gG,KAAAwhG,MAEA0B,GAAA5gG,EACAtC,KAAA6gG,WAAA7gG,KAAAwhG,MAAA0B,GAIA,IAAAG,IACAn1D,iBACAqC,iBAGA+yD,IACAv4D,iBAAA,GACAC,iBAAA,GACAmE,qBAAA,IAOAjG,GAAA,SAAAzqC,EAAA8kG,GACA,IAAAC,EAAA,EAeA,IAbA/kG,EAAA8kG,IAQAC,GAAA,GAKA/oG,KAAAg5F,IAAA8P,EAAA9kG,GAlBA,YAmBAA,GArBA,WAqBA+kG,EAGA,OAAA/kG,GAGA0vC,GAAA,SAAAA,EAAA5wC,GACA,IAAAkmG,EAAAC,EAEAv1D,EAAAxvC,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAA2jG,MAAApmG,EAEAyC,KAAAhM,KAAA,SAAA9B,GACAA,EAAAqL,OAAAyC,KAAA2jG,aAIA//D,IAAA8/D,IACAA,EAAAxxG,EAAA05C,KAGA15C,EAAA05C,IAAA1C,GAAAh3C,EAAA05C,IAAA83D,GACAxxG,EAAA25C,IAAA3C,GAAAh3C,EAAA25C,IAAA63D,GAEAD,EAAAvxG,EAAA05C,IAEA5rC,KAAAuuC,QAAA,OAAAr8C,KAGA8N,KAAA4sC,MAAA,WACA82D,EAAAD,EACAzjG,KAAAuuC,QAAA,SAGAvuC,KAAA4jG,cAAA,WACAF,OAAA,EACAD,OAAA,IAIAt1D,GAAAxvC,UAAA,IAAA+wC,EAEA,IA+EAm0D,GA/EAC,GACA31D,GAIA41D,GAAA,SAAArlG,EAAAyiB,EAAA3jB,GACA,IAAAlK,EACAC,EAAA,GACA,IAAAD,EAAA6tB,EAAqB7tB,EAAAkK,EAASlK,IAC9BC,GAAA,UAAAmL,EAAApL,GAAAyL,SAAA,KAAAH,OAAA,GAEA,OAAArL,GAMAywG,GAAA,SAAAtlG,EAAAyiB,EAAA3jB,GACA,OAAArH,mBAAA4tG,GAAArlG,EAAAyiB,EAAA3jB,KASAymG,GAAA,SAAA/xG,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAgyG,IACAC,KAAA,SAAAnvG,GACA,IAAA1B,EACA,OAAA0B,EAAA9C,KAAA,IAKA,IAAAoB,EAAA,EAAmBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACxC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAq2D,YAAA24C,GAAAhvG,EAAA9C,KAAA,EAAAoB,GAEA0B,EAAAyJ,MAAAulG,GAAAhvG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QAAA6O,QAAA,WACA,MAGA9O,EAAA9C,KAAA8C,EAAAyJ,QAEA2lG,KAAA,SAAApvG,GACA,IAAA1B,EACA,OAAA0B,EAAA9C,KAAA,GAKA,IAAAoB,EAAA,EAAmBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACxC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAq2D,YAAA24C,GAAAhvG,EAAA9C,KAAA,EAAAoB,GACA0B,EAAAga,IAAAg1F,GAAAhvG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QACA,QAIAovG,KAAA,SAAArvG,GACA,IAAA1B,EA1CAoL,EA4CA,IAAApL,EAAA,EAAmBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACxC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAsvG,OA/CA5lG,EA+CA1J,EAAA9C,KA9CAqyG,SAAAR,GAAArlG,EA8CA,EAAApL,KACA,MAGA0B,EAAAu/F,YAAAv/F,EAAA9C,KAAAe,SAAAK,EAAA,GACA0B,EAAA9C,KAAA8C,EAAAu/F,eAKAsP,GAAA,SAAA3hF,GACA,IAoBA5uB,EApBAogE,GACAzgB,SAAA/wB,MAAA+wB,OAKAwhC,WAAAvyD,KAAAuyD,YAKA+vB,EAAA,EAIAnyG,KAIAyC,EAAA,EAQA,GALA+uG,GAAAllG,UAAA6hC,KAAA3hC,KAAAmB,MAIAA,KAAAykG,aAAAnB,GAAAn0D,qBAAApwC,SAAA,IACA20D,EAAA+gB,WACA,IAAAnhF,EAAA,EAAmBA,EAAAogE,EAAA+gB,WAAAx/E,OAAgC3B,IACnD0M,KAAAykG,eAAA,KAAA/wC,EAAA+gB,WAAAnhF,GAAAyL,SAAA,KAAAH,OAAA,GAIAoB,KAAAhM,KAAA,SAAA0wG,GACA,IAAA1vG,EAAA2vG,EAAAt5D,EAAAhB,EAAA/2C,EACA,sBAAAoxG,EAAAnnG,KAaA,GANAmnG,EAAAz0D,yBACAn7C,EAAA,EACAzC,EAAA4C,OAAA,GAIA,IAAA5C,EAAA4C,SAAAyvG,EAAAxyG,KAAA+C,OAAA,IAAAyvG,EAAAxyG,KAAA,SAAAqwC,WAAA,IAAAmiE,EAAAxyG,KAAA,SAAAqwC,WAAA,IAAAmiE,EAAAxyG,KAAA,SAAAqwC,WAAA,IACAmxB,EAAAzgB,OAEA3yC,QAAAC,IAAA,8CAwBA,GAjBAlO,EAAA2B,KAAA0wG,GACA5vG,GAAA4vG,EAAAxyG,KAAAK,WAGA,IAAAF,EAAA4C,SAKAuvG,EAAAP,GAAAS,EAAAxyG,KAAAe,SAAA,OAIAuxG,GAAA,MAIA1vG,EAAA0vG,GAAA,CAWA,IANAxvG,GACA9C,KAAA,IAAA+B,WAAAuwG,GACAlQ,UACAzoD,IAAAx5C,EAAA,GAAAw5C,IACAD,IAAAv5C,EAAA,GAAAu5C,KAEAt4C,EAAA,EAAmBA,EAAAkxG,GACnBxvG,EAAA9C,KAAA6d,IAAA1d,EAAA,GAAAH,KAAAe,SAAA,EAAAuxG,EAAAlxG,MACAA,GAAAjB,EAAA,GAAAH,KAAAK,WACAuC,GAAAzC,EAAA,GAAAH,KAAAK,WACAF,EAAAo4C,QAIAk6D,EAAA,GACA,GAAA3vG,EAAA9C,KAAA,KAEAyyG,GAAA,EACAA,GAAAV,GAAAjvG,EAAA9C,KAAAe,SAAA,QAGAuxG,GAAAP,GAAAjvG,EAAA9C,KAAAe,SAAA,SAKA,GAGA,IADAo4C,EAAA44D,GAAAjvG,EAAA9C,KAAAe,SAAA0xG,EAAA,EAAAA,EAAA,KACA,EAEA,OAAArkG,QAAAC,IAAA,+DASA,IALA8pC,GACArxB,GAHA/iB,OAAAC,aAAAlB,EAAA9C,KAAAyyG,GAAA3vG,EAAA9C,KAAAyyG,EAAA,GAAA3vG,EAAA9C,KAAAyyG,EAAA,GAAA3vG,EAAA9C,KAAAyyG,EAAA,IAIAzyG,KAAA8C,EAAA9C,KAAAe,SAAA0xG,EAAA,GAAAA,EAAAt5D,EAAA,MAEA9sC,IAAA8rC,EAAArxB,GACAkrF,GAAA75D,EAAArxB,MACAkrF,GAAA75D,EAAArxB,IAAAqxB,GAIA,iDAAAA,EAAAi6D,OAAA,CACA,IAAAjhG,EAAAgnC,EAAAn4C,KACA8K,GAAA,EAAAqG,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAEArG,GAAA,EACAA,GAAA,EAAAqG,EAAA,GACAgnC,EAAAh/B,UAAArO,OAKA4mC,IAAA5uC,EAAA62C,UAAAjI,IAAA5uC,EAAA42C,MACA52C,EAAA62C,IAAAxB,EAAAh/B,UACArW,EAAA42C,IAAAvB,EAAAh/B,WAEArL,KAAAuuC,QAAA,YAAAlE,GAGAr1C,EAAAs/F,OAAAtgG,KAAAq2C,GAEAs6D,GAAA,GACAA,GAAAt5D,QACSs5D,EAAAH,GACTxkG,KAAAuuC,QAAA,OAAAv5C,OAGA2J,UAAA,IAAA+wC,EAEA,IAKAk1D,GAAAC,GAAAC,GALAC,GAAAlB,GAEAmB,GAAAlB,IAgBAc,GAAA,WACA,IAAAvyG,EAAA,IAAA4B,WAXA,KAYAo6C,EAAA,EAEAu2D,GAAAjmG,UAAA6hC,KAAA3hC,KAAAmB,MAOAA,KAAAhM,KAAA,SAAA0K,GACA,IAEA4vC,EAFA1E,EAAA,EACAC,EAvBA,IAsCA,IAVAwE,IACAC,EAAA,IAAAr6C,WAAAyK,EAAAnM,WAAA87C,IACAt+B,IAAA1d,EAAAY,SAAA,EAAAo7C,IACAC,EAAAv+B,IAAArR,EAAA2vC,GACAA,EAAA,GAEAC,EAAA5vC,EAIAmrC,EAAAyE,EAAA/7C,YAlCA,KAoCA+7C,EAAA1E,IApCA,KAoCA0E,EAAAzE,IAWAD,IACAC,MATA7pC,KAAAuuC,QAAA,OAAAD,EAAAr7C,SAAA22C,EAAAC,IACAD,GA5CA,IA6CAC,GA7CA,KA0DAD,EAAA0E,EAAA/7C,aACAF,EAAA0d,IAAAu+B,EAAAr7C,SAAA22C,GAAA,GACAyE,EAAAC,EAAA/7C,WAAAq3C,IAOA5pC,KAAA4sC,MAAA,WAnEA,MAuEAyB,GAnEA,KAmEAh8C,EAAA,KACA2N,KAAAuuC,QAAA,OAAAl8C,GACAg8C,EAAA,GAEAruC,KAAAuuC,QAAA,WAGA5vC,UAAA,IAAA+wC,GAMAm1D,GAAA,WACA,IAAAr2D,EAAA5D,EAAAC,EAAAsC,EACA03D,GAAAlmG,UAAA6hC,KAAA3hC,KAAAmB,MACAmtC,EAAAntC,KAEAA,KAAAyuC,wBACAzuC,KAAA0uC,qBAAA9K,EAEA4K,EAAA,SAAAnhB,EAAAshB,GACA,IAAAt7C,EAAA,EAQAs7C,EAAAC,4BACAv7C,GAAAg6B,EAAAh6B,GAAA,GAGA,QAAAs7C,EAAApxC,KACAqtC,EAAAvd,EAAAp6B,SAAAI,GAAAs7C,GAEA9D,EAAAxd,EAAAp6B,SAAAI,GAAAs7C,IAIA/D,EAAA,SAAAvd,EAAAwhB,GACAA,EAAAC,eAAAzhB,EAAA,GACAwhB,EAAAE,oBAAA1hB,EAAA,GAGA8f,EAAA6B,QAAA,GAAA3hB,EAAA,QAAAA,EAAA,IACAwhB,EAAAG,OAAA7B,EAAA6B,QAWAnE,EAAA,SAAAxd,EAAAkc,GACA,IAAA0F,EAAA57C,EAOA,KAAAg6B,EAAA,IAqBA,IAhBA8f,EAAAuB,iBACAntC,MAAA,KACAihC,MAAA,KACA0M,qBAKAD,EAAA,IADA,GAAA5hB,EAAA,OAAAA,EAAA,IACA,EAOAh6B,EAAA,KAHA,GAAAg6B,EAAA,QAAAA,EAAA,KAIAh6B,EAAA47C,GAAA,CACA,IAAAp6C,EAAAw4B,EAAAh6B,GACA02C,GAAA,GAAA1c,EAAAh6B,EAAA,OAAAg6B,EAAAh6B,EAAA,GAKAwB,IAAAyuG,GAAAv4D,kBAAA,OAAAoC,EAAAuB,gBAAAntC,MACA4rC,EAAAuB,gBAAAntC,MAAAwoC,EACWl1C,IAAAyuG,GAAAt4D,kBAAA,OAAAmC,EAAAuB,gBAAAlM,MACX2K,EAAAuB,gBAAAlM,MAAAuH,EACWl1C,IAAAyuG,GAAAn0D,uBAEXhC,EAAAuB,gBAAA,kBAAA3E,GAAAl1C,GAKAxB,GAAA,OAAAg6B,EAAAh6B,EAAA,OAAAg6B,EAAAh6B,EAAA,IAIAk2C,EAAAmF,gBAAAvB,EAAAuB,kBAMA1uC,KAAAhM,KAAA,SAAAw1C,GACA,IAAAj2C,KACAF,EAAA,EAmBA,GAjBAE,EAAAq7C,6BAAA,GAAApF,EAAA,IAGAj2C,EAAAw2C,IAAA,GAAAP,EAAA,GACAj2C,EAAAw2C,MAAA,EACAx2C,EAAAw2C,KAAAP,EAAA,IAOA,GAAAA,EAAA,YACAn2C,GAAAm2C,EAAAn2C,GAAA,GAIA,IAAAE,EAAAw2C,IACAx2C,EAAAgK,KAAA,MACAixC,EAAAhF,EAAAv2C,SAAAI,GAAAE,GACAyM,KAAAuuC,QAAA,OAAAh7C,QACS,GAAAA,EAAAw2C,MAAA/pC,KAAAgvC,OAMT,IALAz7C,EAAAgK,KAAA,MACAixC,EAAAhF,EAAAv2C,SAAAI,GAAAE,GACAyM,KAAAuuC,QAAA,OAAAh7C,GAGAyM,KAAAyuC,qBAAAx5C,QACA+K,KAAAovC,YAAA5qC,MAAAxE,UAAAyuC,qBAAAhE,mBAES7G,IAAA5jC,KAAA0uC,gBAGT1uC,KAAAyuC,qBAAAz6C,MAAAw1C,EAAAn2C,EAAAE,IAEAyM,KAAAovC,YAAA5F,EAAAn2C,EAAAE,IAIAyM,KAAAovC,YAAA,SAAA5F,EAAAn2C,EAAAE,GAEAA,EAAAw2C,MAAA/pC,KAAA0uC,gBAAAntC,MACAhO,EAAAsB,WAAAyuG,GAAAv4D,iBACSx3C,EAAAw2C,MAAA/pC,KAAA0uC,gBAAAlM,MACTjvC,EAAAsB,WAAAyuG,GAAAt4D,iBAIAz3C,EAAAsB,WAAAmL,KAAA0uC,gBAAA,kBAAAn7C,EAAAw2C,KAGAx2C,EAAAgK,KAAA,MACAhK,EAAArB,KAAAs3C,EAAAv2C,SAAAI,GAEA2M,KAAAuuC,QAAA,OAAAh7C,MAGAoL,UAAA,IAAA+wC,EACAm1D,GAAAx1D,cACAC,KAAA,GACAC,KAAA,KAWAu1D,GAAA,WACA,IAAA33D,EAAAntC,KAIAuB,GACArP,QACA8K,KAAA,GAEAwlC,GACAtwC,QACA8K,KAAA,GAEAwyC,GACAt9C,QACA8K,KAAA,GA+CAyyC,EAAA,SAAAw1D,EAAA1nG,EAAAoyC,GACA,IAMAC,EACAlP,EAPAmP,EAAA,IAAA57C,WAAAgxG,EAAAjoG,MACA8yC,GACAvyC,QAEAjK,EAAA,EACAD,EAAA,EAMA,GAAA4xG,EAAA/yG,KAAA+C,UAAAgwG,EAAAjoG,KAAA,IAMA,IAHA8yC,EAAAl1C,QAAAqqG,EAAA/yG,KAAA,GAAA63C,IAGAz2C,EAAA,EAAmBA,EAAA2xG,EAAA/yG,KAAA+C,OAA2B3B,IAC9CotC,EAAAukE,EAAA/yG,KAAAoB,GAEAu8C,EAAA9/B,IAAA2wB,EAAAxuC,KAAAmB,GACAA,GAAAqtC,EAAAxuC,KAAAK,WAnEA,IAAA86B,EAAAid,EACAyF,EADA1iB,EAuEAwiB,GAvEAvF,EAuEAwF,GAnEAE,aAAA,GAAA3iB,EAAA,MAAAA,EAAA,IAGAid,EAAA2F,uBAAA,MAAA5iB,EAAA,IAcA,KAVA0iB,EAAA1iB,EAAA,MAcAid,EAAAuB,KAAA,GAAAxe,EAAA,aAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACAid,EAAAuB,KAAA,EACAvB,EAAAuB,MAAA,EAAAxe,EAAA,SACAid,EAAAsB,IAAAtB,EAAAuB,IACA,GAAAkE,IACAzF,EAAAsB,KAAA,GAAAve,EAAA,cAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACAid,EAAAsB,KAAA,EACAtB,EAAAsB,MAAA,EAAAve,EAAA,WAMAid,EAAAp4C,KAAAm7B,EAAAp6B,SAAA,EAAAo6B,EAAA,IAqCAuiB,EAAA,UAAAryC,GAAAuyC,EAAAE,cAAAi1D,EAAAjoG,MAGA2yC,GAAAC,KACAq1D,EAAAjoG,KAAA,EACAioG,EAAA/yG,KAAA+C,OAAA,GAKA26C,GACAzC,EAAAoB,QAAA,OAAAuB,KAIAg1D,GAAAnmG,UAAA6hC,KAAA3hC,KAAAmB,MAMAA,KAAAhM,KAAA,SAAA9B,KAEA28C,IAAA,aAIAvE,IAAA,WACA,IAAA26D,EAAApwG,EAEA,OAAA3C,EAAA2C,YACA,KAAAyuG,GAAAv4D,iBACA,KAAAu4D,GAAAv4D,iBACAk6D,EAAA1jG,EACA1M,EAAA,QACA,MACA,KAAAyuG,GAAAt4D,iBACAi6D,EAAAziE,EACA3tC,EAAA,QACA,MACA,KAAAyuG,GAAAn0D,qBACA81D,EAAAz1D,EACA36C,EAAA,iBACA,MACA,QAEA,OAKA3C,EAAA08C,2BACAa,EAAAw1D,EAAApwG,GAAA,GAKAowG,EAAA/yG,KAAA8B,KAAA9B,GACA+yG,EAAAjoG,MAAA9K,OAAAK,YAEAg3C,IAAA,WACA,IAAAuG,GACAvyC,KAAA,WACAqlC,WAEA8L,EAAAx8C,EAAAw8C,gBAGA,OAAAA,EAAAntC,OACAuuC,EAAAlN,OAAA5uC,MACAk8C,mBACA11C,oBAAA,GAEAwe,IAAA01B,EAAAntC,MACA4uC,MAAA,MACA5yC,KAAA,UAGA,OAAAmxC,EAAAlM,OACAsN,EAAAlN,OAAA5uC,MACAk8C,mBACA11C,oBAAA,GAEAwe,IAAA01B,EAAAlM,MACA2N,MAAA,OACA5yC,KAAA,UAIA4vC,EAAAoB,QAAA,OAAAuB,MAES59C,EAAAqL,SAYTyC,KAAA4sC,MAAA,WAGA6C,EAAAluC,EAAA,SACAkuC,EAAAjN,EAAA,SACAiN,EAAAD,EAAA,kBACAxvC,KAAAuuC,QAAA,WAGA5vC,UAAA,IAAA+wC,EAEA,IAAAU,IACAC,QAAA,EACAC,mBArdA,IAsdAxC,sBAAA82D,GACA72D,qBAAA82D,GACA72D,iBAAA82D,GACA32D,wBAAA62D,GACA92D,cAAAm1D,GAAAn1D,cACAqC,aAAA8yD,GAAA9yD,aACAC,eAAAu0D,IAGA,QAAAxnG,MAAA+lG,GACAA,GAAAp+F,eAAA3H,MACA6yC,GAAA7yC,IAAA+lG,GAAA/lG,KAIA,IAEA2nG,GAFAC,GAAA/0D,GAIAg1D,IAAA,sEAUAF,GAAA,WACA,IAAA7yG,EAEA6yG,GAAAvmG,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAhM,KAAA,SAAAw1C,GACA,IAEA67D,EACAC,EACAC,EACAC,EACAprG,EACAqrG,EAPAnyG,EAAA,EACAoyG,EAAA,EAQA,aAAAl8D,EAAAjsC,KAkBA,IAXAlL,GACAmzG,EAAAnzG,GACAA,EAAA,IAAA4B,WAAAuxG,EAAAjzG,WAAAi3C,EAAAt3C,KAAAK,aACAwd,IAAAy1F,GACAnzG,EAAA0d,IAAAy5B,EAAAt3C,KAAAszG,EAAAjzG,aAEAF,EAAAm3C,EAAAt3C,KAKAoB,EAAA,EAAAjB,EAAA4C,QAGA,SAAA5C,EAAAiB,IAAA,UAAAjB,EAAAiB,EAAA,KAsBA,GAbAgyG,EAAA,MAAAjzG,EAAAiB,EAAA,IAIA+xG,GAAA,EAAAhzG,EAAAiB,EAAA,QAAAjB,EAAAiB,EAAA,WAAAjB,EAAAiB,EAAA,OAGAmyG,EAAA,KADArrG,EAAA,WAAA/H,EAAAiB,EAAA,MACA8xG,IAAA,GAAA/yG,EAAAiB,EAAA,SAEAiyG,EAAAjyG,EAAA+xG,EAIAhzG,EAAAE,WAAAgzG,EACA,OAkBA,GAdAvlG,KAAAuuC,QAAA,QACA1C,IAAArC,EAAAqC,IAAA65D,EAAAD,EACA75D,IAAApC,EAAAoC,IAAA85D,EAAAD,EACArrG,cACAsoC,gBAAA,GAAArwC,EAAAiB,EAAA,UACA+D,cAAA,EAAAhF,EAAAiB,EAAA,YAAAjB,EAAAiB,EAAA,QACAiE,WAAA6tG,IAAA,GAAA/yG,EAAAiB,EAAA,SACAqvC,wBAAA,GAAAtwC,EAAAiB,EAAA,QAEAgE,WAAA,GACApF,KAAAG,EAAAY,SAAAK,EAAA,EAAAgyG,EAAAC,KAIAlzG,EAAAE,aAAAgzG,EAEA,YADAlzG,OAAAuxC,GAIA8hE,IAGArzG,IAAAY,SAAAsyG,QA9CAjyG,KAiDA0M,KAAA4sC,MAAA,WACA5sC,KAAAuuC,QAAA,WAIA5vC,UAAA,IAAA+wC,EAEA,IAwJAi2D,GAAAC,GACAC,GAzJAt2D,GAAA21D,GAsJAY,GA9IA,SAAAr+D,GACA,IAEAC,EAAAD,EAAAl1C,WAIAo1C,EAAA,EAMAC,EAAA,EAGA5nC,KAAA/K,OAAA,WACA,SAAAyyC,GAIA1nC,KAAA6nC,cAAA,WACA,SAAAH,EAAAE,GAIA5nC,KAAA8nC,SAAA,WACA,IAAAC,EAAAN,EAAAl1C,WAAAm1C,EACAM,EAAA,IAAA/zC,WAAA,GACAg0C,EAAAxtC,KAAAwgC,IAAA,EAAAyM,GAEA,OAAAO,EACA,UAAAtkC,MAAA,sBAGAqkC,EAAAj4B,IAAA03B,EAAAx0C,SAAA80C,IAAAE,IACAN,EAAA,IAAAv1C,SAAA41C,EAAA31C,QAAA+B,UAAA,GAGAwzC,EAAA,EAAAK,EACAP,GAAAO,GAIAjoC,KAAAkoC,SAAA,SAAAC,GACA,IAAAC,EACAR,EAAAO,GACAR,IAAAQ,EACAP,GAAAO,IAEAA,GAAAP,EAGAO,GAAA,GAFAC,EAAA3tC,KAAA+oC,MAAA2E,EAAA,IAGAT,GAAAU,EAEApoC,KAAA8nC,WAEAH,IAAAQ,EACAP,GAAAO,IAKAnoC,KAAAqoC,SAAA,SAAArrC,GACA,IAAAsrC,EAAA7tC,KAAAwgC,IAAA2M,EAAA5qC,GAIAurC,EAAAZ,IAAA,GAAAW,EAUA,OARAV,GAAAU,GACA,EACAX,IAAAW,EACSZ,EAAA,GACT1nC,KAAA8nC,YAGAQ,EAAAtrC,EAAAsrC,GACA,EACAC,GAAAD,EAAAtoC,KAAAqoC,SAAAC,GAEAC,GAIAvoC,KAAAwoC,iBAAA,WACA,IAAAC,EACA,IAAAA,EAAA,EAAkCA,EAAAb,IAAyCa,EAC3E,OAAAd,EAAA,aAAAc,GAIA,OAFAd,IAAAc,EACAb,GAAAa,EACAA,EAMA,OADAzoC,KAAA8nC,WACAW,EAAAzoC,KAAAwoC,oBAIAxoC,KAAA0oC,sBAAA,WACA1oC,KAAAkoC,SAAA,EAAAloC,KAAAwoC,qBAIAxoC,KAAA2oC,cAAA,WACA3oC,KAAAkoC,SAAA,EAAAloC,KAAAwoC,qBAIAxoC,KAAA4oC,sBAAA,WACA,IAAAC,EAAA7oC,KAAAwoC,mBACA,OAAAxoC,KAAAqoC,SAAAQ,EAAA,MAIA7oC,KAAA8oC,cAAA,WACA,IAAAP,EAAAvoC,KAAA4oC,wBACA,SAAAL,EAEA,EAAAA,IAAA,GAEA,GAAAA,IAAA,IAKAvoC,KAAA+oC,YAAA,WACA,WAAA/oC,KAAAqoC,SAAA,IAIAroC,KAAAgpC,iBAAA,WACA,OAAAhpC,KAAAqoC,SAAA,IAGAroC,KAAA8nC,aAWA89D,GAAA,WACA,IACAtyG,EACAjB,EAFA0zG,EAAA,EAGAH,GAAAjnG,UAAA6hC,KAAA3hC,KAAAmB,MASAA,KAAAhM,KAAA,SAAA9B,GACA,IAAA8zG,EAsBA,IApBA3zG,IAGA2zG,EAAA,IAAA/xG,WAAA5B,EAAAE,WAAAL,OAAAK,aACAwd,IAAA1d,GACA2zG,EAAAj2F,IAAA7d,OAAAG,EAAAE,YACAF,EAAA2zG,GALA3zG,EAAAH,OAmBc6zG,EAAA1zG,EAAAE,WAAA,EAAmCwzG,IACjD,OAAA1zG,EAAA0zG,EAAA,IAEAzyG,EAAAyyG,EAAA,EACA,MAIA,KAAAzyG,EAAAjB,EAAAE,YAGA,OAAAF,EAAAiB,IACA,OAEA,OAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MACe,OAAAjB,EAAAiB,EAAA,IACfA,IACA,MAIAyyG,EAAA,IAAAzyG,EAAA,GACA0M,KAAAuuC,QAAA,OAAAl8C,EAAAY,SAAA8yG,EAAA,EAAAzyG,EAAA,IAIA,GACAA,UACe,IAAAjB,EAAAiB,MAAAjB,EAAA4C,QACf8wG,EAAAzyG,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAjB,EAAAiB,EAAA,QAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MAIA0M,KAAAuuC,QAAA,OAAAl8C,EAAAY,SAAA8yG,EAAA,EAAAzyG,EAAA,IACAyyG,EAAAzyG,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EAKAjB,IAAAY,SAAA8yG,GACAzyG,GAAAyyG,EACAA,EAAA,GAGA/lG,KAAA4sC,MAAA,WAEAv6C,KAAAE,WAAA,GACAyN,KAAAuuC,QAAA,OAAAl8C,EAAAY,SAAA8yG,EAAA,IAGA1zG,EAAA,KACA0zG,EAAA,EACA/lG,KAAAuuC,QAAA,WAGA5vC,UAAA,IAAA+wC,EAKAm2D,IACAI,KAAA,EACAC,KAAA,EACAnpF,KAAA,EACAopF,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA3pF,KAAA,EACA4pF,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,IAOAf,GAAA,WACA,IACAx4D,EACAvyC,EACA+rG,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAA,IAAApB,GASAD,GAAAhnG,UAAA6hC,KAAA3hC,KAAAmB,MACAmtC,EAAAntC,KAaAA,KAAAhM,KAAA,SAAAw1C,GACA,UAAAA,EAAAjsC,OAGA3C,EAAA4uC,EAAA5uC,QACA+rG,EAAAn9D,EAAAqC,IACA+6D,EAAAp9D,EAAAoC,IAEAo7D,EAAAhzG,KAAAw1C,KAWAw9D,EAAAxrD,GAAA,gBAAAtpD,GACA,IAAA49C,GACAl1C,UACAixC,IAAA86D,EACA/6D,IAAAg7D,EACA10G,QAGA,UAAAA,EAAA,IACA,OACA49C,EAAAgoD,YAAA,4CACA,MACA,OACAhoD,EAAAgoD,YAAA,WACAhoD,EAAAwpD,YAAAuN,EAAA30G,EAAAe,SAAA,IACA,MACA,OACA68C,EAAAgoD,YAAA,yBACAhoD,EAAAwpD,YAAAuN,EAAA30G,EAAAe,SAAA,IACA68C,EAAA98C,OAAA8zG,EAAAh3D,EAAAwpD,aACA,MACA,OACAxpD,EAAAgoD,YAAA,yBACA,MACA,OACAhoD,EAAAgoD,YAAA,6BAOA3qD,EAAAoB,QAAA,OAAAuB,KAEAk3D,EAAAxrD,GAAA,kBACArO,EAAAoB,QAAA,UAGAvuC,KAAA4sC,MAAA,WACAo6D,EAAAp6D,SAYAm6D,EAAA,SAAA5+D,EAAA8+D,GACA,IAEAjpC,EAFAkpC,EAAA,EACAC,EAAA,EAIA,IAAAnpC,EAAA,EAAmBA,EAAA71B,EAAW61B,IAC9B,IAAAmpC,IAEAA,GAAAD,EADAD,EAAAn+D,gBACA,UAGAo+D,EAAA,IAAAC,EAAAD,EAAAC,GAYAN,EAAA,SAAA30G,GAQA,IAPA,IAGA66C,EACAisD,EAJA/jG,EAAA/C,EAAAK,WACA0mG,KACA3lG,EAAA,EAKAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACA2lG,EAAAjlG,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2lG,EAAAhkG,OACA,OAAA/C,EAIA66C,EAAA93C,EAAAgkG,EAAAhkG,OACA+jG,EAAA,IAAA/kG,WAAA84C,GACA,IAAAmsD,EAAA,EAEA,IAAA5lG,EAAA,EAAmBA,EAAAy5C,EAAemsD,IAAA5lG,IAClC4lG,IAAAD,EAAA,KAEAC,IAEAD,EAAAxuD,SAEAuuD,EAAA1lG,GAAApB,EAAAgnG,GAGA,OAAAF,GAYA8N,EAAA,SAAA50G,GACA,IAKA+0G,EACAjkE,EACAC,EACAvvC,EACA0zG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAr0G,EAlBAs0G,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAuBA,GANAhlE,GADAikE,EAAA,IAAAnB,GAAA5zG,IACA82C,mBACAt1C,EAAAuzG,EAAAj+D,mBACA/F,EAAAgkE,EAAAj+D,mBACAi+D,EAAAv+D,wBAGAm9D,GAAA7iE,KAEA,KADAokE,EAAAH,EAAAr+D,0BAEAq+D,EAAA/+D,SAAA,GAEA++D,EAAAv+D,wBACAu+D,EAAAv+D,wBACAu+D,EAAA/+D,SAAA,GACA++D,EAAAl+D,eAGA,IADA2+D,EAAA,IAAAN,EAAA,KACA9zG,EAAA,EAAuBA,EAAAo0G,EAAsBp0G,IAC7C2zG,EAAAl+D,eAGAg+D,EADAzzG,EAAA,EACA,GAEA,GAFA2zG,GAYA,GAHAA,EAAAv+D,wBAGA,KAFA2+D,EAAAJ,EAAAr+D,yBAGAq+D,EAAAr+D,6BACS,OAAAy+D,EAKT,IAJAJ,EAAA/+D,SAAA,GACA++D,EAAAt+D,gBACAs+D,EAAAt+D,gBACA2+D,EAAAL,EAAAr+D,wBACAt1C,EAAA,EAAqBA,EAAAg0G,EAAoCh0G,IACzD2zG,EAAAt+D,gBAuBA,GAnBAs+D,EAAAv+D,wBACAu+D,EAAA/+D,SAAA,GAEAq/D,EAAAN,EAAAr+D,wBACA4+D,EAAAP,EAAAr+D,wBAGA,KADA6+D,EAAAR,EAAA5+D,SAAA,KAEA4+D,EAAA/+D,SAAA,GAGA++D,EAAA/+D,SAAA,GACA++D,EAAAl+D,gBAEA6+D,EAAAX,EAAAr+D,wBACAi/D,EAAAZ,EAAAr+D,wBACAk/D,EAAAb,EAAAr+D,wBACAm/D,EAAAd,EAAAr+D,yBAEAq+D,EAAAl+D,eAEAk+D,EAAAl+D,cAAA,CAGA,OADAk+D,EAAAj+D,oBAEA,OACA2+D,GAAA,KAAkC,MAClC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,OACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,OAAoC,MACpC,QACAA,GAAA,QAAqC,MACrC,QACAA,GAAA,KAAkC,MAClC,QACAA,GAAA,KAAkC,MAClC,QACAA,GAAA,KAAkC,MAClC,SAEAA,GAAAV,EAAAj+D,oBAAA,EAAAi+D,EAAAj+D,mBAAAi+D,EAAAj+D,oBAAA,EAAAi+D,EAAAj+D,oBAIA2+D,IACAK,EAAAL,EAAA,GAAAA,EAAA,IAIA,OACA3kE,aACAC,WACAvvC,uBACAhB,MAAA+H,KAAAwtG,MAAA,IAAAV,EAAA,KAAAK,EAAA,EAAAC,GAAAG,GACAr1G,QAAA,EAAA80G,IAAAD,EAAA,QAAAM,EAAA,EAAAC,MAIAppG,UAAA,IAAA+wC,EAEA,IAMAw4D,GANA54D,IACA64D,WAAAxC,GACAyC,cAAAxC,KAUAsC,GAAA,WACA,IAAA55D,EAAA,IAAAr6C,WACAoX,EAAA,EAEA68F,GAAAvpG,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAqoG,aAAA,SAAAj9D,GACA//B,EAAA+/B,GAGAprC,KAAAurC,gBAAA,SAAA+8D,EAAAh9D,GACA,IAAAi9D,EAAAD,EAAAh9D,EAAA,OAAAg9D,EAAAh9D,EAAA,OAAAg9D,EAAAh9D,EAAA,MAAAg9D,EAAAh9D,EAAA,GAIA,OAFA,GADAg9D,EAAAh9D,EAAA,KACA,EAGAi9D,EAAA,GAEAA,EAAA,IAGAvoG,KAAAyrC,cAAA,SAAA68D,EAAAh9D,GACA,IAAAk9D,GAAA,IAAAF,EAAAh9D,EAAA,OACAm9D,EAAAH,EAAAh9D,EAAA,MAGA,OAFA,KAAAg9D,EAAAh9D,EAAA,GAEAm9D,EAAAD,GAGAxoG,KAAAhM,KAAA,SAAA0K,GACA,IAEAgqG,EACAhE,EACAl7D,EACAm/D,EALAt9D,EAAA,EACAC,EAAA,EAiBA,IATAgD,EAAAr5C,QACA0zG,EAAAr6D,EAAAr5C,QACAq5C,EAAA,IAAAr6C,WAAAyK,EAAAnM,WAAAo2G,IACA54F,IAAAu+B,EAAAr7C,SAAA,EAAA01G,IACAr6D,EAAAv+B,IAAArR,EAAAiqG,IAEAr6D,EAAA5vC,EAGA4vC,EAAAr5C,OAAAq2C,GAAA,GACA,GAAAgD,EAAAhD,KAAA,IAAA/I,WAAA,IAAA+L,EAAAhD,EAAA,SAAA/I,WAAA,IAAA+L,EAAAhD,EAAA,SAAA/I,WAAA,GAuBW,MAAA+L,EAAAhD,IAAA,UAAAgD,EAAAhD,EAAA,KAIX,GAAAgD,EAAAr5C,OAAAq2C,EAAA,EACA,MAOA,IAJAD,EAAArrC,KAAAyrC,cAAA6C,EAAAhD,IAIAgD,EAAAr5C,OACA,MAGAu0C,GACAjsC,KAAA,QACArL,KAAAo8C,EAAAr7C,SAAAq4C,IAAAD,GACAQ,IAAAxgC,EACAugC,IAAAvgC,GAEArL,KAAAuuC,QAAA,OAAA/E,GACA8B,GAAAD,OAGAC,QAjDA,CAIA,GAAAgD,EAAAr5C,OAAAq2C,EAAA,GACA,MAQA,IAJAD,EAAArrC,KAAAurC,gBAAA+C,EAAAhD,IAIAgD,EAAAr5C,OACA,MAEAyvG,GACAnnG,KAAA,iBACArL,KAAAo8C,EAAAr7C,SAAAq4C,IAAAD,IAEArrC,KAAAuuC,QAAA,OAAAm2D,GACAp5D,GAAAD,EA8BAq9D,EAAAp6D,EAAAr5C,OAAAq2C,EAGAgD,EADAo6D,EAAA,EACAp6D,EAAAr7C,SAAAq4C,GAEA,IAAAr3C,cAKA0K,UAAA,IAAA+wC,EAEA,IAYAk5D,GA8BAC,GACAC,GACAC,GACAC,GA+CAC,GAAAC,GAAAC,GAAAC,GAGAC,GAAAC,GAAAC,GA/FAlgE,GAAA6+D,GAEAsB,IAAA,mBACAC,IAAA,2CACAC,GAAA,SAAAvhE,GAEA,IADA,IAAAhnC,KACAgnC,KACAhnC,EAAAnN,KAAA,GAEA,OAAAmN,GAaAwoG,IACAC,OAAAJ,IAAA,QAAAE,GAAA,WACAG,OAAAL,IAAA,KAAAE,GAAA,WACAI,OAAAN,IAAA,SAAAE,GAAA,WACAK,OAAAP,IAAA,SAAAE,GAAA,kBAAAA,GAAA,WACAM,OAAAR,IAAA,SAAAE,GAAA,kBAAAA,GAAA,WACAO,OAAAT,IAAA,SAAAE,GAAA,cAAAA,GAAA,YACAQ,OAAAV,IAAA,SAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,YACAS,OAAAX,IAAA,SAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,eAAAA,GAAA,cACAU,OAAAX,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,WACAW,OAAAZ,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,YACAY,MAAAb,GAAAC,GAAA,gBAAAA,GAAA,UAGAa,IAxBA3B,GAwBAe,GAvBAvrG,OAAAC,KAAAuqG,IAAAnoE,OAAA,SAAAyG,EAAA3oC,GAIA,OAHA2oC,EAAA3oC,GAAA,IAAAtK,WAAA20G,GAAArqG,GAAAkiC,OAAA,SAAAuqD,EAAAtkB,GACA,OAAAskB,EAAA/kF,OAAAygE,SAEAx/B,QAwDAsjE,IAxBA3B,GAAA,SAAAx3G,GACA,OAZA,IAYAA,GAGAy3G,GAAA,SAAAz3G,EAAA85C,GACA,OAAA95C,EAAA85C,GAGA49D,GAAA,SAAA39D,GACA,OAAAA,EApBA,KAuBA49D,GAAA,SAAA59D,EAAAD,GACA,OAAAC,EAAAD,GAGA,SAAAC,EAAAD,GACA,OAAA09D,GAAAG,GAAA59D,EAAAD,MAOAq/D,GAJA,SAAAp/D,EAAAD,GACA,OAAA29D,GAAAC,GAAA39D,GAAAD,IAYAg9D,GAAA74D,GAAA64D,WAGAsC,IAAA,qFAEAC,IAAA,iEAUArB,GAAA,SAAAn3G,GACA,OAAAA,EAAA,SAAAqwC,WAAA,IAAArwC,EAAA,SAAAqwC,WAAA,IAAArwC,EAAA,SAAAqwC,WAAA,IASA+mE,GAAA,SAAAnoG,EAAA+B,GACA,IAAA5P,EAEA,GAAA6N,EAAAlM,SAAAiO,EAAAjO,OACA,SAIA,IAAA3B,EAAA,EAAiBA,EAAA6N,EAAAlM,OAAc3B,IAC/B,GAAA6N,EAAA7N,KAAA4P,EAAA5P,GACA,SAIA,UAMAi2G,GAAA,SAAAjiE,GACA,IAAAh0C,EAEAq3G,EAAA,EAGA,IAAAr3G,EAAA,EAAiBA,EAAAg0C,EAAAryC,OAAkB3B,IAEnCq3G,GADArjE,EAAAh0C,GACApB,KAAAK,WAGA,OAAAo4G,IAYAzB,GAAA,SAAAlhF,EAAA9F,GACA,IAAA0oF,KACA1zG,EAAA,EACA2zG,EAAA,EACAC,EAAA,EACAC,EAAAjqE,IAEA5e,QAEAgnF,GAAAvqG,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAhM,KAAA,SAAA9B,GACAkmG,GAAApwE,EAAA91B,GAEA81B,GACAyiF,GAAAtkG,QAAA,SAAAkvC,GACArtB,EAAAqtB,GAAAnjD,EAAAmjD,KAKAu1D,EAAA52G,KAAA9B,IAGA8N,KAAAgrG,eAAA,SAAAC,GACAJ,EAAAI,EAAAjjF,EAAAkoB,kBAAA11C,qBAGAwF,KAAAkrG,4BAAA,SAAA1wG,GACAuwG,EAAAvwG,GAGAwF,KAAAmrG,oBAAA,SAAA//D,GACA0/D,EAAA1/D,GAGAprC,KAAA4sC,MAAA,WACA,IAAA0nD,EAAA78F,EAAApB,EAAAX,EAGA,IAAAk1G,EAAA31G,QAKAq/F,EAAAt0F,KAAAorG,6BAAAR,GACA5iF,EAAAxtB,oBAAA49F,GAAApwE,EAAA9F,EAAAu2E,wBAEAz4F,KAAAqrG,mBAAArjF,EAAAssE,GAIAtsE,EAAA3vB,QAAA2H,KAAAsrG,qBAAAhX,GAGAj+F,EAAA8gG,EAAA9gG,KAAA2J,KAAAurG,sBAAAjX,IAEAsW,KAEAnzG,EAAA0/F,EAAA1/F,KAAAP,GAAA8wB,IACAtyB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAGA2E,IAEAxB,EAAAqa,IAAAtY,GACA/B,EAAAqa,IAAA1Z,EAAAoB,EAAAlF,YAEA6lG,GAAApwE,GAEAhoB,KAAAuuC,QAAA,QAA8BvmB,QAAAtyB,UAC9BsK,KAAAuuC,QAAA,8BA9BAvuC,KAAAuuC,QAAA,8BAmCAvuC,KAAAqrG,mBAAA,SAAArjF,EAAAssE,GACA,IAAAkX,EACAC,EAIAC,EACAp4G,EAJAq4G,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAAvX,EAAAr/F,SAIAu2G,EAAAhB,GAAAxiF,EAAAxtB,oBAAAwtB,EAAAzwB,YAEAk0G,EAAAhxG,KAAAwtG,KAxJA,KAwJAjgF,EAAAzwB,WAAA,OAEAuzG,GAAAC,IAEAY,EAAAH,EAAA/wG,KAAA6+C,IAAAwxD,EAAAC,GAGAc,GADAD,EAAAnxG,KAAA+oC,MAAAmoE,EAAAF,IACAA,KAKAG,EAAA,GAAAC,EAAAC,OAAA,CAYA,KARAJ,EAAAnB,GAAAviF,EAAAzwB,eAKAm0G,EAAApX,EAAA,GAAApiG,MAGAoB,EAAA,EAAmBA,EAAAs4G,EAAyBt4G,IAC5CghG,EAAAx4C,OAAAxoD,EAAA,GACApB,KAAAw5G,IAIA1jF,EAAAxtB,qBAAAC,KAAA+oC,MAAAgnE,GAAAqB,EAAA7jF,EAAAzwB,eAOAyI,KAAAorG,6BAAA,SAAAR,GACA,OAAA5iF,EAAAqwE,eAAAwS,EACAD,GAIA5iF,EAAAqwE,cAAAv3D,IAEA8pE,EAAAtsG,OAAA,SAAAisC,GAEA,OAAAA,EAAAqB,KAAAi/D,IACA7iF,EAAAqwE,cAAA59F,KAAAwgC,IAAAjT,EAAAqwE,cAAA9tD,EAAAqB,KACA5jB,EAAAuwE,cAAAvwE,EAAAqwE,eACA,OAQAr4F,KAAAsrG,qBAAA,SAAAhX,GACA,IAAAhhG,EACAi3C,EACAlyC,KAEA,IAAA/E,EAAA,EAAmBA,EAAAghG,EAAAr/F,OAAmB3B,IACtCi3C,EAAA+pD,EAAAhhG,GACA+E,EAAArE,MACAgJ,KAAAutC,EAAAr4C,KAAAK,WACAwE,SAAA,OAGA,OAAAsB,GAIA2H,KAAAurG,sBAAA,SAAAjX,GACA,IAAAhhG,EACAi3C,EACAztC,EAAA,EACA5K,EAAA,IAAA+B,WAAAs1G,GAAAjV,IAEA,IAAAhhG,EAAA,EAAmBA,EAAAghG,EAAAr/F,OAAmB3B,IACtCi3C,EAAA+pD,EAAAhhG,GAEApB,EAAA6d,IAAAw6B,EAAAr4C,KAAA4K,GACAA,GAAAytC,EAAAr4C,KAAAK,WAEA,OAAAL,KAIAyM,UAAA,IAAA+wC,GAaAu5D,GAAA,SAAAjhF,EAAA9F,GACA,IAGAlvB,EACAc,EAJAoD,EAAA,EACA0gG,KACAmU,KAIA7pF,QAEA+mF,GAAAtqG,UAAA6hC,KAAA3hC,KAAAmB,aAEAgoB,EAAAgkF,OAEAhsG,KAAAisG,aAUAjsG,KAAAhM,KAAA,SAAAk4G,GACA9T,GAAApwE,EAAAkkF,GAGA,2BAAAA,EAAApU,aAAA9kG,IACAA,EAAAk5G,EAAAl5G,OACAg1B,EAAAn0B,KAAAq4G,EAAAh6G,MAEAw4G,GAAAvkG,QAAA,SAAAkvC,GACArtB,EAAAqtB,GAAAriD,EAAAqiD,IACWr1C,OAGX,2BAAAksG,EAAApU,aAAAhkG,IACAA,EAAAo4G,EAAAh6G,KACA81B,EAAAl0B,KAAAo4G,EAAAh6G,OAIA0lG,EAAA5jG,KAAAk4G,IAOAlsG,KAAA4sC,MAAA,WAKA,IAJA,IAAA0nD,EAAA6X,EAAAnU,EAAAvgG,EAAApB,EAAAX,EAIAkiG,EAAA3iG,QACA,+BAAA2iG,EAAA,GAAAE,aAGAF,EAAAntD,QAIA,OAAAmtD,EAAA3iG,OAGA,OAFA+K,KAAAosG,oBACApsG,KAAAuuC,QAAA,6BAgDA,GAzCA+lD,EAAAqD,EAAAC,IACAI,EAAAL,EAAArD,IAoBA,MAAAoD,YAEAyU,EAAAnsG,KAAAqsG,iBAAAzU,EAAA,GAAA5vE,KAGAgwE,EAAArlD,QAAAw5D,GAGAnU,EAAAzlG,YAAA45G,EAAA55G,WACAylG,EAAAC,UAAAkU,EAAAlU,SACAD,EAAAnsD,IAAAsgE,EAAAtgE,IACAmsD,EAAApsD,IAAAugE,EAAAvgE,IACAosD,EAAAjhG,UAAAo1G,EAAAp1G,UAGAihG,EAAAL,EAAAK,IAKA+T,EAAA92G,OAAA,CACA,IAAAq3G,EAQA,KALAA,EADApqF,EAAAqqF,eACAvsG,KAAAwsG,gBAAAxU,GAEAh4F,KAAAysG,kBAAAzU,IAoBA,OAfAh4F,KAAAisG,UAAAt5D,SACA+5D,IAAA1U,EAAAvtF,MACA3W,IAAAk0B,EAAAl0B,IACAD,IAAAm0B,EAAAn0B,MAIAmM,KAAAisG,UAAAh3G,OAAAwF,KAAAwgC,IAAA,EAAAj7B,KAAAisG,UAAAh3G,QAGA2iG,KAGA53F,KAAAosG,oBACApsG,KAAAuuC,QAAA,6BAMA6pD,GAAApwE,GAEAgwE,EAAAsU,EAGAlU,GAAApwE,EAAAgwE,GAIAhwE,EAAA3vB,QAAAs/F,GAAAK,GAGA3hG,EAAA8gG,EAAA9gG,KAAAshG,GAAAK,IAEAhwE,EAAAxtB,oBAAA49F,GAAApwE,EAAA9F,EAAAu2E,wBAEAz4F,KAAAuuC,QAAA,oBAAAypD,EAAA95F,IAAA,SAAAwuG,GACA,OACA7gE,IAAA6gE,EAAA7gE,IACAD,IAAA8gE,EAAA9gE,IACAr5C,WAAAm6G,EAAAn6G,eAKAyN,KAAAisG,UAAAt5D,SACA+5D,IAAA1U,EAAAvtF,MACA3W,IAAAk0B,EAAAl0B,IACAD,IAAAm0B,EAAAn0B,MAIAmM,KAAAisG,UAAAh3G,OAAAwF,KAAAwgC,IAAA,EAAAj7B,KAAAisG,UAAAh3G,QAGA2iG,KAEA53F,KAAAuuC,QAAA,sBAAAvmB,EAAAxtB,qBACAwF,KAAAuuC,QAAA,oBAAAvmB,EAAAkoB,mBAEAz4C,EAAA0/F,EAAA1/F,KAAAP,GAAA8wB,IAIAtyB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAGA2E,IAEAxB,EAAAqa,IAAAtY,GACA/B,EAAAqa,IAAA1Z,EAAAoB,EAAAlF,YAEAyN,KAAAuuC,QAAA,QAA8BvmB,QAAAtyB,UAE9BsK,KAAAosG,eAGApsG,KAAAuuC,QAAA,8BAGAvuC,KAAAosG,aAAA,WACAhU,GAAApwE,GAIAh1B,OAAA4wC,EACA9vC,OAAA8vC,GAKA5jC,KAAAqsG,iBAAA,SAAAH,GACA,IASAS,EACAC,EACA7U,EACA8U,EACAv5G,EALAw5G,EAAAhsE,IAQA,IAAAxtC,EAAA,EAAmBA,EAAA0M,KAAAisG,UAAAh3G,OAA2B3B,IAE9CykG,GADA8U,EAAA7sG,KAAAisG,UAAA34G,IACAo5G,IAGA1kF,EAAAl0B,KAAAw1G,GAAAthF,EAAAl0B,IAAA,GAAA+4G,EAAA/4G,IAAA,KAAAk0B,EAAAn0B,KAAAy1G,GAAAthF,EAAAn0B,IAAA,GAAAg5G,EAAAh5G,IAAA,MAKAkkG,EAAAnsD,IAAA5jB,EAAAkoB,kBAAAtE,MAKA+gE,EAAAT,EAAAtgE,IAAAmsD,EAAAnsD,IAAAmsD,EAAAhhG,YA3BA,KA+BA41G,GAnCA,QAuCAC,GAAAE,EAAAH,KACAC,EAAAC,EACAC,EAAAH,IAKA,OAAAC,EACAA,EAAAF,IAEA,MAKA1sG,KAAAysG,kBAAA,SAAAzU,GACA,IAAA+U,EAAAC,EAAAC,EAAAP,EAAAn6G,EAAA0lG,EAAAlhG,EAAAu1G,EAOA,IALA/5G,EAAAylG,EAAAzlG,WACA0lG,EAAAD,EAAAC,SACAlhG,EAAAihG,EAAAjhG,SACAg2G,EAAAC,EAAA,EAEAD,EAAAhB,EAAA92G,QAAA+3G,EAAAhV,EAAA/iG,SACAg4G,EAAAlB,EAAAgB,GACAL,EAAA1U,EAAAgV,GAEAC,EAAAphE,MAAA6gE,EAAA7gE,MAIA6gE,EAAA7gE,IAAAohE,EAAAphE,IAGAkhE,KAMAC,IACAz6G,GAAAm6G,EAAAn6G,WACA0lG,GAAAyU,EAAAzU,SACAlhG,GAAA21G,EAAA31G,UAGA,WAAAi2G,EAEAhV,EAGAgV,IAAAhV,EAAA/iG,OAEA,OAGAq3G,EAAAtU,EAAAp5F,MAAAouG,IACAz6G,aACA+5G,EAAAv1G,WACAu1G,EAAArU,WACAqU,EAAAzgE,IAAAygE,EAAA,GAAAzgE,IACAygE,EAAA1gE,IAAA0gE,EAAA,GAAA1gE,IAEA0gE,IAKAtsG,KAAAwsG,gBAAA,SAAAxU,GACA,IAAA+U,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAC,EAmCAC,EA5BA,IALAL,EAAAhB,EAAA92G,OAAA,EACA+3G,EAAAhV,EAAA/iG,OAAA,EACAi4G,EAAA,KACAC,GAAA,EAEAJ,GAAA,GAAAC,GAAA,IAIA,GAHAC,EAAAlB,EAAAgB,GACAL,EAAA1U,EAAAgV,GAEAC,EAAAphE,MAAA6gE,EAAA7gE,IAAA,CACAshE,GAAA,EACA,MAGAF,EAAAphE,IAAA6gE,EAAA7gE,IACAkhE,KAIAA,IAAAhB,EAAA92G,OAAA,IAIAi4G,EAAAF,GAGAA,KAGA,IAAAG,GAAA,OAAAD,EACA,YAWA,QALAE,EADAD,EACAH,EAEAE,GAIA,OAAAlV,EAGA,IAAAsU,EAAAtU,EAAAp5F,MAAAwuG,GACAn8C,EAAAq7C,EAAA7rE,OAAA,SAAA4sE,EAAAX,GAIA,OAHAW,EAAA96G,YAAAm6G,EAAAn6G,WACA86G,EAAAt2G,UAAA21G,EAAA31G,SACAs2G,EAAApV,UAAAyU,EAAAzU,SACAoV,IACY96G,WAAA,EAAAwE,SAAA,EAAAkhG,SAAA,IAQZ,OANAqU,EAAA/5G,WAAA0+D,EAAA1+D,WACA+5G,EAAAv1G,SAAAk6D,EAAAl6D,SACAu1G,EAAArU,SAAAhnC,EAAAgnC,SACAqU,EAAAzgE,IAAAygE,EAAA,GAAAzgE,IACAygE,EAAA1gE,IAAA0gE,EAAA,GAAA1gE,IAEA0gE,GAGAtsG,KAAAstG,cAAA,SAAAC,GACAxB,EAAAwB,KAIA5uG,UAAA,IAAA+wC,GAOA05D,GAAA,SAAAlnF,EAAA6iF,GAIA/kG,KAAAwtG,eAAA,EACAxtG,KAAA+kG,sBAEA,IAAA7iF,EAAAurF,MACAztG,KAAA0tG,cAAAxrF,EAAAurF,MAEAztG,KAAA0tG,aAAA,EAGA1tG,KAAA2tG,iBACA3tG,KAAA4tG,WAAA,KACA5tG,KAAA6tG,gBACA7tG,KAAA8tG,mBACA9tG,KAAA+tG,mBACA/tG,KAAAguG,aAAA,EACAhuG,KAAAiuG,cAAA,EAEA7E,GAAAzqG,UAAA6hC,KAAA3hC,KAAAmB,MAGAA,KAAAhM,KAAA,SAAAk6G,GAGA,OAAAA,EAAA5rG,KACAtC,KAAA8tG,gBAAA95G,KAAAk6G,GAGAA,EAAA5Z,OACAt0F,KAAA+tG,gBAAA/5G,KAAAk6G,IAMAluG,KAAA2tG,cAAA35G,KAAAk6G,EAAAlmF,OACAhoB,KAAA6tG,aAAA75G,KAAAk6G,EAAAx4G,OACAsK,KAAAguG,cAAAE,EAAAx4G,MAAAnD,WAEA,UAAA27G,EAAAlmF,MAAAzqB,OACAyC,KAAA4tG,WAAAM,EAAAlmF,YAEA,UAAAkmF,EAAAlmF,MAAAzqB,OACAyC,KAAAmuG,WAAAD,EAAAlmF,YAKArpB,UAAA,IAAA+wC,EACA05D,GAAAzqG,UAAAiuC,MAAA,SAAA4qD,GACA,IAOAxD,EACAoa,EACAvqE,EAEAvwC,EAXAD,EAAA,EACAy8C,GACAwgB,YACA+9C,kBACAp9C,YACAhlB,SAKAqiE,EAAA,EAGA,GAAAtuG,KAAA2tG,cAAA14G,OAAA+K,KAAAwtG,eAAA,CACA,0BAAAhW,GAAA,uBAAAA,EAIA,OACS,GAAAx3F,KAAA0tG,YAGT,OACS,OAAA1tG,KAAA2tG,cAAA14G,OAaT,OANA+K,KAAAiuG,qBAEAjuG,KAAAiuG,eAAAjuG,KAAAwtG,iBACAxtG,KAAAuuC,QAAA,QACAvuC,KAAAiuG,cAAA,IAuCA,IAjCAjuG,KAAA4tG,YACAU,EAAAtuG,KAAA4tG,WAAA19D,kBAAArE,IACA6+D,GAAAvkG,QAAA,SAAAkvC,GACAvF,EAAA7D,KAAAoJ,GAAAr1C,KAAA4tG,WAAAv4D,IACSr1C,OACFA,KAAAmuG,aACPG,EAAAtuG,KAAAmuG,WAAAj+D,kBAAArE,IACA4+D,GAAAtkG,QAAA,SAAAkvC,GACAvF,EAAA7D,KAAAoJ,GAAAr1C,KAAAmuG,WAAA94D,IACSr1C,OAGT,IAAAA,KAAA2tG,cAAA14G,OACA66C,EAAAvyC,KAAAyC,KAAA2tG,cAAA,GAAApwG,KAEAuyC,EAAAvyC,KAAA,WAGAyC,KAAAiuG,eAAAjuG,KAAA2tG,cAAA14G,OAEA4uC,EAAAszD,EAAAtzD,YAAA7jC,KAAA2tG,eAGA79D,EAAAjM,YAAA,IAAA5vC,WAAA4vC,EAAAtxC,YAIAu9C,EAAAjM,YAAA9zB,IAAA8zB,GAGAiM,EAAA59C,KAAA,IAAA+B,WAAA+L,KAAAguG,cAGA16G,EAAA,EAAiBA,EAAA0M,KAAA6tG,aAAA54G,OAA8B3B,IAC/Cw8C,EAAA59C,KAAA6d,IAAA/P,KAAA6tG,aAAAv6G,GAAAD,GACAA,GAAA2M,KAAA6tG,aAAAv6G,GAAAf,WAKA,IAAAe,EAAA,EAAiBA,EAAA0M,KAAA8tG,gBAAA74G,OAAiC3B,KAClD0gG,EAAAh0F,KAAA8tG,gBAAAx6G,IACA6sC,UAAA6zD,EAAAuO,SAAA+L,EACAta,EAAA7zD,WAAA,IACA6zD,EAAA/pC,QAAA+pC,EAAAwO,OAAA8L,EACAta,EAAA/pC,SAAA,IACAna,EAAAu+D,eAAAra,EAAAtkD,SAAA,EACAI,EAAAwgB,SAAAt8D,KAAAggG,GAKA,IAAA1gG,EAAA,EAAiBA,EAAA0M,KAAA+tG,gBAAA94G,OAAiC3B,KAClD86G,EAAApuG,KAAA+tG,gBAAAz6G,IACA+gG,QAAA+Z,EAAAviE,IAAAyiE,EACAF,EAAA/Z,SAAA,IACAvkD,EAAAmhB,SAAAj9D,KAAAo6G,GAIAt+D,EAAAmhB,SAAAwzC,aAAAzkG,KAAA+kG,eAAAN,aAGAzkG,KAAA2tG,cAAA14G,OAAA,EACA+K,KAAA4tG,WAAA,KACA5tG,KAAA6tG,aAAA54G,OAAA,EACA+K,KAAA8tG,gBAAA74G,OAAA,EACA+K,KAAAguG,aAAA,EACAhuG,KAAA+tG,gBAAA94G,OAAA,EAGA+K,KAAAuuC,QAAA,OAAAuB,GAGA9vC,KAAAiuG,eAAAjuG,KAAAwtG,iBACAxtG,KAAAuuC,QAAA,QACAvuC,KAAAiuG,cAAA,KASA9E,GAAA,SAAAjnF,GACA,IAEA0rF,EACAO,EAHAhhE,EAAAntC,KACAuuG,GAAA,EAIApF,GAAAxqG,UAAA6hC,KAAA3hC,KAAAmB,MAEAkiB,QACAliB,KAAAxF,oBAAA0nB,EAAA1nB,qBAAA,EACAwF,KAAAwuG,qBAEAxuG,KAAAyuG,iBAAA,WACA,IAAAC,KACA1uG,KAAAwuG,kBAAAE,EAEAA,EAAAnxG,KAAA,MACAmxG,EAAA3J,eAAA,IAAAI,GAAA30D,eAGAk+D,EAAAC,UAAA,IAAAtlE,GACAqlE,EAAAE,6BAAA,IAAAzJ,GAAAh3D,wBAAA,SACAugE,EAAAG,qCAAA,IAAA1J,GAAAh3D,wBAAA,kBACAugE,EAAAI,WAAA,IAAAv/D,GACAm/D,EAAAK,eAAA,IAAA3F,GAAAlnF,EAAAwsF,EAAA3J,gBACA2J,EAAAM,eAAAN,EAAAC,UAEAD,EAAAC,UAAArX,KAAAoX,EAAAE,8BAAAtX,KAAAoX,EAAAI,YACAJ,EAAAC,UAAArX,KAAAoX,EAAAG,sCAAAvX,KAAAoX,EAAA3J,gBAAAzN,KAAAoX,EAAAK,gBAEAL,EAAA3J,eAAAvpD,GAAA,qBAAAnR,GACAqkE,EAAAC,UAAAtG,aAAAh+D,EAAAh/B,aAGAqjG,EAAAC,UAAAnzD,GAAA,gBAAAtpD,GACA,mBAAAA,EAAAqL,MAAAmxG,EAAAO,qBACAd,MACAj+D,mBACA11C,oBAAA2yC,EAAA3yC,qBAEA21C,MAAA,OACA5yC,KAAA,SAGAmxG,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAA/F,GAAAiF,EAAAjsF,GAEAwsF,EAAAI,WAAAxX,KAAAoX,EAAAO,oBAAA3X,KAAAoX,EAAAK,mBAKAL,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,SAEA0uG,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,UAGAA,KAAAkvG,gBAAA,WACA,IAAAR,KACA1uG,KAAAwuG,kBAAAE,EAEAA,EAAAnxG,KAAA,KACAmxG,EAAA3J,eAAA,IAAAI,GAAA30D,eAGAk+D,EAAAS,aAAA,IAAAhK,GAAAr3D,sBACA4gE,EAAAU,YAAA,IAAAjK,GAAAp3D,qBACA2gE,EAAAW,iBAAA,IAAAlK,GAAAn3D,iBACA0gE,EAAAY,6BAAA,IAAAnK,GAAAh3D,wBAAA,SACAugE,EAAAE,6BAAA,IAAAzJ,GAAAh3D,wBAAA,SACAugE,EAAAG,qCAAA,IAAA1J,GAAAh3D,wBAAA,kBACAugE,EAAAI,WAAA,IAAAv/D,GACAm/D,EAAAa,WAAA,IAAApH,GACAuG,EAAArL,cAAA,IAAA8B,GAAAj3D,cACAwgE,EAAAK,eAAA,IAAA3F,GAAAlnF,EAAAwsF,EAAA3J,gBACA2J,EAAAM,eAAAN,EAAAS,aAGAT,EAAAS,aAAA7X,KAAAoX,EAAAU,aAAA9X,KAAAoX,EAAAW,kBAIAX,EAAAW,iBAAA/X,KAAAoX,EAAAY,8BAAAhY,KAAAoX,EAAAa,YACAb,EAAAW,iBAAA/X,KAAAoX,EAAAE,8BAAAtX,KAAAoX,EAAAI,YAEAJ,EAAAW,iBAAA/X,KAAAoX,EAAAG,sCAAAvX,KAAAoX,EAAA3J,gBAAAzN,KAAAoX,EAAAK,gBAGAL,EAAAa,WAAAjY,KAAAoX,EAAArL,eAAA/L,KAAAoX,EAAAK,gBAEAL,EAAAW,iBAAA7zD,GAAA,gBAAAtpD,GACA,IAAAoB,EAEA,gBAAApB,EAAAqL,KAAA,CAIA,IAHAjK,EAAApB,EAAA0wC,OAAA3tC,OAGA3B,KACAs6G,GAAA,UAAA17G,EAAA0wC,OAAAtvC,GAAAiK,KAGe4wG,GAAA,UAAAj8G,EAAA0wC,OAAAtvC,GAAAiK,QACf4wG,EAAAj8G,EAAA0wC,OAAAtvC,IACA48C,kBAAA11C,oBAAA2yC,EAAA3yC,sBAJAozG,EAAA17G,EAAA0wC,OAAAtvC,IACA48C,kBAAA11C,oBAAA2yC,EAAA3yC,oBAQAozG,IAAAc,EAAAc,qBACAd,EAAAK,eAAAvB,iBACAkB,EAAAc,mBAAA,IAAAvG,GAAA2E,EAAA1rF,GAEAwsF,EAAAc,mBAAAh0D,GAAA,6BAAAtL,GAIAi+D,IACAA,EAAAj+D,oBAKAw+D,EAAAO,mBAAAjE,eAAA96D,EAAAtE,QAIA8iE,EAAAc,mBAAAh0D,GAAA,oBAAArO,EAAAoB,QAAA/uB,KAAA2tB,EAAA,YAEAuhE,EAAAc,mBAAAh0D,GAAA,+BAAAhhD,GACA2zG,GACAO,EAAAO,mBAAA/D,4BAAA1wG,KAKAk0G,EAAAa,WAAAjY,KAAAoX,EAAAc,oBAAAlY,KAAAoX,EAAAK,iBAGAZ,IAAAO,EAAAO,qBAEAP,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAA/F,GAAAiF,EAAAjsF,GAGAwsF,EAAAI,WAAAxX,KAAAoX,EAAAO,oBAAA3X,KAAAoX,EAAAK,oBAMAL,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,SAEA0uG,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,UAIAA,KAAAyvG,uBAAA,SAAAj1G,GACA,IAAAk0G,EAAA1uG,KAAAwuG,kBAEAxuG,KAAAxF,sBACA2zG,IACAA,EAAAj+D,kBAAAtE,SAAAhI,EACAuqE,EAAAj+D,kBAAArE,SAAAjI,EACAw0D,GAAA+V,GACAA,EAAAj+D,kBAAA11C,sBACAk0G,EAAAE,8BACAF,EAAAE,6BAAAhL,iBAGAgK,IACAc,EAAAc,qBACAd,EAAAc,mBAAAvD,aACAyC,EAAAY,6BAAA1L,iBAEAgK,EAAA19D,kBAAAtE,SAAAhI,EACAgqE,EAAA19D,kBAAArE,SAAAjI,EACAw0D,GAAAwV,GACAc,EAAArL,cAAArrC,QACA41C,EAAA19D,kBAAA11C,uBAGAk0G,EAAAG,sCACAH,EAAAG,qCAAAjL,iBAIA5jG,KAAAmrG,oBAAA,SAAA//D,GACA+iE,GACAnuG,KAAAwuG,kBAAAS,mBAAA9D,oBAAA//D,IAIAprC,KAAAstG,cAAA,SAAAvB,GACA6B,GAAA5tG,KAAAwuG,kBAAAgB,oBACAxvG,KAAAwuG,kBAAAgB,mBAAAlC,cAAAvB,IAKA/rG,KAAAhM,KAAA,SAAA9B,GACA,GAAAq8G,EAAA,CACA,IAAAmB,EAAArG,GAAAn3G,GAEAw9G,GAAA,QAAA1vG,KAAAwuG,kBAAAjxG,KACAyC,KAAAyuG,mBACWiB,GAAA,OAAA1vG,KAAAwuG,kBAAAjxG,MACXyC,KAAAkvG,kBAEAX,GAAA,EAEAvuG,KAAAwuG,kBAAAQ,eAAAh7G,KAAA9B,IAIA8N,KAAA4sC,MAAA,WACA2hE,GAAA,EAEAvuG,KAAAwuG,kBAAAQ,eAAApiE,SAIA5sC,KAAA2vG,cAAA,WACA3vG,KAAAwuG,kBAAAnL,eACArjG,KAAAwuG,kBAAAnL,cAAArrC,WAIAr5D,UAAA,IAAA+wC,EAEA,IAQA1+C,GACA4+G,GATAC,IACAC,WAAA3G,GACA4G,mBAAA9G,GACA+G,mBAAA9G,GACAuB,oBACAC,qBAKAuF,GAAA9mE,EAAAj4C,UACAE,GAAA,SAAAC,GACA,WAAAC,KAAA,IAAAD,EAAA,aAEAE,GAAA,SAAAC,GACA,OACAC,WAAA,GAAAD,EAAA,QACAE,UAAA,EAAAF,EAAA,GACAG,cAAA,IAAAH,EAAA,QACAI,eAAA,GAAAJ,EAAA,QACAK,cAAA,GAAAL,EAAA,QACAM,gBAAA,EAAAN,EAAA,GACAO,oBAAAP,EAAA,MAAAA,EAAA,KA+CA0+G,IAIAj+G,KAAA,SAAAC,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAC,mBAAAL,EAAAM,UAAA,GACAC,MAAAP,EAAAM,UAAA,IACAE,OAAAR,EAAAM,UAAA,IACAG,gBAAAT,EAAAM,UAAA,IAAAN,EAAAM,UAAA,OACAI,eAAAV,EAAAM,UAAA,IAAAN,EAAAM,UAAA,OACAK,WAAAX,EAAAM,UAAA,IACAM,MAAAZ,EAAAM,UAAA,IACAO,OAAAhC,GAAAkB,EAAAe,SAAA,GAAAf,EAAAK,eAGAW,KAAA,SAAAhB,GACA,IAWAiB,EACAC,EACAC,EACAC,EAdAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAC,qBAAAtB,EAAA,GACAuB,qBAAAvB,EAAA,GACAwB,qBAAAxB,EAAA,GACAyB,mBAAAzB,EAAA,GACA0B,mBAAA,EAAA1B,EAAA,GACA2B,OACAC,QAEAC,EAAA,GAAA7B,EAAA,GAQA,IADAmB,EAAA,EACAC,EAAA,EAAmBA,EAAAS,EAAgCT,IACnDF,EAAAjB,EAAAM,UAAAY,GACAA,GAAA,EACAE,EAAAM,IAAAG,KAAA,IAAAC,WAAA/B,EAAAe,SAAAI,IAAAD,KACAC,GAAAD,EAKA,IAFAD,EAAAjB,EAAAmB,GACAA,IACAC,EAAA,EAAmBA,EAAAH,EAA+BG,IAClDF,EAAAjB,EAAAM,UAAAY,GACAA,GAAA,EACAE,EAAAO,IAAAE,KAAA,IAAAC,WAAA/B,EAAAe,SAAAI,IAAAD,KACAC,GAAAD,EAEA,OAAAG,GAEAW,KAAA,SAAAhC,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACA4B,aAAAhC,EAAAiC,UAAA,GACAC,WAAAlC,EAAAiC,UAAA,GACAE,WAAAnC,EAAAiC,UAAA,KAGAG,KAAA,SAAArC,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAwB,KAAAvC,EAAA,MAAAA,EAAA,GACAwC,eAAA,GAAAxC,EAAA,GACAyC,eACAC,wBAAA1C,EAAA,IACA2C,WAAA3C,EAAA,WACA4C,WAAA5C,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAmC,WAAAnC,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAoC,WAAApC,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACA6C,yBACAC,IAAA9C,EAAA,IACA+C,OAAA/C,EAAA,IACAgD,gBAAAhD,EAAA,WACAiD,wBAAA,EAAAjD,EAAA,QAAAA,EAAA,UACAkD,qBAAAlD,EAAA,eAKAmD,KAAA,SAAAnD,GAQA,IAPA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACA+B,WAAA26G,GAAA/9G,EAAAe,SAAA,MACAsC,aAAApD,EAAAiC,UAAA,GACAoB,qBAEAlC,EAAA,EACAA,EAAApB,EAAAK,YACAgB,EAAAiC,iBAAAxB,KAAAi8G,GAAA/9G,EAAAe,SAAAK,IAAA,KACAA,GAAA,EAEA,OAAAC,GAEAkC,KAAA,SAAAvD,GACA,OACAwD,MAAA1E,GAAAkB,KAGAyD,KAAA,SAAAzD,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2C,eAAA5E,GAAAkB,EAAAe,SAAA,MAGA4C,KAAA,SAAA3D,GACA,IACAqB,GACAiB,QAFA,IAAApC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YAEAuD,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA8C,YAAAk6G,GAAA/9G,EAAAe,SAAA,OACA+C,KAAA,IAEA1C,EAAA,EAGA,IAAAA,EAAA,GAAoBA,EAAApB,EAAAK,WAAqBe,IAAA,CACzC,OAAApB,EAAAoB,GAAA,CAEAA,IACA,MAEAC,EAAAyC,MAAAC,OAAAC,aAAAhE,EAAAoB,IAMA,OAFAC,EAAAyC,KAAAG,mBAAAC,OAAA7C,EAAAyC,OAEAzC,GAEA8C,KAAA,SAAAnE,GACA,OACAK,WAAAL,EAAAK,WACA+D,KArLA,SAAAC,GACA,IAEAjD,EACA2B,EAHAuB,EAAA,IAAApE,SAAAmE,EAAAlE,OAAAkE,EAAAjE,WAAAiE,EAAAhE,YACAgB,KAGA,IAAAD,EAAA,EAAiBA,EAAA,EAAAiD,EAAAtB,OAA0B3B,GAAA2B,EAK3C,GAJAA,EAAAuB,EAAApC,UAAAd,GACAA,GAAA,EAGA2B,GAAA,EACA1B,EAAAS,KAAA,uDAIA,UAAAuC,EAAAjD,IACA,OACAC,EAAAS,KAAA,yCACA,MACA,OACAT,EAAAS,KAAA,6CACA,MACA,OACAT,EAAAS,KAAA,YACA,MACA,OACAT,EAAAS,KAAA,0BACA,MACA,OACAT,EAAAS,KAAA,0BACA,MACA,OACAT,EAAAS,KAAA,8BACA,MACA,QACAT,EAAAS,KAAA,iBAAAuC,EAAAjD,GAAA,IAIA,OAAAC,EA8IAkD,CAAAvE,KAGAwE,KAAA,SAAAxE,GACA,IAEAyE,EAFAxE,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EAEAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA0D,SAAA,IA4BA,OA1BA,IAAApD,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAEAA,GAAA,EAGAqD,EAAAxE,EAAAM,UAAAa,GACAC,EAAAoD,UAAAV,OAAAC,aAAA,IAAAS,GAAA,KACApD,EAAAoD,UAAAV,OAAAC,aAAA,SAAAS,IAAA,IACApD,EAAAoD,UAAAV,OAAAC,aAAA,OAAAS,IAEApD,GAEAyD,KAAA,SAAA9E,GACA,OACAwD,MAAA1E,GAAAkB,KAGA+E,KAAA,SAAA/E,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAiE,eAAAhF,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,KAGAiF,KAAA,SAAAjF,GACA,OACAwD,MAAA1E,GAAAkB,KAMAkF,KAAA,SAAAlF,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GAEAf,mBAAAL,EAAAM,UAAA,GAEA4E,aAAAlF,EAAAM,UAAA,IACA6E,WAAAnF,EAAAM,UAAA,IAGA8E,WAAApF,EAAAM,UAAA,IAAAN,EAAAM,UAAA,WAQA,OAHAP,EAAAK,WAAA,KACAgB,EAAAiE,iBAAAxG,GAAAkB,EAAAe,SAAA,SAEAM,GAEAkE,KAAA,SAAAvF,GACA,OACAwD,MAAA1E,GAAAkB,KAGAwF,KAAA,SAAAxF,GACA,OACAwD,MAAA1E,GAAAkB,KAGAyF,KAAA,SAAAzF,GACA,OACAwD,MAAA1E,GAAAkB,KAGA0F,KAAA,SAAA1F,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EACAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,OAkCA,OA/BA,IAAAM,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAuD,UAAA3E,EAAAiC,UAAAd,GACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAEAA,GAAA,EAGAC,EAAAsE,KAAA1F,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAA,GAAA,EACAC,EAAAuE,OAAA3F,EAAA2D,SAAAxC,GAAAnB,EAAA2D,SAAAxC,EAAA,KACAA,GAAA,EACAA,GAAA,EACAA,GAAA,EACAC,EAAAwE,OAAA,IAAAC,YAAA9F,EAAAe,SAAAK,IAAA,KACAA,GAAA,GACAA,GAAA,GACAC,EAAA0E,YAAA9F,EAAAiC,UAAAd,GACAC,GAEA2E,KAAA,SAAAhG,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA4E,KAAA1F,EAAAiC,UAAA,GACA+D,aAAAhG,EAAAiC,UAAA,KAGAgE,KAAA,SAAAlG,GACA,IAKAoB,EALAC,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAoF,YAIA,IAAA/E,EAAA,EAAmBA,EAAApB,EAAAK,WAAqBe,IACxCC,EAAA8E,QAAArE,MACAtC,WAAA,GAAAQ,EAAAoB,KAAA,EACA3B,cAAA,GAAAO,EAAAoB,KAAA,EACA1B,cAAA,EAAAM,EAAAoB,KAGA,OAAAC,GAEA+E,KAAA,SAAApG,GACA,IAWAoB,EAXAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAsF,cACAC,YAAArG,EAAAiC,UAAA,GACA0C,UAAA3E,EAAAiC,UAAA,GACAqE,yBAAAtG,EAAAiC,UAAA,IACAsE,YAAAvG,EAAAiC,UAAA,KAEAuE,EAAAxG,EAAAM,UAAA,IAGA,IAAAa,EAAA,GAAoBqF,EAAgBrF,GAAA,GAAAqF,IACpCpF,EAAAgF,WAAAvE,MACA4E,eAAA,IAAA1G,EAAAoB,MAAA,EACAuF,eAAA,WAAA1G,EAAAiC,UAAAd,GACAwF,mBAAA3G,EAAAiC,UAAAd,EAAA,GACAyF,iBAAA,IAAA7G,EAAAoB,EAAA,IACA0F,SAAA,IAAA9G,EAAAoB,EAAA,QACA2F,aAAA,UAAA9G,EAAAiC,UAAAd,EAAA,KAIA,OAAAC,GAEA2F,KAAA,SAAAhH,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAkG,QAAAjH,EAAA,GAAAA,EAAA,SAGAkH,KAAA,SAAAlH,GACA,OACAwD,MAAA1E,GAAAkB,KAGAmH,KAAA,SAAAnH,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAqG,iBAEAC,EAAApH,EAAAiC,UAAA,GAEA,IAAAd,EAAA,EAAmBiG,EAAYjG,GAAA,EAAAiG,IAC/BhG,EAAA+F,aAAAtF,KAAA7B,EAAAiC,UAAAd,IAEA,OAAAC,GAEAiG,KAAA,SAAAtH,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgH,EAAApH,EAAAiC,UAAA,GACAb,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAwG,mBAGA,IAAAnG,EAAA,EAAmBiG,EAAYjG,GAAA,GAAAiG,IAC/BhG,EAAAkG,eAAAzF,MACA0F,WAAAvH,EAAAiC,UAAAd,GACAqG,gBAAAxH,EAAAiC,UAAAd,EAAA,GACAsG,uBAAAzH,EAAAiC,UAAAd,EAAA,KAGA,OAAAC,GAEAsG,KAAA,SAAA3H,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA6G,mBAAA9I,GAAAkB,EAAAe,SAAA,MAGA8G,KAAA,SAAA7H,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA+G,WAAA7H,EAAAiC,UAAA,GACA6F,YAGA,IAAA3G,EAAA,GAAoBA,EAAApB,EAAAK,WAAqBe,GAAA,EACzCC,EAAA0G,QAAAjG,KAAA7B,EAAAiC,UAAAd,IAEA,OAAAC,GAEA2G,KAAA,SAAAhI,GACA,IAOAoB,EAPAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAkH,kBAEAZ,EAAApH,EAAAiC,UAAA,GAGA,IAAAd,EAAA,EAAmBiG,EAAYjG,GAAA,EAAAiG,IAC/BhG,EAAA4G,cAAAnG,MACAoG,YAAAjI,EAAAiC,UAAAd,GACA+G,YAAAlI,EAAAiC,UAAAd,EAAA,KAGA,OAAAC,GAEA+G,KAAA,SAAApI,GACA,OAAAg+G,GAAA76G,KAAAnD,IAEAqI,KAAA,SAAArI,GACA,IAAAqB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAuH,oBAAAtI,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAMA,OAJA,IAAAqB,EAAAiB,UACAjB,EAAAiH,qBAAAC,KAAAC,IAAA,MACAnH,EAAAiH,qBAAAtI,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAEAqB,GAEAoH,KAAA,SAAAzI,GACA,IAaAoB,EAbAnB,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAgB,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2H,QAAAzI,EAAAiC,UAAA,IAEAyG,EAAA,EAAAtH,EAAA/B,MAAA,GACAsJ,EAAA,EAAAvH,EAAA/B,MAAA,GACAuJ,EAAA,EAAAxH,EAAA/B,MAAA,GACAwJ,EAAA,GAAAzH,EAAA/B,MAAA,GACAyJ,EAAA,GAAA1H,EAAA/B,MAAA,GACA0J,EAAA,MAAA3H,EAAA/B,MAAA,GACA2J,EAAA,OAAA5H,EAAA/B,MAAA,GA+BA,OA5BA8B,EAAA,EACAuH,IACAvH,GAAA,EAEAC,EAAA6H,eAAAjJ,EAAAiC,UAAA,IACAd,GAAA,GAEAwH,IACAvH,EAAAqG,uBAAAzH,EAAAiC,UAAAd,GACAA,GAAA,GAEAyH,IACAxH,EAAA8H,sBAAAlJ,EAAAiC,UAAAd,GACAA,GAAA,GAEA0H,IACAzH,EAAA+H,kBAAAnJ,EAAAiC,UAAAd,GACAA,GAAA,GAEA2H,IACA1H,EAAAgI,mBAAApJ,EAAAiC,UAAAd,IAEA4H,IACA3H,EAAA2H,iBAAA,IAEAL,GAAAM,IACA5H,EAAAiI,sBAAA,GAEAjI,GAEAkI,KAAA,SAAAvJ,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACAe,EAAA,EACAC,GACAiB,QAAArC,EAAA2D,SAAA,GACAtE,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,OAqCA,OAnCA,IAAAM,EAAAiB,SACAlB,GAAA,EACAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAqH,QAAAzI,EAAAiC,UAAAd,GACAA,GAAA,EACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,KAEAC,EAAAqD,aAAAxF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAsD,iBAAAzF,GAAAe,EAAAiC,UAAAd,IACAA,GAAA,EACAC,EAAAqH,QAAAzI,EAAAiC,UAAAd,GACAA,GAAA,EACAA,GAAA,EACAC,EAAAwD,SAAA5E,EAAAiC,UAAAd,IAEAA,GAAA,EACAA,GAAA,EACAC,EAAAmI,MAAAvJ,EAAAM,UAAAa,GACAA,GAAA,EACAC,EAAAoI,eAAAxJ,EAAAM,UAAAa,GACAA,GAAA,EAEAC,EAAAuE,OAAA3F,EAAA2D,SAAAxC,GAAAnB,EAAA2D,SAAAxC,EAAA,KACAA,GAAA,EACAA,GAAA,EACAC,EAAAwE,OAAA,IAAAC,YAAA9F,EAAAe,SAAAK,IAAA,KACAA,GAAA,GACAC,EAAAb,MAAAP,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAA,GAAA,EACAC,EAAAZ,OAAAR,EAAAM,UAAAa,GAAAnB,EAAAM,UAAAa,EAAA,MACAC,GAEAqI,KAAA,SAAA1J,GACA,OACAwD,MAAA1E,GAAAkB,KAGA2J,KAAA,SAAA3J,GACA,OACAwD,MAAA1E,GAAAkB,KAGA4J,KAAA,SAAA5J,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACA2H,QAAAzI,EAAAiC,UAAA,GACA2H,8BAAA5J,EAAAiC,UAAA,GACAiH,sBAAAlJ,EAAAiC,UAAA,IACAkH,kBAAAnJ,EAAAiC,UAAA,IACA4H,gBAAA,EAAA9J,EAAA,IACA+J,oBAAA,IAAA/J,EAAA,QACAgK,qBAAA,GAAAhK,EAAA,QACAiK,oBAAA,GAAAjK,EAAA,QACAkK,4BAAA,EAAAlK,EAAA,KACAmK,0BAAAlK,EAAAM,UAAA,MAGA6J,KAAA,SAAApK,GACA,IAmCAqK,EAnCAhJ,GACAiB,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAoF,YAEAlG,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YAIAiK,EAAA,EAAAjJ,EAAA/B,MAAA,GAIAiL,EAAA,EAAAlJ,EAAA/B,MAAA,GAIAkL,EAAA,EAAAnJ,EAAA/B,MAAA,GAIAmL,EAAA,EAAApJ,EAAA/B,MAAA,GAIAoL,EAAA,EAAArJ,EAAA/B,MAAA,GAIAqL,EAAA,EAAAtJ,EAAA/B,MAAA,GAIA4I,EAAAjI,EAAAiC,UAAA,GACAf,EAAA,EAiCA,IA9BAmJ,IAEAjJ,EAAAuJ,WAAA3K,EAAA4K,SAAA1J,GACAA,GAAA,GAKAoJ,GAAArC,IACAmC,GACA/K,MAAAD,GAAAW,EAAAe,SAAAI,IAAA,KAEAA,GAAA,EACAqJ,IACAH,EAAAxF,SAAA5E,EAAAiC,UAAAf,GACAA,GAAA,GAEAsJ,IACAJ,EAAAS,KAAA7K,EAAAiC,UAAAf,GACAA,GAAA,GAEAwJ,IAEAN,EAAAU,sBAAA9K,EAAAiC,UAAAf,GACAA,GAAA,GAEAE,EAAA8E,QAAArE,KAAAuI,GACAnC,KAGAA,KACAmC,KACAG,IACAH,EAAAxF,SAAA5E,EAAAiC,UAAAf,GACAA,GAAA,GAEAsJ,IACAJ,EAAAS,KAAA7K,EAAAiC,UAAAf,GACAA,GAAA,GAEAuJ,IACAL,EAAA/K,MAAAD,GAAAW,EAAAe,SAAAI,IAAA,IACAA,GAAA,GAEAwJ,IAEAN,EAAAU,sBAAA9K,EAAAiC,UAAAf,GACAA,GAAA,GAEAE,EAAA8E,QAAArE,KAAAuI,GAEA,OAAAhJ,GAEA2J,OAAA,SAAAhL,GACA,OACAsC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,QAGAkK,KAAA,SAAAjL,GACA,IAAAC,EAAA,IAAAC,SAAAF,EAAAG,OAAAH,EAAAI,WAAAJ,EAAAK,YACA,OACAiC,QAAAtC,EAAA,GACAV,MAAA,IAAAyC,WAAA/B,EAAAe,SAAA,MACAmK,aAAAjL,EAAAM,UAAA,GACA4K,QAAA,IAAAC,aAAAnL,EAAAM,UAAA,GAAAN,EAAAM,UAAA,GAAAN,EAAAM,UAAA,SA8GA09G,IACA5wG,QApGAvO,GAAA,SAAAkB,GAYA,IAXA,IAEAC,EACA6K,EACAO,EACAC,EACAC,EANAnK,EAAA,EACAC,KAQAmK,EAAA,IAAAC,YAAAzL,EAAA+C,QACA2I,EAAA,IAAA3J,WAAAyJ,GACAG,EAAA,EAAqBA,EAAA3L,EAAA+C,SAAiB4I,EACtCD,EAAAC,GAAA3L,EAAA2L,GAIA,IAFA1L,EAAA,IAAAC,SAAAsL,GAEApK,EAAApB,EAAAK,YAEAyK,EAAA7K,EAAAiC,UAAAd,GACAiK,EAAA0yG,GAAA/9G,EAAAe,SAAAK,EAAA,EAAAA,EAAA,IACAkK,EAAAR,EAAA,EAAA1J,EAAA0J,EAAA9K,EAAAK,YAGAkL,GAAAyyG,GAAA3yG,IAAA,SAAArL,GACA,OACAA,UAESA,EAAAe,SAAAK,EAAA,EAAAkK,KACTR,OACAS,EAAAF,OAGAhK,EAAAS,KAAAyJ,GACAnK,EAAAkK,EAEA,OAAAjK,GAiEAiM,QApDAowG,GAAA,SAAA9xG,EAAA/K,GACA,IAAAgL,EAKA,OAJAhL,KAAA,EACAgL,EAAA,IAAAC,MAAA,EAAAjL,EAAA,GAAAkL,KAAA,KAGAH,EAAAI,IAAA,SAAAT,EAAAU,GAGA,OAAAJ,EAAAN,EAAAF,KAAA,KAGAa,OAAAC,KAAAZ,GAAAa,OAAA,SAAAC,GACA,eAAAA,GAAA,UAAAA,IAGSL,IAAA,SAAAK,GACT,IAAAC,EAAAT,EAAA,KAAAQ,EAAA,KACAE,EAAAhB,EAAAc,GAGA,GAAAE,aAAAxK,YAAAwK,aAAAzG,YAAA,CACA,IAAA0G,EAAAV,MAAAW,UAAAC,MAAAC,KAAA,IAAA5K,WAAAwK,EAAApM,OAAAoM,EAAAnM,WAAAmM,EAAAlM,aAAA2L,IAAA,SAAAY,GACA,gBAAAA,EAAAC,SAAA,KAAAH,OAAA,KACaX,KAAA,IAAAe,MAAA,YACb,OAAAN,EAGA,IAAAA,EAAAzJ,OACAuJ,EAAA,IAAAE,EAAAT,KAAA,IAAAW,MAAA,OAEAJ,EAAA,MAAAE,EAAAR,IAAA,SAAAe,GACA,OAAAlB,EAAA,KAAAkB,IACahB,KAAA,WAAAF,EAAA,MAPbS,EAAA,KAWA,OAAAA,EAAAU,KAAAC,UAAAV,EAAA,QAAAW,MAAA,MAAAlB,IAAA,SAAAe,EAAAd,GACA,WAAAA,EACAc,EAEAlB,EAAA,KAAAkB,IACWhB,KAAA,QACFA,KAAA,OAGTR,EAAA/H,MAAA,KAAAk6G,GAAAnyG,EAAA/H,MAAA3C,EAAA,SACOkL,KAAA,OAMPwB,UAAAywG,GAAA31G,KACAmF,UAAAwwG,GAAAr6G,KACA8J,UAAAuwG,GAAAv1G,KACAiF,UAAAswG,GAAA5zG,MAGA8zG,GAAA1X,GACA2X,GAAAhN,GAAAn1D,cAYAoiE,GAAA,SAAAj9G,EAAAgF,GAGA,IAFA,IAAAk4G,EAAAl9G,EAEAC,EAAA,EAAqBA,EAAA+E,EAAApD,OAAoB3B,IAAA,CACzC,IAAAiJ,EAAAlE,EAAA/E,GAEA,GAAAi9G,EAAAh0G,EAAAS,KACA,OAAAT,EAGAg0G,GAAAh0G,EAAAS,KAGA,aA8HAwzG,GAAA,SAAA/jB,EAAAgkB,GAEA,IAAA9vE,EAAAwI,EAAAjJ,QAAAusD,GAAA,gBAGAikB,KACAC,KAuCA,OAzCAxnE,EAAAjJ,QAAAusD,GAAA,SAKAtmF,QAAA,SAAA9P,EAAA8H,GACA,IAAAyyG,EAAAjwE,EAAAxiC,GACAwyG,EAAA38G,MACAqC,OACAuF,KAAAg1G,MAIAD,EAAAxqG,QAAA,SAAA0qG,GACA,IAWAC,EAXAz6G,EAAAw6G,EAAAx6G,KACAuF,EAAAi1G,EAAAj1G,KACAjB,EAAAwuC,EAAAjJ,QAAAtkC,GAAA,SAEAm1G,EAAAZ,GAAAxwG,UAAAhF,EAAA,IACAC,EAAAm2G,EAAAn2G,QACAL,EAAA4uC,EAAAjJ,QAAAtkC,GAAA,SAEApB,EAAAD,EAAAtF,OAAA,EAAAk7G,GAAA1wG,UAAAlF,EAAA,IAAAC,oBAAA,EACAw2G,EAAA7nE,EAAAjJ,QAAAtkC,GAAA,SAKA60G,IAAA71G,GAAAo2G,EAAA/7G,OAAA,IAGA67G,EAhJA,SAAAv6G,EAAA8B,EAAAuC,GACA,IAEAq2G,EACA39G,EACA2B,EACAi8G,EALA16G,EAAA,IAAApE,SAAAmE,EAAAlE,OAAAkE,EAAAjE,WAAAiE,EAAAhE,YACAgB,KAMA,IAAAD,EAAA,EAAiBA,EAAA,EAAAiD,EAAAtB,OAA0B3B,GAAA2B,EAK3C,GAJAA,EAAAuB,EAAApC,UAAAd,GACAA,GAAA,IAGA2B,GAAA,GAIA,UAAAsB,EAAAjD,IACA,OACA,IAAApB,EAAAqE,EAAAtD,SAAAK,EAAA,EAAAA,EAAA,EAAA2B,GACAk8G,EAAAb,GAAAh9G,EAAA+E,GAEA44G,GACAnZ,YAAA,WACA96F,KAAA/H,EACA/C,OACAonG,YAAA8W,GAAAl+G,GACA0I,WAGAu2G,GACAF,EAAAplE,IAAAslE,EAAAtlE,IACAolE,EAAArlE,IAAAulE,EAAAvlE,IACAslE,EAAAC,IAIAF,EAAAplE,IAAAqlE,EAAArlE,IACAolE,EAAArlE,IAAAslE,EAAAtlE,KAGAr4C,EAAAS,KAAAi9G,GAOA,OAAA19G,EAgGA69G,CAAA/6G,EAhFA,SAAA26G,EAAAx2G,EAAAG,GACA,IAAAisG,EAAApsG,EACAa,EAAAV,EAAAU,uBAAA,EACAC,EAAAX,EAAAW,mBAAA,EACAV,EAAAD,EAAAC,QACAy2G,KA6BA,OA3BAL,EAAA7qG,QAAA,SAAA7J,GAIA,IACAjE,EADA83G,GAAAvwG,UAAAtD,GACAjE,QAEAA,EAAA8N,QAAA,SAAA5J,QACAqnC,IAAArnC,EAAAxF,WACAwF,EAAAxF,SAAAsE,QAEAuoC,IAAArnC,EAAAS,OACAT,EAAAS,KAAA1B,GAEAiB,EAAA3B,UACA2B,EAAAqvC,IAAAg7D,OACAhjE,IAAArnC,EAAAU,wBACAV,EAAAU,sBAAA,GAEAV,EAAAsvC,IAAA+6D,EAAArqG,EAAAU,sBAEA2pG,GAAArqG,EAAAxF,WAGAs6G,IAAAprG,OAAA5N,KAGAg5G,EA4CAC,CAAAN,EAAAx2G,EAAAu2G,GAEAn2G,GAEA81G,EAAA91G,KACA81G,EAAA91G,OAGA81G,EAAA91G,GAAA81G,EAAA91G,GAAAqL,OAAA6qG,MAIAJ,GAkOAtzC,IACAm0C,UAAApa,EACAhuD,QACA2mE,WAAAD,GAAAC,WACAE,mBAAAH,GAAAG,mBACAD,mBAAAF,GAAAE,mBACAyB,cAnMA,WACA,IACAC,EAGAC,EAEA92G,EAEA9D,EAEA66G,EAVAC,GAAA,EAgBA5xG,KAAA4xG,cAAA,WACA,OAAAA,GAOA5xG,KAAAwgC,KAAA,WACAixE,EAAA,IAAApB,GACAuB,GAAA,EAGAH,EAAAj2D,GAAA,gBAAA1L,GAEAA,EAAA3P,UAAA2P,EAAAyyD,SAAAzrG,EACAg5C,EAAAma,QAAAna,EAAA0yD,OAAA1rG,EAEA66G,EAAArhD,SAAAt8D,KAAA87C,GACA6hE,EAAAtD,eAAAv+D,EAAAJ,SAAA,KASA1vC,KAAA6xG,UAAA,SAAA7wE,EAAA8wE,GACA,QAAA9wE,GAAA,IAAAA,EAAA/rC,QAAA68G,GAAA,qBAAAA,EAAA,YAAAj+D,EAAAi+D,KAAA,IAAA1zG,OAAAC,KAAAyzG,GAAA78G,QAIA2F,IAAAomC,EAAA,IAAAlqC,IAAAg7G,EAAAl3G,KAaAoF,KAAAhO,MAAA,SAAAy6F,EAAAzrD,EAAA8wE,GACA,IAAAC,EAEA,IAAA/xG,KAAA4xG,gBACA,YAGS,IAAA5wE,IAAA8wE,EACT,YACS,GAAA9xG,KAAA6xG,UAAA7wE,EAAA8wE,GAGTl3G,EAAAomC,EAAA,GACAlqC,EAAAg7G,EAAAl3G,QAIS,IAAAA,IAAA9D,EAET,OADA46G,EAAA19G,KAAAy4F,GACA,KAIA,KAAAilB,EAAAz8G,OAAA,IACA,IAAA+8G,EAAAN,EAAAjnE,QAEAzqC,KAAAhO,MAAAggH,EAAAhxE,EAAA8wE,GAKA,eAFAC,EA9GA,SAAAtlB,EAAA7xF,EAAA9D,GAGA,OAAA8D,GAOAk2G,QAHAN,GAAA/jB,EAAA7xF,GAGAA,GACA9D,aAPA,KA0GAm7G,CAAAxlB,EAAA7xF,EAAA9D,KAEAi7G,EAAAjB,SAIA9wG,KAAAkyG,SAAAH,EAAAjB,SAEA9wG,KAAAyvC,cAEAkiE,GAPA,MAgBA3xG,KAAAkyG,SAAA,SAAA57G,GACA,IAAA0J,KAAA4xG,kBAAAt7G,GAAA,IAAAA,EAAArB,OACA,YAGAqB,EAAA6P,QAAA,SAAAgsG,GACAV,EAAAz9G,KAAAm+G,MAQAnyG,KAAAyvC,YAAA,WACA,IAAAzvC,KAAA4xG,gBACA,YAGAH,EAAA7kE,SAMA5sC,KAAAoyG,oBAAA,WACAT,EAAArhD,YACAqhD,EAAAtD,mBAOAruG,KAAAqyG,mBAAA,WACA,IAAAryG,KAAA4xG,gBACA,YAGAH,EAAAz5C,SAQAh4D,KAAAsyG,iBAAA,WACAtyG,KAAAoyG,sBACApyG,KAAAqyG,sBAMAryG,KAAAg4D,MAAA,WACA05C,KACA92G,EAAA,KACA9D,EAAA,KAEA66G,EAOA3xG,KAAAoyG,sBANAT,GACArhD,YAEA+9C,mBAMAruG,KAAAqyG,sBAGAryG,KAAAg4D,UAcAu6C,GAAA,SAAAx+D,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAu+D,GAAA,WACA,SAAAv+C,EAAA9pD,EAAArK,GACA,QAAAxM,EAAA,EAAuBA,EAAAwM,EAAA7K,OAAkB3B,IAAA,CACzC,IAAAmhF,EAAA30E,EAAAxM,GACAmhF,EAAAvkE,WAAAukE,EAAAvkE,aAAA,EACAukE,EAAAxkE,cAAA,EACA,UAAAwkE,MAAAngC,UAAA,GACAl2C,OAAA4R,eAAA7F,EAAAsqE,EAAAl2E,IAAAk2E,IAIA,gBAAAzgC,EAAA22C,EAAAC,GAGA,OAFAD,GAAA12B,EAAAjgB,EAAAr1C,UAAAgsF,GACAC,GAAA32B,EAAAjgB,EAAA42C,GACA52C,GAdA,GAmFAy+D,GAAA,WACA,SAAAA,EAAAtlE,EAAAjrB,GACAqwF,GAAAvyG,KAAAyyG,GAEAzyG,KAAAkiB,cACAliB,KAAAmtC,OACAntC,KAAAwgC,OAwFA,OAjFAgyE,GAAAC,IACAl0G,IAAA,OACAE,MAAA,WArEA,IAAA0uC,EAAA0iE,EAsEA7vG,KAAA6vG,YACA7vG,KAAA6vG,WAAA3uD,UAEAlhD,KAAA6vG,WAAA,IAAAzyC,GAAA0yC,WAAA9vG,KAAAkiB,SAzEAirB,EA0EAntC,KAAAmtC,MA1EA0iE,EA0EA7vG,KAAA6vG,YAzEAr0D,GAAA,gBAAAixC,GAKA,IAAAimB,EAAAjmB,EAAA5oD,YAEA4oD,EAAA5oD,aACA3xC,KAAAwgH,EAAArgH,OACAC,WAAAogH,EAAApgH,WACAC,WAAAmgH,EAAAngH,YAGA,IAAAogH,EAAAlmB,EAAAv6F,KAEAu6F,EAAAv6F,KAAAygH,EAAAtgH,OACA86C,EAAAopD,aACAqc,OAAA,OACAnmB,UACAn6F,WAAAqgH,EAAArgH,WACAC,WAAAogH,EAAApgH,aACSk6F,EAAAv6F,SAGT29G,EAAAxM,eACAwM,EAAAxM,cAAA7nD,GAAA,gBAAAw4C,GACA7mD,EAAAopD,aACAqc,OAAA,UACA1gH,KAAA8hG,MAKA6b,EAAAr0D,GAAA,gBAAAtpD,GACAi7C,EAAAopD,aAA0Bqc,OAAA,WAG1B/C,EAAAr0D,GAAA,mBAAAq3D,GACA1lE,EAAAopD,aACAqc,OAAA,UACAC,iBA4CAt0G,IAAA,OACAE,MAAA,SAAAvM,GAEA,IAAAu6F,EAAA,IAAAx4F,WAAA/B,SAAAI,WAAAJ,EAAAK,YAEAyN,KAAA6vG,WAAA77G,KAAAy4F,MASAluF,IAAA,QACAE,MAAA,WACAuB,KAAAwgC,UAYAjiC,IAAA,qBACAE,MAAA,SAAAvM,GACA,IAAAgiG,EAAAhiG,EAAAgiG,iBAAA,EAEAl0F,KAAA6vG,WAAAJ,uBAAAh1G,KAAAq+C,MAAA,IAAAo7C,OAGA31F,IAAA,sBACAE,MAAA,SAAAvM,GACA8N,KAAA6vG,WAAA1E,oBAAA1wG,KAAAwtG,KAAA,IAAA/1G,EAAA4gH,iBAWAv0G,IAAA,QACAE,MAAA,SAAAvM,GACA8N,KAAA6vG,WAAAjjE,WAGAruC,IAAA,gBACAE,MAAA,WACAuB,KAAA6vG,WAAAF,mBAGApxG,IAAA,gBACAE,MAAA,SAAAvM,GACA8N,KAAA6vG,WAAAvC,cAAAp7G,EAAA65G,gBAAAntG,aAGA6zG,EA9FA,GA4HA,IAnBA,SAAAtlE,GACAA,EAAAqpD,UAAA,SAAA1mD,GACA,SAAAA,EAAA59C,KAAA0gH,QAAA9iE,EAAA59C,KAAAgwB,QACAliB,KAAA+yG,gBAAA,IAAAN,GAAAtlE,EAAA2C,EAAA59C,KAAAgwB,UAIAliB,KAAA+yG,kBACA/yG,KAAA+yG,gBAAA,IAAAN,GAAAtlE,IAGA2C,EAAA59C,MAAA49C,EAAA59C,KAAA0gH,QAAA,SAAA9iE,EAAA59C,KAAA0gH,QACA5yG,KAAA+yG,gBAAAjjE,EAAA59C,KAAA0gH,SACA5yG,KAAA+yG,gBAAAjjE,EAAA59C,KAAA0gH,QAAA9iE,EAAA59C,QAMA,CAAAi7C,GAr2MA,KAi3MA6lE,IACAC,WAAA,OACAC,yBAAA,UAEAC,aAAA,KAWAC,GAAA,SAAAC,GACA,OAAAA,EAAAn1G,IAAA,SAAAiyC,GACA,OAAAA,EAAArsC,QAAA,+BAAAwvG,EAAAC,EAAAC,GAIA,eAHA,KAAAziC,OAAAwiC,GAAAx0G,SAAA,KAAAH,OAAA,GAGA,MAFA,KAAAmyE,OAAAyiC,GAAAz0G,SAAA,KAAAH,OAAA,QAYA60G,GAAA,WACA,IAKA9pE,EALA0pE,EAAAlwG,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEA5P,GACAmgH,WAAA,GAkBA,OAdAngH,EAAAmgH,WAAAL,EAAAj0G,MAAA,KAAAnK,OACA1B,EAAAmgH,WAAAngH,EAAAmgH,YAAA,GAGA/pE,EAAA,8BAAA8c,KAAA4sD,MAEA9/G,EAAA0/G,WAAAtpE,EAAA,GACAp2C,EAAA2/G,yBAAAvpE,EAAA,IAIAp2C,EAAA4/G,aAAA,8CAAA1sD,KAAA4sD,GACA9/G,EAAA4/G,aAAA5/G,EAAA4/G,cAAA5/G,EAAA4/G,aAAA,GAEA5/G,GAyBAogH,GAAA,SAAAp2G,EAAAq2G,EAAAP,GAIA,OAAA91G,EAAA,IAAAq2G,EAAA,aAAoCP,EAAA/0G,OAAA,SAAA8E,GACpC,QAAAA,IACGnF,KAAA,WAyEH41G,GAAA,SAAAloB,EAAAO,GACA,IAAA4nB,EAlEA,SAAA5nB,GAKA,OAAAA,EAAAG,UAAAH,EAAAG,SAAAp3F,QAAAi3F,EAAAG,SAAA,GAAAnuF,IACA,MAEA,OA0DA61G,CAAA7nB,GACA8nB,EAlDA,SAAA9nB,GAGA,IAAA+nB,EAAA/nB,EAAA51C,eAEA,OAAA29D,EAAAC,OACAT,GAAAQ,EAAAC,QAEAlB,GA0CAmB,CAAAjoB,GACA+nB,EAAA/nB,EAAA51C,eAEA89D,GAAA,EACAC,GAAA,EAEA,IAAAnoB,EAEA,SAGA,GAAAP,EAAAG,YAAAwC,OAAA2lB,EAAA3lB,MAAA,CACA,IAAAgmB,EAAA3oB,EAAAG,YAAAwC,MAAA2lB,EAAA3lB,OAGA,GAAAgmB,EAKA,QAAAC,KAJAF,GAAA,EAEAD,GAAA,EAEAE,EAIA,IAAAA,EAAAC,GAAAnwE,MAAAkwE,EAAAC,GAAAnoB,UAAA,CACAgoB,GAAA,EACA,OAQAC,IAAAL,EAAAb,eACAiB,IAIAJ,EAAAb,aA9EA,SAAAxnB,EAAA6oB,GACA,IAAA7oB,EAAAG,YAAAwC,QAAAkmB,EACA,YAGA,IAAAF,EAAA3oB,EAAAG,YAAAwC,MAAAkmB,GAEA,IAAAF,EACA,YAGA,QAAAt+G,KAAAs+G,EAAA,CACA,IAAAG,EAAAH,EAAAt+G,GAEA,GAAAy+G,EAAAzgF,SAAAygF,EAAAroB,UAEA,OAAAqnB,GAAAgB,EAAAroB,UAAA,GAAA91C,WAAA49D,QAAAf,aAIA,YA0DAuB,CAAA/oB,EAAAsoB,EAAA3lB,QAGA0lB,EAAAb,eACA5qB,GAAAhoF,IAAA2yC,KAAA,+HACA8gE,EAAAb,aAAAH,GAAAG,eAKA,IAAAwB,KAEAX,EAAAf,aACA0B,EAAApzG,MAAA,GAAAyyG,EAAAf,WAAAe,EAAAd,0BAGAc,EAAAb,eACAwB,EAAAnyE,MAAA,WAAAwxE,EAAAb,cAKA,IAAAyB,EAAAjB,GAAA,QAAAG,GAAAa,EAAAnyE,QACAqyE,EAAAlB,GAAA,QAAAG,GAAAa,EAAApzG,QACAuzG,EAAAnB,GAAA,QAAAG,GAAAa,EAAApzG,MAAAozG,EAAAnyE,QAEA,OAAA6xE,GACAD,GAAAO,EAAApzG,OACAszG,EAAAD,GAGAR,GAAAO,EAAApzG,OASAuzG,EAAAF,IANAA,KAWAD,EAAApzG,OAMAuzG,IALAF,IA2CAG,GAAA,SAAA5kE,GACA,uBAAA18B,KAAA08B,IAWA6kE,GAAA,SAAA7kE,GACA,wBAAA18B,KAAA08B,IA0HAuY,GAAA,SAAAusD,EAAAC,EAAAC,GACA,IAAAh0F,EAAA,KACA3jB,EAAA,KACA43G,EAAA,EACAC,KACAltD,KAGA,IAAA8sD,IAAAC,EACA,OAAA3sB,GAAAyB,kBAIA,IAAAirB,EACA,OAAAC,EAAAxsD,SAEA,IAAAwsD,EACA,OAAAD,EAAAvsD,SAIA,GAAAysD,EACA,OAAAF,EAAAvsD,SAIA,OAAAusD,EAAAvsD,SAAAzzD,QAAA,IAAAigH,EAAAxsD,SAAAzzD,OACA,OAAAszF,GAAAyB,kBAUA,IALA,IAAAsrB,EAAAL,EAAAvsD,SACA6sD,EAAAL,EAAAxsD,SACAvgB,EAAAmtE,EAAArgH,OAGAkzC,KACAktE,EAAArhH,MAAkB+a,KAAAumG,EAAAn0F,MAAAgnB,GAAA5qC,KAAA,UAClB83G,EAAArhH,MAAkB+a,KAAAumG,EAAA93G,IAAA2qC,GAAA5qC,KAAA,QAGlB,IADA4qC,EAAAotE,EAAAtgH,OACAkzC,KACAktE,EAAArhH,MAAkB+a,KAAAwmG,EAAAp0F,MAAAgnB,GAAA5qC,KAAA,UAClB83G,EAAArhH,MAAkB+a,KAAAwmG,EAAA/3G,IAAA2qC,GAAA5qC,KAAA,QASlB,IANA83G,EAAAvgB,KAAA,SAAA3zF,EAAA+B,GACA,OAAA/B,EAAA4N,KAAA7L,EAAA6L,OAKAo5B,EAAA,EAAiBA,EAAAktE,EAAApgH,OAAwBkzC,IACzC,UAAAktE,EAAAltE,GAAA5qC,KAKA,MAJA63G,IAKAj0F,EAAAk0F,EAAAltE,GAAAp5B,MAEK,QAAAsmG,EAAAltE,GAAA5qC,MAKL,MAJA63G,IAKA53G,EAAA63G,EAAAltE,GAAAp5B,MAKA,OAAAoS,GAAA,OAAA3jB,IACA2qD,EAAAn0D,MAAAmtB,EAAA3jB,IACA2jB,EAAA,KACA3jB,EAAA,MAIA,OAAA+qF,GAAA//B,iBAAAL,IAwDAqtD,GAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAArC,GACA5oB,GAAAzqF,KAAAw1G,GAEA,IAAAv1G,EAAA6qF,GAAA9qF,MAAAw1G,EAAAhhE,WAAAp2C,OAAAivF,eAAAmoB,IAAA32G,KAAAmB,KAAAuoF,GAAA1qC,cAEA59C,EAAA01G,iBAAA,EACA11G,EAAA21G,mBACA31G,EAAA41G,iBAAA,EAEA51G,EAAAm0F,aAAAshB,EACAz1G,EAAA61G,QAAAzC,EACApzG,EAAA81G,YAAA,KACA91G,EAAA+1G,YAAA,KACA/1G,EAAAg2G,gBAAA,EACAh2G,EAAAi2G,yBAAA,EACAj2G,EAAAk2G,cACAl2G,EAAAm2G,aAAA,EACAn2G,EAAAo2G,YAAA9tB,GAAAxgC,QAAAN,YAAA,GAEA,IAAAvlC,GACAurF,OAAA,EACAlB,eAAAtsG,EAAAo2G,aAoFA,OAjFAp2G,EAAA61G,QAAA3vG,QAAA,SAAAgqC,GACA4kE,GAAA5kE,GACAlwC,EAAA81G,YAAA5lE,EACO6kE,GAAA7kE,KACPlwC,EAAA+1G,YAAA7lE,KAMAlwC,EAAAq2G,YAAA,IAAAtf,GACA/2F,EAAAq2G,YAAA/f,aAAmCqc,OAAA,OAAA1wF,YAEnCjiB,EAAAq2G,YAAA9f,UAAA,SAAA1mD,GACA,eAAAA,EAAA59C,KAAA0gH,OACA3yG,EAAAs2G,MAAAzmE,GAGA,SAAAA,EAAA59C,KAAA0gH,OACA3yG,EAAAu2G,MAAA1mE,GAGA,YAAAA,EAAA59C,KAAA0gH,OACA3yG,EAAAw2G,eAAA3mE,QADA,GAOA1xC,OAAA4R,eAAA/P,EAAA,mBACA6P,IAAA,WACA,OAAA9P,KAAA21G,kBAEA5lG,IAAA,SAAA2mC,GACA,iBAAAA,MAAA,IACA12C,KAAA21G,iBAAAj/D,EACA12C,KAAAk2G,yBAAA,EAGAl2G,KAAAm2G,WAAAlhH,OAAA,EACA+K,KAAAo2G,aAAA,EAIAp2G,KAAAs2G,YAAA/f,aACAqc,OAAA,qBACA1e,gBAAAx9C,QAOAt4C,OAAA4R,eAAA/P,EAAA,qBACA6P,IAAA,WACA,OAAA9P,KAAA02G,cAAA12G,KAAA22G,cAAAC,mBAEA7mG,IAAA,SAAAoR,GACAnhB,KAAA02G,eACA12G,KAAA02G,aAAAE,kBAAAz1F,GAEAnhB,KAAA22G,eACA32G,KAAA22G,aAAAC,kBAAAz1F,MAMA/iB,OAAA4R,eAAA/P,EAAA,YACA6P,IAAA,WACA,SAAA9P,KAAA61G,kBAAA71G,KAAAi2G,gBAAAj2G,KAAA22G,cAAA32G,KAAA22G,aAAAE,UAAA72G,KAAA02G,cAAA12G,KAAA02G,aAAAG,aAMAz4G,OAAA4R,eAAA/P,EAAA,YACA6P,IAAA,WACA,OAAA44C,GAAA1oD,KAAA02G,aAAA12G,KAAA22G,aAAA32G,KAAAi2G,mBAGAh2G,EAkaA,OA7gBA4qF,GAAA2qB,EAAAC,GAuHA/qB,GAAA8qB,IACAj3G,IAAA,QACAE,MAAA,SAAAqxC,GACA,IAAA28C,EAAA38C,EAAA59C,KAAAu6F,QAGAA,EAAAv6F,KAAA,IAAA+B,WAAAw4F,EAAAv6F,KAAA49C,EAAA59C,KAAAI,WAAAw9C,EAAA59C,KAAAK,YAEAk6F,EAAA5oD,YAAA,IAAA5vC,WAAAw4F,EAAA5oD,YAAA3xC,KAAAu6F,EAAA5oD,YAAAvxC,WAAAm6F,EAAA5oD,YAAAtxC,YAt0OA,SAAAukH,EAAApB,EAAAjpB,GACA,IAAA5vC,EAAA64D,EAAAn1D,QAGA,GAAAksC,EAAAn8B,UAAAm8B,EAAAn8B,SAAAr7D,OAKA,QAAA2F,KAJAk8G,EAAA7iB,oBACA6iB,EAAA7iB,sBAGAxH,EAAA4hB,eACA,IAAAyI,EAAA7iB,kBAAAr5F,GAAA,CACAiiD,EAAAyW,MAAA/kB,SAA8BhxC,KAAA,QAAAvH,KAAA,YAC9B,IAAAgyB,EAAA60B,EAAA2N,aAAAgE,aAAA5zD,GAMAk8G,EAAA7iB,kBAAAr5F,GAJAotB,GAQA60B,EAAA6N,oBACA0E,KAAA,WACAp2C,GAAApe,EACA6wD,MAAA7wD,IACW,GAAAotB,MAMXykE,EAAAx7B,UAAAw7B,EAAAx7B,SAAAh8D,SAAA6hH,EAAAriB,iBACAqiB,EAAAriB,eAAA53C,EAAA6N,oBACA0E,KAAA,WACA3D,MAAA,mBACK,GAAAzjC,MACL8uF,EAAAriB,eAAAsiB,gCAAAtqB,EAAAx7B,SAAAwzC,cAmyOAuS,CAAAh3G,UAAAo0F,aAAA3H,GAGAzsF,KAAA41G,gBAAA5hH,KAAAy4F,MAeAluF,IAAA,QACAE,MAAA,SAAAqxC,GAEA,WAAA9vC,KAAAo0F,aAAA9tD,WAOAtmC,KAAAi3G,0BANAj3G,KAAA41G,gBAAA3gH,OAAA,KAoBAsJ,IAAA,2BACAE,MAAA,WACA,IAAAwC,EAAAjB,KAEAmhC,GAAA,iBAEAA,EAAAh7B,QAAA,SAAA5I,GAGA,GAAA0D,EAAA1D,EAAA,YAKA0D,EAAA1D,EAAA,YAIA,IAAAlL,EAAA,KAIA,GAAA4O,EAAAmzF,aAAA72F,EAAA,YACAlL,EAAA4O,EAAAmzF,aAAA72F,EAAA,YAWAs5G,UAAA,MACS,CACT,IACAK,EAAA35G,EAAA,gBAAsC0D,EADtC1D,EAAA,UACsC,IAEtClL,EAhQA,SAAAqjH,EAAAwB,GACA,IAAAJ,EAAApB,EAAAyB,gBAAAD,GACA93D,EAAAhhD,OAAAi2C,OAAA,MAEA+K,EAAAy3D,UAAA,EACAz3D,EAAAg4D,YAAAN,EAEA,IAAAxlD,EAAA,SAAA/yD,GACA,mBAAAu4G,EAAAv4G,GACA6gD,EAAA7gD,GAAA,WACA,OAAAu4G,EAAAv4G,GAAAiG,MAAAsyG,EAAA3zG,iBAEK,IAAAi8C,EAAA7gD,IACLH,OAAA4R,eAAAovC,EAAA7gD,GACAuR,IAAA,WACA,OAAAgnG,EAAAv4G,IAEAwR,IAAA,SAAAnS,GACA,OAAAk5G,EAAAv4G,GAAAX,MAMA,QAAAW,KAAAu4G,EACAxlD,EAAA/yD,GAGA,OAAA6gD,EAoOAi4D,CAAAp2G,EAAAmzF,aAAAkjB,mBAAAJ,GAEAj2G,EAAAmzF,aAAA72F,EAAA,WAAAlL,EAGA4O,EAAA1D,EAAA,WAAAlL,GAGA,oCAAA8T,QAAA,SAAA2pC,GACAz9C,EAAAotB,iBAAAqwB,EAAA,WAEA,aAAAvyC,IAAA0D,EAAAg1G,eAqBA,MAjBA,cAAAnmE,IACA7uC,EAAA1D,EAAA,WAAAs5G,UAAA,GAGA11E,EAAAmd,MAAA,SAAAr7C,GAGA,kBAAAA,IAAAhC,EAAAg1G,kBAIA14G,IAAA0F,IAAAhC,EAAAgC,EAAA,aAAAhC,EAAAgC,EAAA,WAAA4zG,YAOA51G,EAAAstC,QAAAuB,QADA,YAmBAvxC,IAAA,eACAE,MAAA,SAAAguF,GAIA,GAFAzsF,KAAA61G,iBAAA,EAEA71G,KAAA22G,cAAA32G,KAAA22G,aAAAjuD,SAAAzzD,OAAA,CACA,IAAAsgH,EAAAv1G,KAAA22G,aAAAjuD,SAEA1oD,KAAAs2G,YAAA/f,aACAqc,OAAA,sBACAE,YAAAyC,EAAA/3G,IAAA+3G,EAAAtgH,OAAA,KAIA+K,KAAA02G,cACA12G,KAAAs2G,YAAA/f,aACAqc,OAAA,gBACA7G,gBAxgBA,SAAA15G,EAAA+hE,EAAAmjD,GACA,YAAAnjD,GAAA,OAAAA,IAAA/hE,EAAA4C,OACA,SAIA,IAAAuiH,EAAA/8G,KAAAwtG,KAAA,KAAA7zC,EAAAmjD,EAAA,IAEAjkH,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAjB,EAAA4C,UACb5C,EAAAiB,GAAAu4C,IAAA2rE,GADgClkH,KAMhC,OAAAjB,EAAAuM,MAAAtL,GAwfAmkH,CAAAz3G,KAAAm2G,WAAAn2G,KAAAo0F,aAAA7zC,QAAAvgD,KAAAo0F,aAAA7zC,QAAA6T,cAAA,KAAAp0D,KAAAo2G,gBAIAp2G,KAAAs2G,YAAA/f,aACAqc,OAAA,OAIA1gH,KAAAu6F,EAAAp6F,OAIAC,WAAAm6F,EAAAn6F,WACAC,WAAAk6F,EAAAl6F,aACOk6F,EAAAp6F,SACP2N,KAAAs2G,YAAA/f,aAAoCqc,OAAA,aAcpCr0G,IAAA,iBACAE,MAAA,SAAAqxC,GACA9vC,KAAAm2G,WAvgBA,SAAA9jH,EAAA2lG,EAAAl0F,GACA,IAAAk0F,EAAA/iG,OACA,OAAA5C,EAGA,GAAAyR,EAKA,OAAAk0F,EAAAp5F,QAOA,IAJA,IAAAuiB,EAAA62E,EAAA,GAAAnsD,IAEAv4C,EAAA,EAESA,EAAAjB,EAAA4C,UACT5C,EAAAiB,GAAAu4C,KAAA1qB,GAD4B7tB,KAM5B,OAAAjB,EAAAuM,MAAA,EAAAtL,GAAA2S,OAAA+xF,GAgfA0f,CAAA13G,KAAAm2G,WAAArmE,EAAA59C,KAAA2gH,QAAA7yG,KAAAq2G,gBAaA93G,IAAA,SACAE,MAAA,SAAA0iB,EAAA3jB,GAeA,GAdAwC,KAAA02G,eACA12G,KAAA02G,aAAAG,UAAA,EACA72G,KAAA02G,aAAAp/D,OAAAn2B,EAAA3jB,GACAwC,KAAAm2G,WAnfA,SAAA9jH,EAAA8uB,EAAA3jB,EAAA+5G,GAOA,IANA,IAAAhV,EAAA9nG,KAAAwtG,KAAA,KAAA9mF,EAAAo2F,IACA/U,EAAA/nG,KAAAwtG,KAAA,KAAAzqG,EAAA+5G,IACAI,EAAAtlH,EAAAuM,QAEAtL,EAAAjB,EAAA4C,OAEA3B,OACAjB,EAAAiB,GAAAu4C,KAAA22D,KAKA,QAAAlvG,EAEA,OAAAqkH,EAKA,IAFA,IAAA35C,EAAA1qE,EAAA,EAEA0qE,OACA3rE,EAAA2rE,GAAAnyB,KAAA02D,KAUA,OAJAvkC,EAAAvjE,KAAA6+C,IAAA0kB,EAAA,GAEA25C,EAAA77D,OAAAkiB,EAAA1qE,EAAA0qE,EAAA,GAEA25C,EAodAC,CAAA53G,KAAAm2G,WAAAh1F,EAAA3jB,EAAAwC,KAAAo2G,gBAEAp2G,KAAAi2G,gBAAAj2G,KAAA22G,eACA32G,KAAA22G,aAAAE,UAAA,EACA72G,KAAA22G,aAAAr/D,OAAAn2B,EAAA3jB,IAIA+1F,GAAApyE,EAAA3jB,EAAAwC,KAAAy0F,gBAGAz0F,KAAAi0F,kBACA,QAAAjsE,KAAAhoB,KAAAi0F,kBACAV,GAAApyE,EAAA3jB,EAAAwC,KAAAi0F,kBAAAjsE,OAcAzpB,IAAA,0BACAE,MAAA,WACA,IAAAo5G,GACAt2G,OACA8qF,YACA3tF,MAAA,GAEA8jC,OACA6pD,YACA3tF,MAAA,GAEA4xD,YACAW,aAKA4mD,EAAA73G,KAAA41G,gBAAAn1E,OAAA,SAAAq3E,EAAArrB,GACA,IAAAlvF,EAAAkvF,EAAAlvF,KACArL,EAAAu6F,EAAAv6F,KACA2xC,EAAA4oD,EAAA5oD,YAqBA,OAnBAi0E,EAAAv6G,GAAA8uF,SAAAr4F,KAAA9B,GACA4lH,EAAAv6G,GAAAmB,OAAAxM,EAAAK,WAEAulH,EAAAv6G,GAAAsmC,cAGA4oD,EAAAn8B,WACAwnD,EAAAxnD,SAAAwnD,EAAAxnD,SAAArqD,OAAAwmF,EAAAn8B,WAGAm8B,EAAAxgD,OACA6rE,EAAAv6G,GAAA0uC,KAAAwgD,EAAAxgD,MAIAwgD,EAAAx7B,WACA6mD,EAAA7mD,SAAA6mD,EAAA7mD,SAAAhrD,OAAAwmF,EAAAx7B,WAGA6mD,GACOD,GAIP73G,KAAA02G,cAAA12G,KAAA22G,eAGA,IAAAkB,EAAAt2G,MAAA7C,QACAsB,KAAAg2G,YAAA,MAEA,IAAA6B,EAAAr1E,MAAA9jC,QACAsB,KAAA+1G,YAAA,MAGA/1G,KAAA+3G,4BAGAF,EAAAr1E,MAAAyJ,MACAjsC,KAAAo0F,aAAA7lD,SAAmChxC,KAAA,YAAA0uC,KAAA4rE,EAAAr1E,MAAAyJ,OAEnC4rE,EAAAt2G,MAAA0qC,MACAjsC,KAAAo0F,aAAA7lD,SAAmChxC,KAAA,YAAA0uC,KAAA4rE,EAAAt2G,MAAA0qC,OAGnCjsC,KAAAk2G,2BACAl2G,KAAAi2G,gBAAAj2G,KAAA22G,eACAkB,EAAAr1E,MAAA6pD,SAAA15C,QAAAklE,EAAAr1E,MAAAqB,aACAg0E,EAAAr1E,MAAA9jC,OAAAm5G,EAAAr1E,MAAAqB,YAAAtxC,YAEAyN,KAAAk2G,yBAAA,GAGA,IAAA8B,GAAA,EAGAh4G,KAAA02G,cAAAmB,EAAAt2G,MAAA7C,OACAm5G,EAAAt2G,MAAA8qF,SAAA15C,QAAAklE,EAAAt2G,MAAAsiC,aACAg0E,EAAAt2G,MAAA7C,OAAAm5G,EAAAt2G,MAAAsiC,YAAAtxC,WACAyN,KAAAi4G,yBAAAJ,EAAAt2G,MAAAvB,KAAA02G,cAEAhjB,GAAA1zF,KAAA63G,EAAAvnD,SAAAunD,EAAA5mD,YACOjxD,KAAA02G,eAAA12G,KAAAi2G,gBAAAj2G,KAAA22G,eAOPqB,GAAA,IAGAh4G,KAAAi2G,gBAAAj2G,KAAA22G,cACA32G,KAAAi4G,yBAAAJ,EAAAr1E,MAAAxiC,KAAA22G,cAGA32G,KAAA41G,gBAAA3gH,OAAA,EAEA+iH,GACAh4G,KAAAuuC,QAAA,aAIAvuC,KAAA61G,iBAAA,KAaAt3G,IAAA,2BACAE,MAAA,SAAAq5G,EAAAI,GACA,IAAA7kH,EAAA,EACA8kH,OAAA,EAEA,GAAAL,EAAAp5G,MAAA,CACAy5G,EAAA,IAAAlkH,WAAA6jH,EAAAp5G,OAGAo5G,EAAAzrB,SAAAlmF,QAAA,SAAAsmF,GACA0rB,EAAApoG,IAAA08E,EAAAp5F,GACAA,GAAAo5F,EAAAl6F,aAGA,IACA2lH,EAAArB,UAAA,EACAqB,EAAAE,aAAAD,GACS,MAAAtjF,GACT70B,KAAAo0F,aAAA7zC,SACAvgD,KAAAo0F,aAAA7zC,QAAA1rB,OACAmS,MAAA,EACAzpC,KAAA,oBACA2rD,QAAAr0B,EAAAq0B,QACAmvD,cAAAxjF,SAeAt2B,IAAA,QACAE,MAAA,WACAuB,KAAA02G,cACA12G,KAAA02G,aAAA3vE,SAEA/mC,KAAAi2G,gBAAAj2G,KAAA22G,cACA32G,KAAA22G,aAAA5vE,QAEA/mC,KAAAs2G,aACAt2G,KAAAs2G,YAAA/f,aAAsCqc,OAAA,UAEtC5yG,KAAA41G,gBAAA3gH,OAAA,EACA+K,KAAA61G,iBAAA,MAGAL,EA9gBA,CA+gBCjtB,GAAA1qC,aAeDy6D,GAAA,SAAA7C,GAGA,SAAA6C,IACA7tB,GAAAzqF,KAAAs4G,GAEA,IAAAr4G,EAAA6qF,GAAA9qF,MAAAs4G,EAAA9jE,WAAAp2C,OAAAivF,eAAAirB,IAAAz5G,KAAAmB,OAEAu4G,OAAA,EAIA,IAAAA,KAFAt4G,EAAAq3G,mBAAA,IAAmCvmE,EAAA5vC,EAAQq3G,YAE3Cv4G,EAAAq3G,mBACAiB,KAAAD,EAAA35G,WAAA,mBAAAsB,EAAAq3G,mBAAAiB,KACAt4G,EAAAs4G,GAAAt4G,EAAAq3G,mBAAAiB,GAAA/4F,KAAAvf,EAAAq3G,qBA+NA,OAxNAr3G,EAAAq3D,UAAAmhB,IACAr6E,OAAA4R,eAAA/P,EAAA,YACA6P,IAAA,WACA,OAAA9P,KAAAs3D,YAAAx2B,IACA9gC,KAAAs3D,UAEAt3D,KAAAs3G,mBAAAvgH,UAEAgZ,IAAA,SAAAhZ,GACAiJ,KAAAs3D,UAAAvgE,EACAA,IAAA+pC,MACA9gC,KAAAs3G,mBAAAvgH,eAKAqH,OAAA4R,eAAA/P,EAAA,YACA6P,IAAA,WACA,OAAA9P,KAAAs3D,YAAAx2B,IACAynD,GAAA//B,mBAAA,EAAAxoD,KAAAs3G,mBAAAvgH,YAEAiJ,KAAAs3G,mBAAAx6C,YAIA1+D,OAAA4R,eAAA/P,EAAA,cACA6P,IAAA,WACA,OAAA9P,KAAAs3G,mBAAAhxE,cAIAloC,OAAA4R,eAAA/P,EAAA,uBACA6P,IAAA,WACA,OAAA9P,KAAAy4G,wBAMAx4G,EAAAy4G,iBAEAz4G,EAAAw4G,wBAQAx4G,EAAA04G,2BAAA,WAMA,GAJA14G,EAAAw4G,qBAAAxjH,OAAA,EAIA,IAAAgL,EAAAy4G,cAAAzjH,OAAA,CACA,IAAA6hH,EAAA72G,EAAAy4G,cAAA,GAKA,OAHA5B,EAAAZ,yBAAA,EACAY,EAAAb,gBAAAa,EAAAf,iBACA91G,EAAAw4G,qBAAAzkH,KAAA8iH,GAaA,IALA,IAAA8B,GAAA,EACAC,GAAA,EAIAvlH,EAAA,EAAqBA,EAAA2M,EAAAsgD,QAAAyuB,cAAA/5E,OAAwC3B,IAAA,CAC7D,IAAA00B,EAAA/nB,EAAAsgD,QAAAyuB,cAAA17E,GAEA,GAAA00B,EAAA6mC,SAAA,SAAA7mC,EAAAonC,KAAA,CAGAwpD,GAAA,EACAC,GAAA,EACA,OAIA54G,EAAAy4G,cAAAvyG,QAAA,SAAA2wG,EAAA34G,GAQA,GAFA24G,EAAAZ,yBAAA,EAEAY,EAAAd,aAAAc,EAAAf,YAEAe,EAAAb,eAAA2C,OACS,GAAA9B,EAAAd,cAAAc,EAAAf,YAITe,EAAAb,gBAAA,EACA4C,GAAA,OACS,IAAA/B,EAAAd,aAAAc,EAAAf,cAOTe,EAAAb,eAAA93G,EAAA06G,KACA/B,EAAAb,gBACA,OAIAh2G,EAAAw4G,qBAAAzkH,KAAA8iH,MAIA72G,EAAA64G,qBAAA,WACA74G,EAAAy4G,cAAAvyG,QAAA,SAAA2wG,GACAA,EAAAZ,yBAAA,KAIAj2G,EAAA84G,YAAA,WACA94G,EAAAy4G,cAAAvyG,QAAA,SAAA2wG,GACAA,EAAAR,aACAQ,EAAAR,YAAA/f,aAAgDqc,OAAA,qBAKhD3yG,EAAA+4G,yBAAA,SAAAlpE,GACA7vC,EAAAy4G,cAAAvyG,QAAA,SAAA9T,GACA,OAAAA,EAAA+jH,aAAAtmE,EAAAynE,YAKA,0CAAApxG,QAAA,SAAA+wE,GACAl3E,KAAAs3G,mBAAA73F,iBAAAy3D,EAAAl3E,KAAAuuC,QAAA/uB,KAAAxf,QACKC,GAILA,EAAAu7C,GAAA,sBAAA1L,GAEA,IAAAvuC,EAAkB0vC,EAAA9vC,EAAQ+0C,cAAA,SAAAj2C,EAAAg5G,KAAA,MAE1B13G,IAIAtB,EAAAsgD,QAAAgoC,GAAAhnF,EAAAmG,YAIAzH,EAAAsgD,QAAA+S,MAAA9X,GAAA,YAAAv7C,EAAA84G,aAIA94G,EAAAsgD,QAAA+S,MAAA9X,GAAA,2BAAAv7C,EAAA+4G,0BAEA/4G,EAAAsgD,QAAAyuB,aAAA/uE,EAAAsgD,QAAAyuB,gBACA/uE,EAAAsgD,QAAAyuB,cAAAxzB,GAAA,SAAAv7C,EAAA04G,4BACA14G,EAAAsgD,QAAAyuB,cAAAxzB,GAAA,WAAAv7C,EAAA04G,4BACA14G,EAAAsgD,QAAAyuB,cAAAxzB,GAAA,cAAAv7C,EAAA04G,6BAGA14G,EAAAsgD,QAAA/E,GAAA,cAAAv7C,EAAA64G,yBAGA74G,EAAAu7C,GAAA,uBAAA1L,GAGA,IAFA,IAAA/4C,EAAAy8F,GAAAvzF,EAAAlJ,UAEAzD,EAAA,EAAqBA,EAAA2M,EAAAy4G,cAAAzjH,OAAgC3B,IAAA,CACrD,IAAA4lH,EAAAj5G,EAAAy4G,cAAAplH,GACAy2D,EAAAmvD,EAAAzkB,gBAAAykB,EAAAzkB,eAAA1qC,KAEAA,KAAA90D,SACA80D,IAAA90D,OAAA,GAAAg1D,QAAAlzD,MAOAkJ,EAAAu7C,GAAA,uBAAA1L,GACA9vC,KAAA04G,cAAAvyG,QAAA,SAAA2wG,GACAA,EAAAR,aACAQ,EAAAR,YAAAngB,cAIAn2F,KAAA04G,cAAAzjH,OAAA,EACA+K,KAAAugD,UAIAvgD,KAAAugD,QAAAyuB,aAAAhvE,KAAAugD,QAAAyuB,gBACAhvE,KAAAugD,QAAAyuB,cAAAh8B,IAAA,SAAAhzC,KAAA24G,4BACA34G,KAAAugD,QAAAyuB,cAAAh8B,IAAA,WAAAhzC,KAAA24G,4BACA34G,KAAAugD,QAAAyuB,cAAAh8B,IAAA,cAAAhzC,KAAA24G,6BAOA34G,KAAAugD,QAAAI,MACA3gD,KAAAugD,QAAAvN,IAAA,cAAAhzC,KAAA84G,sBACA94G,KAAAugD,QAAA+S,MAAAtgB,IAAA,YAAAhzC,KAAA+4G,aACA/4G,KAAAugD,QAAA+S,MAAAtgB,IAAA,2BAAAhzC,KAAAg5G,8BAGA/4G,EAmFA,OA/TA4qF,GAAAytB,EAAA7C,GAuPA/qB,GAAA4tB,IACA/5G,IAAA,oBACAE,MAAA,SAAA0iB,EAAA3jB,GACA,IAAAq3B,OAAA,EAEA,GAAA70B,KAAAjJ,WAAA+pC,IAIA,MAHAjM,EAAA,IAAAlxB,MAAA,qFACA3N,KAAA,oBACA6+B,EAAAmS,KAAA,GACAnS,GAGAr3B,EAAAwC,KAAAs3G,mBAAAvgH,UAAAwc,MAAAvT,KAAAs3G,mBAAAvgH,aACAiJ,KAAAs3G,mBAAAvgH,SAAAyG,MAaAe,IAAA,kBACAE,MAAA,SAAAlB,GACA,IAAAlL,OAAA,EACA8mH,EA7lCA,SAAA57G,GACA,IAAAu3C,GAAgBv3C,KAAA,GAAA67G,eAChBA,EAAA77G,EAAAspB,OAAAznB,MAAA,KAeA,OAZA01C,EAAAv3C,KAAA67G,EAAA3uE,QAAA5jB,OACAuyF,EAAAjzG,QAAA,SAAAkzG,GACA,IAAAxI,EAAAwI,EAAAxyF,OAAAznB,MAAA,KAEA,GAAAyxG,EAAA57G,OAAA,GACA,IAAAe,EAAA66G,EAAA,GAAA/sG,QAAA,SAAA+iB,OACApoB,EAAAoyG,EAAA,GAAA/sG,QAAA,SAAA+iB,OAEAiuB,EAAAskE,WAAApjH,GAAAyI,KAIAq2C,EA4kCAwkE,CAAA/7G,GAIA,4BAAAkW,KAAA0lG,EAAA57G,MAAA,CACA,IAAA81G,KAEA8F,EAAAC,YAAAD,EAAAC,WAAA/F,SACAA,EAAA8F,EAAAC,WAAA/F,OAAAj0G,MAAA,KAEAi0G,GADAA,EAAAD,GAAAC,IACA/0G,OAAA,SAAA6xC,GACA,OAAA4kE,GAAA5kE,IAAA6kE,GAAA7kE,MAIA,IAAAkjE,EAAAp+G,SACAo+G,GAAA,4BAGAhhH,EAAA,IAAAmjH,GAAAx1G,KAAAqzG,GAEA,IAAArzG,KAAA04G,cAAAzjH,SAMA+K,KAAA04G,cAAA,GAAAX,2BACA1lH,EAAA0lH,2BAIA/3G,KAAA04G,cAAA,GAAAzC,gBAAA,QAIA5jH,EAAA2N,KAAAs3G,mBAAAH,gBAAA55G,GAIA,OADAyC,KAAA04G,cAAA1kH,KAAA3B,GACAA,MAGAimH,EAhUA,CAiUC/vB,GAAA1qC,aAKD07D,GAAA,EASAhxB,GAAAixB,gBASA,IAAA5yE,GAAA,SAAA6yE,EAAAC,GACA,IAAAhE,EAAAntB,GAAAixB,aAAAC,GAEA,IAAA/D,EAGA,UAAA/xG,MAAA,qCAFA+xG,EAAAnnE,SAAyBhxC,KAAA,aAAAm8G,WAYzBC,GAAA,WACA,QAAW5oE,EAAA5vC,EAAQq3G,eAAkBznE,EAAA5vC,EAAQq3G,YAAAoB,iBAAgC7oE,EAAA5vC,EAAQq3G,YAAAoB,gBAAA,6CAUrFpB,GAAA,WAMA,GALAx4G,KAAAw4G,aACA5xE,QACA+yE,+BAGAA,KACA,WAAArB,GAGA,UAAA30G,MAAA,2DAGA60G,GAAA5xE,QACA4xE,GAAAmB,8BAQA,IAAAE,IASAjjB,gBAAA,SAAA9hD,GACA,IACA9lC,OAAA,EAGA,OAAA8lC,aAAAwjE,IACAtpG,EAAY+hC,EAAA5vC,EAAQoB,IAAAq0F,gBAAA9hD,EAAAwiE,oBACpBxiE,EAAAmkE,KAAAjqG,EACAA,GAIA8lC,aAAAwjE,IAQAtpG,EAnBA,yBAmBAuqG,GAEAA,KAGAhxB,GAAAixB,aAAAxqG,GAAA8lC,EAEA9lC,IAdAA,EAAY+hC,EAAA5vC,EAAQoB,IAAAq0F,gBAAA9hD,GACpBA,EAAAmkE,KAAAjqG,EACAA,KAgBAu5E,GAAAiwB,eACAjwB,GAAAhmF,IAAAs3G,GAEA,IAAAC,GAAAvxB,GAAA1qC,YACAk8D,GAAAxxB,GAAAnoC,aAeA45D,GAAA,SAAAC,EAAAC,GAQA,IAPA,IAAAh7C,EAAA66C,GAAAE,GAEAljH,SAAAmjH,EAAAnjH,SACAojH,oBAAAD,EAAAC,sBAIA7mH,EAAA,EAAiBA,EAAA4mH,EAAA9tB,UAAAn3F,OAAgC3B,IAAA,CACjD,IAAA8mH,EAAAnuB,GAAA/sB,EAAAg7C,EAAA9tB,UAAA94F,IAEA8mH,IACAl7C,EAAAk7C,GAkBA,OAbA1uB,GAAAwuB,EAAA,SAAA7jE,EAAA94C,EAAA88G,EAAA5uD,GACA,GAAApV,EAAA+1C,WAAA/1C,EAAA+1C,UAAAn3F,OAAA,CACA,IAAAmvC,EAAAiS,EAAA+1C,UAAA,GAAAhoD,IACAk2E,EAAAruB,GAAA/sB,EAAA7oB,EAAA+1C,UAAA,IAEAkuB,KACAp7C,EAAAo7C,GAEAxuB,YAAAvuF,GAAA88G,GAAA5uD,GAAA2gC,UAAA,GAAAltB,EAAAktB,UAAAhoD,OAKA86B,GAGAq7C,GAAA,SAAApsD,GAMA,SAAAosD,EAAAC,EAAAptB,EAAAtmD,EAAA2zE,GACAhwB,GAAAzqF,KAAAu6G,GAEA,IAAAt6G,EAAA6qF,GAAA9qF,MAAAu6G,EAAA/lE,WAAAp2C,OAAAivF,eAAAktB,IAAA17G,KAAAmB,OAKA,GAHAC,EAAAqtF,KAAAF,EACAntF,EAAA6mC,mBAEA0zE,EACA,UAAA72G,MAAA,oDAcA,OAVA1D,EAAAu7C,GAAA,iCACAv7C,EAAAy6G,gBAIAz6G,EAAAu7C,GAAA,gCACAv7C,EAAA06G,kBAIA,iBAAAH,GACAv6G,EAAAktF,OAAAqtB,EACAv6G,EAAAc,MAAA,eACA+pF,GAAA7qF,KAGAA,EAAA26G,sBAAAH,EAEAx6G,EAAAc,MAAA,gBACAd,EAAAkuF,SAAA,EAEAluF,EAAAisF,MAAAsuB,GAEIzpE,EAAA5vC,EAAQ2zB,WAAA,WACZ70B,EAAAsuC,QAAA,mBACK,GACLtuC,GAwXA,OApaA4qF,GAAA0vB,EAqaCT,IAtXDpvB,GAAA6vB,IACAh8G,IAAA,UACAE,MAAA,WACAuB,KAAAguF,cACMj9C,EAAA5vC,EAAQyjC,aAAA5kC,KAAA+tF,uBAGdxvF,IAAA,cACAE,MAAA,WACA,GAAAuB,KAAA2hF,QAAA,CACA,IAAAsM,EAAAjuF,KAAA2hF,QAEA3hF,KAAA2hF,QAAA,KACAsM,EAAA5nD,mBAAA,KACA4nD,EAAAlnD,YAIAxoC,IAAA,QACAE,MAAA,SAAA0tF,GAEA,IAAAA,EACA,OAAAnsF,KAAA6tF,OAIA,oBAAA7tF,KAAAe,MACA,UAAA4C,MAAA,qCAAA3D,KAAAe,OAGA,IAAA4sF,EAAA3tF,KAAAe,MAGA,oBAAAorF,EAAA,CACA,IAAAnsF,KAAA2rF,OAAAS,UAAAD,GACA,UAAAxoF,MAAA,yBAAAwoF,GAEAA,EAAAnsF,KAAA2rF,OAAAS,UAAAD,GAGA,IAAA+B,GAAAluF,KAAA6tF,QAAA1B,EAAA/nD,MAAApkC,KAAA6tF,OAAAzpD,IAEApkC,KAAAe,MAAA,gBAGAmtF,IAKAluF,KAAA6tF,QACA7tF,KAAAuuC,QAAA,iBAGAvuC,KAAA6tF,OAAA1B,EAEAnsF,KAAA26G,gBAGA,gBAAAhtB,GACA3tF,KAAAuuC,QAAA,mBAIAhwC,IAAA,QACAE,MAAA,WACAuB,KAAAguF,cACA,iBAAAhuF,KAAAe,QAGAf,KAAAmuF,SAAA,MAIA5vF,IAAA,OACAE,MAAA,WAGAuB,KAAAmuF,QAKAnuF,KAAAuuC,QAAA,kBAJAvuC,KAAAmhB,WAeA5iB,IAAA,iBACAE,MAAA,WACA,IAAAktF,EAAmBvtF,OAAAyzC,EAAA,EAAAzzC,CAAK4B,KAAA66G,YACxBC,YAAA96G,KAAAmtF,OACA4tB,aAAA/6G,KAAAg7G,gBAGArvB,EAAAvnD,IAAApkC,KAAAmtF,OAKA,QAAA75F,EAAA,EAAqBA,EAAAq4F,EAAAS,UAAAn3F,OAA6B3B,IAAA,CAClD,IAAA2nH,EAAA,mBAAA3nH,EAEAq4F,EAAAS,UAAA94F,GAAA8wC,IAAA62E,EAEAtvB,EAAAS,UAAA6uB,GAAAtvB,EAAAS,UAAA94F,GAkBA,OAbAo4F,GAAAC,EAAA,SAAAt1C,EAAAu1C,EAAAC,EAAAE,GACA,GAAA11C,EAAA+1C,WAAA/1C,EAAA+1C,UAAAn3F,OAAA,CACA,IAAAimH,EAAA,mBAAAtvB,EAAA,IAAAC,EAAA,IAAAE,EAEA11C,EAAA+1C,UAAA,GAAAhoD,IAAA82E,EAEAvvB,EAAAS,UAAA8uB,GAAA7kE,EAAA+1C,UAAA,MAIAS,GAAAlB,GACAmB,GAAAnB,GAEAA,KAGAptF,IAAA,QACAE,MAAA,WACA,IAAAwC,EAAAjB,KAEAA,KAAAmuF,SAAA,EAGAnuF,KAAA2hF,QAAA3hF,KAAAstF,KAAAloD,KACAhB,IAAApkC,KAAAmtF,OACArmD,gBAAA9mC,KAAA8mC,iBACO,SAAAjS,EAAA04D,GAEP,GAAAtsF,EAAA0gF,QAAA,CAOA,GAFA1gF,EAAA0gF,QAAA,KAEA9sD,EAWA,OAVA5zB,EAAA4zB,OACAqQ,OAAAqoD,EAAAroD,OACAgkB,QAAA,uCAAAjoD,EAAAksF,OACA9nD,aAAAkoD,EAAAloD,aAEA2B,KAAA,GAEA,iBAAA/lC,EAAAF,QACAE,EAAAktF,SAAA,GAEAltF,EAAAstC,QAAA,SAGAttC,EAAA45G,WAAAttB,EAAAloD,aAEAkoD,EAAAyE,iBAAAzE,EAAAyE,gBAAA3jF,KACApN,EAAAk6G,cAAA7pH,KAAAU,MAAAu7F,EAAAyE,gBAAA3jF,MAEApN,EAAAk6G,cAAA7pH,KAAAga,MAGArK,EAAAm6G,uBAAAn6G,EAAAo6G,yBAAA77F,KAAAve,UAaA1C,IAAA,yBACAE,MAAA,SAAAwzB,GACA,IAAAozB,EAAArlD,KAEAs7G,EAAsBl9G,OAAAyzC,EAAA,EAAAzzC,CAAc4B,KAAA66G,YAIpC,cAAAS,GACAt7G,KAAAg7G,cAAAh7G,KAAAm7G,cAAA7pH,KAAAga,MACA2mB,KAGA,WAAAqpF,EAAA11E,QACA5lC,KAAAg7G,cAAAM,EAAA78G,MAAAnN,KAAAga,MACA2mB,UAGAjyB,KAAA2hF,QAAA3hF,KAAAstF,KAAAloD,KACAhB,IAAAimD,GAAArqF,KAAAmtF,OAAAmuB,EAAA78G,OACAmnC,OAAA01E,EAAA11E,OACAkB,gBAAA9mC,KAAA8mC,iBACO,SAAAjS,EAAA04D,GAEP,GAAAloC,EAAAs8B,QAAA,CAIA,GAAA9sD,EAIA,OADAwwB,EAAA21D,cAAA31D,EAAA81D,cAAA7pH,KAAAga,MACA2mB,IAGA,IAAAspF,OAAA,EAQAA,EANA,SAAAD,EAAA11E,OACA2nD,EAAAyE,iBAAAzE,EAAAyE,gBAAA3jF,KAKA/c,KAAAU,MAAAu7F,EAAAyE,gBAAA3jF,MAFAg3C,EAAA81D,cAKA7pH,KAAAU,MAAAu7F,EAAAloD,cAGAggB,EAAA21D,cAAAO,EAAAjqH,KAAAga,MAEA2mB,WAUA1zB,IAAA,2BACAE,MAAA,WACA,IAAA8mD,EAAAvlD,KAEAA,KAAA2rF,OAAA3rF,KAAAw7G,iBAEAx7G,KAAAe,MAAA,cAEAf,KAAAuuC,QAAA,kBAEAvuC,KAAA6tF,QAGA7tF,KAAAksF,MAAAlsF,KAAA2rF,OAAAS,UAAA,IAIMr7C,EAAA5vC,EAAQ2zB,WAAA,WACdywB,EAAAhX,QAAA,mBACO,GAQPvuC,KAAA2rF,OAAAwuB,qBACQppE,EAAA5vC,EAAQ2zB,WAAA,WAChBywB,EAAAhX,QAAA,wBACSvuC,KAAA2rF,OAAAwuB,wBAUT57G,IAAA,cACAE,MAAA,WACA,IAAA65D,EAAAt4D,KAEAA,KAAA2hF,QAAA3hF,KAAAstF,KAAAloD,KACAhB,IAAApkC,KAAAmtF,OACArmD,gBAAA9mC,KAAA8mC,iBACO,SAAAjS,EAAA04D,GAEP,GAAAj1B,EAAAqpB,QAAA,CAOA,GAFArpB,EAAAqpB,QAAA,KAEA9sD,EAWA,OAVAyjC,EAAAzjC,OACAqQ,OAAAqoD,EAAAroD,OACAgkB,QAAA,uCAAAoP,EAAA60B,OACA9nD,aAAAkoD,EAAAloD,aAEA2B,KAAA,GAEA,iBAAAsxB,EAAAv3D,QACAu3D,EAAA61B,SAAA,GAEA71B,EAAA/pB,QAAA,SAGA+pB,EAAAuiD,WAAAttB,EAAAloD,aAEA,IAAA60E,EAAA5hD,EAAAkjD,iBAEAljD,EAAAqzB,OAAAquB,GAAA1hD,EAAAqzB,OAAAuuB,GAEQnpE,EAAA5vC,EAAQ2zB,WAAA,WAChBwjC,EAAA/pB,QAAA,wBACS+pB,EAAAqzB,OAAAwuB,2BAWT57G,IAAA,gBACAE,MAAA,WACA,IAAA+5D,EAAAx4D,KAEAi6G,OAAA,EACAC,OAAA,EAEAl6G,KAAA46G,uBACAX,EAAAj6G,KAAA46G,sBAAAjvB,OACAuuB,EAAAl6G,KAAA46G,sBAAAY,mBAEAvB,EAAAj6G,KAAA2rF,OACAuuB,EAAAl6G,KAAAw7G,kBAGA,IAAAC,EAAAzB,GAAAC,EAAAC,GAEAuB,GACAz7G,KAAA46G,sBACA56G,KAAA46G,sBAAAjvB,OAAA8vB,EAEAz7G,KAAA2rF,OAAA8vB,EAEAz7G,KAAA6tF,OAAA4tB,EAAArvB,UAAApsF,KAAA6tF,OAAAzpD,MAEApkC,KAAAuuC,QAAA,qBAGAvuC,KAAAksF,QAAA4B,UACA9tF,KAAA+tF,mBAAkCh9C,EAAA5vC,EAAQ2zB,WAAA,WAC1C0jC,EAAAjqB,QAAA,uBACSw+C,GAAA/sF,KAAAksF,UAAAuvB,KAGTz7G,KAAAuuC,QAAA,sBAGAgsE,EAraA,GAwaAmB,GAAA,SAAA3zF,GACA,OAAAwgE,GAAAhoF,IAAA0yC,MACAs1C,GAAAhoF,IAAA0yC,MAAAzzB,KAAA+oE,GAAA,OAAAxgE,EAAA,MAGA,cAGA,SAAAkyD,MAqBA,IAAA0hC,GAAA,WACA,SAAAA,EAAAjG,EAAAwB,EAAA35G,EAAAq+G,GACAnxB,GAAAzqF,KAAA27G,GAEA37G,KAAA67G,cACA77G,KAAA87G,iBAAA,KACA97G,KAAA21G,iBAAA,EACA31G,KAAA01G,cACA11G,KAAA+7G,kBAAA,EACA/7G,KAAA2jG,MAAApmG,EACAyC,KAAAg8G,UAAA9E,EACAl3G,KAAAi8G,QAAAP,GAAA,iBAAAn+G,EAAA,KAAA25G,EAAA,KAEA,WAAAxB,EAAApvE,WACAovE,EAAAj2F,iBAAA,aAAAzf,KAAAk8G,oBAAA18F,KAAAxf,KAAAk3G,EAAA0E,IAEA57G,KAAAk8G,oBAAAhF,EAAA0E,GAgNA,OA5MAlxB,GAAAixB,IACAp9G,IAAA,sBACAE,MAAA,SAAAy4G,EAAA0E,GACA,IAAA37G,EAAAD,KAEAA,KAAAm8G,cAAAn8G,KAAA01G,YAAAyB,gBAAAD,GAEAl3G,KAAAi8G,QAAA,wBAEAL,IACAA,EAAArtE,QAAA,qBAEAvuC,KAAA01G,YAAAgD,cAAAzjH,OAAA,GAKA2mH,EAAApgE,GAAA,+BACAv7C,EAAAm8G,WAMAp8G,KAAAo8G,YAGA79G,IAAA,SACAE,MAAA,WACA,IAAAwC,EAAAjB,KAEAA,KAAAq8G,UAAA,EAIAr8G,KAAAs8G,qBAAA,WACA,IAAAC,EAAAt7G,EAAA66G,iBAEA76G,EAAA66G,iBAAA,KAEA76G,EAAAg7G,QAAA,aAAA9oB,GAAAlyF,EAAAynD,YAAA,KAEA6zD,GACAA,IAGAt7G,EAAAu7G,gBAGAx8G,KAAAm8G,cAAA18F,iBAAA,YAAAzf,KAAAs8G,sBAEAt8G,KAAAw8G,kBAWAj+G,IAAA,QACAE,MAAA,SAAAwzB,GACA,IAAAozB,EAAArlD,KAEAA,KAAA+7G,kBACA/7G,KAAAy8G,eAAA,WACAp3D,EAAA82D,cAAAp1E,SACS9U,MAaT1zB,IAAA,eACAE,MAAA,SAAAC,EAAAuzB,GACA,IAAAszB,EAAAvlD,KAEAA,KAAA+7G,kBAAA,EACA/7G,KAAAy8G,eAAA,WACAl3D,EAAA42D,cAAA/D,aAAA15G,IACOuzB,MAUP1zB,IAAA,WACAE,MAAA,WACA,OAAAuB,KAAAm8G,cAGAn8G,KAAAm8G,cAAAzzD,SAFA6/B,GAAA//B,sBAgBAjqD,IAAA,SACAE,MAAA,SAAA0iB,EAAA3jB,GACA,IAAA86D,EAAAt4D,KAEAiyB,EAAA9uB,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,GAAA82E,GAEAj6E,KAAA+7G,kBACA/7G,KAAAy8G,eAAA,WACAnkD,EAAA2jD,QAAA,WAAA96F,EAAA,OAAA3jB,EAAA,KACA86D,EAAA6jD,cAAA7kE,OAAAn2B,EAAA3jB,IACSy0B,MAWT1zB,IAAA,WACAE,MAAA,WACA,OAAAuB,KAAAm8G,eAAAn8G,KAAAm8G,cAAAtF,UAAA72G,KAAA87G,oBAUAv9G,IAAA,kBACAE,MAAA,SAAApL,GACA,IAAAmlE,EAAAx4D,KAQA,YANA,IAAA3M,IACA2M,KAAAy8G,eAAA,WACAjkD,EAAA2jD,cAAAjoB,gBAAA7gG,IAEA2M,KAAA21G,iBAAAtiH,GAEA2M,KAAA21G,oBAQAp3G,IAAA,iBACAE,MAAA,SAAA6uB,EAAA2E,GACAjyB,KAAA67G,WAAA7nH,MAAAs5B,EAAA9N,KAAAxf,MAAAiyB,IACAjyB,KAAAw8G,kBAQAj+G,IAAA,eACAE,MAAA,WACA,IAAA44F,OAAA,GAEAr3F,KAAA62G,YAAA72G,KAAA67G,WAAA5mH,QAAA+K,KAAAq8G,WACAhlB,EAAAr3F,KAAA67G,WAAApxE,QACAzqC,KAAA87G,iBAAAzkB,EAAA,GACAA,EAAA,SASA94F,IAAA,UACAE,MAAA,WACAuB,KAAAm8G,cAAAxhE,oBAAA,YAAA36C,KAAAs8G,sBACAt8G,KAAAm8G,eAAA,SAAAn8G,KAAA01G,YAAApvE,YACAtmC,KAAAm8G,cAAAp1E,YAIA40E,EAhOA,GAmOAe,IACAC,mBAAA,GACAC,uBAAA,GACAC,wBAAA,EAGAC,mBAAA,IAEAC,sBAAA,EACAC,0BAAA,GACAC,2BAAA,GAGAC,GACA,EADAA,IAEA,IAFAA,IAGA,IA2BAC,GAAA,SAAA1wB,GACA,IAlBAiG,EAEA0qB,EAgBAv3E,KAKA,OAHA4mD,EAAAiG,YACA7sD,EAAAw3E,OArBA3qB,EAqBAjG,EAAAiG,UAfA0qB,EAAA1qB,EAAAr/F,OAAAq/F,EAAAz9F,OAAA,EAEA,SADAy9F,EAAAr/F,OACA,IAAA+pH,IAeAv3E,GAQAy3E,GAAA,SAAAC,GACAA,EAAAp3G,QAAA,SAAAunF,GACAA,EAAA3mD,WAgDAy2E,GAAA,SAAA3oF,EAAA8sD,GACA,OAAAA,EAAAsQ,UAEA/sD,OAAAy8C,EAAAz8C,OACAgkB,QAAA,iCAAAy4B,EAAAv9C,IACA4C,KAAAk2E,GACA93E,IAAAu8C,GAIAA,EAAA18C,SAEAC,OAAAy8C,EAAAz8C,OACAgkB,QAAA,+BAAAy4B,EAAAv9C,IACA4C,KAAAk2E,GACA93E,IAAAu8C,GAIA9sD,GAEAqQ,OAAAy8C,EAAAz8C,OACAgkB,QAAA,+BAAAy4B,EAAAv9C,IACA4C,KAAAk2E,GACA93E,IAAAu8C,GAIA,MA8LA87B,GAAA,SAAAF,EAAAG,EAAAC,GACA,IAAA/qD,KACAzqB,EAAA,EAEA,gBAAAtT,EAAA43D,GAQA,GAPA53D,IAEAyoF,GAAAC,GACA3qD,EAAA5+D,KAAA6gC,KAEAsT,GAAA,KAEAo1E,EAAAtoH,OAAA,CAIA,GAFAw3F,EAAAmxB,iBAAAtsH,KAAAga,MAEAsnD,EAAA39D,OAAA,GACA,IAAA4oH,EAlCA,SAAAjrD,GACA,OAAAA,EAAAnyB,OAAA,SAAAq9E,EAAAr5E,GACA,OAAAA,EAAAuC,KAAA82E,EAAA92E,KAAAvC,EAAAq5E,IAgCAC,CAAAnrD,GAEA,OAAA+qD,EAAAE,EAAApxB,GAEA,OAAAA,EAAAuxB,eAnEA,SAAAN,EAAAjxB,EAAAkxB,GAWAD,EAAAj+F,iBAAA,UAVA,SAAAw+F,EAAAnuE,GACA,GAAAA,EAAA59C,KAAA61B,SAAA0kE,EAAAyxB,UAAA,CACAR,EAAA/iE,oBAAA,UAAAsjE,GACA,IAAAE,EAAAruE,EAAA59C,KAAAisH,UAGA,OADA1xB,EAAA/tF,MAAA,IAAAzK,WAAAkqH,EAAAz/G,MAAAy/G,EAAA7rH,WAAA6rH,EAAA5rH,YACAorH,EAAA,KAAAlxB,MAQAixB,EAAAnnB,YAAAjE,IACAvqE,OAAA0kE,EAAAyxB,UACAE,UAAA3xB,EAAAuxB,eACAz/G,IAAAkuF,EAAAluF,IAAAG,MACA2/G,GAAA5xB,EAAAluF,IAAA8/G,MACG5xB,EAAAuxB,eAAA3rH,OAAAo6F,EAAAluF,IAAAG,MAAArM,SAgDHisH,CAAAZ,EAAAjxB,EAAAkxB,GAGAA,EAAA,KAAAlxB,MAeA8xB,GAAA,SAAA9xB,EAAA+xB,GACA,gBAAA1uE,GA5RA,IAAA2uE,EACA98B,EAEA+8B,EAiSA,OAPAjyB,EAAAiyB,MAAAn2B,GAAAnoC,aAAAqsC,EAAAiyB,OA5RA/8B,GADA88B,EA6RA3uE,GA5RA3lC,QAEAu0G,GACAvtB,UAAArwD,IACAswD,cAAA,EACAU,cAJAxgG,KAAAga,MAAAq2E,EAAAoQ,aAIA,IAGAX,cAAAqtB,EAAAE,OAIAD,EAAAvtB,UAAA12F,KAAA+oC,MAAAk7E,EAAAttB,cAAAstB,EAAA5sB,cAAA,OAEA4sB,KAiRAjyB,EAAAiyB,MAAAE,sBAAAnyB,EAAAiyB,MAAAttB,gBACA3E,EAAAiyB,MAAAE,qBAAAttH,KAAAga,OAGAkzG,EAAA1uE,EAAA28C,KAoDAoyB,GAAA,SAAAnxB,EAAAoxB,EAAAC,EAAAC,EAAAvyB,EAAA+xB,EAAAb,GACA,IAAAJ,KACA0B,EAAAxB,GAAAF,EAAAwB,EAAApB,GAGA,GAAAlxB,EAAAluF,IAAA,CACA,IAKA2gH,EAAAxxB,EALAnF,GAAAnoC,aAAA0+D,GACA16E,IAAAqoD,EAAAluF,IAAAouF,YACArnD,aAAA,gBA/RA,SAAAmnD,EAAAwyB,GACA,gBAAApqF,EAAA8sD,GACA,IAAAj9C,EAAAi9C,EAAAj9C,SACAy6E,EAAA3B,GAAA3oF,EAAA8sD,GAEA,GAAAw9B,EACA,OAAAF,EAAAE,EAAA1yB,GAGA,QAAA/nD,EAAAnyC,WACA,OAAA0sH,GACA/5E,OAAAy8C,EAAAz8C,OACAgkB,QAAA,2BAAAy4B,EAAAv9C,IACA4C,KAAAk2E,GACA93E,IAAAu8C,GACO8K,GAGP,IAAAt6F,EAAA,IAAAC,SAAAsyC,GAGA,OADA+nD,EAAAluF,IAAAG,MAAA,IAAA1G,aAAA7F,EAAAiC,UAAA,GAAAjC,EAAAiC,UAAA,GAAAjC,EAAAiC,UAAA,GAAAjC,EAAAiC,UAAA,MACA6qH,EAAA,KAAAxyB,IA4QA2yB,CAAA3yB,EAAAwyB,IAGA1B,EAAAvpH,KAAAkrH,GAIA,GAAAzyB,EAAAvuF,MAAAuuF,EAAAvuF,IAAAQ,MAAA,CACA,IAMA2gH,EAAA3xB,EANAnF,GAAAnoC,aAAA0+D,GACA16E,IAAAqoD,EAAAvuF,IAAAyuF,YACArnD,aAAA,cACAO,QAAAs3E,GAAA1wB,EAAAvuF,OA3QA,SAAAuuF,EAAAuyB,EAAAC,GACA,gBAAApqF,EAAA8sD,GACA,IAAAj9C,EAAAi9C,EAAAj9C,SACAy6E,EAAA3B,GAAA3oF,EAAA8sD,GAEA,OAAAw9B,EACAF,EAAAE,EAAA1yB,GAIA,IAAA/nD,EAAAnyC,WACA0sH,GACA/5E,OAAAy8C,EAAAz8C,OACAgkB,QAAA,qCAAAy4B,EAAAv9C,IACA4C,KAAAk2E,GACA93E,IAAAu8C,GACO8K,IAGPA,EAAAvuF,IAAAQ,MAAA,IAAAzK,WAAA0tF,EAAAj9C,UAGAs6E,EAAApN,iBACAoN,EAAAx+E,OAGAisD,EAAAvuF,IAAA4zG,WAA6B//D,EAAA5wC,EAAQrK,UAAA21F,EAAAvuF,IAAAQ,OACrC+tF,EAAAvuF,IAAA8iC,cAAgC+Q,EAAA5wC,EAAQ6/B,cAAAyrD,EAAAvuF,IAAAQ,OAExCugH,EAAA,KAAAxyB,KAgPA6yB,CAAA7yB,EAAAuyB,EAAAC,IAGA1B,EAAAvpH,KAAAqrH,GAGA,IAMAE,EAAA7xB,EANAnF,GAAAnoC,aAAA0+D,GACA16E,IAAAqoD,EAAAE,YACArnD,aAAA,cACAO,QAAAs3E,GAAA1wB,KA3OA,SAAAA,EAAAuyB,EAAAC,GACA,gBAAApqF,EAAA8sD,GACA,IAAAj9C,EAAAi9C,EAAAj9C,SACAy6E,EAAA3B,GAAA3oF,EAAA8sD,GACAh4C,OAAA,EAEA,OAAAw1E,EACAF,EAAAE,EAAA1yB,GAIA,IAAA/nD,EAAAnyC,WACA0sH,GACA/5E,OAAAy8C,EAAAz8C,OACAgkB,QAAA,qCAAAy4B,EAAAv9C,IACA4C,KAAAk2E,GACA93E,IAAAu8C,GACO8K,IAGPA,EAAAiyB,MA/KA,SAAA/8B,GACA,OACAwP,UAAAxP,EAAAwP,UACAC,cAAAzP,EAAAyP,eAAA,EACAU,cAAAnQ,EAAAmQ,eAAA,GA2KA0tB,CAAA79B,GAEA8K,EAAAluF,IACAkuF,EAAAuxB,eAAA,IAAA/pH,WAAA0tF,EAAAj9C,UAEA+nD,EAAA/tF,MAAA,IAAAzK,WAAA0tF,EAAAj9C,UAKA+nD,EAAAvuF,KAAAuuF,EAAAvuF,IAAAQ,QAEAsgH,EAAApN,iBACAoN,EAAAx+E,QAGAmJ,EAAAq1E,EAAAhtH,MAAAy6F,EAAA/tF,MAAA+tF,EAAAvuF,IAAA8iC,cAAAyrD,EAAAvuF,IAAA4zG,cAEAnoE,EAAA2mB,WACAm8B,EAAA4hB,eAAA1kE,EAAA0kE,eACA5hB,EAAAgzB,aAAA91E,EAAA2mB,WAIA2uD,EAAA,KAAAxyB,KAiMAizB,CAAAjzB,EAAAuyB,EAAAC,IAMA,OAHAM,EAAA9/F,iBAAA,WAAA8+F,GAAA9xB,EAAA+xB,IACAjB,EAAAvpH,KAAAurH,GAEA,WACA,OAAAjC,GAAAC,KAgBAoC,GAAA,SAAAvqE,EAAAmjE,GACA,IAAAhlH,EAEA,OAAA6hD,IAIA7hD,EAAWw9C,EAAA5vC,EAAQm0C,iBAAAF,IAKnB7hD,EAAAglH,GARA,IAkBAqH,GAAA,SAAAt4E,EAAAu4E,GACA,IAAAC,EAAAx4E,EAAA1oC,QAEA0oC,EAAAwtD,KAAA,SAAAv5D,EAAA4rC,GACA,IAAA44C,EAAAF,EAAAtkF,EAAA4rC,GAEA,WAAA44C,EACAD,EAAAj7G,QAAA02B,GAAAukF,EAAAj7G,QAAAsiE,GAEA44C,KAcAC,GAAA,SAAAzkF,EAAA4rC,GACA,IAAA84C,OAAA,EACAC,OAAA,EAWA,OATA3kF,EAAA+a,WAAAi6C,YACA0vB,EAAA1kF,EAAA+a,WAAAi6C,WAEA0vB,KAAmClvE,EAAA5vC,EAAQ4vE,OAAAyf,UAC3CrpB,EAAA7wB,WAAAi6C,YACA2vB,EAAA/4C,EAAA7wB,WAAAi6C,WAIA0vB,GAFAC,KAAqCnvE,EAAA5vC,EAAQ4vE,OAAAyf,YA+X7C2vB,GAAA,SAAAh0B,EAAAupB,EAAA0K,GACA,IAAAj0B,IAAAupB,EACA,SAGA,IAIA2K,EAAAD,IAJAj0B,EAAAE,SAIAp3F,OAKA,OAAAk3F,EAAA2B,SAAA,SAAA4nB,EAAApvE,YAAA+5E,GAGAC,GAAA,SAAA98D,GACA,uBAAAA,GAAAziB,SAAAyiB,IA8EA+8D,GAAA,SAAA9K,GAGA,SAAA8K,EAAA7sD,GACA+2B,GAAAzqF,KAAAugH,GAGA,IAAAtgH,EAAA6qF,GAAA9qF,MAAAugH,EAAA/rE,WAAAp2C,OAAAivF,eAAAkzB,IAAA1hH,KAAAmB,OAEA,IAAA0zD,EACA,UAAAzf,UAAA,wCAEA,sBAAAyf,EAAAU,YACA,UAAAngB,UAAA,mCAEA,IAAAyf,EAAAgiD,YACA,UAAAzhE,UAAA,4BA2EA,OAxEAh0C,EAAAkxF,UAAAz9B,EAAAy9B,UACAlxF,EAAAugH,YAAwB3oH,KAAA,EAAAswC,MAAA,GACxBloC,EAAAwgH,UAAAhoC,IACAx4E,EAAAygH,cACAzgH,EAAA6wF,WAAA,KAGA7wF,EAAA0gH,WAAAjtD,EAAAktD,UACA3gH,EAAA4gH,aAAAntD,EAAAU,YACAn0D,EAAA6gH,UAAAptD,EAAAoJ,SACA78D,EAAA8gH,SAAArtD,EAAAyrB,QACAl/E,EAAAq3D,UAAA5D,EAAA38D,SACAkJ,EAAAm0F,aAAA1gC,EAAAgiD,YACAz1G,EAAAqtF,KAAA55B,EAAA05B,IACAntF,EAAA+gH,YAAAttD,EAAAutD,WACAhhH,EAAAihH,oBAAA,EACAjhH,EAAAkhH,sBAAAztD,EAAA0tD,qBACAnhH,EAAAohH,kBAAA3tD,EAAA4tD,iBACArhH,EAAAshH,YAAA7tD,EAAA8tD,WACAvhH,EAAAg0F,kBAAAvgC,EAAA+tD,iBACAxhH,EAAAyhH,OAAA,OAGAzhH,EAAA0hH,oBAAA,KACA1hH,EAAAg4D,YAAA,EACAh4D,EAAA2hH,kBAAA,EACA3hH,EAAA4hH,gBAAA,KACA5hH,EAAA+7G,UAAA,KACA/7G,EAAA6hH,eAAA,KACA7hH,EAAA8hH,YAAA,KAGA9hH,EAAA+hH,qBAAA,KACA/hH,EAAAgiH,iBAEAhiH,EAAAiiH,eAAA,IAA+BlwE,EAAA,cAE/B/xC,EAAAkiH,WAAAzuD,EAAAgqD,UAKAz9G,EAAAmiH,gBAAA1uD,EAAA2uD,eACApiH,EAAAqiH,YACAlC,aAAA,EACArxG,KAAA,GAGA9O,EAAAmiH,gBAAA5mE,GAAA,4BACA,OAAAv7C,EAAAsuC,QAAA,oBAGAtuC,EAAAm0F,aAAA30E,iBAAA,wBACA,OAAAxf,EAAAsiH,QAAA,IAIAtiH,EAAAuiH,gBAAA,EAEAviH,EAAAg8G,QAAAP,GAAA,iBAAAz7G,EAAA+gH,YAAA,KAEA5iH,OAAA4R,eAAA/P,EAAA,SACA6P,IAAA,WACA,OAAA9P,KAAA0hH,QAEA3xG,IAAA,SAAA0yG,GACAA,IAAAziH,KAAA0hH,SACA1hH,KAAAi8G,QAAAj8G,KAAA0hH,OAAA,OAAAe,GACAziH,KAAA0hH,OAAAe,MAIAxiH,EA2sCA,OAryCA4qF,GAAA01B,EAAA9K,GAmGA/qB,GAAA61B,IACAhiH,IAAA,cACAE,MAAA,WACAuB,KAAA0iH,sBAAA,EACA1iH,KAAA2iH,cAAA,EACA3iH,KAAA4iH,qBAAA,EACA5iH,KAAA6iH,sBAAA,EACA7iH,KAAA8iH,qBAAA,EACA9iH,KAAA+iH,sBAAA,EACA/iH,KAAAgjH,mBAAA,KAQAzkH,IAAA,UACAE,MAAA,WACAuB,KAAAe,MAAA,WACAf,KAAAmsD,QACAnsD,KAAAijH,SACAjjH,KAAA8hH,gBACA9hH,KAAA8hH,eAAA5gE,UAEAlhD,KAAA0gH,cACA1gH,KAAAkiH,eAAAlqD,WASAz5D,IAAA,QACAE,MAAA,WACA,YAAAuB,KAAAe,OAOAf,KAAAijH,SAMAjjH,KAAAe,MAAA,QAIAf,KAAAisD,UACAjsD,KAAAkjH,kBAjBAljH,KAAA6hH,kBACA7hH,KAAA6hH,gBAAA,SA2BAtjH,IAAA,SACAE,MAAA,WACAuB,KAAA6hH,iBACA7hH,KAAA6hH,gBAAAsB,gBAIAnjH,KAAA6hH,gBAAA,QAWAtjH,IAAA,QACAE,MAAA,SAAA2kH,GAMA,YALA,IAAAA,IACApjH,KAAAi4D,OAAAmrD,GAGApjH,KAAA6hH,gBAAA,KACA7hH,KAAAi4D,UAGA15D,IAAA,cACAE,MAAA,WACAuB,KAAAuiH,QAAA,EACAviH,KAAAmsD,QACAnsD,KAAAuuC,QAAA,YAWAhwC,IAAA,YACAE,MAAA,WACA,OAAAuB,KAAA8hH,eAIA9hH,KAAA8hH,eAAAp5D,WAHA6/B,GAAA//B,sBAkBAjqD,IAAA,cACAE,MAAA,SAAAP,GACA,IAAAmlH,EAAAlgH,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,IAAAA,UAAA,GAEA,IAAAjF,EACA,YAGA,IAAA8a,EAAAy5E,GAAAv0F,GACAolH,EAAAtjH,KAAAiiH,cAAAjpG,GAYA,OAVAqqG,IAAAC,GAAAplH,EAAAQ,QACAsB,KAAAiiH,cAAAjpG,GAAAsqG,GACA32B,YAAAzuF,EAAAyuF,YACA+F,UAAAx0F,EAAAw0F,UACAh0F,MAAAR,EAAAQ,MACAozG,WAAA5zG,EAAA4zG,WACA9wE,cAAA9iC,EAAA8iC,gBAIAsiF,GAAAplH,KAWAK,IAAA,qBACAE,MAAA,WACA,OAAAuB,KAAAujH,YAIAvjH,KAAA8hH,gBAAA9hH,KAAAg8G,WAAA,SAAAh8G,KAAAe,SAAAf,KAAAisD,YAQA1tD,IAAA,OACAE,MAAA,WAMA,GAJAuB,KAAAkjH,iBAIAljH,KAAAujH,UAAA,CAQA,GAHAvjH,KAAAoiH,gBAAAoB,mBAAAxjH,KAAAujH,WAGA,SAAAvjH,KAAAe,OAAAf,KAAAyjH,qBACA,OAAAzjH,KAAA0jH,SAKA1jH,KAAAyjH,sBAAA,UAAAzjH,KAAAe,OAAA,SAAAf,KAAAe,QAIAf,KAAAe,MAAA,aAYAxC,IAAA,QACAE,MAAA,WAIA,OAHAuB,KAAAe,MAAA,QACAf,KAAA8hH,eAAA,IAAAnG,GAAA37G,KAAAo0F,aAAAp0F,KAAAg8G,UAAAh8G,KAAAghH,YAAAhhH,KAAA2jH,sBACA3jH,KAAA4jH,kBACA5jH,KAAAkjH,oBAUA3kH,IAAA,WACAE,MAAA,SAAAolH,GACA,IAAA3hG,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEA,GAAA0gH,EAAA,CAIA,IAAAC,EAAA9jH,KAAAujH,UACAx3E,EAAA/rC,KAAA6hH,gBAEA7hH,KAAAujH,UAAAM,EACA7jH,KAAA+hH,YAAA7/F,EAKAliB,KAAA2gH,eACAkD,EAAAE,UACAz3B,cAAAu3B,EAAAv3B,cACAv9E,KAAA,IAIA,IAAAi1G,EAAAF,IAAA9qG,GAAA,KAUA,GARAhZ,KAAAi8G,QAAA,oBAAA+H,EAAA,OAAAH,EAAA7qG,GAAA,KAIAhZ,KAAAuuC,QAAA,kBAIA,SAAAvuC,KAAAe,OAAAf,KAAAyjH,qBACA,OAAAzjH,KAAA0jH,QAGA,GAAAI,KAAA1/E,MAAAy/E,EAAAz/E,IAAA,CAaA,IAAA6/E,EAAAJ,EAAAv3B,cAAAw3B,EAAAx3B,cAEAtsF,KAAAi8G,QAAA,sBAAAgI,EAAA,KAKA,OAAAjkH,KAAA8wF,aACA9wF,KAAA8wF,YAAAmzB,GAMAl4E,IACAA,EAAA+kD,YAAAmzB,EAKAl4E,EAAA+kD,YAAA,IACA/kD,EAAA0gD,QAAAo3B,EAAAx3B,SAAAtgD,EAAA+kD,cAIA9wF,KAAAoiH,gBAAA8B,uBAAAJ,EAAAD,QArCA,OAAA7jH,KAAA8wF,YAGA9wF,KAAAmkH,mBA6CA5lH,IAAA,QACAE,MAAA,WACAuB,KAAA2hH,sBACQ5wE,EAAA5vC,EAAQyjC,aAAA5kC,KAAA2hH,qBAEhB3hH,KAAA2hH,oBAAA,SAWApjH,IAAA,SACAE,MAAA,WACA,cAAAuB,KAAA2hH,uBAaApjH,IAAA,WACAE,MAAA,SAAA2lH,EAAAxI,GACA57G,KAAAg8G,YAIAh8G,KAAAg8G,UAAAoI,EACApkH,KAAA2jH,qBAAA/H,EAGA,SAAA57G,KAAAe,OAAAf,KAAAyjH,sBACAzjH,KAAA0jH,YAWAnlH,IAAA,kBACAE,MAAA,SAAAwzB,GACAjyB,KAAAuiH,QAAA,EACAviH,KAAAqkH,cACArkH,KAAAs3C,OAAA,EAAAt3C,KAAAs3D,YAAArlC,GAEAjyB,KAAAkiH,eAAA5P,mBACAtyG,KAAAuuC,QAAA,sBAWAhwC,IAAA,cACAE,MAAA,WACAuB,KAAAwiH,gBAAA,EACAxiH,KAAAmkH,kBASA5lH,IAAA,eACAE,MAAA,WACAuB,KAAA8wF,WAAA,KACA9wF,KAAAsiH,WAAA,KACAtiH,KAAA+mC,WAYAxoC,IAAA,SACAE,MAAA,SAAA0iB,EAAA3jB,EAAAy0B,GAMA,GALAjyB,KAAA8hH,gBACA9hH,KAAA8hH,eAAAxqE,OAAAn2B,EAAA3jB,EAAAy0B,GAEAshE,GAAApyE,EAAA3jB,EAAAwC,KAAAmhH,uBAEAnhH,KAAAi0F,kBACA,QAAAj7E,KAAAhZ,KAAAi0F,kBACAV,GAAApyE,EAAA3jB,EAAAwC,KAAAi0F,kBAAAj7E,OAYAza,IAAA,iBACAE,MAAA,WACAuB,KAAA2hH,qBACQ5wE,EAAA5vC,EAAQyjC,aAAA5kC,KAAA2hH,qBAGhB3hH,KAAA2hH,oBAAiC5wE,EAAA5vC,EAAQ2zB,WAAA90B,KAAAskH,mBAAA9kG,KAAAxf,MAAA,MAWzCzB,IAAA,qBACAE,MAAA,WACA,UAAAuB,KAAAe,OACAf,KAAAukH,cAGAvkH,KAAA2hH,qBACQ5wE,EAAA5vC,EAAQyjC,aAAA5kC,KAAA2hH,qBAGhB3hH,KAAA2hH,oBAAiC5wE,EAAA5vC,EAAQ2zB,WAAA90B,KAAAskH,mBAAA9kG,KAAAxf,MA9pBzC,QA4qBAzB,IAAA,cACAE,MAAA,WACA,IAAAuB,KAAA8hH,eAAAjL,WAAA,CAIA72G,KAAAsiH,aACAtiH,KAAAsiH,WAAAtiH,KAAAoiH,gBAAAoC,aAAAxkH,KAAAujH,UAAAvjH,KAAAs3D,YAAAt3D,KAAA4hH,iBAAA5hH,KAAA6gH,iBAIA,IAAA90E,EAAA/rC,KAAAykH,aAAAzkH,KAAA0kH,YAAA1kH,KAAAujH,UAAAvjH,KAAA8wF,WAAA9wF,KAAA2gH,aAAA3gH,KAAA6gH,eAAA7gH,KAAAsiH,YAEA,GAAAv2E,EAIAo0E,GAAAngH,KAAAujH,UAAAvjH,KAAAo0F,aAAAroD,EAAA+kD,YAGA9wF,KAAA2kH,eAIA54E,EAAA+kD,aAAA9wF,KAAAujH,UAAAl3B,SAAAp3F,OAAA,aAAA+K,KAAAo0F,aAAA9tD,YAAAtmC,KAAA+gH,eAWAh1E,EAAA64E,WAAA5kH,KAAA4hH,kBAAA,OAAA71E,EAAA84E,gBAAA94E,EAAA84E,eAAA7kH,KAAA8hH,eAAA5tB,qBACAl0F,KAAAoiH,gBAAApqD,QACAjsB,EAAAmoD,gBAAAnoD,EAAA84E,eACA7kH,KAAAkiH,eAAA5P,oBAGAtyG,KAAA8kH,aAAA/4E,QAiBAxtC,IAAA,eACAE,MAAA,SAAAiqD,EAAAyjC,EAAA2E,EAAA8vB,EAAAxsD,EAAA2xC,GACA,IAAAgf,EAAA,EACAF,OAAA,EAEAn8D,EAAAzzD,SACA8vH,EAAAr8D,EAAAlrD,IAAAkrD,EAAAzzD,OAAA,IAGA,IAAA+vH,EAAAvqH,KAAA6+C,IAAA,EAAAyrE,EAAA3wD,GAEA,IAAA+3B,EAAAE,SAAAp3F,OACA,YAKA,GAAA+vH,GAAAhlH,KAAAqhH,oBACA,YAKA,IAAAT,GAAAoE,GAAA,EACA,YAOA,UAAAjf,EAEA,OADAjV,EAAA9wF,KAAAilH,yBAAA94B,GACAnsF,KAAAklH,qBAAA/4B,EAAA2E,EAAA,SAIA,UAAAA,EAAA,CACA,IAAArE,EAAAN,EAAAE,SAAAyE,GAOA,OAJA+zB,EADAp4B,KAAAjvF,IACAivF,EAAAjvF,IAEAunH,EAEA/kH,KAAAklH,qBAAA/4B,EAAA2E,EAAA,EAAA+zB,GAAA,GAMA,GAAA7kH,KAAAwiH,eAAA,CAEA,IAAA2C,EAAA10B,GAAAG,oBAAAzE,EAAA44B,EAAAhf,EAAAqa,aAAAra,EAAAh3F,MAEA+hF,EAAAq0B,EAAAr0B,WACA+zB,EAAAM,EAAAhlF,cACO,CAEP,IAAAilF,EAAA30B,GAAAG,oBAAAzE,EAAA/3B,EAAA2xC,EAAAqa,aAAAra,EAAAh3F,MAEA+hF,EAAAs0B,EAAAt0B,WACA+zB,EAAAO,EAAAjlF,UAGA,OAAAngC,KAAAklH,qBAAA/4B,EAAA2E,EAAA+zB,GAAA,MAcAtmH,IAAA,2BACAE,MAAA,SAAA0tF,GACA,IAAAlrF,EAAAjB,KAEA,QAAAA,KAAA4hH,iBACA,SAGA,IAAAyD,EAAAl5B,EAAAE,SAAAnuF,IAAA,SAAAulE,EAAAnwE,GACA,OACAsxH,SAAAnhD,EAAAmhD,SACAxE,aAAA9sH,KAEOgL,OAAA,SAAAmlE,GACP,OAAAA,EAAAmhD,WAAA3jH,EAAA2gH,mBAGA,OAAAyD,EAAApwH,OACAowH,EAAA5qH,KAAAwgC,IAAAoqF,EAAApwH,OAAA,MAAAmrH,aAGA3lH,KAAA6+C,IAAA6yC,EAAAE,SAAAp3F,OAAA,QAGAsJ,IAAA,uBACAE,MAAA,SAAA0tF,EAAA2E,EAAA+zB,EAAAS,GACA,GAAAx0B,EAAA,GAAAA,GAAA3E,EAAAE,SAAAp3F,OACA,YAGA,IAAAw3F,EAAAN,EAAAE,SAAAyE,GAEA,OACAotB,UAAA,kBAAAzjH,KAAA6M,SAEA88B,IAAAqoD,EAAAE,YAEAmE,aAGAw0B,gBACAT,iBAEA14B,WAEAztF,MAAA,KAEAs/G,eAAA,KAGA9pB,gBAAA,KAEA0wB,SAAAn4B,EAAAm4B,SAEA7tH,SAAA01F,EAAA11F,SAEA01F,cAgBAluF,IAAA,qBACAE,MAAA,SAAAigH,GACA,GAAA1+G,KAAAstF,KAAAh6B,MAAArH,WAIAjsD,KAAA+hH,YAAAloF,UAEA75B,KAAAujH,UAAAjtE,WAAAi6C,UACA,SAMA,GAAAj/F,KAAAga,OAAAozG,EAAAE,sBAAAttH,KAAAga,OAAA,IACA,SAGA,IAAA8oD,EAAAp0D,KAAA6gH,eACA0E,EAAA7G,EAAAvtB,UACAD,EAAAlxF,KAAA6hH,gBAAA9qH,SAEAyuH,EAAA/0B,GAAAQ,2BAAAC,EAAAq0B,EAAAvlH,KAAAujH,UAAA7E,EAAAttB,eAKAq0B,EA9rVA,SAAA/8D,EAAA0L,GACA,IAAA+a,EAAAhsE,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,KAIA,QAFAulD,EAAAzzD,OAAAyzD,EAAAlrD,IAAAkrD,EAAAzzD,OAAA,MAEAm/D,GAAA+a,EAyrVAu2C,CAAA1lH,KAAA0kH,YAAAtwD,EAAAp0D,KAAAstF,KAAAh6B,MAAA6b,gBAAA,EAIA,GAAAq2C,GAAAC,EACA,SAGA,IAAAE,EApkCA,SAAAjyD,GACA,IAAAi4B,EAAAj4B,EAAAi4B,OACAv3B,EAAAV,EAAAU,YACA+8B,EAAAz9B,EAAAy9B,UACAy0B,EAAAlyD,EAAA38D,SACAm6F,EAAAx9B,EAAAw9B,gBACAw0B,EAAAhyD,EAAAgyD,kBACAG,EAAAnyD,EAAAmyD,gBACAxD,EAAA3uD,EAAA2uD,eAKAyD,EAAAn6B,EAAAS,UAAA9tF,OAAA,SAAA6tF,GACA,OAAAsE,GAAAP,eAAA/D,KAKA45B,EAAAD,EAAAxnH,OAAAmyF,GAAAN,WAEA41B,EAAA9wH,SAIA8wH,EAAAD,EAAAxnH,OAAA,SAAA6tF,GACA,OAAAsE,GAAAlxD,WAAA4sD,MAIA,IAEA65B,EAFAD,EAAAznH,OAAAmyF,GAAAzyD,aAAAxe,KAAA,mBAEAthB,IAAA,SAAAiuF,GACA,IAGA85B,EAHA5D,EAAAmC,aAAAr4B,EAAAy5B,EAAAC,EAAAzxD,GAGA,IAIA,OACA+3B,WACA+5B,kBALAz1B,GAAAQ,2BAAAC,EAAAC,EAAAhF,GACA85B,EAAAP,KAQAS,EAAAH,EAAA1nH,OAAA,SAAA8nH,GACA,OAAAA,EAAAF,mBAAA,IAQA,OAJAtG,GAAAuG,EAAA,SAAAhlH,EAAA+B,GACA,OAAA88G,GAAA98G,EAAAipF,SAAAhrF,EAAAgrF,YAGAg6B,EAAAlxH,OACAkxH,EAAA,IAGAvG,GAAAoG,EAAA,SAAA7kH,EAAA+B,GACA,OAAA/B,EAAA+kH,kBAAAhjH,EAAAgjH,oBAGAF,EAAA,UAqgCAK,EACA16B,OAAA3rF,KAAAstF,KAAAlB,UAAAT,OACAv3B,cACA+8B,UAAAo0B,EACAxuH,SAAAiJ,KAAAs3D,YACA45B,kBACAw0B,kBAAAD,EACAI,gBAAA7lH,KAAA4hH,iBACAS,eAAAriH,KAAAoiH,kBAGA,GAAAuD,EAAA,CAIA,IAEAW,EAFAd,EAAAC,EAEAE,EAAAO,kBAEAK,EAAA,GASA,OAJAd,GAt0VA,OAu0VAc,EAAA,IAGAZ,EAAAx5B,UAAAw5B,EAAAx5B,SAAA/nD,MAAApkC,KAAAujH,UAAAn/E,KAAAkiF,EAAAC,GACA,GAMAvmH,KAAAmxF,UAAAw0B,EAAAx5B,SAAA71C,WAAAi6C,UAAAmsB,GAAAI,mBAAA,EACA98G,KAAA+mC,QACA/mC,KAAAuuC,QAAA,eACA,OAcAhwC,IAAA,kBACAE,MAAA,SAAAqxC,EAAA02E,GACAxmH,KAAA6hH,iBAAA2E,EAAAtI,YAAAl+G,KAAA6hH,gBAAA3D,YAAAl+G,KAAAymH,mBAAAD,EAAA9H,QAIA1+G,KAAAuuC,QAAA,eAUAhwC,IAAA,eACAE,MAAA,SAAAstC,GACA/rC,KAAAe,MAAA,UACAf,KAAA6hH,gBAAA91E,EACA/rC,KAAA0mH,gBAAA36E,GAEAA,EAAAo3E,cAAAtE,GAAA7+G,KAAAstF,KAAAloD,IAAAplC,KAAA+hH,YAAA/hH,KAAAmiH,WAAAniH,KAAAkiH,eAAAliH,KAAA2mH,4BAAA56E,GAEA/rC,KAAA4mH,gBAAApnG,KAAAxf,WAAA6mH,wBAAArnG,KAAAxf,UAaAzB,IAAA,kBACAE,MAAA,SAAAstC,GACA,IAAA+6E,EAx7BA,SAAAC,EAAA3yD,EAAA64B,GACA,IAAA65B,OAAA,EAaA,OATAA,EAFAC,EAAA9xH,QAAA8xH,EAAA5lG,MAAA,MAAA4lG,EAAA5lG,MAAA,GAAAizC,EAEA2yD,EAAA5lG,MAAA,GAGAizC,EAAA,GAMA35D,KAAAwgC,IAAA6rF,EAAA1yD,EAAA64B,GA06BA+5B,CAAAhnH,KAAA8gH,YAAA9gH,KAAA6gH,eAAA7gH,KAAAujH,UAAAt2B,gBAAA,IAQA65B,EAAA,GACA9mH,KAAAs3C,OAAA,EAAAwvE,MAeAvoH,IAAA,8BACAE,MAAA,SAAAstC,GACA,IAAA0gD,EAAA1gD,EAAA0gD,QACA+5B,GACA75B,YAAAF,EAAAE,YACA+F,UAAAjG,EAAAiG,UACAwrB,UAAAnyE,EAAAmyE,WAGA,GAAAzxB,EAAAluF,IAAA,CAGA,IAAA8/G,EAAA5xB,EAAAluF,IAAA8/G,IAAA,IAAArmH,aAAA,MAAA+zC,EAAA+kD,WAAA/kD,EAAAogD,SAAAG,gBAEAk6B,EAAAjoH,KACAouF,YAAAF,EAAAluF,IAAAouF,YACA0xB,MAQA,OAJA5xB,EAAAvuF,MACAsoH,EAAAtoH,IAAA8B,KAAA6jC,YAAA4oD,EAAAvuF,MAGAsoH,KAWAjoH,IAAA,0BACAE,MAAA,SAAAo2B,EAAA2xF,GAWA,GARAxmH,KAAA2iH,eAAA,EAEA6D,EAAA9H,QACA1+G,KAAA0iH,uBAAA8D,EAAA9H,MAAAttB,cACApxF,KAAA+iH,uBAAAyD,EAAA9H,MAAA5sB,eAIA9xF,KAAA6hH,iBASA,GAAA2E,EAAAtI,YAAAl+G,KAAA6hH,gBAAA3D,UAAA,CAKA,GAAArpF,EAOA,OANA70B,KAAA6hH,gBAAA,KACA7hH,KAAAe,MAAA,QAKA8zB,EAAAmS,OAAAk2E,QACAl9G,KAAA4iH,sBAAA,IAIA5iH,KAAAmsD,QAKAt3B,EAAAmS,OAAAk2E,IACAl9G,KAAA6iH,uBAAA,EACA7iH,KAAAmxF,UAAA,EACAnxF,KAAAygH,UAAAhoC,SACAz4E,KAAAuuC,QAAA,qBAMAvuC,KAAA8iH,sBAAA,EACA9iH,KAAA60B,cACA70B,KAAAuuC,QAAA,WAMAvuC,KAAAmxF,UAAAq1B,EAAA9H,MAAAvtB,UACAnxF,KAAAygH,UAAA+F,EAAA9H,MAAA5sB,cAIA00B,EAAAtoH,MACAsoH,EAAAtoH,IAAA8B,KAAA6jC,YAAA2iF,EAAAtoH,KAAA,IAGA8B,KAAAinH,wBAAAT,SAzDAxmH,KAAA4iH,sBAAA,KAoEArkH,IAAA,0BACAE,MAAA,SAAA+nH,GACA,IAAAz6E,EAAA/rC,KAAA6hH,gBAEA91E,EAAArtC,MAAA8nH,EAAA9nH,MACA8nH,EAAAtoH,MACA6tC,EAAA0gD,QAAAvuF,IAAAQ,MAAA8nH,EAAAtoH,IAAAQ,OAGAqtC,EAAA6xE,iBAAA4I,EAAA5I,iBAGA4I,EAAA/G,gBA5sCA,SAAAgC,EAAAt3D,EAAAkkD,GACA,QAAAzzG,KAAAyzG,EACA,IAAAoT,EAAA7mH,GAAA,CACAuvD,EAAA5b,SAAoBhxC,KAAA,QAAAvH,KAAA,YACpB,IAAAgyB,EAAAmiC,EAAAK,aAAAgE,aAAA5zD,GAMA6mH,EAAA7mH,GAJAotB,GAQAmiC,EAAAO,oBACA0E,KAAA,WACAp2C,GAAApe,EACA6wD,MAAA7wD,IACS,GAAAotB,OA2rCTk/F,CAAAlnH,KAAAi0F,kBAAAj0F,KAAAstF,KAAAh6B,MAAAkzD,EAAAnY,gBArrCA,SAAAvqB,GACA,IAAA29B,EAAA39B,EAAA29B,iBACA7tB,EAAA9P,EAAA8P,aACAM,EAAApQ,EAAAoQ,gBAEA,GAAAN,EAAA,CAIA,IAAAE,EAAAlxF,OAAAmxF,eAAAnxF,OAAA2xD,OAEAq/B,EAAAztF,QAAA,SAAA6tF,GACA,IAAAhsE,EAAAgsE,EAAAtkD,OACAvP,EAAA6zD,EAAA7zD,UACA8pB,EAAA+pC,EAAA/pC,QAEAw3D,EAAAz5F,KAIAmY,GAAA+zD,EACAjqC,GAAAiqC,EAEAutB,EAAAz5F,GAAA2iC,OAAA,IAAAmpC,EAAA3zD,EAAA8pB,EAAA+pC,EAAA1xF,WA+pCA6kH,EACA1F,iBAAAzhH,KAAAi0F,kBACAL,aAAA4yB,EAAA/G,aAEAvrB,gBAAA,IAIAl0F,KAAAkiH,eAAA9P,uBAGApyG,KAAAonH,oBAUA7oH,IAAA,iBACAE,MAAA,WACA,IAAA4mD,EAAArlD,KAEA,GAAAA,KAAA6hH,gBAAA,CAKA,IAAA91E,EAAA/rC,KAAA6hH,gBACAp1B,EAAA1gD,EAAA0gD,QACA46B,EAAArnH,KAAAoiH,gBAAAkF,iBAAAv7E,QAKA,IAAA/rC,KAAAkhH,gBAAAmG,IAGAA,EAAAE,eAAAF,EAAAG,iBACAxnH,KAAAkhH,gBACAqG,cAAAF,EAAAE,cACAC,cAAAH,EAAAG,gBAIA,IApqCAvG,EAAAwG,EAAAC,EAoqCAC,GApqCA1G,EAoqCAjhH,KAAAghH,YApqCAyG,EAoqCAznH,KAAAkhH,eApqCAwG,EAoqCAL,EAjqCA,SAAApG,GAAAwG,GAAAC,EAIAA,EAAAH,eAAAG,EAAAF,cAIAC,EAAAD,gBAAAE,EAAAF,cACA,6LAGAC,EAAAD,eAAAE,EAAAF,cACA,kMAGA,KAXA,4CAJA,MAkqCA,GAAAG,EAMA,OALA3nH,KAAA60B,OACAq0B,QAAAy+D,EACAC,kBAAA9mF,WAEA9gC,KAAAuuC,QAAA,SAIA,GAAAxC,EAAAu5E,cAIA,OAHAtlH,KAAAuuC,QAAA,kBACAvuC,KAAA6hH,gBAAA,UACA7hH,KAAAe,MAAA,SAIA,OAAAgrC,EAAAmoD,iBAAAnoD,EAAAmoD,kBAAAl0F,KAAA8hH,eAAA5tB,oBACAl0F,KAAA8hH,eAAA5tB,gBAAAnoD,EAAAmoD,iBAEAl0F,KAAAuuC,QAAA,oBAGA,IAAAs5E,EAAA7nH,KAAAoiH,gBAAA0F,mBAAA/7E,EAAA64E,UAaA,GAXA,OAAAiD,GACA7nH,KAAAuuC,SACAhxC,KAAA,qBACAg6G,QAAAsQ,IAIA7nH,KAAAe,MAAA,YAIA0rF,EAAAvuF,IAAA,CACA,IAAA6pH,EAAAt1B,GAAAhG,EAAAvuF,KAEA,IAAA8B,KAAAgiH,sBAAAhiH,KAAAgiH,uBAAA+F,EAAA,CACA,IAAAlkF,EAAA7jC,KAAA6jC,YAAA4oD,EAAAvuF,KAEA8B,KAAA8hH,eAAA1J,aAAAv0E,EAAAnlC,MAAA,WACA2mD,EAAA28D,qBAAA+F,KAKAh8E,EAAAx5C,WAAAw5C,EAAArtC,MAAAnM,WACA,iBAAAk6F,EAAAtrE,OAAA,iBAAAsrE,EAAAjvF,IACAwC,KAAAgjH,oBAAAv2B,EAAAjvF,IAAAivF,EAAAtrE,MAEAnhB,KAAAgjH,oBAAAv2B,EAAA11F,SAGAiJ,KAAAi8G,QAxqCA,SAAAlwE,GACA,IAAAi8E,EAAAj8E,EAAA0gD,QACAtrE,EAAA6mG,EAAA7mG,MACA3jB,EAAAwqH,EAAAxqH,IACAyqH,EAAAl8E,EAAAogD,SACA+7B,EAAAD,EAAA37B,cACAtzE,EAAAivG,EAAAjvG,GACAmvG,EAAAF,EAAA57B,SACAA,OAAAzoD,IAAAukF,OACAhqH,EAAA4tC,EAAA+kD,WACA8zB,EAAA74E,EAAA64E,SAEA,qBAAAzmH,EAAA,SAAA+pH,EAAA,MAAAA,EAAA77B,EAAAp3F,QAAA,oBAAA+jB,EAAA,QAAAmI,EAAA,OAAA3jB,EAAA,kBAAAonH,EAAA,KAAA3mH,KAAA,KA4pCAmqH,CAAAr8E,IAEA/rC,KAAA8hH,eAAA1J,aAAArsE,EAAArtC,MAAAsB,KAAAqoH,iBAAA7oG,KAAAxf,YA/EAA,KAAAe,MAAA,WA2FAxC,IAAA,mBACAE,MAAA,WACA,IAAAuB,KAAA6hH,gBAKA,OAJA7hH,KAAAe,MAAA,aACAf,KAAAisD,UACAjsD,KAAAkjH,kBAKA,IAAAn3E,EAAA/rC,KAAA6hH,gBACAp1B,EAAA1gD,EAAA0gD,QACA67B,EAAA,OAAAtoH,KAAA8wF,YAEA9wF,KAAA6hH,gBAAA,KACA7hH,KAAAuoH,kBAAAx8E,GACA/rC,KAAAwoH,uBAAAz8E,GAEA/rC,KAAAe,MAAA,QAEAf,KAAA8wF,WAAA/kD,EAAA+kD,WACA9wF,KAAAwiH,gBAAA,EACAxiH,KAAA4hH,iBAAA71E,EAAA64E,SAMA5kH,KAAAuuC,QAAA,kBAMAk+C,EAAAjvF,KAAAwC,KAAA6gH,eAAAp0B,EAAAjvF,IAAA,EAAAuuC,EAAAogD,SAAAc,gBACAjtF,KAAA4jH,mBAMA0E,GACAtoH,KAAAuuC,QAAA,mBAEAvuC,KAAAuuC,QAAA,YAKA4xE,GAAAp0E,EAAAogD,SAAAnsF,KAAAo0F,aAAAroD,EAAA+kD,WAAA,IAGA9wF,KAAA2kH,cAGA3kH,KAAAisD,UACAjsD,KAAAkjH,qBAeA3kH,IAAA,oBACAE,MAAA,SAAAstC,GACA,IAAAl0C,EAAAmI,KAAAwgH,WAAA3oH,KAGA4wH,EAAAn3H,KAAAga,MAAAygC,EAAA6xE,iBAAA,EAEA8K,EAAAjuH,KAAA+oC,MAAAuI,EAAAx5C,WAAAk2H,EAAA,OAIAzoH,KAAAwgH,WAAA3oH,OAAA6wH,EAAA7wH,KAAAmI,KAAAwgH,WAAAr4E,SAcA5pC,IAAA,yBACAE,MAAA,SAAAstC,GACA,GAAA/rC,KAAAmhH,sBAAA,CAIA,IAAA10B,EAAA1gD,EAAA0gD,QACAtrE,EAAAsrE,EAAAtrE,MACA3jB,EAAAivF,EAAAjvF,IAGA,GAAA8iH,GAAAn/F,IAAAm/F,GAAA9iH,GAAA,CAIA+1F,GAAApyE,EAAA3jB,EAAAwC,KAAAmhH,uBAEA,IAAArtB,EAAgB/iD,EAAA5vC,EAAQ4yF,eAAkBhjD,EAAA5vC,EAAQozD,OAClD91D,GACA0yF,UAAAplD,EAAAogD,SAAA71C,WAAAi6C,UACAo4B,WAAA58E,EAAAogD,SAAA71C,WAAAsyE,WACAvV,OAAAtnE,EAAAogD,SAAA71C,WAAA49D,OACA3hH,WAAAw5C,EAAAx5C,WACA6xC,IAAA2H,EAAA3H,IACAwgF,SAAA74E,EAAA64E,SACAz4B,SAAApgD,EAAAogD,SAAA/nD,IACAjjB,QACA3jB,OAGAwsD,EAAA,IAAA8pC,EAAA3yE,EAAA3jB,EADA0B,KAAAC,UAAAV,IAKAurD,EAAAvrD,QAEAuB,KAAAmhH,sBAAAx2D,OAAAX,SAGAu2D,EAtyCA,CAuyCCh4B,GAAA1qC,aAEDgrE,GAAA,SAAAC,GACA,OAAA3yH,mBAAAC,OAAAH,OAAAC,aAAAsO,MAAA,KAAAskH,MAOAC,GAAA,IAAA90H,WAAA,OAAAmL,MAAA,IAAAlB,IAAA,SAAAoP,GACA,OAAAA,EAAAi1B,WAAA,MAWAymF,GAAA,SAAAC,GAGA,SAAAD,EAAAt1D,GACA,IAAAxxC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAsnF,GAAAzqF,KAAAgpH,GAIA,IAAA/oH,EAAA6qF,GAAA9qF,MAAAgpH,EAAAx0E,WAAAp2C,OAAAivF,eAAA27B,IAAAnqH,KAAAmB,KAAA0zD,EAAAxxC,IAKA,OAHAjiB,EAAAm0F,aAAA,KAEAn0F,EAAAipH,gBAAA,KACAjpH,EAwYA,OArZA4qF,GAAAm+B,EAsZCzI,IA/XD71B,GAAAs+B,IACAzqH,IAAA,YACAE,MAAA,WACA,IAAAuB,KAAAkpH,kBAAAlpH,KAAAkpH,gBAAAn/D,KAAA90D,OACA,OAAAszF,GAAA//B,mBAGA,IAAAuB,EAAA/pD,KAAAkpH,gBAAAn/D,KACA5oC,EAAA4oC,EAAA,GAAA5pB,UACA3iC,EAAAusD,IAAA90D,OAAA,GAAAkrC,UAEA,OAAAooD,GAAA//B,mBAAArnC,EAAA3jB,QAeAe,IAAA,cACAE,MAAA,SAAAP,GACA,IAAAmlH,EAAAlgH,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,IAAAA,UAAA,GAEA,IAAAjF,EACA,YAGA,IAAA8a,EAAAy5E,GAAAv0F,GACAolH,EAAAtjH,KAAAiiH,cAAAjpG,GAEA,GAAAqqG,IAAAC,GAAAplH,EAAAQ,MAAA,CAKA,IAAAyqH,EAAAJ,GAAAx2H,WAAA2L,EAAAQ,MAAAnM,WACA62H,EAAA,IAAAn1H,WAAAk1H,GAEAC,EAAAr5G,IAAA7R,EAAAQ,OACA0qH,EAAAr5G,IAAAg5G,GAAA7qH,EAAAQ,MAAAnM,YAEAyN,KAAAiiH,cAAAjpG,GAAAsqG,GACA32B,YAAAzuF,EAAAyuF,YACA+F,UAAAx0F,EAAAw0F,UACAh0F,MAAA0qH,GAIA,OAAA9F,GAAAplH,KAWAK,IAAA,qBACAE,MAAA,WACA,OAAAuB,KAAAujH,WAAAvjH,KAAAkpH,kBAAAlpH,KAAAisD,YAYA1tD,IAAA,QACAE,MAAA,WAGA,OAFAuB,KAAAe,MAAA,QACAf,KAAA4jH,kBACA5jH,KAAAkjH,oBAaA3kH,IAAA,QACAE,MAAA,SAAA4qH,GACA,gBAAAA,EACArpH,KAAAkpH,iBAGAlpH,KAAAkpH,gBAAAG,EAIA,SAAArpH,KAAAe,OAAAf,KAAAyjH,sBACAzjH,KAAA0jH,QAGA1jH,KAAAkpH,oBAUA3qH,IAAA,SACAE,MAAA,SAAA0iB,EAAA3jB,GACA+1F,GAAApyE,EAAA3jB,EAAAwC,KAAAkpH,oBAcA3qH,IAAA,cACAE,MAAA,WACA,IAAAwC,EAAAjB,KAEAA,KAAAsiH,aACAtiH,KAAAsiH,WAAAtiH,KAAAoiH,gBAAAoC,aAAAxkH,KAAAujH,UAAAvjH,KAAAs3D,YAAAt3D,KAAA4hH,iBAAA5hH,KAAA6gH,iBAIA,IAAA90E,EAAA/rC,KAAAykH,aAAAzkH,KAAA0kH,YAAA1kH,KAAAujH,UAAAvjH,KAAA8wF,WAAA9wF,KAAA2gH,aAAA3gH,KAAA6gH,eAAA7gH,KAAAsiH,YAIA,GAFAv2E,EAAA/rC,KAAAspH,mBAAAv9E,GAEA,CAIA,UAAA/rC,KAAAoiH,gBAAAmH,2BAAAx9E,EAAA64E,UAAA,CAaA,OAFA5kH,KAAAoiH,gBAAAnmE,IAAA,kBARA,WACAh7C,EAAAF,MAAA,QACAE,EAAAgrD,UAEAhrD,EAAAiiH,wBAKAljH,KAAAe,MAAA,uBAIAf,KAAA8kH,aAAA/4E,OAeAxtC,IAAA,qBACAE,MAAA,SAAAstC,GACA,KAAAA,KAAA0gD,QAAAz/B,OACAjhB,EAAA/rC,KAAAklH,qBAAAn5E,EAAAogD,SAAApgD,EAAA+kD,WAAA,EAAA/kD,EAAA84E,eAAA94E,EAAAh1C,SAAAg1C,EAAAu5E,eAEA,OAAAv5E,KAUAxtC,IAAA,iBACAE,MAAA,WACA,IAAA4mD,EAAArlD,KAEA,GAAAA,KAAA6hH,iBAAA7hH,KAAAkpH,gBAAA,CAKAlpH,KAAAe,MAAA,YAEA,IAAAgrC,EAAA/rC,KAAA6hH,gBACAp1B,EAAA1gD,EAAA0gD,QAGA,GAAyB,mBAAR17C,EAAA5vC,EAAQqxD,QAAAxyD,KAAAkpH,iBAAAlpH,KAAAkpH,gBAAA51D,MAAA,CAEzB,IAAAC,EAAA,WACAlO,EAAA+hE,kBAeA,OAZApnH,KAAAe,MAAA,mBACAf,KAAAkpH,gBAAA51D,MAAArX,IAAA,cAAAsX,QACAvzD,KAAAkpH,gBAAA51D,MAAArX,IAAA,wBACAoJ,EAAA6jE,gBAAA51D,MAAAtgB,IAAA,cAAAugB,GACAlO,EAAAxwB,OACAq0B,QAAA,yBAEA7D,EAAAtkD,MAAA,QACAskD,EAAA8G,QACA9G,EAAA9W,QAAA,WAMAk+C,EAAA+8B,WAAA,EAEA,IACAxpH,KAAAypH,cAAA19E,GACO,MAAAxoC,GAMP,OALAvD,KAAA60B,OACAq0B,QAAA3lD,EAAA2lD,UAEAlpD,KAAAe,MAAA,QACAf,KAAAmsD,QACAnsD,KAAAuuC,QAAA,SAKA,GAFAvuC,KAAA0pH,mBAAA39E,EAAA/rC,KAAAoiH,gBAAAuH,UAAA59E,EAAA64E,UAAA5kH,KAAAujH,WAEAx3E,EAAAu5E,cAIA,OAHAtlH,KAAAuuC,QAAA,kBACAvuC,KAAA6hH,gBAAA,UACA7hH,KAAAe,MAAA,SAIAgrC,EAAAx5C,WAAAw5C,EAAArtC,MAAAnM,WAEAyN,KAAAgjH,oBAAAv2B,EAAA11F,SAEAg1C,EAAAge,KAAA90D,QAEA+K,KAAAs3C,OAAAvL,EAAAge,KAAA,GAAAE,QAAAle,EAAAge,KAAAhe,EAAAge,KAAA90D,OAAA,GAAAg1D,SAGAle,EAAAge,KAAA5jD,QAAA,SAAA6jD,GACA3E,EAAA6jE,gBAAAv+D,OAAAX,KAGAhqD,KAAAqoH,wBAlEAroH,KAAAe,MAAA,WA8EAxC,IAAA,gBACAE,MAAA,SAAAstC,GACA,IAAA69E,OAAA,EACAC,GAAA,EAEyB,mBAAR94E,EAAA5vC,EAAQ2oH,YACzBF,EAAA,IAAsB74E,EAAA5vC,EAAQ2oH,YAAA,SAE9BF,EAAkB74E,EAAA5vC,EAAQqxD,OAAAG,gBAC1Bk3D,GAAA,GAGA,IAAAt3D,EAAA,IAAuBxhB,EAAA5vC,EAAQqxD,OAAAC,OAAe1hB,EAAA5vC,EAAU4vC,EAAA5vC,EAAQuxD,MAAAk3D,GAahE,GAXA79E,EAAAge,QACAhe,EAAAg+E,cAAkCC,OAAA,EAAAC,MAAA,GAElC13D,EAAAM,MAAA9mB,EAAAge,KAAA/1D,KAAAwrB,KAAAusB,EAAAge,MACAwI,EAAA23D,eAAA,SAAAhsH,GACA,OAAA6tC,EAAAg+E,aAAA7rH,GAEAq0D,EAAAO,eAAA,SAAAj+B,GACA0zD,GAAAhoF,IAAA2yC,KAAA,wCAAAre,EAAAq0B,UAGAnd,EAAA0gD,QAAAvuF,IAAA,CACA,IAAAisH,EAAAp+E,EAAA0gD,QAAAvuF,IAAAQ,MAEAmrH,IACAM,EAAAtB,GAAAsB,IAGA53D,EAAAvgE,MAAAm4H,GAGA,IAAAC,EAAAr+E,EAAArtC,MAEAmrH,IACAO,EAAAvB,GAAAuB,IAGA73D,EAAAvgE,MAAAo4H,GACA73D,EAAA3lB,WAkBAruC,IAAA,qBACAE,MAAA,SAAAstC,EAAAs+E,EAAAl+B,GACA,IAAAM,EAAA1gD,EAAA0gD,QAEA,GAAA49B,EAOA,GAAAt+E,EAAAge,KAAA90D,OAAA,CAQA,IAAA80H,EAAAh+E,EAAAg+E,aACAO,EAAAP,EAAAC,OAAA,IAAAD,EAAAE,MAAAI,EAAA9S,QAQA,GANAxrE,EAAAge,KAAA5jD,QAAA,SAAA6jD,GAEAA,EAAA7pB,WAAAmqF,EACAtgE,EAAAC,SAAAqgE,KAGAn+B,EAAA43B,SAAA,CACA,IAAAwG,EAAAx+E,EAAAge,KAAA,GAAA5pB,UACAqqF,EAAAz+E,EAAAge,KAAAhe,EAAAge,KAAA90D,OAAA,GAAAkrC,UAEAgsD,EAAA43B,UACAz3B,cAAAH,EAAAG,cAAAvgD,EAAA+kD,WACA/hF,KAAAtU,KAAAwgC,IAAAsvF,EAAAC,EAAA/9B,EAAA11F,iBAnBA01F,EAAAz/B,OAAA,MAwBAg8D,EAtZA,GAgaAyB,GAAA,SAAAziG,EAAA0iG,GAGA,IAFA,IAAA3gE,EAAA/hC,EAAA+hC,KAEAz2D,EAAA,EAAiBA,EAAAy2D,EAAA90D,OAAiB3B,IAAA,CAClC,IAAA02D,EAAAD,EAAAz2D,GAEA,GAAAo3H,GAAA1gE,EAAA2gE,aAAAD,GAAA1gE,EAAA4gE,UACA,OAAA5gE,EAGA,aAiFA6gE,GAAc34E,EAAA/wC,EAAW5B,QAEzBurH,KAIA90H,KAAA,MACA+0H,IAAA,SAAA1I,EAAAl2B,EAAAy5B,EAAAC,EAAAzxD,GACA,GAAAwxD,IAAA9kF,IAAA,CAMA,OAJA/xB,KAAA,EACAqxG,aAAA,GAKA,eAKApqH,KAAA,kBACA+0H,IAAA,SAAA1I,EAAAl2B,EAAAy5B,EAAAC,EAAAzxD,GACA,IAAAiuD,EAAA2I,sBACA,YAGA,IAAA3+B,EAAAF,EAAAE,aACA0Z,EAAA,KACAklB,EAAA,KAEA72D,KAAA,EAEA,QAAA9gE,EAAA,EAAmBA,EAAA+4F,EAAAp3F,OAAqB3B,IAAA,CACxC,IAAAm5F,EAAAJ,EAAA/4F,GAEA,GAAAm5F,EAAAy+B,eAAA,CACA,IACAC,EADA1+B,EAAAy+B,eAAA9wE,UAAA,IACAioE,EAAA2I,sBACAI,EAAA3wH,KAAAg5F,IAAAr/B,EAAA+2D,GAIA,UAAAF,KAAAG,EACA,MAGAH,EAAAG,EACArlB,GACAh3F,KAAAo8G,EACA/K,aAAA9sH,IAIA,OAAAyyG,KAMA/vG,KAAA,UACA+0H,IAAA,SAAA1I,EAAAl2B,EAAAy5B,EAAAC,EAAAzxD,GACA,IAAAi4B,EAAAF,EAAAE,aACA0Z,EAAA,KACAklB,EAAA,KAEA72D,KAAA,EAEA,QAAA9gE,EAAA,EAAmBA,EAAA+4F,EAAAp3F,OAAqB3B,IAAA,CACxC,IAAAm5F,EAAAJ,EAAA/4F,GAEA,GAAAm5F,EAAAm4B,WAAAiB,QAAA,IAAAp5B,EAAAtrE,MAAA,CACA,IAAAiqG,EAAA3wH,KAAAg5F,IAAAr/B,EAAAq4B,EAAAtrE,OAIA,UAAA8pG,KAAAG,EACA,QAGArlB,GAAA,OAAAklB,MAAAG,KACAH,EAAAG,EACArlB,GACAh3F,KAAA09E,EAAAtrE,MACAi/F,aAAA9sH,KAKA,OAAAyyG,KAMA/vG,KAAA,gBACA+0H,IAAA,SAAA1I,EAAAl2B,EAAAy5B,EAAAC,EAAAzxD,GACA,IAAA2xC,EAAA,KAIA,GAFA3xC,KAAA,EAEA+3B,EAAAk/B,qBAAAl/B,EAAAk/B,oBAAAp2H,OAGA,IAFA,IAAAg2H,EAAA,KAEA33H,EAAA,EAAqBA,EAAA64F,EAAAk/B,oBAAAp2H,OAAyC3B,IAAA,CAC9D,IAAA8sH,EAAAj0B,EAAAk/B,oBAAA/3H,GACAswG,EAAAzX,EAAAm/B,sBAAAh4H,EAAA,EACAi4H,EAAAlJ,EAAAmJ,gBAAA5nB,GAEA,GAAA2nB,EAAA,CACA,IAAAH,EAAA3wH,KAAAg5F,IAAAr/B,EAAAm3D,EAAAx8G,MAIA,UAAAk8G,KAAAG,EACA,QAGArlB,GAAA,OAAAklB,MAAAG,KACAH,EAAAG,EACArlB,GACAh3F,KAAAw8G,EAAAx8G,KACAqxG,kBAMA,OAAAra,KAMA/vG,KAAA,WACA+0H,IAAA,SAAA1I,EAAAl2B,EAAAy5B,EAAAC,EAAAzxD,GACA,OAAA+3B,EAAA43B,UAEAh1G,KAAAo9E,EAAA43B,SAAAh1G,KACAqxG,aAAAj0B,EAAA43B,SAAAz3B,cAAAH,EAAAG,eAKA,QAIAm/B,GAAA,SAAAhW,GAGA,SAAAgW,IACAhhC,GAAAzqF,KAAAyrH,GAIA,IAAAxrH,EAAA6qF,GAAA9qF,MAAAyrH,EAAAj3E,WAAAp2C,OAAAivF,eAAAo+B,IAAA5sH,KAAAmB,OAUA,OARAC,EAAAyrH,mBAAA9nF,EAGA3jC,EAAA0pH,aACA1pH,EAAAurH,mBACAvrH,EAAA+qH,sBAAA,KAEA/qH,EAAAg8G,QAAAP,GAAA,kBACAz7G,EAsaA,OAvbA4qF,GAAA4gC,EAAAhW,GAoCA/qB,GAAA+gC,IACAltH,IAAA,eACAE,MAAA,SAAA0tF,EAAAy5B,EAAAC,EAAAzxD,GACA,IAAAu3D,EAAA3rH,KAAA4rH,eAAAz/B,EAAAy5B,EAAAC,EAAAzxD,GAEA,OAAAu3D,EAAA12H,OAUA+K,KAAA6rH,iBAAAF,GAAgDptH,IAAA,OAAAE,MAAA21D,IANhD,QAsBA71D,IAAA,iBACAE,MAAA,SAAA0tF,EAAAy5B,GACA,IAAAz5B,MAAAE,SACA,YAGA,IAAAs/B,EAAA3rH,KAAA4rH,eAAAz/B,EAAAy5B,EAAAz5B,EAAAm/B,sBAAA,GAGA,IAAAK,EAAA12H,OACA,YAGA,IAAA8wG,EAAA/lG,KAAA6rH,iBAAAF,GACAptH,IAAA,eACAE,MAAA,IASA,OAJAsnG,EAAAqa,aAAA,IACAra,EAAAh3F,OAAA,GAGAtU,KAAAg5F,IAAAsS,EAAAh3F,KAAAogF,GAAAhD,EAAA4Z,EAAAqa,aAAA,OAmBA7hH,IAAA,iBACAE,MAAA,SAAA0tF,EAAAy5B,EAAAC,EAAAzxD,GAIA,IAHA,IAAAu3D,KAGAr4H,EAAA,EAAqBA,EAAAw3H,GAAA71H,OAAgC3B,IAAA,CACrD,IAAAw4H,EAAAhB,GAAAx3H,GACAyyG,EAAA+lB,EAAAf,IAAA/qH,KAAAmsF,EAAAy5B,EAAAC,EAAAzxD,GAEA2xC,IACAA,EAAA+lB,WAAA91H,KACA21H,EAAA33H,MACA83H,WAAA91H,KACA+vG,eAKA,OAAA4lB,KAoBAptH,IAAA,mBACAE,MAAA,SAAAktH,EAAAxhH,GAKA,IAJA,IAAA4hH,EAAAJ,EAAA,GAAA5lB,UACAimB,EAAAvxH,KAAAg5F,IAAAk4B,EAAA,GAAA5lB,UAAA57F,EAAA5L,KAAA4L,EAAA1L,OACAwtH,EAAAN,EAAA,GAAAG,SAEAx4H,EAAA,EAAqBA,EAAAq4H,EAAA12H,OAAuB3B,IAAA,CAC5C,IAAA44H,EAAAzxH,KAAAg5F,IAAAk4B,EAAAr4H,GAAAyyG,UAAA57F,EAAA5L,KAAA4L,EAAA1L,OAEAytH,EAAAF,IACAA,EAAAE,EACAH,EAAAJ,EAAAr4H,GAAAyyG,UACAkmB,EAAAN,EAAAr4H,GAAAw4H,UAMA,OAFA9rH,KAAAi8G,QAAA,kBAAA9xG,EAAA5L,IAAA,KAAA4L,EAAA1L,MAAA,2BAAAwtH,EAAA,YAAAF,EAAAh9G,KAAA,kBAAAg9G,EAAA3L,aAAA,KAEA2L,KAaAxtH,IAAA,yBACAE,MAAA,SAAAqlH,EAAAD,GAKA,IAJA,IAIAvwH,EAJAuwH,EAAAv3B,cAAAw3B,EAAAx3B,cAIA,EAAyCh5F,GAAA,EAAQA,IAAA,CACjD,IAAA64H,EAAArI,EAAAz3B,SAAA/4F,GAEA,GAAA64H,QAAA,IAAAA,EAAAhrG,MAAA,CACA0iG,EAAAE,UACAz3B,cAAAw3B,EAAAx3B,cAAAh5F,EACAyb,KAAAo9G,EAAAhrG,OAEAnhB,KAAAi8G,QAAA,gCAAA4H,EAAAE,SAAAh1G,KAAA,oBAAA80G,EAAAE,SAAAz3B,cAAA,KACAtsF,KAAAuuC,QAAA,kBACA,WAaAhwC,IAAA,qBACAE,MAAA,SAAA0tF,GACA,IAAAnsF,KAAAgrH,uBAAA7+B,EAAAE,UAAAF,EAAAE,SAAAp3F,QAAAk3F,EAAAE,SAAA,GAAA6+B,eAAA,CACA,IAAAkB,EAAAjgC,EAAAE,SAAA,GAAA6+B,eAAA9wE,UAAA,IAEAp6C,KAAAgrH,uBAAAoB,MAUA7tH,IAAA,QACAE,MAAA,WACAuB,KAAA0rH,mBAAA9nF,KAaArlC,IAAA,mBACAE,MAAA,SAAAstC,GACA,IAAA0gD,EAAA1gD,EAAA0gD,QACAN,EAAApgD,EAAAogD,SACAk7B,OAAA,EAuBA,OApBAA,EADA56B,EAAAvuF,IACA8B,KAAAqsH,iBAAAtgF,GAEA/rC,KAAAssH,gBAAAvgF,KAIA/rC,KAAAusH,6BAAAxgF,EAAAs7E,KACArnH,KAAAwsH,2BAAAzgF,GAIAogD,EAAA43B,WACA53B,EAAA43B,UACAz3B,cAAAH,EAAAG,cAAAvgD,EAAA+kD,WACA/hF,KAAA09E,EAAAtrE,SAMAkmG,KAaA9oH,IAAA,mBACAE,MAAA,SAAAstC,GACA,IAAA0gD,EAAA1gD,EAAA0gD,QACAqlB,EAAuB//D,EAAA5wC,EAAQrK,UAAA21F,EAAAvuF,IAAAQ,OAC/ByhC,EAAsB4R,EAAA5wC,EAAQg/B,UAAA2xE,EAAA/lE,EAAArtC,OAM9B,OAJA,OAAAqtC,EAAAmoD,kBACAnoD,EAAAmoD,iBAAA/zD,IAIAhf,MAAAgf,EACA3iC,IAAA2iC,EAAAssD,EAAA11F,aAcAwH,IAAA,kBACAE,MAAA,SAAAstC,GACA,IAAA0gF,EAAA5B,GAAA9+E,EAAArtC,MAAAsB,KAAA0rH,eACAgB,OAAA,EACAC,OAAA,EAEA,OAAAF,GAIAA,EAAAlrH,OAAA,IAAAkrH,EAAAlrH,MAAAtM,QACA+K,KAAA0rH,cAAAe,EAAAlrH,MAAA,GAAAqqC,IACA8gF,EAAAD,EAAAlrH,MAAA,GAAA2qC,QACAygF,EAAAF,EAAAlrH,MAAA,GAAA2qC,SACOugF,EAAAjqF,OAAA,IAAAiqF,EAAAjqF,MAAAvtC,SACP+K,KAAA0rH,cAAAe,EAAAjqF,MAAA,GAAAoJ,IACA8gF,EAAAD,EAAAjqF,MAAA,GAAA0J,QACAygF,EAAAF,EAAAjqF,MAAA,GAAA0J,UAIA/qB,MAAAurG,EACAlvH,IAAAmvH,EACAnF,cAAAiF,EAAAlrH,OAAA,IAAAkrH,EAAAlrH,MAAAtM,OACAsyH,cAAAkF,EAAAjqF,OAAA,IAAAiqF,EAAAjqF,MAAAvtC,SAjBA,QAqBAsJ,IAAA,6BACAE,MAAA,SAAAmmH,GACA,gBAAA5kH,KAAA2pH,UAAA/E,GACA,KAEA5kH,KAAA2pH,UAAA/E,GAAA71G,QAGAxQ,IAAA,qBACAE,MAAA,SAAAmmH,GACA,gBAAA5kH,KAAA2pH,UAAA/E,GACA,KAEA5kH,KAAA2pH,UAAA/E,GAAArN,WAiBAh5G,IAAA,+BACAE,MAAA,SAAAstC,EAAAs7E,GACA,IAAA56B,EAAA1gD,EAAA0gD,QACA49B,EAAArqH,KAAA2pH,UAAA59E,EAAA64E,UAEA,UAAA74E,EAAAmoD,gBACAm2B,GACAt7G,KAAAg9B,EAAA84E,eACAtN,QAAAxrE,EAAA84E,eAAAwC,EAAAlmG,OAEAnhB,KAAA2pH,UAAA59E,EAAA64E,UAAAyF,EACArqH,KAAAuuC,QAAA,mBAEAvuC,KAAAi8G,QAAA,6BAAAlwE,EAAA64E,SAAA,YAAAyF,EAAAt7G,KAAA,eAAAs7G,EAAA9S,QAAA,KAEA9qB,EAAAtrE,MAAA4qB,EAAA84E,eACAp4B,EAAAjvF,IAAA6pH,EAAA7pH,IAAA6sH,EAAA9S,YACO,KAAA8S,EAIP,SAHA59B,EAAAtrE,MAAAkmG,EAAAlmG,MAAAkpG,EAAA9S,QACA9qB,EAAAjvF,IAAA6pH,EAAA7pH,IAAA6sH,EAAA9S,QAKA,YAaAh5G,IAAA,6BACAE,MAAA,SAAAstC,GACA,IAAAogD,EAAApgD,EAAAogD,SACAM,EAAA1gD,EAAA0gD,QAKA,GAAAA,EAAAmX,cACA5jG,KAAAwrH,gBAAA/+B,EAAAm4B,WACA71G,KAAA09E,EAAAtrE,MACAyrG,SAAA,QAEO,GAAAzgC,EAAAk/B,qBAAAl/B,EAAAk/B,oBAAAp2H,OAGP,QAAA3B,EAAA,EAAuBA,EAAA64F,EAAAk/B,oBAAAp2H,OAAyC3B,IAAA,CAChE,IAAA8sH,EAAAj0B,EAAAk/B,oBAAA/3H,GACAswG,EAAAzX,EAAAm/B,sBAAAh4H,EAAA,EACAu5H,EAAAzM,EAAAr0E,EAAA+kD,WACA87B,EAAAnyH,KAAAg5F,IAAAo5B,GAEA,IAAA7sH,KAAAwrH,gBAAA5nB,IAAA5jG,KAAAwrH,gBAAA5nB,GAAAgpB,WAAA,CACA,IAAA79G,OAAA,EAGAA,EADA89G,EAAA,EACApgC,EAAAtrE,MAAAguE,GAAAhD,EAAApgD,EAAA+kD,WAAAsvB,GAEA3zB,EAAAjvF,IAAA2xF,GAAAhD,EAAApgD,EAAA+kD,WAAA,EAAAsvB,GAGApgH,KAAAwrH,gBAAA5nB,IACA70F,OACA69G,kBAOAnB,EAxbA,CAybCljC,GAAA1qC,aAEDivE,GAAA,IAAAl3B,GAAA,wCAAAhzF,EAAAq0F,GACA,IAAA9pD,EAAAntC,MACA,WAqBA,IAAAuyG,EAAA,SAAAx+D,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAu+D,EAAA,WACA,SAAAv+C,EAAA9pD,EAAArK,GACA,QAAAxM,EAAA,EAAuBA,EAAAwM,EAAA7K,OAAkB3B,IAAA,CACzC,IAAAmhF,EAAA30E,EAAAxM,GACAmhF,EAAAvkE,WAAAukE,EAAAvkE,aAAA,EACAukE,EAAAxkE,cAAA,EACA,UAAAwkE,MAAAngC,UAAA,GACAl2C,OAAA4R,eAAA7F,EAAAsqE,EAAAl2E,IAAAk2E,IAIA,gBAAAzgC,EAAA22C,EAAAC,GAGA,OAFAD,GAAA12B,EAAAjgB,EAAAr1C,UAAAgsF,GACAC,GAAA32B,EAAAjgB,EAAA42C,GACA52C,GAdA,GAkCA+4E,EAAA,SAAA5/E,EAAAtuC,GACA,IAAAsuC,EACA,UAAAuH,eAAA,6DAGA,OAAA71C,GAAA,qBAAAA,EAAA,YAAAg1C,EAAAh1C,KAAA,mBAAAA,EAAAsuC,EAAAtuC,GA+CAmuH,EAAA,WACA,IAAAC,sCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACA75H,OAAA,EACA4+B,OAAA,EACAo7F,OAAA,EACAjqH,KACAo5B,KACA8wF,OAAA,EACAC,OAAA,EAEA/pD,OAAA,EACAgqD,OAAA,EACAC,OAAA,EAGA,IAAAp6H,EAAA,EAAiBA,EAAA,IAASA,IAC1BmpC,GAAAp5B,EAAA/P,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAA4+B,EAAAo7F,EAAA,GAAwBF,EAAAl7F,GAAUA,GAAAq7F,GAAA,EAAAD,EAAA7wF,EAAA6wF,IAAA,EAYlC,IATA7pD,GADAA,EAAA6pD,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,IACA,MAAA7pD,EAAA,GACA2pD,EAAAl7F,GAAAuxC,EACA4pD,EAAA5pD,GAAAvxC,EAIAw7F,EAAA,SADArqH,EAAAmqH,EAAAnqH,EAAAkqH,EAAAlqH,EAAA6uB,KACA,MAAAs7F,EAAA,IAAAD,EAAA,SAAAr7F,EACAu7F,EAAA,IAAApqH,EAAAogE,GAAA,SAAAA,EAEAnwE,EAAA,EAAmBA,EAAA,EAAOA,IAC1B45H,EAAA55H,GAAA4+B,GAAAu7F,KAAA,GAAAA,IAAA,EACAN,EAAA75H,GAAAmwE,GAAAiqD,KAAA,GAAAA,IAAA,EAKA,IAAAp6H,EAAA,EAAiBA,EAAA,EAAOA,IACxB45H,EAAA55H,GAAA45H,EAAA55H,GAAAsL,MAAA,GACAuuH,EAAA75H,GAAA65H,EAAA75H,GAAAsL,MAAA,GAEA,OAAAquH,GAEAU,EAAA,KAUAC,EAAA,WACA,SAAAA,EAAArvH,GACAg0G,EAAAvyG,KAAA4tH,GAgBAD,IACAA,EAAAX,KAGAhtH,KAAA6tH,UAAAF,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,UAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,UACA,IAAAtL,OAAA,EACA0qE,OAAA,EACA8vD,OAAA,EACAC,OAAA,EACAC,OAAA,EACAZ,EAAAptH,KAAA6tH,QAAA,MACAV,EAAAntH,KAAA6tH,QAAA,GACAI,EAAA1vH,EAAAtJ,OACAi5H,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAtqH,MAAA,wBAQA,IALAoqH,EAAAxvH,EAAAK,MAAA,GACAovH,KACAhuH,KAAA8yC,MAAAi7E,EAAAC,GAGA16H,EAAA26H,EAAwB36H,EAAA,EAAA26H,EAAA,GAAqB36H,IAC7Cw6H,EAAAC,EAAAz6H,EAAA,IAGAA,EAAA26H,GAAA,OAAAA,GAAA36H,EAAA26H,GAAA,KACAH,EAAAV,EAAAU,IAAA,QAAAV,EAAAU,GAAA,YAAAV,EAAAU,GAAA,UAAAV,EAAA,IAAAU,GAGAx6H,EAAA26H,GAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAAz6H,GAAAy6H,EAAAz6H,EAAA26H,GAAAH,EAIA,IAAA9vD,EAAA,EAAmB1qE,EAAG0qE,IAAA1qE,IACtBw6H,EAAAC,EAAA,EAAA/vD,EAAA1qE,IAAA,GAEA06H,EAAAhwD,GADA1qE,GAAA,GAAA0qE,EAAA,EACA8vD,EAEAX,EAAA,GAAAC,EAAAU,IAAA,KAAAX,EAAA,GAAAC,EAAAU,GAAA,SAAAX,EAAA,GAAAC,EAAAU,GAAA,QAAAX,EAAA,GAAAC,EAAA,IAAAU,IA4DA,OAzCAF,EAAAjvH,UAAAwvH,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAn7H,GACA,IAAAkL,EAAAyB,KAAA8yC,KAAA,GAEA3xC,EAAAitH,EAAA7vH,EAAA,GACA2E,EAAAqrH,EAAAhwH,EAAA,GACA6E,EAAAkrH,EAAA/vH,EAAA,GACA8E,EAAAgrH,EAAA9vH,EAAA,GACAkwH,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAC,EAAArwH,EAAAtJ,OAAA,IACA3B,OAAA,EACAu7H,EAAA,EACA5kF,EAAAjqC,KAAA6tH,QAAA,GAGAiB,EAAA7kF,EAAA,GACA8kF,EAAA9kF,EAAA,GACA+kF,EAAA/kF,EAAA,GACAglF,EAAAhlF,EAAA,GACAmjF,EAAAnjF,EAAA,GAGA,IAAA32C,EAAA,EAAmBA,EAAAs7H,EAAkBt7H,IACrCm7H,EAAAK,EAAA3tH,IAAA,IAAA4tH,EAAA7rH,GAAA,QAAA8rH,EAAA5rH,GAAA,OAAA6rH,EAAA,IAAA5rH,GAAA9E,EAAAswH,GACAH,EAAAI,EAAA5rH,IAAA,IAAA6rH,EAAA3rH,GAAA,QAAA4rH,EAAA3rH,GAAA,OAAA4rH,EAAA,IAAA9tH,GAAA5C,EAAAswH,EAAA,GACAF,EAAAG,EAAA1rH,IAAA,IAAA2rH,EAAA1rH,GAAA,QAAA2rH,EAAA7tH,GAAA,OAAA8tH,EAAA,IAAA/rH,GAAA3E,EAAAswH,EAAA,GACAxrH,EAAAyrH,EAAAzrH,IAAA,IAAA0rH,EAAA5tH,GAAA,QAAA6tH,EAAA9rH,GAAA,OAAA+rH,EAAA,IAAA7rH,GAAA7E,EAAAswH,EAAA,GACAA,GAAA,EACA1tH,EAAAstH,EAAiBvrH,EAAAwrH,EAAOtrH,EAAAurH,EAIxB,IAAAr7H,EAAA,EAAmBA,EAAA,EAAOA,IAC1Bk7H,GAAA,GAAAl7H,GAAAD,GAAA+5H,EAAAjsH,IAAA,QAAAisH,EAAAlqH,GAAA,YAAAkqH,EAAAhqH,GAAA,UAAAgqH,EAAA,IAAA/pH,GAAA9E,EAAAswH,KACAJ,EAAAttH,EAAiBA,EAAA+B,EAAMA,EAAAE,EAAMA,EAAAC,EAAMA,EAAAorH,GAInCb,EA7HA,GAwIA3/E,EAAA,WACA,SAAAA,IACAskE,EAAAvyG,KAAAiuC,GAEAjuC,KAAAs3E,aA8FA,OAnFArpC,EAAAtvC,UAAA68C,GAAA,SAAAj+C,EAAAohD,GACA3+C,KAAAs3E,UAAA/5E,KACAyC,KAAAs3E,UAAA/5E,OAEAyC,KAAAs3E,UAAA/5E,GAAAvJ,KAAA2qD,IAYA1Q,EAAAtvC,UAAAq0C,IAAA,SAAAz1C,EAAAohD,GACA,IAAA3+C,KAAAs3E,UAAA/5E,GACA,SAGA,IAAAY,EAAA6B,KAAAs3E,UAAA/5E,GAAAsH,QAAA85C,GAGA,OADA3+C,KAAAs3E,UAAA/5E,GAAAu+C,OAAA39C,EAAA,GACAA,GAAA,GAUA8vC,EAAAtvC,UAAA4vC,QAAA,SAAAhxC,GACA,IAAA85F,EAAAr3F,KAAAs3E,UAAA/5E,GAEA,GAAA85F,EAQA,OAAAl0F,UAAAlO,OAGA,IAFA,IAAAA,EAAAoiG,EAAApiG,OAEA3B,EAAA,EAAyBA,EAAA2B,IAAY3B,EACrC+jG,EAAA/jG,GAAAuL,KAAAmB,KAAAmD,UAAA,SAMA,IAHA,IAAAf,EAAApE,MAAAW,UAAAC,MAAAC,KAAAsE,UAAA,GACA+rH,EAAA73B,EAAApiG,OAEA+zD,EAAA,EAA0BA,EAAAkmE,IAAclmE,EACxCquC,EAAAruC,GAAAxkD,MAAAxE,KAAAoC,IASA6rC,EAAAtvC,UAAAuiD,QAAA,WACAlhD,KAAAs3E,cAWArpC,EAAAtvC,UAAA24F,KAAA,SAAAC,GACAv3F,KAAAw7C,GAAA,gBAAAtpD,GACAqlG,EAAAvjG,KAAA9B,MAIA+7C,EAlGA,GAgHAkhF,EAAA,SAAAC,GAGA,SAAAD,IACA5c,EAAAvyG,KAAAmvH,GAEA,IAAAlvH,EAAA8sH,EAAA/sH,KAAAovH,EAAAvwH,KAAAmB,KAAAiuC,IAKA,OAHAhuC,EAAAovH,QACApvH,EAAAouF,MAAA,EACApuF,EAAAqvH,SAAA,KACArvH,EA+BA,OAhaA,SAAAk0C,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAH,UAAA,qEAAAG,EAAA,YAAAP,EAAAO,KAGAD,EAAAx1C,UAAAP,OAAAi2C,OAAAD,KAAAz1C,WACA+H,aACAjI,MAAA01C,EACAjkC,YAAA,EACAokC,UAAA,EACArkC,cAAA,KAGAmkC,IAAAh2C,OAAAm2C,eAAAn2C,OAAAm2C,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,GA0WAm7E,CAAAJ,EAAAC,GAmBAD,EAAAxwH,UAAA6wH,YAAA,WACAxvH,KAAAqvH,KAAA5kF,OAAAzqC,GACAA,KAAAqvH,KAAAp6H,OACA+K,KAAAsvH,SAAAx6F,WAAA90B,KAAAwvH,YAAAhwG,KAAAxf,WAAAquF,OAEAruF,KAAAsvH,SAAA,MAUAH,EAAAxwH,UAAA3K,KAAA,SAAAy7H,GACAzvH,KAAAqvH,KAAAr7H,KAAAy7H,GACAzvH,KAAAsvH,WACAtvH,KAAAsvH,SAAAx6F,WAAA90B,KAAAwvH,YAAAhwG,KAAAxf,WAAAquF,SAIA8gC,EA1CA,CA2CKlhF,GAaLyhF,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAyFAC,EAAA,WACA,SAAAA,EAAAxR,EAAA7/G,EAAAsxH,EAAA59F,GACAsgF,EAAAvyG,KAAA4vH,GAEA,IAAAE,EAAAF,EAAAG,KACAC,EAAA,IAAAC,WAAA7R,EAAA/rH,QACA8rH,EAAA,IAAAlqH,WAAAmqH,EAAA7rH,YACAe,EAAA,EAMA,IAJA0M,KAAAkwH,aAAA,IAAAf,EAGAnvH,KAAAkwH,aAAAl8H,KAAAgM,KAAAmwH,cAAAH,EAAA/8H,SAAAK,IAAAw8H,GAAAvxH,EAAAsxH,EAAA1R,IACA7qH,EAAAw8H,EAAsBx8H,EAAA08H,EAAA/6H,OAAwB3B,GAAAw8H,EAC9CD,EAAA,IAAA73H,aAAA03H,EAAAM,EAAA18H,EAAA,IAAAo8H,EAAAM,EAAA18H,EAAA,IAAAo8H,EAAAM,EAAA18H,EAAA,IAAAo8H,EAAAM,EAAA18H,EAAA,MACA0M,KAAAkwH,aAAAl8H,KAAAgM,KAAAmwH,cAAAH,EAAA/8H,SAAAK,IAAAw8H,GAAAvxH,EAAAsxH,EAAA1R,IAGAn+G,KAAAkwH,aAAAl8H,KAAA,WAtjBA,IAAAo8H,EAwjBAn+F,EAAA,MAxjBAm+F,EAwjBAjS,GAvjBAlrH,SAAA,EAAAm9H,EAAA79H,WAAA69H,IAAA79H,WAAA,OAmlBA,OAfAq9H,EAAAjxH,UAAAwxH,cAAA,SAAA/R,EAAA7/G,EAAAsxH,EAAA1R,GACA,kBACA,IAAAz/G,EA5GA,SAAA0/G,EAAA7/G,EAAAsxH,GAEA,IAAAG,EAAA,IAAAC,WAAA7R,EAAA/rH,OAAA+rH,EAAA9rH,WAAA8rH,EAAA7rH,YAAA,GAEA89H,EAAA,IAAAzC,EAAA5vH,MAAAW,UAAAC,MAAAC,KAAAN,IAGA4/G,EAAA,IAAAlqH,WAAAmqH,EAAA7rH,YACA+9H,EAAA,IAAAL,WAAA9R,EAAA9rH,QAIAk+H,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAtC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAoC,OAAA,EAWA,IAPAJ,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GACAa,EAAAb,EAAA,GAIAc,EAAA,EAAsBA,EAAAX,EAAA/6H,OAA6B07H,GAAA,EAGnDvC,EAAAsB,EAAAM,EAAAW,IACAtC,EAAAqB,EAAAM,EAAAW,EAAA,IACArC,EAAAoB,EAAAM,EAAAW,EAAA,IACApC,EAAAmB,EAAAM,EAAAW,EAAA,IAGAN,EAAAlC,QAAAC,EAAAC,EAAAC,EAAAC,EAAA+B,EAAAK,GAIAL,EAAAK,GAAAjB,EAAAY,EAAAK,GAAAJ,GACAD,EAAAK,EAAA,GAAAjB,EAAAY,EAAAK,EAAA,GAAAH,GACAF,EAAAK,EAAA,GAAAjB,EAAAY,EAAAK,EAAA,GAAAF,GACAH,EAAAK,EAAA,GAAAjB,EAAAY,EAAAK,EAAA,GAAAD,GAGAH,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EAGA,OAAApQ,EAkDAyS,CAAAxS,EAAA7/G,EAAAsxH,GAEA1R,EAAApuG,IAAArR,EAAA0/G,EAAA9rH,cAIAkgH,EAAAod,EAAA,OACArxH,IAAA,OACAuR,IAAA,WAEA,gBAGA8/G,EAhDA,GA+GA,IAlBA,SAAAziF,GACAA,EAAAqpD,UAAA,SAAA1mD,GACA,IAAA59C,EAAA49C,EAAA59C,KACAksH,EAAA,IAAAnqH,WAAA/B,EAAAksH,UAAA1/G,MAAAxM,EAAAksH,UAAA9rH,WAAAJ,EAAAksH,UAAA7rH,YACAgM,EAAA,IAAAvG,YAAA9F,EAAAqM,IAAAG,MAAAxM,EAAAqM,IAAAjM,WAAAJ,EAAAqM,IAAAhM,WAAA,GACA8rH,EAAA,IAAArmH,YAAA9F,EAAAmsH,GAAA3/G,MAAAxM,EAAAmsH,GAAA/rH,WAAAJ,EAAAmsH,GAAA9rH,WAAA,GAGA,IAAAq9H,EAAAxR,EAAA7/G,EAAA8/G,EAAA,SAAA55E,EAAA/lC,GApCA,IAAAwqD,EACAqpC,EAoCAplD,EAAAopD,aArCArtC,GAsCAnhC,OAAA71B,EAAA61B,OACAo2F,UAAAz/G,GAtCA6zF,KAEAn0F,OAAAC,KAAA6qD,GAAA/iD,QAAA,SAAA5H,GACA,IAAAE,EAAAyqD,EAAA3qD,GAEAZ,YAAA60F,OAAA/zF,GACA8zF,EAAAh0F,IACAG,MAAAD,EAAApM,OACAC,WAAAmM,EAAAnM,WACAC,WAAAkM,EAAAlM,YAGAggG,EAAAh0F,GAAAE,IAIA8zF,IAuBW7zF,EAAArM,YAMX,CAAA86C,GApqBA,KA+qBA0jF,GAAA,SAAAx6E,GACA,IAAA+Y,EAAA/Y,EAAAriB,QAAA,qBAMA,OAJAqiB,EAAAy6E,iBAAAz6E,EAAAy6E,gBAAAjsH,QAAA,6CACAuqD,EAAA,aAGAA,GAYA2hE,GAAA,SAAAC,EAAAplC,GACAolC,EAAAjqF,QACAiqF,EAAA7kE,QAEAy/B,KAAAqlC,uBACArlC,EAAAqlC,qBAAA9kE,QACAy/B,EAAAqlC,qBAAA,OAaAC,GAAA,SAAAC,EAAAvlC,GAGAA,EAAAqlC,qBAAAE,EACAA,EAAAh8D,QAkHA7wD,IAcAgqF,MAAA,SAAA/wF,EAAAm2D,GACA,kBACA,IAAAs9D,EAAAt9D,EAAA09D,eAAA7zH,GACAquF,EAAAl4B,EAAA29D,WAAA9zH,GACA+zH,EAAA59D,EAAA49D,yBAEAP,GAAAC,EAAAplC,GAGA,IAAA2lC,EAAA3lC,EAAA2lC,cACAC,EAAA5lC,EAAA4lC,cACAx4G,GAAAw4G,EAAAlzH,OAAA,SAAA+7G,GACA,OAAAA,EAAArmF,UACO,IAAAw9F,EAAA,IAAAx4G,GACPy4G,EAAA7lC,EAAAhpD,OAAA5pB,GAEA,GAAAu4G,IAAAE,EAAA,CAWA,QAAA72H,KAFA2tF,GAAAhoF,IAAA2yC,KAAA,oFAEA04C,EAAAhpD,OACAgpD,EAAAhpD,OAAAhoC,GAAAi0D,QAAA+8B,EAAAhpD,OAAAhoC,KAAA62H,EAGA7lC,EAAA8lC,sBAZAJ,GACApoE,QAAA,2DA0BAulC,UAAA,SAAAlxF,EAAAm2D,GACA,kBACA,IAAAs9D,EAAAt9D,EAAA09D,eAAA7zH,GACAquF,EAAAl4B,EAAA29D,WAAA9zH,GAEAgrF,GAAAhoF,IAAA2yC,KAAA,4EAEA69E,GAAAC,EAAAplC,GAEA,IAAA5jE,EAAA4jE,EAAA2lC,cAEAvpG,IACAA,EAAAkD,KAAA,YAGA0gE,EAAA8lC,oBAKAC,IAYArjC,MAAA,SAAA/wF,EAAA4zH,EAAAz9D,GACA,GAAAy9D,EAAA,CAKA,IAAAhnE,EAAAuJ,EAAAvJ,KACAynE,EAAAl+D,EAAAk+D,eACAZ,EAAAt9D,EAAA09D,eAAA7zH,GAEA4zH,EAAA31E,GAAA,4BACA,IAAA0wC,EAAAilC,EAAAjlC,QAEA8kC,EAAA7kC,SAAAD,EAAA0lC,KAIAznE,EAAA8B,UAAAigC,EAAA4B,SAAA,SAAA3jC,EAAA6tB,YACAg5C,EAAA77D,SAIAg8D,EAAA31E,GAAA,4BACAw1E,EAAA7kC,SAAAglC,EAAAjlC,QAAA0lC,GAGAznE,EAAA8B,UACA+kE,EAAA77D,SAIAg8D,EAAA31E,GAAA,QAAAl3C,GAAA/G,KAAAm2D,MAaA+6B,UAAA,SAAAlxF,EAAA4zH,EAAAz9D,GACA,IAAAvJ,EAAAuJ,EAAAvJ,KACAynE,EAAAl+D,EAAAk+D,eACAZ,EAAAt9D,EAAA09D,eAAA7zH,GACAquF,EAAAl4B,EAAA29D,WAAA9zH,GAEA4zH,EAAA31E,GAAA,4BACA,IAAA0wC,EAAAilC,EAAAjlC,QAEA8kC,EAAA7kC,SAAAD,EAAA0lC,GACAZ,EAAAhpG,MAAA4jE,EAAA2lC,iBAIApnE,EAAA8B,UAAAigC,EAAA4B,SAAA,SAAA3jC,EAAA6tB,YACAg5C,EAAA77D,SAIAg8D,EAAA31E,GAAA,4BACAw1E,EAAA7kC,SAAAglC,EAAAjlC,QAAA0lC,GAGAznE,EAAA8B,UACA+kE,EAAA77D,SAIAg8D,EAAA31E,GAAA,QAAAl3C,GAAA/G,KAAAm2D,MAIAm+D,GAAA,SAAAt0H,EAAAg3G,GACA,gBAAApoB,GACA,OAAAA,EAAA71C,WAAA/4C,KAAAg3G,IAIAud,GAAA,SAAAnlC,GACA,gBAAAR,GACA,OAAAA,EAAAQ,kBAIAolC,IAUAzjC,MAAA,SAAA/wF,EAAAm2D,GACA,IAAA05B,EAAA15B,EAAA05B,IACAo0B,EAAA9tD,EAAA8tD,WACAwP,EAAAt9D,EAAA09D,eAAA7zH,GACAupC,EAAA4sB,EAAAk+D,eAAA9qF,gBACAkrF,EAAAt+D,EAAAi4B,OACAG,EAAAkmC,EAAAlmC,YACAM,EAAA4lC,EAAA5lC,UACA6lC,EAAAv+D,EAAA29D,WAAA9zH,GACA20H,EAAAD,EAAAC,OACAtvF,EAAAqvF,EAAArvF,OACA63E,EAAA/mD,EAAA+mD,qBAQA,QAAAlG,KAJAzoB,EAAAvuF,IAAA,IAAAa,OAAAC,KAAAytF,EAAAvuF,IAAAtI,SACA62F,EAAAvuF,IAA2BgzD,MAAQv8B,SAAWA,SAAA,MAG9C83D,EAAAvuF,GAAA,CACA20H,EAAA3d,KACA2d,EAAA3d,OAKA,IAAA4d,EAAA/lC,EAAA9tF,OAAAuzH,GAAAt0H,EAAAg3G,IAEA,QAAA6d,KAAAtmC,EAAAvuF,GAAAg3G,GAAA,CACA,IAAAl+D,EAAAy1C,EAAAvuF,GAAAg3G,GAAA6d,GAIAD,EAAA7zH,OAAAwzH,GAAAz7E,EAAAs2C,cAEA13F,eAMAohD,EAAAs2C,YAGA,IAAAwkC,OAAA,EAkBA,GAfAA,EADA96E,EAAAs2C,YACA,IAAAO,GAAA72C,EAAAs2C,YAAAS,EAAAtmD,GACSuP,EAAA+1C,WAAA,SAAAo1B,EACT,IAAAjH,GAAAlkE,EAAA+1C,UAAA,GAAAgB,EAAAtmD,EAAA2zE,GAIA,KAGApkE,EAAAkyC,GAAAnoC,cAA6CpnC,GAAAo5G,EAAAjB,kBAAmD96E,GAEhGs7E,GAAAp0H,KAAA84C,EAAA86E,eAAAz9D,GAEAw+D,EAAA3d,GAAAvgH,KAAAqiD,QAEA,IAAAzT,EAAAwvF,GAAA,CACA,IAAApqG,EAAA,IAAAugE,GAAA3zB,YACA57C,GAAAo5G,EACAhjE,KAAAyhE,GAAAx6E,GACAwY,SAAA,EACAl4D,SAAA0/C,EAAA1/C,SACAq9B,QAAAqiB,EAAAriB,QACAy3B,MAAA2mE,IAGAxvF,EAAAwvF,GAAApqG,IAMAgpG,EAAAx1E,GAAA,QAAAl3C,GAAA/G,KAAAm2D,KAWA+6B,UAAA,SAAAlxF,EAAAm2D,GACA,IAAAvJ,EAAAuJ,EAAAvJ,KACAijC,EAAA15B,EAAA05B,IACAo0B,EAAA9tD,EAAA8tD,WACAwP,EAAAt9D,EAAA09D,eAAA7zH,GACAupC,EAAA4sB,EAAAk+D,eAAA9qF,gBACAglD,EAAAp4B,EAAAi4B,OAAAG,YACAumC,EAAA3+D,EAAA29D,WAAA9zH,GACA20H,EAAAG,EAAAH,OACAtvF,EAAAyvF,EAAAzvF,OACA63E,EAAA/mD,EAAA+mD,qBAEA,QAAAlG,KAAAzoB,EAAAvuF,GAKA,QAAA60H,KAJAF,EAAA3d,KACA2d,EAAA3d,OAGAzoB,EAAAvuF,GAAAg3G,GACA,IAAAzoB,EAAAvuF,GAAAg3G,GAAA6d,GAAAE,OAAA,CAYA,IAAAj8E,EAAAy1C,EAAAvuF,GAAAg3G,GAAA6d,GAEAjB,OAAA,EAiBA,GAfA,QAAA3P,EACA2P,EAAA,IAAAjkC,GAAA72C,EAAAs2C,YAAAS,EAAAtmD,GACS,SAAA06E,IACT2P,EAAA,IAAA5W,GAAAlkE,EAAA+1C,UAAA,GAAAgB,EAAAtmD,EAAA2zE,IAGApkE,EAAAkyC,GAAAnoC,cACApnC,GAAAo5G,EACAjB,kBACS96E,GAETs7E,GAAAp0H,KAAA84C,EAAA86E,eAAAz9D,GAEAw+D,EAAA3d,GAAAvgH,KAAAqiD,QAEA,IAAAzT,EAAAwvF,GAAA,CACA,IAAApqG,EAAAmiC,EAAAO,oBACA1xC,GAAAo5G,EACAhjE,KAAA,YACAP,SAAA,EACAl4D,SAAA0/C,EAAA1/C,SACA80D,MAAA2mE,IACW,GAAApqG,MAEX4a,EAAAwvF,GAAApqG,GAMAgpG,EAAAx1E,GAAA,QAAAl3C,GAAA/G,KAAAm2D,KAWA86B,kBAAA,SAAAjxF,EAAAm2D,GACA,IAAAvJ,EAAAuJ,EAAAvJ,KACA2hC,EAAAp4B,EAAAi4B,OAAAG,YACAymC,EAAA7+D,EAAA29D,WAAA9zH,GACA20H,EAAAK,EAAAL,OACAtvF,EAAA2vF,EAAA3vF,OAEA,QAAA2xE,KAAAzoB,EAAAvuF,GAKA,QAAA60H,KAJAF,EAAA3d,KACA2d,EAAA3d,OAGAzoB,EAAAvuF,GAAAg3G,GAAA,CACA,IAAAl+D,EAAAy1C,EAAAvuF,GAAAg3G,GAAA6d,GAIA,GAAA/7E,EAAAm8E,WAAAxzH,MAAA,UAMAkzH,EAAA3d,GAAAvgH,KAAAu0F,GAAAnoC,cAAqDpnC,GAAAo5G,GAAmB/7E,SAExE,IAAAzT,EAAAwvF,IAAA,CACA,IAAApqG,EAAAmiC,EAAAO,oBACA1xC,GAAAq9B,EAAAm8E,WACApjE,KAAA,WACAP,SAAA,EACAl4D,SAAA0/C,EAAA1/C,SACA80D,MAAA2mE,IACW,GAAApqG,MAEX4a,EAAAwvF,GAAApqG,MAwDAupG,IAaAjjC,MAAA,SAAA/wF,EAAAm2D,GACA,kBACA,IAAA9wB,EAAA8wB,EAAA29D,WAAA9zH,GAAAqlC,OAEA,QAAA5pB,KAAA4pB,EACA,GAAAA,EAAA5pB,GAAA61C,QACA,OAAAjsB,EAAA5pB,GAIA,cAeAy1E,UAAA,SAAAlxF,EAAAm2D,GACA,kBACA,IAAA9wB,EAAA8wB,EAAA29D,WAAA9zH,GAAAqlC,OAEA,QAAA5pB,KAAA4pB,EACA,eAAAA,EAAA5pB,GAAAkS,KACA,OAAA0X,EAAA5pB,GAIA,eAiCAy5G,GAAA,SAAA/+D,IACA,uCAAAvtD,QAAA,SAAA5I,GACAw0H,GAAAx0H,KAAAm2D,KAGA,IAAA29D,EAAA39D,EAAA29D,WACA5W,EAAA/mD,EAAA+mD,qBACAtwD,EAAAuJ,EAAAvJ,KACAijC,EAAA15B,EAAA05B,KAIA,qBAAAjnF,QAAA,SAAA5I,GACA8zH,EAAA9zH,GAAAi0H,YAjIA,SAAAj0H,EAAAm2D,GACA,gBAAA1rC,GACA,IAAAyyF,EAAA/mD,EAAA+mD,qBACAyX,EAAAx+D,EAAA29D,WAAA9zH,GAAA20H,OAEAhmC,EAAAuuB,EAAAvuB,QAEA,IAAAA,EACA,YAGA,IAAAwmC,EAAA,KAQA,OANAxmC,EAAA51C,WAAA/4C,KACAm1H,EAAAR,EAAAhmC,EAAA51C,WAAA/4C,KAGAm1H,KAAAR,EAAA3hE,UAEA,IAAAvoC,EACA0qG,EAGA,OAAA1qG,EAGA,KAGA0qG,EAAAp0H,OAAA,SAAAwB,GACA,OAAAA,EAAAkZ,KAAAgP,EAAAhP,KACK,UAkGLw4G,CAAAj0H,EAAAm2D,GACA29D,EAAA9zH,GAAAg0H,eAAAh0H,KAAAm2D,GACA29D,EAAA9zH,GAAAo1H,eA5nBA,SAAAp1H,EAAAm2D,GACA,kBACA,IAAAk/D,EAAAl/D,EAAA09D,eACAJ,EAAA4B,EAAAr1H,GACAs1H,EAAAD,EAAAriE,KACAq7B,EAAAl4B,EAAA29D,WAAA9zH,GAEAg0H,EAAA3lC,EAAA2lC,cACAC,EAAA5lC,EAAA4lC,YAAAD,GACAuB,EAAAlnC,EAAAqlC,qBAEAF,GAAAC,EAAAplC,GAEA4lC,IAKAA,EAAAL,gBAYAH,EAAA7M,eAEA+M,GAAAM,EAAAL,eAAAvlC,IAbAknC,GAKAD,EAAAjP,oBAomBA+O,CAAAp1H,EAAAm2D,GACA29D,EAAA9zH,GAAAm0H,eA3kBA,SAAAn0H,EAAAm2D,GACA,kBACA,IAAAq/D,EAAAr/D,EAAA09D,eACAJ,EAAA+B,EAAAx1H,GACAs1H,EAAAE,EAAAxiE,KACAq7B,EAAAl4B,EAAA29D,WAAA9zH,GAEAg0H,EAAA3lC,EAAA2lC,cACAC,EAAA5lC,EAAA4lC,YAAAD,GACAuB,EAAAlnC,EAAAqlC,qBAEAF,GAAAC,EAAAplC,GAEA4lC,IAKAA,EAAAL,eAQA2B,IAAAtB,EAAAL,gBAQAH,EAAAhpG,OAEAgpG,EAAAhpG,MAAAupG,GAIAP,EAAApN,kBAEAsN,GAAAM,EAAAL,eAAAvlC,IAZAslC,GAAAM,EAAAL,eAAAvlC,GARAinC,EAAAjP,oBAqjBA8N,CAAAn0H,EAAAm2D,KAKA,IAAA4gD,EAAA+c,EAAA/iC,MAAAkjC,cACAjd,GAAAD,EAAAh2G,OAAA,SAAA+7G,GACA,OAAAA,EAAArmF,UACG,IAAAsgF,EAAA,IAAAt7F,GAEHq4G,EAAA/iC,MAAA1rD,OAAA2xE,GAAA1lD,SAAA,EACAwiE,EAAA/iC,MAAAojC,iBAEAjX,EAAAj/D,GAAA,0BACA,qBAAAr1C,QAAA,SAAA5I,GACA,OAAA8zH,EAAA9zH,GAAAo1H,qBAKA,IAAAK,EAAA,WACA3B,EAAA/iC,MAAAojC,iBACAvnE,EAAA5b,SAAkBhxC,KAAA,QAAAvH,KAAA,sBAclB,QAAAgjB,KAXAmxC,EAAA6kB,cAAAvvD,iBAAA,SAAAuzG,GACA7oE,EAAAuO,mBAAAj5C,iBAAA,SAAA4xG,EAAA5iC,UAAAijC,gBAEAtkC,EAAA5xC,GAAA,qBACA2O,EAAA6kB,cAAAr0B,oBAAA,SAAAq4E,GACA7oE,EAAAuO,mBAAA/d,oBAAA,SAAA02E,EAAA5iC,UAAAijC,kBAIAvnE,EAAA0N,YAAA,SAEAw5D,EAAA/iC,MAAA1rD,OACAunB,EAAA6kB,cAAA3gB,SAAAgjE,EAAA/iC,MAAA1rD,OAAA5pB,KAYAi6G,GAAA,WACA,IAAA5B,KAcA,OAZA,uCAAAlrH,QAAA,SAAA5I,GACA8zH,EAAA9zH,IACA20H,UACAtvF,UACAquF,qBAAA,KACAO,YAAAv3C,GACAs3C,YAAAt3C,GACA04C,eAAA14C,GACAy3C,eAAAz3C,MAIAo3C,GASA3/B,QAAA,EAIAwhC,IAAA,uIACAC,GAAA,SAAAC,GACA,OAAApzH,KAAAqzH,oBAAAD,GAAApzH,KAAAszH,mBAAAF,IAYAG,GAAA,SAAA9d,GAGA,SAAA8d,EAAArxG,GACAuoE,GAAAzqF,KAAAuzH,GAEA,IAAAtzH,EAAA6qF,GAAA9qF,MAAAuzH,EAAA/+E,WAAAp2C,OAAAivF,eAAAkmC,IAAA10H,KAAAmB,OAEAgP,EAAAkT,EAAAlT,IACA83B,EAAA5kB,EAAA4kB,gBACAqjB,EAAAjoC,EAAAioC,KACAgnC,EAAAjvE,EAAAivE,UACAqiC,EAAAtxG,EAAAsxG,UACAC,EAAAvxG,EAAAuxG,WACA7L,EAAA1lG,EAAA0lG,kBACA8L,EAAAxxG,EAAAwxG,yBACAlS,EAAAt/F,EAAAs/F,WACAmS,EAAAzxG,EAAAyxG,OAEA,IAAA3kH,EACA,UAAArL,MAAA,wCAGA+tF,GAAA8hC,EAEAvzH,EAAA6mC,kBACA7mC,EAAAqzD,MAAAnJ,EACAlqD,EAAAqtF,KAAAnjC,EAAAijC,IACAntF,EAAA2zH,QAAAD,EACA1zH,EAAAshH,YAAAC,EACAvhH,EAAA4zH,YAAAJ,EACAxzH,EAAA2nH,oBACA3nH,EAAAyzH,2BACAzzH,EAAA4zH,cACA5zH,EAAA6zH,cAAA7zH,EAAAqzD,MAAAyF,aAAA,sBACA94D,EAAA6zH,cAAA/c,gCAAA,IAGA92G,EAAA8zH,iBACAjtF,gBAAA7mC,EAAA6mC,gBACAjN,QAAA,MAGA55B,EAAA+zH,YAAAf,KAEAhzH,EAAAy1G,YAAA,IAAAntB,GAAAiwB,YAGAv4G,EAAAy1G,YAAAj2F,iBAAA,aAAAxf,EAAAg0H,kBAAAz0G,KAAAvf,IAEAA,EAAA6gH,UAAAv4B,GAAA//B,mBACAvoD,EAAA0gH,WAAA,WACA,UAGA1gH,EAAAmiH,gBAAA,IAAAqJ,GAAAvpG,GACAjiB,EAAAkhH,sBAAAh3D,EAAAO,oBACA0E,KAAA,WACA3D,MAAA,qBACK,GAAAzjC,MAEL/nB,EAAAkiH,WAAA,IAAA2K,GACA7sH,EAAAg0F,qBAEA,IAAAigC,GACA9mC,IAAAntF,EAAAqtF,KACAooB,YAAAz1G,EAAAy1G,YACAthD,YAAAn0D,EAAAqzD,MAAAc,YAAA50C,KAAAvf,EAAAqzD,OACAwJ,SAAA,WACA,OAAA78D,EAAA68D,YAEAqiB,QAAA,WACA,OAAAl/E,EAAAqzD,MAAA6rB,WAEApoF,SAAA,WACA,OAAAkJ,EAAAy1G,YAAA3+G,UAEA6pH,UAAA,WACA,OAAA3gH,EAAA0gH,cAEAW,iBAAA,WACA,OAAArhH,EAAAqhH,oBAEAnwB,YACAkxB,eAAApiH,EAAAmiH,gBACA1E,UAAAz9G,EAAAkiH,WACAX,WAAAvhH,EAAAshH,YACAE,iBAAAxhH,EAAAg0F,mBAgCA,OA7BAh0F,EAAA26G,sBAAA,SAAA36G,EAAAshH,YAAA,IAAAhH,GAAAvrG,EAAA/O,EAAAqtF,KAAArtF,EAAA6mC,iBAAA,IAAAomD,GAAAl+E,EAAA/O,EAAAqtF,KAAArtF,EAAA6mC,iBACA7mC,EAAAk0H,sCAIAl0H,EAAAqzH,mBAAA,IAAA/S,GAAAh4B,GAAAnoC,aAAA8zE,GACA9S,qBAAAnhH,EAAAkhH,sBACAF,WAAA,SACK/+F,GAGLjiB,EAAAozH,oBAAA,IAAA9S,GAAAh4B,GAAAnoC,aAAA8zE,GACAjT,WAAA,UACK/+F,GAELjiB,EAAAm0H,uBAAA,IAAApL,GAAAzgC,GAAAnoC,aAAA8zE,GACAjT,WAAA,QACK/+F,GAELjiB,EAAAo0H,+BAGAnB,GAAA/sH,QAAA,SAAAitH,GACAnzH,EAAAmzH,EAAA,KAAAD,GAAA3zG,KAAAvf,EAAAmzH,KAGAnzH,EAAAg8G,QAAAP,GAAA,OAEAz7G,EAAA26G,sBAAAzlD,OACAl1D,EA+iCA,OArqCA4qF,GAAA0oC,EAAA9d,GAgIA/qB,GAAA6oC,IACAh1H,IAAA,sCACAE,MAAA,WACA,IAAAwC,EAAAjB,KAEAA,KAAA46G,sBAAAp/D,GAAA,4BACA,IAAA0wC,EAAAjrF,EAAA25G,sBAAA1uB,QACAooC,EAAA,IAAArzH,EAAA25G,sBAAA3tB,eAAA,IAIAoD,GAAApvF,EAAA25G,sBAAAjvB,OAAA1qF,EAAA25G,sBAAA1uB,SACAjrF,EAAA8yH,gBAAAl6F,QAAA,EAEA54B,EAAA8yH,gBAAAl6F,QAAAy6F,EAKApoC,EAAA4B,SAAA,SAAA7sF,EAAAqyD,MAAA0kB,YACA/2E,EAAAqyH,mBAAAnnC,SAAAD,EAAAjrF,EAAA8yH,iBACA9yH,EAAAqyH,mBAAAn+D,QAGAs9D,IACAjR,WAAAvgH,EAAAsgH,YACA6P,gBACA9iC,MAAArtF,EAAAoyH,oBACA5kC,UAAAxtF,EAAAmzH,uBACA7jE,KAAAtvD,EAAAqyH,oBAEAnpE,KAAAlpD,EAAAqyD,MACAs+D,eAAA3wH,EAAA8yH,gBACAtZ,qBAAAx5G,EAAA25G,sBACAxtB,IAAAnsF,EAAAqsF,KACA3B,OAAA1qF,EAAA0qF,SACA0lC,WAAApwH,EAAA+yH,YACA1C,yBAAArwH,EAAAqwH,yBAAA9xG,KAAAve,KAGAA,EAAAszH,sBAAAtzH,EAAA0qF,SAAAO,GAEA,IACAjrF,EAAAuzH,sBACS,MAAAjxH,GAET,OADAglF,GAAAhoF,IAAA2yC,KAAA,iCAAA3vC,GACAtC,EAAAy0G,YAAAiP,YAAA,UAEA1jH,EAAAwzH,iBAEAxzH,EAAAstC,QAAA,0BAGAvuC,KAAA46G,sBAAAp/D,GAAA,4BACA,IAAAk5E,EAAAzzH,EAAA25G,sBAAA1uB,QAEA,IAAAwoC,EAAA,CAGAzzH,EAAA0zH,8BAEA,IAAAC,OAAA,EAYA,OAVA3zH,EAAAyyH,2BACAkB,EAAA3zH,EAAA4zH,yBAGAD,IACAA,EAAA3zH,EAAA6zH,kBAGA7zH,EAAA8zH,cAAAH,OACA3zH,EAAA25G,sBAAA1uB,MAAAjrF,EAAA8zH,eAyBA,GArBA9zH,EAAA4yH,aACA5yH,EAAA+zH,cAAAN,GAOAzzH,EAAAqyH,mBAAAnnC,SAAAuoC,EAAAzzH,EAAA8yH,iBACA9yH,EAAAg0H,iBAKAh0H,EAAAqyD,MAAArH,WACAhrD,EAAAqyH,mBAAAn+D,OACAl0D,EAAAoyH,qBACApyH,EAAAoyH,oBAAAl+D,SAIAu/D,EAAA5mC,QAAA,CACA,IAAAonC,EAAA,WACA,IAAAnO,EAAA9lH,EAAA67D,WAEA,IAAAiqD,EAAA9xH,QACAgM,EAAAy0G,YAAAyf,kBAAApO,EAAA5lG,MAAA,GAAA4lG,EAAAvpH,IAAA,KAIA,GAAAyD,EAAAlK,aAAA+pC,IAAA,CASA7/B,EAAAqyD,MAAArX,IAAA,iBARA,SAAAm5E,IACAn0H,EAAAlK,aAAA+pC,IACAo0F,IAEAj0H,EAAAqyD,MAAArX,IAAA,iBAAAm5E,UAMAF,OAKAl1H,KAAA46G,sBAAAp/D,GAAA,mBACAv6C,EAAAqwH,yBAAArwH,EAAA25G,sBAAA/lF,SAGA70B,KAAA46G,sBAAAp/D,GAAA,2BACAv6C,EAAAqyH,mBAAAvsF,QACA9lC,EAAAqyH,mBAAAnnE,UAGAnsD,KAAA46G,sBAAAp/D,GAAA,yBACA,IAAA0wC,EAAAjrF,EAAA25G,sBAAA1uB,QACAooC,EAAA,IAAArzH,EAAA25G,sBAAA3tB,eAAA,IAIAoD,GAAApvF,EAAA25G,sBAAAjvB,OAAA1qF,EAAA25G,sBAAA1uB,SACAjrF,EAAA8yH,gBAAAl6F,QAAA,EAEA54B,EAAA8yH,gBAAAl6F,QAAAy6F,EAOArzH,EAAAqyH,mBAAAnnC,SAAAD,EAAAjrF,EAAA8yH,iBAEA9yH,EAAAqyH,mBAAAn+D,OAEAl0D,EAAAqyD,MAAA/kB,SACAhxC,KAAA,cACA4N,SAAA,MAIAnL,KAAA46G,sBAAAp/D,GAAA,+BACA,IAAAk5E,EAAAzzH,EAAA25G,sBAAA1uB,QACAjrF,EAAAo0H,oBAAAX,KAOAzzH,EAAAqwH,0BACApoE,QAAA,iCAGAjoD,EAAAqyD,MAAA/kB,QAAA,oBAIAvuC,KAAA46G,sBAAAp/D,GAAA,+BACAv6C,EAAAqyD,MAAA/kB,SAA8BhxC,KAAA,QAAAvH,KAAA,6BAE9BgK,KAAA46G,sBAAAp/D,GAAA,8BACAv6C,EAAAqyD,MAAA/kB,SAA8BhxC,KAAA,QAAAvH,KAAA,+BAW9BuI,IAAA,wBACAE,MAAA,SAAAktF,EAAAO,GACA,IAAAJ,EAAAH,EAAAG,gBACAwpC,GAAA,EACAC,EAAAn3H,OAAAC,KAAAytF,EAAAwC,OAEA,QAAAknC,KAAA1pC,EAAAwC,MACA,QAAA7iC,KAAAqgC,EAAAwC,MAAAknC,GAAA,CACA1pC,EAAAwC,MAAAknC,GAAA/pE,GAEArnB,MACAkxF,GAAA,GAKAA,GACAt1H,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,gBAG5BoI,OAAAC,KAAAytF,EAAA2C,WAAAx5F,QACA+K,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,eAG5B07F,GAAAjB,SAAAM,MAAA7E,IACAlsF,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,YAG5B07F,GAAAjB,SAAAO,OAAA9E,IACAlsF,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,aAG5Bu/H,EAAAtgI,QAAAmJ,OAAAC,KAAAytF,EAAAwC,MAAAinC,EAAA,KAAAtgI,OAAA,GACA+K,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,wBAG5BgK,KAAA6zH,aACA7zH,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,6BAW5BuI,IAAA,+BACAE,MAAA,WACA,IAAA4mD,EAAArlD,KAEAA,KAAAszH,mBAAA93E,GAAA,6BACA,IAAAi6E,EAAApwE,EAAAyvE,iBACAY,EAAArwE,EAAAu1D,sBAAA1uB,QACAxjC,EAAArD,EAAAiO,MAAA5K,WACAitE,EAAAjtE,EAAAzzD,OAAAyzD,EAAAlrD,IAAAkrD,EAAAzzD,OAAA,GAAAowD,EAAAiO,MAAAc,cAAA,EAEAwhE,EAAAvwE,EAAAuwE,uBAMAF,EAAA5nC,SAGAzoC,EAAAtuD,WAAA2lH,GAAAM,2BAEAyY,EAAAn/E,WAAAi6C,UAAAmlC,EAAAp/E,WAAAi6C,WAGAolC,GAAAC,IACAvwE,EAAAu1D,sBAAA1uB,MAAAupC,GAGApwE,EAAAiO,MAAA/kB,QAAA,qBAEAvuC,KAAAszH,mBAAA93E,GAAA,sBACA6J,EAAA9W,QAAA,cAGAvuC,KAAAszH,mBAAA93E,GAAA,mBACA6J,EAAAisE,yBAAAjsE,EAAAiuE,mBAAAz+F,WAGA70B,KAAAszH,mBAAA93E,GAAA,4BACA6J,EAAAwwE,sBAGA71H,KAAAszH,mBAAA93E,GAAA,6BACA6J,EAAAiO,MAAA/kB,SAA8BhxC,KAAA,QAAAvH,KAAA,2BAE9BgK,KAAAqzH,oBAAA73E,GAAA,4BACA6J,EAAAwwE,sBAGA71H,KAAAszH,mBAAA93E,GAAA,mBACA6J,EAAAywE,kBAGA91H,KAAAszH,mBAAA93E,GAAA,wBACA6J,EAAAisE,0BACApoE,QAAA,mGAzbA,OA6bAlpD,KAAAszH,mBAAA93E,GAAA,6BAGA6J,EAAAiO,MAAA/kB,QAAA,eAGAvuC,KAAAszH,mBAAA93E,GAAA,8BAAA1L,GAGAuV,EAAAiO,MAAA/kB,SACAhxC,KAAA,2BACAg6G,QAAAznE,EAAAynE,YAIAv3G,KAAAqzH,oBAAA73E,GAAA,mBACA6J,EAAAywE,qBAIAv3H,IAAA,sBACAE,MAAA,WACA,OAAAhE,KAAA6+C,IAAAt5C,KAAAqzH,oBAAArQ,mBAAAhjH,KAAAszH,mBAAAtQ,uBAQAzkH,IAAA,OACAE,MAAA,WACAuB,KAAAszH,mBAAAn+D,OACAn1D,KAAAg0H,YAAA1lC,MAAA2iC,sBACAjxH,KAAAqzH,oBAAAl+D,OAEAn1D,KAAAg0H,YAAAvlC,UAAAwiC,sBACAjxH,KAAAo0H,uBAAAj/D,UAaA52D,IAAA,uBACAE,MAAA,WACA,IAAAytF,EAAAlsF,KAAA80H,iBAEA5oC,IAAAlsF,KAAA46G,sBAAA1uB,UACAlsF,KAAA46G,sBAAA1uB,SAEAlsF,KAAAszH,mBAAAjP,kBAeA9lH,IAAA,qBACAE,MAAA,WACA,IAAA8mD,EAAAvlD,KAEAksF,EAAAlsF,KAAA80H,iBAEA5oC,IAAAlsF,KAAA46G,sBAAA1uB,UAIAlsF,KAAA46G,sBAAA1uB,SAKAlsF,KAAAszH,mBAAA1P,gBAAA,WAIAr+D,EAAA+N,MAAA6E,eAAA5S,EAAA+N,MAAAc,qBAWA71D,IAAA,OACAE,MAAA,WACA,IAAAuB,KAAAy0H,iBAAA,CAIAz0H,KAAAszD,MAAAyiE,SACA/1H,KAAA4zH,QAAA,GAGA5zH,KAAA2gH,cACA3gH,KAAAm1D,OAGA,IAAA4xD,EAAA/mH,KAAAszD,MAAAwJ,WAIA,OAAA98D,KAAAszD,MAAAv8D,aAAA+pC,KACA9gC,KAAAszD,MAAAc,cAAA2yD,EAAA5lG,MAAA,GACAnhB,KAAA4zH,QAAA7M,EAAAvpH,IAAAupH,EAAA9xH,OAAA,SAFA,MAaAsJ,IAAA,iBACAE,MAAA,WACA,IAAA65D,EAAAt4D,KAEAksF,EAAAlsF,KAAA46G,sBAAA1uB,QAOA,IAAAA,GAAAlsF,KAAAszD,MAAArH,UAAAjsD,KAAA2gH,aACA,SAIA,IAAAz0B,EAAA4B,QAAA,CACA,IAAAi5B,EAAA/mH,KAAA88D,WAEA,IAAAiqD,EAAA9xH,OAGA,SAGA,GAAAszF,GAAAxgC,QAAAN,YAAA,IAAAznD,KAAAszD,MAAAhtB,aAWA,OARAtmC,KAAAszD,MAAArX,IAAA,4BACAqc,EAAA/pB,QAAA,aACA+pB,EAAAs7D,QAAA7M,EAAAvpH,IAAA,IACA86D,EAAAqoD,WAAA,WACA,aAIA,EAIA3gH,KAAAuuC,QAAA,aAEAvuC,KAAA4zH,QAAA7M,EAAAvpH,IAAA,IAQA,OALAwC,KAAA2gH,WAAA,WACA,UAGA3gH,KAAAm1D,QACA,KAUA52D,IAAA,oBACAE,MAAA,WAIA,IACAuB,KAAAw0H,sBACO,MAAAjxH,GAEP,OADAglF,GAAAhoF,IAAA2yC,KAAA,kCAAA3vC,GACAvD,KAAA01G,YAAAiP,YAAA,UAMA,GAAA3kH,KAAAszD,MAAA7xD,WAAA,CACA,IAAAqhE,EAAA9iE,KAAAszD,MAAAhT,YAIA,IAAAwiB,GAAA,mBAAAA,EAAA/wD,MACA+wD,EAAA/wD,KAAA,cAAAxO,MAIAvD,KAAAuuC,QAAA,iBAaAhwC,IAAA,gBACAE,MAAA,WACA,IAAAu3H,EAAAh2H,KAAAszH,mBAAA/Q,OAEAviH,KAAAg0H,YAAA1lC,MAAA2iC,uBAMA+E,GAJAh2H,KAAAszH,mBAAApS,gBAAAlhH,KAAAszH,mBAAApS,eAAAsG,cAIAwO,GAAAh2H,KAAAqzH,oBAAA9Q,OAGAviH,KAAAqzH,oBAAA9Q,QAIAyT,GACAh2H,KAAA01G,YAAAiP,iBAWApmH,IAAA,sBACAE,MAAA,SAAA0tF,GAGA,IAFAnsF,KAAA88D,WAEA7nE,OAEA,SAGA,IAAA25F,EAAA5uF,KAAAoiH,gBAAA6T,eAAA9pC,EAAAnsF,KAAA01G,YAAA3+G,UAEA,UAAA63F,EACA,SAKA,IAAAsnC,EAAAxkC,GAAAjB,SAAAjB,YAAArD,EAAAyC,GACAx6B,EAAAp0D,KAAAszD,MAAAc,cACA1L,EAAA1oD,KAAAszD,MAAA5K,WAEA,IAAAA,EAAAzzD,OAEA,OAAAihI,EAAA9hE,GAngdA+hE,GAqgdA,IAAA5vD,EAAA7d,EAAAlrD,IAAAkrD,EAAAzzD,OAAA,GAIA,OAAAsxE,EAAAnS,GAzgdA+hE,IAygdAD,EAAA3vD,GAzgdA4vD,MAwhdA53H,IAAA,2BACAE,MAAA,WACA,IAIAg3H,EAJA5gG,EAAA1xB,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAykH,EAAAzkH,UAAA,GAEAuyH,OAAA,EAaA,GANAA,EAAA7gG,EAAAs3D,UAAAnsF,KAAA46G,sBAAA1uB,QAEA07B,KAAA/yF,EAAA+yF,mBAAA5nH,KAAA4nH,mBAIA8N,EAAA,CACA11H,KAAA60B,QAEA,IACA,OAAA70B,KAAA01G,YAAAiP,YAAA,WACS,MAAAphH,GACT,OAAAvD,KAAAuuC,QAAA,UAIA,IAAA6/C,EAAA,IAAApuF,KAAA46G,sBAAAjvB,OAAAS,UAAA9tF,OAAA6xF,IAAAl7F,OAEA,OAAAm5F,GAEA7F,GAAAhoF,IAAA2yC,KAAA,mGAEAlzC,KAAAszD,MAAA/kB,QAAA,iBACAvuC,KAAA46G,sBAAAzlD,KAAAi5B,KAGAsnC,EAAAzlC,aAAA3+F,KAAAga,MAAA,IAAAs8G,EACA5nH,KAAAszD,MAAA/kB,QAAA,qBACAvuC,KAAAszD,MAAA/kB,SAA0BhxC,KAAA,QAAAvH,KAAA,8BAG1By/H,EAAAz1H,KAAA80H,iBACAvsC,GAAAhoF,IAAA2yC,KAAA,sDAAAre,EAAAq0B,QAAA,IAAAr0B,EAAAq0B,QAAA,uCAEAlpD,KAAA46G,sBAAA1uB,MAAAupC,OAQAl3H,IAAA,eACAE,MAAA,WACAuB,KAAAszH,mBAAAnnE,QACAnsD,KAAAg0H,YAAA1lC,MAAA2iC,sBACAjxH,KAAAqzH,oBAAAlnE,QAEAnsD,KAAAg0H,YAAAvlC,UAAAwiC,sBACAjxH,KAAAo0H,uBAAAjoE,WAYA5tD,IAAA,iBACAE,MAAA,SAAA21D,GACA,IAAA1L,EAAAuqC,GAAAjzF,KAAAszD,MAAA5K,WAAA0L,GAEA,OAAAp0D,KAAA46G,uBAAA56G,KAAA46G,sBAAA1uB,SAOAlsF,KAAA46G,sBAAA1uB,QAAAG,SAQA3jC,KAAAzzD,OACAm/D,GAKAp0D,KAAAszH,mBAAA1P,kBACA5jH,KAAAszH,mBAAAvsF,QACA/mC,KAAAg0H,YAAA1lC,MAAA2iC,uBACAjxH,KAAAqzH,oBAAAzP,kBACA5jH,KAAAqzH,oBAAAtsF,SAEA/mC,KAAAg0H,YAAAvlC,UAAAwiC,uBACAjxH,KAAAo0H,uBAAAxQ,kBACA5jH,KAAAo0H,uBAAArtF,cAIA/mC,KAAAm1D,QA/BA,KAyCA52D,IAAA,WACAE,MAAA,WACA,OAAAuB,KAAA46G,sBAIA56G,KAAA01G,YACA11G,KAAA01G,YAAA3+G,SAGA26F,GAAAjB,SAAA15F,SAAAiJ,KAAA46G,sBAAA1uB,SAPA,KAiBA3tF,IAAA,WACAE,MAAA,WACA,OAAAuB,KAAA8gH,aAGAviH,IAAA,oBACAE,MAAA,WACA,IAAA23H,OAAA,EACAC,OAAA,EAEA,GAAAr2H,KAAA46G,sBAAA,CAIA,IAAA1uB,EAAAlsF,KAAA46G,sBAAA1uB,QAEA,GAAAA,EAAA,CAIA,IAAA0C,EAAA5uF,KAAAoiH,gBAAA6T,eAAA/pC,EAAAlsF,KAAA01G,YAAA3+G,UAEA,UAAA63F,GAOA,KAFAwnC,EAAA1kC,GAAAjB,SAAA3zB,SAAAovB,EAAA0C,IAEA35F,OAAA,CAIA,GAAA+K,KAAAg0H,YAAA1lC,MAAA2iC,qBAAA,CAIA,GAHA/kC,EAAAlsF,KAAAg0H,YAAA1lC,MAAA2iC,qBAAA/kC,QAGA,QAFA0C,EAAA5uF,KAAAoiH,gBAAA6T,eAAA/pC,EAAAlsF,KAAA01G,YAAA3+G,WAGA,OAKA,QAFAs/H,EAAA3kC,GAAAjB,SAAA3zB,SAAAovB,EAAA0C,IAEA35F,OACA,OAIAohI,EAIOA,EAAAl1G,MAAA,GAAAi1G,EAAA54H,IAAA,IAAA44H,EAAAj1G,MAAA,GAAAk1G,EAAA74H,IAAA,GAEPwC,KAAA8gH,UAAAsV,EAEAp2H,KAAA8gH,UAAAv4B,GAAA//B,mBAAA6tE,EAAAl1G,MAAA,GAAAi1G,EAAAj1G,MAAA,GAAAk1G,EAAAl1G,MAAA,GAAAi1G,EAAAj1G,MAAA,GAAAk1G,EAAA74H,IAAA,GAAA44H,EAAA54H,IAAA,GAAA64H,EAAA74H,IAAA,GAAA44H,EAAA54H,IAAA,MALAwC,KAAA8gH,UAAAsV,EAQAp2H,KAAAi8G,QAAA,qBAAA9oB,GAAAnzF,KAAA8gH,WAAA,KAEA9gH,KAAAszD,MAAA/kB,QAAA,yBAQAhwC,IAAA,iBACAE,MAAA,WACA,IAAA+5D,EAAAx4D,KAEAs2H,EAAAt2H,KAAA01G,YAAA3+G,SACAw/H,EAAA7kC,GAAAjB,SAAA15F,SAAAiJ,KAAA46G,sBAAA1uB,SACAxjC,EAAA1oD,KAAAszD,MAAA5K,WACA8tE,EAAA,SAAAA,IACAh+D,EAAAk9C,YAAA3+G,SAAAw/H,EACA/9D,EAAAlF,MAAA/kB,QAAA,kBAEAiqB,EAAAk9C,YAAA/6D,oBAAA,aAAA67E,IAGA9tE,EAAAzzD,OAAA,IACAshI,EAAA97H,KAAA6+C,IAAAi9E,EAAA7tE,EAAAlrD,IAAAkrD,EAAAzzD,OAAA,KAIAqhI,IAAAC,IAEA,SAAAv2H,KAAA01G,YAAApvE,WACAtmC,KAAA01G,YAAAj2F,iBAAA,aAAA+2G,GAEAA,QAWAj4H,IAAA,UACAE,MAAA,WACA,IAAAy6D,EAAAl5D,KAEAA,KAAAmiH,WAAAhsB,YACAn2F,KAAA46G,sBAAA15D,UACAlhD,KAAAszH,mBAAApyE,WAEA,qBAAA/6C,QAAA,SAAA5I,GACA,IAAA20H,EAAAh5D,EAAA86D,YAAAz2H,GAAA20H,OAEA,QAAAl5G,KAAAk5G,EACAA,EAAAl5G,GAAA7S,QAAA,SAAAk0G,GACAA,EAAA8W,gBACA9W,EAAA8W,eAAAjwE,cAMAlhD,KAAAqzH,oBAAAnyE,UACAlhD,KAAAo0H,uBAAAlzE,aAUA3iD,IAAA,SACAE,MAAA,WACA,OAAAuB,KAAA46G,sBAAAjvB,UAUAptF,IAAA,QACAE,MAAA,WAEA,OAAAuB,KAAA46G,sBAAA1uB,SAAAlsF,KAAA+0H,iBAUAx2H,IAAA,sBACAE,MAAA,WACA,IACAg4H,EADAvqC,EAAAlsF,KAAA46G,sBAAA1uB,QAKA,GAAAA,GAAA,SAAAlsF,KAAA01G,YAAApvE,WAAA,CAKA,IADAmwF,EAAA5iB,GAAA7zG,KAAA46G,sBAAAjvB,OAAAO,IACAj3F,OAAA,EAEA,OADA+K,KAAA60B,MAAA,mEAAAq3D,EAAAS,YACA3sF,KAAA01G,YAAAiP,YAAA,UAGA3kH,KAAA02H,0BAAAD,GAGAz2H,KAAA22H,6BAAAzqC,OAGA3tF,IAAA,4BACAE,MAAA,SAAAg4H,GAKA,IAAA7a,EAEA6a,EAAAxhI,OAAA,IAEA,IAAAwhI,EAAA,GAAA5xH,QAAA,MAGA4xH,EAAA,KAAAA,EAAA,GAEA,IAAAluC,GAAA1qC,YAGA,KAEA79C,KAAAszH,mBAAApc,SAAAuf,EAAA,GAAA7a,GACA6a,EAAA,IACAz2H,KAAAqzH,oBAAAnc,SAAAuf,EAAA,GAAA7a,MASAr9G,IAAA,8BACAE,MAAA,WACAuB,KAAA2rF,SAAAS,UAAAjmF,QAAA,SAAAywH,GA3hQA,IAAAC,EA4hQAD,EAAAtgF,WAAA49D,QAAyCnjE,EAAA5vC,EAAQq3G,aAAgBznE,EAAA5vC,EAAQq3G,YAAAoB,kBAAiC7oE,EAAA5vC,EAAQq3G,YAAAoB,gBAAA,uBA5hQlHid,EA4hQ0JD,EAAAtgF,WAAA49D,OA3hQ1J2iB,EAAA/yH,QAAA,+BAAA9E,GACA,OAAAo0G,IAAAp0G,IAAA,MA0hQ0J,OAC1J43H,EAAA3mC,aAAAnvD,UAqBAviC,IAAA,+BACAE,MAAA,SAAAytF,GACA,IAAAwnB,EAAA,EACAT,EAAA,KACAI,OAAA,EAEAnnB,EAAA51C,WAAA49D,SACAb,EAAAI,GAAAvnB,EAAA51C,WAAA49D,QACAjB,EAAAI,EAAAJ,WACAS,EAAAL,EAAAK,YAGA1zG,KAAA2rF,SAAAS,UAAAjmF,QAAA,SAAAywH,GACA,IAAAE,GACApjB,WAAA,EACAT,WAAA,MAGA2jB,EAAAtgF,WAAA49D,SACA4iB,EAAArjB,GAAAmjB,EAAAtgF,WAAA49D,SAKA4iB,EAAApjB,iBACAkjB,EAAA3mC,aAAAnvD,KAKAg2F,EAAA7jB,iBACA2jB,EAAA3mC,aAAAnvD,UAKAviC,IAAA,gBACAE,MAAA,SAAAytF,GACA,IAAA74F,EAAA,EACA0zH,EAAA/mH,KAAA88D,WAEAiqD,EAAA9xH,SACA5B,EAAA0zH,EAAA5lG,MAAA,IAhuGA,SAAA+qE,EAAAlkE,GACA,IAAA30B,EAAA8P,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,KAEA,GAAA+oF,EAAAG,SAOA,IAHA,IAAAq+B,EAAAr3H,EACA22D,OAAA,EAEA12D,EAAA,EAAiBA,EAAA44F,EAAAG,SAAAp3F,OAA2B3B,IAAA,CAC5C,IAAAm5F,EAAAP,EAAAG,SAAA/4F,GAUA,GARA02D,IAKAA,EAAAygE,GAAAziG,EAAA0iG,EAAAj+B,EAAA11F,SAAA,IAGAizD,EAAA,CACA,aAAAyiC,EAAA,CAEAziC,EAAAC,QAAAygE,EACA1gE,EAAA4gE,UAAAF,EACAA,GAAAj+B,EAAA11F,SACAizD,EAAA,KACA,SAGA,GAAA0gE,EAAA1gE,EAAAC,QAAA,CAEAygE,GAAAj+B,EAAA11F,SACA,SAIAizD,EAAAC,SAAAwiC,EAAA11F,cAWA,GATA,WAAA01F,KACAziC,EAAA,IAAkBjZ,EAAA5vC,EAAQozD,OAAAm2D,IAAAj+B,EAAA11F,SAAA01F,EAAAsqC,SAC1BpM,YAAAD,EAGA1gE,EAAA4gE,UAAAF,EAAAnyE,WAAAk0C,EAAAsqC,QACA/uG,EAAA2iC,OAAAX,IAGA,eAAAyiC,EAAA,CAEA,IAAAuqC,EACAC,EAKAC,EAAAzqC,EAAA0qC,WAAA/3H,MAAA,KAAAlB,IAAAq6C,YAEA6+E,EAAArsC,GAAAmsC,EAAA,GAEAF,EAAAI,EAAA,GACAH,EAAAG,EAAA,IAEAptE,EAAA,IAAkBjZ,EAAA5vC,EAAQozD,OAAAm2D,IAAAj+B,EAAA11F,SAAA,KAC1B4zH,YAAAD,EAAAsM,EACAhtE,EAAA4gE,UAAA5gE,EAAA2gE,YAAAsM,EACAjvG,EAAA2iC,OAAAX,GAGA0gE,GAAAj+B,EAAA11F,UA6pGAsgI,CAAAnrC,EAAAlsF,KAAA8zH,cAAAzgI,MAUAkL,IAAA,mBACAE,MAAA,WACA,IAAA21D,EAAAp0D,KAAAszD,MAAAc,cACA+d,EAAAuqC,GAAAC,mBACA9kH,EAAA6kH,GAAAG,wBACAvjE,EAAA7+C,KAAA6+C,IAAA64B,EAAAuqC,GAAAE,wBAEA,OAAAniH,KAAAwgC,IAAAk3C,EAAA/d,EAAAv8D,EAAAyhD,MAUA/6C,IAAA,qBACAE,MAAA,WACA,IAAA21D,EAAAp0D,KAAAszD,MAAAc,cACA+d,EAAAuqC,GAAAK,sBACAllH,EAAA6kH,GAAAO,2BACA3jE,EAAA7+C,KAAA6+C,IAAA64B,EAAAuqC,GAAAM,2BAEA,OAAAviH,KAAAwgC,IAAAk3C,EAAA/d,EAAAv8D,EAAAyhD,OAGAi6E,EAtqCA,CAuqCChrC,GAAA1qC,aAmDDy5E,GAAA,SAAAA,EAAAC,EAAAprC,EAAAnzE,GACAyxE,GAAAzqF,KAAAs3H,GAGA,IAzCAE,EAAAC,EAAAC,EAyCAC,EAAAJ,EAAAK,0BAAAC,mBAAAr4G,KAAA+3G,EAAAK,2BAGA,GAAAzrC,EAAA71C,WAAAsyE,WAAA,CACA,IAAAD,EAAAx8B,EAAA71C,WAAAsyE,WAEA5oH,KAAAtN,MAAAi2H,EAAAj2H,MACAsN,KAAArN,OAAAg2H,EAAAh2H,OAGAqN,KAAAmxF,UAAAhF,EAAA71C,WAAAi6C,UAIAvwF,KAAAgZ,KAIAhZ,KAAA6uD,SA3DA2oE,EA2DAD,EAAAnrC,UA3DAqrC,EA2DAtrC,EAAA/nD,IA3DAszF,EA2DAC,EA1DA,SAAAh1H,GACA,IAAAwpF,EAAAqrC,EAAA7rC,OAAAS,UAAAqrC,GACAK,EAAA5nC,GAAA/D,GACA4rC,EAAA5nC,GAAAhE,GAEA,gBAAAxpF,EACAo1H,GAGAp1H,SACAwpF,EAAAhlF,SAEAglF,EAAAhlF,UAAA,EAGAxE,IAAAo1H,GAAAD,IAEAJ,IACA/0H,EACA60H,EAAAjpF,QAAA,oBAEAipF,EAAAjpF,QAAA,sBAGA5rC,MAoEAq1H,IAAA,8CAMAC,GAAA,WAMA,SAAAA,EAAA/1G,GACA,IAAAjiB,EAAAD,KAEAyqF,GAAAzqF,KAAAi4H,GAEAj4H,KAAAszD,MAAApxC,EAAAioC,KACAnqD,KAAA88D,SAAA56C,EAAA46C,SACA98D,KAAA2zH,OAAAzxG,EAAAyxG,OAEA3zH,KAAAk4H,mBAAA,EACAl4H,KAAAm4H,iBAAA,KACAn4H,KAAAo4H,OAAA,KACAp4H,KAAAq4H,yBAAA,KACAr4H,KAAAi8G,QAAAP,GAAA,mBAEA17G,KAAAi8G,QAAA,cAEA,IAAAqc,EAAA,WACA,OAAAr4H,EAAAs4H,uBAEAC,EAAA,WACA,OAAAv4H,EAAAw4H,gBAEAC,EAAA,WACA,OAAAz4H,EAAA04H,gBAEAC,EAAA,WACA,OAAA34H,EAAA44H,kBAGA74H,KAAAszD,MAAA9X,GAAA,kBAAAo9E,GACA54H,KAAAszD,MAAA9X,GAAA,UAAAg9E,GACAx4H,KAAAszD,MAAA9X,GAAAw8E,GAAAU,GACA14H,KAAAszD,MAAA9X,GAAA,UAAA88E,GAGAt4H,KAAAkhD,QAAA,WACAjhD,EAAAg8G,QAAA,WACAh8G,EAAAqzD,MAAAtgB,IAAA,kBAAA4lF,GACA34H,EAAAqzD,MAAAtgB,IAAA,UAAAwlF,GACAv4H,EAAAqzD,MAAAtgB,IAAAglF,GAAAU,GACAz4H,EAAAqzD,MAAAtgB,IAAA,UAAAslF,GACAr4H,EAAAo4H,0BACQtnF,EAAA5vC,EAAQyjC,aAAA3kC,EAAAo4H,0BAEhBp4H,EAAA04H,gBAwVA,OA9UAjuC,GAAAutC,IACA15H,IAAA,sBACAE,MAAA,WACAuB,KAAA84H,oBAEA94H,KAAAq4H,0BACQtnF,EAAA5vC,EAAQyjC,aAAA5kC,KAAAq4H,0BAIhBr4H,KAAAq4H,yBAAsCtnF,EAAA5vC,EAAQ2zB,WAAA90B,KAAAu4H,oBAAA/4G,KAAAxf,MAAA,QAY9CzB,IAAA,oBACAE,MAAA,WACA,GAAAuB,KAAAszD,MAAA6rB,WAAAn/E,KAAA64H,iBAGA,OAFA74H,KAAAk4H,mBAAA,OACAl4H,KAAAm4H,iBAAAn4H,KAAAszD,MAAAc,eAIA,IAAAp0D,KAAAszD,MAAArH,WAAAjsD,KAAAszD,MAAA6rB,UAAA,CAIA,IAAA/qB,EAAAp0D,KAAAszD,MAAAc,cACA1L,EAAA1oD,KAAAszD,MAAA5K,WAEA,GAAA1oD,KAAAm4H,mBAAA/jE,KAAA1L,EAAAzzD,QAAAm/D,EAzreA+hE,IAyreAztE,EAAAlrD,IAAAkrD,EAAAzzD,OAAA,IAMA,OAAA+K,KAAAy4H,eAGAz4H,KAAAk4H,oBAAA,GAAA9jE,IAAAp0D,KAAAm4H,kBACAn4H,KAAAk4H,qBACAl4H,KAAA+4H,YACO3kE,IAAAp0D,KAAAm4H,iBACPn4H,KAAAk4H,sBAEAl4H,KAAAk4H,mBAAA,EACAl4H,KAAAm4H,iBAAA/jE,OAYA71D,IAAA,eACAE,MAAA,WACAuB,KAAAk4H,mBAAA,EAEAl4H,KAAAo4H,SACAp4H,KAAAi8G,QAAA,gBACAr3E,aAAA5kC,KAAAo4H,SAGAp4H,KAAAo4H,OAAA,QAWA75H,IAAA,iBACAE,MAAA,WACA,IAAA0gF,EAAAn/E,KAAAszD,MAAA6rB,UACAriB,EAAA98D,KAAA88D,WACA1I,EAAAp0D,KAAAszD,MAAAc,cACAu/D,OAAA,EAEAx0C,GAAAn/E,KAAAg5H,qBAAAl8D,EAAA1I,KAIAu/D,EAHA72D,EAAAt/D,IAAAs/D,EAAA7nE,OAAA,IAMAkqF,GAAAn/E,KAAAi5H,sBAAAn8D,EAAA1I,KAKAu/D,EAJA72D,EAAA37C,MAAA,GAxveAg1G,IA+veA,gBAAAxC,IACA3zH,KAAAi8G,QAAA,8CAAA7nD,EAAA,wBAAA++B,GAAAr2B,GAAA,gBAAA62D,EAAA,KAEA3zH,KAAA2zH,WACA,MAaAp1H,IAAA,WACAE,MAAA,WACA,IAAAuB,KAAAy4H,eAAA,CAKA,IAAArkE,EAAAp0D,KAAAszD,MAAAc,cACA1L,EAAA1oD,KAAAszD,MAAA5K,WACAwwE,EAAAjmC,GAAAvqC,EAAA0L,GAUA,OAAA8kE,EAAAjkI,QAAAm/D,EAAA,GAAA8kE,EAAA17H,IAAA,IACAwC,KAAA24H,eACA34H,KAAA2zH,OAAAv/D,GAEAp0D,KAAAi8G,QAAA,cAAA7nD,EAAA,oCAAA8kE,EAAA/3G,MAAA,UAAA+3G,EAAA17H,IAAA,4EAGAwC,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,8BAP5B,MAsBAuI,IAAA,eACAE,MAAA,WACA,IAAAq+D,EAAA98D,KAAA88D,WACA1I,EAAAp0D,KAAAszD,MAAAc,cAEA,GAAAp0D,KAAAszD,MAAA6rB,WAAAn/E,KAAA64H,iBAEA,SAGA,GAAA74H,KAAAszD,MAAA6rB,WAAA,OAAAn/E,KAAAo4H,OAEA,SAGA,GAAAp4H,KAAAi5H,sBAAAn8D,EAAA1I,GAAA,CACA,IAAA+kE,EAAAr8D,EAAAt/D,IAAAs/D,EAAA7nE,OAAA,GAQA,OANA+K,KAAAi8G,QAAA,mCAAA7nD,EAAA,0CAAA+kE,GACAn5H,KAAA24H,eACA34H,KAAA2zH,OAAAwF,GAGAn5H,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,qBAC5B,EAGA,IAAA0yD,EAAA1oD,KAAAszD,MAAA5K,WACA0wE,EAAAlmC,GAAAxqC,EAAA0L,GAEA,GAAAp0D,KAAAq5H,gBAAAD,EAAA1wE,EAAA0L,GAUA,OALAp0D,KAAA24H,eACA34H,KAAA2zH,OAAAv/D,GAGAp0D,KAAAszD,MAAA/kB,SAA4BhxC,KAAA,QAAAvH,KAAA,yBAC5B,EAIA,GAAAojI,EAAAnkI,OAAA,GACA,IAAAqkI,EAAAF,EAAAj4G,MAAA,GAAAizC,EAKA,OAHAp0D,KAAAi8G,QAAA,cAAA7nD,EAAA,uBAAAklE,EAAA,gBAAAF,EAAAj4G,MAAA,IAEAnhB,KAAAo4H,OAAAtjG,WAAA90B,KAAAu5H,YAAA/5G,KAAAxf,MAAA,IAAAs5H,EAAAllE,IACA,EAIA,YAGA71D,IAAA,uBACAE,MAAA,SAAAq+D,EAAA1I,GACA,QAAA0I,EAAA7nE,QAKAm/D,EAAA0I,EAAAt/D,IAAAs/D,EAAA7nE,OAAA,GAz3eAkhI,MAg4eA53H,IAAA,wBACAE,MAAA,SAAAq+D,EAAA1I,GACA,SAAA0I,EAAA7nE,QAEA6nE,EAAA37C,MAAA,MAAAizC,EAAA0I,EAAA37C,MAAA,GAp4eAg1G,OA24eA53H,IAAA,kBACAE,MAAA,SAAA26H,EAAA1wE,EAAA0L,GACA,OAAAglE,EAAAnkI,OAAA,CAGA,IAAAukI,EAAAx5H,KAAAy5H,uBAAA/wE,EAAA0L,GAEA,GAAAolE,EAGA,OAFAx5H,KAAAi8G,QAAA,mCAAAud,EAAAr4G,MAAA,OAAAq4G,EAAAh8H,IAAA,6BAAA42D,IAEA,EAIA,YAWA71D,IAAA,cACAE,MAAA,SAAAi7H,GACA,IAAAhxE,EAAA1oD,KAAAszD,MAAA5K,WACA0L,EAAAp0D,KAAAszD,MAAAc,cACAglE,EAAAlmC,GAAAxqC,EAAA0L,GAEAp0D,KAAA24H,eAEA,IAAAS,EAAAnkI,QAAAm/D,IAAAslE,IAIA15H,KAAAi8G,QAAA,8BAAA7nD,EAAA,yBAAAslE,EAAA,mBAAAN,EAAAj4G,MAAA,IAGAnhB,KAAA2zH,OAAAyF,EAAAj4G,MAAA,GAz7eA,MA27eAnhB,KAAAszD,MAAA/kB,SAA0BhxC,KAAA,QAAAvH,KAAA,qBAG1BuI,IAAA,yBACAE,MAAA,SAAAiqD,EAAA0L,GAyBA,IAFA,IAAAulE,EAj6eA,SAAAjxE,GACA,GAAAA,EAAAzzD,OAAA,EACA,OAAAszF,GAAA//B,mBAKA,IAFA,IAAAL,KAEA70D,EAAA,EAAiBA,EAAAo1D,EAAAzzD,OAAqB3B,IAAA,CACtC,IAAA6tB,EAAAunC,EAAAlrD,IAAAlK,EAAA,GACAkK,EAAAkrD,EAAAvnC,MAAA7tB,GAEA60D,EAAAn0D,MAAAmtB,EAAA3jB,IAGA,OAAA+qF,GAAA//B,iBAAAL,GAm5eAyxE,CAAAlxE,GAEAp1D,EAAA,EAAqBA,EAAAqmI,EAAA1kI,OAAiB3B,IAAA,CACtC,IAAA6tB,EAAAw4G,EAAAx4G,MAAA7tB,GACAkK,EAAAm8H,EAAAn8H,IAAAlK,GAGA,GAAA8gE,EAAAjzC,EAAA,GAAAizC,EAAAjzC,EAAA,EACA,OACAA,QACA3jB,OAKA,gBAGAy6H,EA3YA,GA8YA4B,IACAC,cAAA,GACAC,UAAA,SAAAxsG,GAIA,OAAAA,EAHAvtB,KAAAmqD,MAA0B6vE,0BAAA,IAC1B3+D,kBAgHA4+D,GAAA,SAAA/3G,IAnGA,SAAAg4G,EAAAr9E,EAAA36B,GACA,IAAAi4G,EAAA,EACAxG,EAAA,EACAyG,EAAA7xC,GAAAnoC,aAAAy5E,GAAA33G,GAEA26B,EAAAwD,MAAA,WACAxD,EAAAtO,SAAoBhxC,KAAA,QAAAvH,KAAA,mCASpB,IAAAqkI,EAAA,WACA1G,GACA92E,EAAAuX,YAAAu/D,IAUAz4D,EAAA,SAAAumB,GACA,OAAAA,QAAA79C,IAAA69C,IAGAkyC,EAAA92E,EAAA9lD,aAAA+pC,KAAA+b,EAAAuX,eAAA,EAEAvX,EAAAZ,IAAA,iBAAAo+E,GAEAx9E,EAAA0N,IAAAk3B,GACA5kC,EAAAtO,SAAoBhxC,KAAA,QAAAvH,KAAA,qBACpB6mD,EAAAyD,SASAg6E,EAAA,WAGA,GAAAhpI,KAAAga,MAAA6uH,EAAA,IAAAC,EAAAN,cACAj9E,EAAAtO,SAAsBhxC,KAAA,QAAAvH,KAAA,kCADtB,CAKA,GAAAokI,EAAAL,WAAA,mBAAAK,EAAAL,UAMA,OAFAI,EAAA7oI,KAAAga,MAEA8uH,EAAAL,UAAAl7H,KAAAg+C,EAAAqe,GALAqtB,GAAAhoF,IAAAs0B,MAAA,2EAaA0lG,EAAA,SAAAA,IACA19E,EAAA7J,IAAA,iBAAAqnF,GACAx9E,EAAA7J,IAAA,QAAAsnF,GACAz9E,EAAA7J,IAAA,UAAAunF,IAcA19E,EAAArB,GAAA,QAAA8+E,GACAz9E,EAAArB,GAAA,UAAA++E,GAIA19E,EAAAo9E,oBAVA,SAAAtoC,GACA4oC,IACAL,EAAAr9E,EAAA80C,IAkBAuoC,CAAAl6H,KAAAkiB,IAMAqmE,GAAAiB,IAAA,aAAA3sC,GACA,OACAqe,UAAA,SAAApB,EAAAvsC,GAEAA,EAAA,KAAAusC,IAOA3B,eAAA,SAAAppD,GAKA,OAJA8tC,EAAA29E,KAAA39E,EAAAwoC,gBAAA96B,MAAA1N,EAAA29E,IAAAC,QAAAlwE,KACA1N,EAAA29E,IAAAriE,eAAAppD,GAGAA,MAYA,IAAA2rH,IACAxtC,kBACAuD,YACAkqC,UAAaxoF,EAAA,EACbyoF,YAAezoF,EAAA,EACfg8E,QAAWh8E,EAAA,EACXygD,SAEAioC,2BAh8LA,WACA,OA5HA,SAAAlvC,EAAAmvC,EAAAC,EAAAC,GAEA,IAAAC,EAAAtvC,EAAAS,UAAAluF,IAAA,SAAAiuF,GACA,IAAAz5F,EACAC,EASA,OANAD,EAAAy5F,EAAA71C,WAAAsyE,YAAAz8B,EAAA71C,WAAAsyE,WAAAl2H,MACAC,EAAAw5F,EAAA71C,WAAAsyE,YAAAz8B,EAAA71C,WAAAsyE,WAAAj2H,QAMAw+F,UALAhF,EAAA71C,WAAAi6C,WAE6Bx/C,EAAA5vC,EAAQ4vE,OAAAyf,UAIrC99F,QACAC,SACAw5F,cAIAyzB,GAAAqb,EAAA,SAAA1/F,EAAA4rC,GACA,OAAA5rC,EAAA41D,UAAAhqB,EAAAgqB,YAWA,IAAA+pC,GANAD,IAAA38H,OAAA,SAAA68H,GACA,OAAA1qC,GAAAP,eAAAirC,EAAAhvC,aAKA7tF,OAAA,SAAA68H,GACA,OAAA1qC,GAAAN,UAAAgrC,EAAAhvC,YAGA+uC,EAAAjmI,SAIAimI,EAAAD,EAAA38H,OAAA,SAAA68H,GACA,OAAA1qC,GAAAlxD,WAAA47F,EAAAhvC,aAMA,IAAAivC,EAAAF,EAAA58H,OAAA,SAAA68H,GACA,OAAAA,EAAAhqC,UAAAurB,GAAAI,mBAAAge,IAGAO,EAAAD,IAAAnmI,OAAA,GAIAqmI,EAAAF,EAAA98H,OAAA,SAAA68H,GACA,OAAAA,EAAAhqC,YAAAkqC,EAAAlqC,YACG,GAGHoqC,EAAAH,EAAA98H,OAAA,SAAA68H,GACA,OAAAA,EAAAzoI,OAAAyoI,EAAAxoI,SAIAitH,GAAA2b,EAAA,SAAAhgG,EAAA4rC,GACA,OAAA5rC,EAAA7oC,MAAAy0E,EAAAz0E,QAIA,IAAA8oI,EAAAD,EAAAj9H,OAAA,SAAA68H,GACA,OAAAA,EAAAzoI,QAAAqoI,GAAAI,EAAAxoI,SAAAqoI,IAGAK,EAAAG,IAAAvmI,OAAA,GAEA,IAAAwmI,EAAAD,EAAAl9H,OAAA,SAAA68H,GACA,OAAAA,EAAAhqC,YAAAkqC,EAAAlqC,YACG,GAEHuqC,OAAA,EACAC,OAAA,EACAC,OAAA,EAIAH,IAMAE,GALAD,EAAAH,EAAAj9H,OAAA,SAAA68H,GACA,OAAAA,EAAAzoI,MAAAqoI,GAAAI,EAAAxoI,OAAAqoI,KAIA18H,OAAA,SAAA68H,GACA,OAAAA,EAAAzoI,QAAAgpI,EAAA,GAAAhpI,OAAAyoI,EAAAxoI,SAAA+oI,EAAA,GAAA/oI,SAKA0oI,EAAAM,IAAA1mI,OAAA,GACA2mI,EAAAD,EAAAr9H,OAAA,SAAA68H,GACA,OAAAA,EAAAhqC,YAAAkqC,EAAAlqC,YACK,IAIL,IAAA0qC,EAAAD,GAAAH,GAAAH,GAAAJ,EAAA,IAAAD,EAAA,GAEA,OAAAY,IAAA1vC,SAAA,KAgBA2vC,CAAA97H,KAAAosF,UAAAT,OAAA3rF,KAAA+7H,gBAAAj4E,SAAA67D,GAAA3/G,KAAAszD,MAAAle,KAAA,aAAA0O,SAAA67D,GAAA3/G,KAAAszD,MAAAle,KAAA,gBAg8LA4mF,0BAp1LA,WAGA,IAAA5vC,EAAApsF,KAAAosF,UAAAT,OAAAS,UAAA9tF,OAAAmyF,GAAAN,WAgBA,OAbAyvB,GAAAxzB,EAAA,SAAAjrF,EAAA+B,GACA,OAAA88G,GAAA7+G,EAAA+B,KAQAkpF,EAAA9tF,OAAA,SAAA6tF,GACA,OAAAsnB,GAAAtnB,EAAA71C,WAAA49D,QAAAjB,aAGA,UAk0LA+M,4BACAic,0BArmMA,SAAA1gG,EAAA4rC,GACA,IAAA+0D,OAAA,EACAC,OAAA,EAgBA,OAdA5gG,EAAA+a,WAAAsyE,YAAArtF,EAAA+a,WAAAsyE,WAAAl2H,QACAwpI,EAAA3gG,EAAA+a,WAAAsyE,WAAAl2H,OAGAwpI,KAA2BnrF,EAAA5vC,EAAQ4vE,OAAAyf,UAEnCrpB,EAAA7wB,WAAAsyE,YAAAzhD,EAAA7wB,WAAAsyE,WAAAl2H,QACAypI,EAAAh1D,EAAA7wB,WAAAsyE,WAAAl2H,OAOAwpI,KAJAC,KAA6BprF,EAAA5vC,EAAQ4vE,OAAAyf,YAIrCj1D,EAAA+a,WAAAi6C,WAAAppB,EAAA7wB,WAAAi6C,UACAh1D,EAAA+a,WAAAi6C,UAAAppB,EAAA7wB,WAAAi6C,UAEA2rC,EAAAC,GAklMA/2F,IAAAmsD,OAOA,+KAAAprF,QAAA,SAAAkvC,GACAj3C,OAAA4R,eAAA0qH,GAAArlF,GACAvlC,IAAA,WAEA,OADAy4E,GAAAhoF,IAAA2yC,KAAA,aAAAmC,EAAA,kDACAqnE,GAAArnE,IAEAtlC,IAAA,SAAAtR,GACA8pF,GAAAhoF,IAAA2yC,KAAA,aAAAmC,EAAA,kDAEA,iBAAA52C,KAAA,EACA8pF,GAAAhoF,IAAA2yC,KAAA,gBAAAmC,EAAA,uCAIAqnE,GAAArnE,GAAA52C,OAKA,IAAA29H,GAAA,SAAA7+H,GAGA,GAFA,yDAEAkW,KAAAlW,GACA,YAKA,MAFA,2BAEAkW,KAAAlW,GACA,OAGA,MAUA8+H,GAAA,SAAAC,EAAAnL,GAIA,IAHA,IAAAtN,EAAAsN,EAAAjlC,QACA7Z,GAAA,EAEA/+E,EAAA,EAAiBA,EAAAgpI,EAAArnI,OAA0B3B,IAC3C,GAAAgpI,EAAAhpI,GAAA0lB,KAAA6qG,EAAAz/E,IAAA,CACAiuC,EAAA/+E,EACA,MAIAgpI,EAAAC,eAAAlqD,EACAiqD,EAAA/tF,SACA8jC,gBACA90E,KAAA,YAoBAm9H,GAAA7gE,cAAA,WACA,OAAA0uB,GAAAhoF,IAAA2yC,KAAA,4EAGA,IA4BAspF,GAAA,SAAAjF,GACA,YAAAA,EAAA/2E,SAAAghE,WAAA,CAGA,IAAA3kE,EAAA0rC,GAAAtiC,QAAAsxE,EAAAjkE,MAAA9S,SAAAu3B,UAEA,GAAAl7B,EAAA4/E,IAAA,CACA,IAAAC,EAnCA,SAAAC,EAAAC,EAAAC,GACA,IAAAF,EACA,OAAAA,EAIA,IAAAG,KAEA,QAAAC,KAAAJ,EACAG,EAAAC,IACAC,iBAAA,sBAAmCH,EAAAvmF,WAAA49D,OAAA,IACnC+oB,iBAAA,sBAAmCL,EAAAtmF,WAAA49D,OAAA,KAGnC0oB,EAAAM,mBAAAN,EAAAM,kBAAAH,IAAAH,EAAAM,kBAAAH,GAAAI,OACAL,EAAAC,GAAAI,KAAAP,EAAAM,kBAAAH,GAAAI,MAKA,iBAAAR,EAAAI,KACAD,EAAAC,GAAA/tH,IAAA2tH,EAAAI,IAIA,OAAAx0C,GAAAnoC,aAAAu8E,EAAAG,GAUAM,CAAA7F,EAAAkD,QAAA4C,WAAA9F,EAAAnrC,UAAAF,QAAAqrC,EAAAK,0BAAA5D,YAAA1lC,MAAA2iC,qBAAA/kC,SAEAwwC,IACA7/E,EAAAwoC,gBAAAg4C,WAAAX,MAQAhC,GAAA4C,kBAAA,WACA,IAAA/7H,EAAc0vC,EAAA9vC,EAAQC,cAAA,SAGtB,IAAAmnF,GAAAruB,QAAA,SAAAiE,cACA,SAgBA,OAVA,gCAEA,gBAEA,kBAEA,wBAEA,yDAEAzb,KAAA,SAAA66E,GACA,wBAAA9pH,KAAAlS,EAAAq4D,YAAA2jE,MAtBA,GA2BA7C,GAAA8C,qBACAj1C,GAAAruB,QAAA,SAAAiE,eAIA,kBAAA1qD,KAAiCw9B,EAAA9vC,EAAQC,cAAA,SAAAw4D,YAAA,yBAIzC8gE,GAAA+C,qBAAA,SAAAlgI,GACA,cAAAA,EACAm9H,GAAA4C,kBAGA,SAAA//H,GACAm9H,GAAA8C,oBAUA9C,GAAAv8D,YAAA,WACA,OAAAoqB,GAAAhoF,IAAA2yC,KAAA,4EAGA,IAAAwqF,GAAAn1C,GAAApmC,aAAA,aAaAw7E,GAAA,SAAAx9H,GAGA,SAAAw9H,EAAA51G,EAAAoiC,EAAAjoC,GACAuoE,GAAAzqF,KAAA29H,GAIA,IAAA19H,EAAA6qF,GAAA9qF,MAAA29H,EAAAnpF,WAAAp2C,OAAAivF,eAAAswC,IAAA9+H,KAAAmB,KAAAmqD,EAAAjoC,EAAAkrE,MAEA,GAAAjjC,EAAA3J,UAAA2J,EAAA3J,SAAAu3B,SAAA,CACA,IAAAsR,EAAAd,GAAAp+B,EAAA3J,SAAAu3B,UAEAsR,EAAAnkF,eAAA,QACA9G,OAAA4R,eAAAq5E,EAAA,OACAv5E,IAAA,WAGA,OAFAy4E,GAAAhoF,IAAA2yC,KAAA,4DACAiX,EAAA5b,SAA0BhxC,KAAA,QAAAvH,KAAA,sBAC1BiK,KAUAopF,EAAAmxC,IAAAv6H,EAEAopF,EAAAu0C,KAAA39H,EAQA,GALAA,EAAAqzD,MAAAnJ,EACAlqD,EAAAw6H,QAAA1yG,EACA9nB,EAAAy+G,SACAz+G,EAAA49H,cAEA59H,EAAAugD,SAAAs9E,gBAAA3zE,EAAAuP,2BAAAvP,EAAAwP,0BACAxP,EAAAuP,2BAAA,GACAvP,EAAAwP,2BAAA,QACK,GAAA15D,EAAAugD,SAAAs9E,iBAAA3zE,EAAAmwB,2BAAAnwB,EAAAowB,2BAGL,UAAA52E,MAAA,4EAmBA,OAdA1D,EAAAu7C,GAAavK,EAAA9vC,GAAQ,iGAAA2uC,GACrB,IAAAszC,EAA8BnyC,EAAA9vC,EAAQiiF,mBAAsBnyC,EAAA9vC,EAAQ48H,yBAA4B9sF,EAAA9vC,EAAQ68H,sBAAyB/sF,EAAA9vC,EAAQ88H,oBAEzI76C,KAAAroD,SAAA96B,EAAAqzD,MAAAle,OACAn1C,EAAA23H,0BAAAsG,yBAGAj+H,EAAAu7C,GAAAv7C,EAAAqzD,MAAA,mBACAtzD,KAAA43H,2BACA53H,KAAA43H,0BAAAuG,iBAIAl+H,EAAAu7C,GAAAv7C,EAAAqzD,MAAA,OAAArzD,EAAAqgD,MACArgD,EA0XA,OAxbA4qF,GAAA8yC,EAybCD,IAxXDhzC,GAAAizC,IACAp/H,IAAA,cACAE,MAAA,WACA,IAAAwC,EAAAjB,KAGAA,KAAAwgD,SAAA1Z,gBAAA9mC,KAAAwgD,SAAA1Z,kBAAA,EAEA,iBAAA9mC,KAAAwgD,SAAAonE,oBACA5nH,KAAAwgD,SAAAonE,kBAAA,KAKA,iBAAA5nH,KAAAwgD,SAAA2wC,YACAnxF,KAAAwgD,SAAA2wC,UAvRA,SA4RAnxF,KAAAwgD,SAAAkzE,yBAAA1zH,KAAAwgD,SAAAkzE,0BA5RA,UA4RA1zH,KAAAwgD,SAAA2wC,WAGA,+BAAAhrF,QAAA,SAAAi4H,QACA,IAAAn9H,EAAAw5H,QAAA2D,KACAn9H,EAAAu/C,SAAA49E,GAAAn9H,EAAAw5H,QAAA2D,MAIAp+H,KAAAmxF,UAAAnxF,KAAAwgD,SAAA2wC,aASA5yF,IAAA,MACAE,MAAA,SAAA49D,EAAA9+D,GACA,IAAA8nD,EAAArlD,KAGAq8D,IAGAr8D,KAAA69H,cAEA79H,KAAAwgD,SAAAxxC,IAAAhP,KAAAy6H,QAAAlwE,IACAvqD,KAAAwgD,SAAA2J,KAAAnqD,KAAAszD,MACAtzD,KAAAwgD,SAAAgzE,UAAAkH,GACA16H,KAAAwgD,SAAAghE,WAAA4a,GAAA7+H,GAIAyC,KAAAwgD,SAAAmzE,OAAA,SAAA5kH,GACAs2C,EAAAiO,MAAA6E,eAAAppD,GACAs2C,EAAA8S,eAAAppD,IAGA/O,KAAA43H,0BAAA,IAAArE,GAAAvzH,KAAAwgD,UACAxgD,KAAAq+H,iBAAA,IAAApG,GAAA1vC,GAAAnoC,aAAApgD,KAAAwgD,UACAsc,SAAA,WACA,OAAAzX,EAAAyX,eAIA98D,KAAA43H,0BAAAp8E,GAAA,mBACA+sC,GAAAtiC,QAAAZ,EAAAiO,MAAA9S,SAAAu3B,UAEAljD,MAAAwwB,EAAAuyE,0BAAA/iG,SAKA70B,KAAA43H,0BAAA9C,eAAA90H,KAAA80H,eAAA90H,KAAA80H,eAAAt1G,KAAAxf,MAAA06H,GAAAG,2BAAAr7G,KAAAxf,MAEAA,KAAA43H,0BAAA/C,sBAAA6F,GAAAsB,0BAAAx8G,KAAAxf,MAGAA,KAAAosF,UAAApsF,KAAA43H,0BAAAhd,sBACA56G,KAAA01G,YAAA11G,KAAA43H,0BAAAliB,YAKAt3G,OAAA61D,iBAAAj0D,MACA80H,gBACAhlH,IAAA,WACA,OAAA9P,KAAA43H,0BAAA9C,gBAEA/kH,IAAA,SAAA+kH,GACA90H,KAAA43H,0BAAA9C,iBAAAt1G,KAAAxf,QAGAwgH,YACA1wG,IAAA,WACA,OAAA9P,KAAA43H,0BAAAtE,mBAAA9S,WAAA3oH,MAEAkY,IAAA,SAAAywG,GACAxgH,KAAA43H,0BAAAtE,mBAAA9S,WAAA3oH,KAAA2oH,EAGAxgH,KAAA43H,0BAAAtE,mBAAA9S,WAAAr4E,MAAA,IAGAgpD,WACArhF,IAAA,WACA,OAAA9P,KAAA43H,0BAAAtE,mBAAAniC,WAEAphF,IAAA,SAAAohF,GACAnxF,KAAA43H,0BAAAtE,mBAAAniC,YAIAnxF,KAAA43H,0BAAAtE,mBAAA9S,YACA3oH,KAAA,EACAswC,MAAA,KAaA4zF,iBACAjsH,IAAA,WACA,IAAAwuH,EAAA,GAAAt+H,KAAAmxF,WAAA,GACAotC,OAAA,EAUA,OAPAA,EADAv+H,KAAAwgH,WAAA,EACA,EAAAxgH,KAAAwgH,WAEA,EAGA/lH,KAAA+oC,MAAA,GAAA86F,EAAAC,KAIAxuH,IAAA,WACAw4E,GAAAhoF,IAAAs0B,MAAA,mDAKAz2B,OAAA61D,iBAAAj0D,KAAA0+G,OACAvtB,WACArhF,IAAA,WACA,OAAAu1C,EAAA8rC,WAAA,GAEAjhF,YAAA,GAEAyyG,eACA7yG,IAAA,WACA,OAAAu1C,EAAAuyE,0BAAA4G,kBAAA,GAEAtuH,YAAA,GAEA0yG,sBACA9yG,IAAA,WACA,OAAAu1C,EAAAuyE,0BAAA6G,yBAAA,GAEAvuH,YAAA,GAEA2yG,uBACA/yG,IAAA,WACA,OAAAu1C,EAAAuyE,0BAAA8G,0BAAA,GAEAxuH,YAAA,GAEA4yG,sBACAhzG,IAAA,WACA,OAAAu1C,EAAAuyE,0BAAA+G,yBAAA,GAEAzuH,YAAA,GAEA6yG,uBACAjzG,IAAA,WACA,OAAAu1C,EAAAuyE,0BAAAgH,0BAAA,GAEA1uH,YAAA,GAEAwyG,uBACA5yG,IAAA,WACA,OAAAu1C,EAAAuyE,0BAAAiH,0BAAA,GAEA3uH,YAAA,GAEA8yG,oBACAlzG,IAAA,WACA,OAAAu1C,EAAAuyE,0BAAAkH,uBAAA,GAEA5uH,YAAA,GAEAw4C,UACA54C,IAAA,WACA,OAAAujF,GAAAhuC,EAAAiO,MAAA5K,aAEAx4C,YAAA,GAEAkkD,aACAtkD,IAAA,WACA,OAAAu1C,EAAAiO,MAAAc,eAEAlkD,YAAA,GAEAm1E,eACAv1E,IAAA,WACA,OAAAu1C,EAAAiO,MAAA+H,gBAEAnrD,YAAA,GAEA6uH,aACAjvH,IAAA,WACA,OAAAu1C,EAAAiO,MAAA5S,OAEAxwC,YAAA,GAEAnZ,UACA+Y,IAAA,WACA,OAAAu1C,EAAAiO,MAAAv8D,YAEAmZ,YAAA,GAEAy7E,QACA77E,IAAA,WACA,OAAAu1C,EAAA+mC,UAAAT,QAEAz7E,YAAA,GAEA8uH,kBACAlvH,IAAA,WACA,OAAAu1C,EAAAiO,MAAAnP,qBAEAj0C,YAAA,GAEA4sD,UACAhtD,IAAA,WACA,OAAAujF,GAAAhuC,EAAAiO,MAAAwJ,aAEA5sD,YAAA,GAEAk7B,WACAt7B,IAAA,WACA,OAAAxe,KAAAga,OAEA4E,YAAA,GAEAkpE,sBACAtpE,IAAA,WACA,OAAAu1C,EAAAiO,MAAAgG,2BAEAppD,YAAA,KAIAlQ,KAAAszD,MAAArX,IAAA,UAAAj8C,KAAA43H,0BAAAnD,eAAAj1G,KAAAxf,KAAA43H,4BAEA53H,KAAA43H,0BAAAp8E,GAAA,kCApmCA,IAAA+7E,EACAnrC,KADAmrC,EAsmCAlyE,GArmCA+mC,UAGAmrC,EAAA0H,gBAAA,WACA,OAAA7yC,EAAAT,OAAAS,UAAA9tF,OAAA,SAAA4tF,GACA,OAAAgE,GAAAhE,KACKhuF,IAAA,SAAAqF,EAAAjQ,GACL,WAAAgkI,GAAAC,EAAAh0H,IAAA6gC,QA+lCAo4F,GAAAn3E,KAKArlD,KAAAw7C,GAAAx7C,KAAA43H,0BAAA,sBACA53H,KAAAszD,MAAA/kB,QAAA,cAGAvuC,KAAAszD,MAAAjT,MAAA,WACA,OAAAgF,EAAA65E,wBAKAl/H,KAAAszD,MAAAle,MAIAp1C,KAAAszD,MAAA/I,IAAAg+B,GAAAhmF,IAAAq0F,gBAAA52F,KAAA43H,0BAAAliB,kBAWAn3G,IAAA,sBACAE,MAAA,WACA,IAAA8mD,EAAAvlD,KAEA68C,EAAA0rC,GAAAtiC,QAAAjmD,KAAAszD,MAAA9S,SAAAu3B,UAEAl7B,KAAAy/E,gBACAt8H,KAAAm/H,eAAAtiF,EAAAy/E,gBAEAt8H,KAAA43H,0BAAAp8E,GAAA,kCApfA,IAAA8gF,EAAAlvC,EAAAkvC,EAqfA/2E,EAAA45E,gBArfA/xC,EAqfA7nC,GApfA05E,kBAAA94H,QAAA,SAAAg1H,GACAmB,EAAA8C,gBAAAjE,KAEAkB,GAAAC,EAAAlvC,EAAAhB,aAofApsF,KAAAosF,UAAA5wC,GAAA,yBACA6gF,GAAA92E,EAAA45E,eAAA55E,EAAA6mC,iBAUA7tF,IAAA,OACAE,MAAA,WACAuB,KAAA43H,0BAAAt3E,UAQA/hD,IAAA,iBACAE,MAAA,SAAA21D,GACAp0D,KAAA43H,0BAAAz/D,eAAA/D,MAQA71D,IAAA,WACAE,MAAA,WACA,OAAAuB,KAAA43H,0BAAA7gI,cAQAwH,IAAA,WACAE,MAAA,WACA,OAAAuB,KAAA43H,0BAAA96D,cAQAv+D,IAAA,UACAE,MAAA,WACAuB,KAAAq+H,kBACAr+H,KAAAq+H,iBAAAn9E,UAEAlhD,KAAA43H,2BACA53H,KAAA43H,0BAAA12E,UAEAlhD,KAAAm/H,gBACAn/H,KAAAm/H,eAAAj+E,UAlqjBA,SAAAm+E,EAAAvqF,EAAAyjE,EAAA+mB,GACA,OAAAxqF,MAAA0yC,SAAA7oF,WACA,IAAAktD,EAAAztD,OAAAyR,yBAAAilC,EAAAyjE,GAEA,QAAA30E,IAAAioB,EAAA,CACA,IAAA9V,EAAA33C,OAAAivF,eAAAv4C,GAEA,cAAAiB,OACA,EAEAspF,EAAAtpF,EAAAwiE,EAAA+mB,GAEG,aAAAzzE,EACH,OAAAA,EAAAptD,MAEA,IAAA8gI,EAAA1zE,EAAA/7C,IAEA,YAAA8zB,IAAA27F,EAIAA,EAAA1gI,KAAAygI,QAJA,EAmpjBAE,CAAA7B,EAAAh/H,UAAA61C,WAAAp2C,OAAAivF,eAAAswC,EAAAh/H,WAAA,UAAAqB,MAAAnB,KAAAmB,UAGA29H,EAzbA,GAocA8B,IACAzpI,KAAA,yBACA2xF,QA5rBA,QA6rBA5sB,gBAAA,SAAAjB,GACA,IAAA53C,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEAi3H,EAAA7xC,GAAAnoC,aAAAmoC,GAAArmE,WAEA,OAAAu9G,GAAA7lE,YAAAE,EAAAv8D,KAAA68H,IAEA9+D,aAAA,SAAAvzC,EAAAoiC,GACA,IAAAjoC,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAEAi3H,EAAA7xC,GAAAnoC,aAAAmoC,GAAArmE,WAMA,OAJAioC,EAAAijC,IAAA,IAAAuwC,GAAA51G,EAAAoiC,EAAAiwE,GACAjwE,EAAAijC,IAAAhoD,IAAAmsD,KAEApnC,EAAAijC,IAAA7iC,IAAAxiC,EAAAwiC,IAAAxiC,EAAAxqB,MACA4sD,EAAAijC,KAEAxzB,YAAA,SAAAr8D,GACA,IAAA2kB,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MAGA26H,EADAv1C,GAAAnoC,aAAAmoC,GAAArmE,WACAkrE,IAAA0wC,eAEA4B,EAAAtD,GAAA7+H,GAGA,OAFAmiI,KAAAhF,GAAA+C,qBAAAiC,IAAA5B,GAEA,kBAIA,IAAAv1C,GAAAiwB,kBAAA,IAAAjwB,GAAAhmF,MACAgmF,GAAAiwB,eACAjwB,GAAAhmF,IAAAs3G,IAIArB,GAAAmB,8BACApxB,GAAAruB,QAAA,SAAAQ,sBAAA+kE,GAAA,GAGAl3C,GAAAo1C,cACAp1C,GAAAk3C,oBACAl3C,GAAAmJ,IAAAgpC,GACAnyC,GAAAiB,KACAjB,GAAA7iC,kBAAA,MAAAg1E,IAEAnyC,GAAArmE,QAAAkrE,IAAA7E,GAAArmE,QAAAkrE,QAEA7E,GAAAV,eACAU,GAAAV,eAAA,sBAAAoyC,IAEA1xC,GAAAhB,OAAA,sBAAA0yC,IAGe0F,EAAA,0CCn+zCfxuI,EAAAkS,EAAAs8H,EAAA,sBAAAxR,IAAAh9H,EAAAkS,EAAAs8H,EAAA,sBAAAhF,IAAAxpI,EAAAkS,EAAAs8H,EAAA,sBAAA/E,IAAA,IAAAgF,EAAAzuI,EAAA,QAEA2iD,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIA4rF,EAAA,WACA,SAAA5rE,EAAA9pD,EAAArK,GACA,QAAAxM,EAAA,EAAmBA,EAAAwM,EAAA7K,OAAkB3B,IAAA,CACrC,IAAAmhF,EAAA30E,EAAAxM,GACAmhF,EAAAvkE,WAAAukE,EAAAvkE,aAAA,EACAukE,EAAAxkE,cAAA,EACA,UAAAwkE,MAAAngC,UAAA,GACAl2C,OAAA4R,eAAA7F,EAAAsqE,EAAAl2E,IAAAk2E,IAIA,gBAAAzgC,EAAA22C,EAAAC,GAGA,OAFAD,GAAA12B,EAAAjgB,EAAAr1C,UAAAgsF,GACAC,GAAA32B,EAAAjgB,EAAA42C,GACA52C,GAdA,GAoDAS,EAAA,SAAAtH,EAAAtuC,GACA,IAAAsuC,EACA,UAAAuH,eAAA,6DAGA,OAAA71C,GAAA,iBAAAA,GAAA,mBAAAA,EAAAsuC,EAAAtuC,GA+CAmuH,EAAA,WACA,IAAAC,sCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACA75H,OAAA,EACA4+B,OAAA,EACAo7F,OAAA,EACAjqH,KACAo5B,KACA8wF,OAAA,EACAC,OAAA,EAEA/pD,OAAA,EACAgqD,OAAA,EACAC,OAAA,EAGA,IAAAp6H,EAAA,EAAaA,EAAA,IAASA,IACtBmpC,GAAAp5B,EAAA/P,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAA4+B,EAAAo7F,EAAA,GAAoBF,EAAAl7F,GAAUA,GAAAq7F,GAAA,EAAAD,EAAA7wF,EAAA6wF,IAAA,EAY9B,IATA7pD,GADAA,EAAA6pD,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,IACA,MAAA7pD,EAAA,GACA2pD,EAAAl7F,GAAAuxC,EACA4pD,EAAA5pD,GAAAvxC,EAIAw7F,EAAA,SADArqH,EAAAmqH,EAAAnqH,EAAAkqH,EAAAlqH,EAAA6uB,KACA,MAAAs7F,EAAA,IAAAD,EAAA,SAAAr7F,EACAu7F,EAAA,IAAApqH,EAAAogE,GAAA,SAAAA,EAEAnwE,EAAA,EAAeA,EAAA,EAAOA,IACtB45H,EAAA55H,GAAA4+B,GAAAu7F,KAAA,GAAAA,IAAA,EACAN,EAAA75H,GAAAmwE,GAAAiqD,KAAA,GAAAA,IAAA,EAKA,IAAAp6H,EAAA,EAAaA,EAAA,EAAOA,IACpB45H,EAAA55H,GAAA45H,EAAA55H,GAAAsL,MAAA,GACAuuH,EAAA75H,GAAA65H,EAAA75H,GAAAsL,MAAA,GAEA,OAAAquH,GAEAU,EAAA,KAUAC,EAAA,WACA,SAAAA,EAAArvH,GACAu1C,EAAA9zC,KAAA4tH,GAgBAD,IACAA,EAAAX,KAGAhtH,KAAA6tH,UAAAF,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,UAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,QAAA+uH,EAAA,MAAA/uH,UACA,IAAAtL,OAAA,EACA0qE,OAAA,EACA8vD,OAAA,EACAC,OAAA,EACAC,OAAA,EACAZ,EAAAptH,KAAA6tH,QAAA,MACAV,EAAAntH,KAAA6tH,QAAA,GACAI,EAAA1vH,EAAAtJ,OACAi5H,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAtqH,MAAA,wBAQA,IALAoqH,EAAAxvH,EAAAK,MAAA,GACAovH,KACAhuH,KAAA8yC,MAAAi7E,EAAAC,GAGA16H,EAAA26H,EAAoB36H,EAAA,EAAA26H,EAAA,GAAqB36H,IACzCw6H,EAAAC,EAAAz6H,EAAA,IAGAA,EAAA26H,GAAA,OAAAA,GAAA36H,EAAA26H,GAAA,KACAH,EAAAV,EAAAU,IAAA,QAAAV,EAAAU,GAAA,YAAAV,EAAAU,GAAA,UAAAV,EAAA,IAAAU,GAGAx6H,EAAA26H,GAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAAz6H,GAAAy6H,EAAAz6H,EAAA26H,GAAAH,EAIA,IAAA9vD,EAAA,EAAe1qE,EAAG0qE,IAAA1qE,IAClBw6H,EAAAC,EAAA,EAAA/vD,EAAA1qE,IAAA,GAEA06H,EAAAhwD,GADA1qE,GAAA,GAAA0qE,EAAA,EACA8vD,EAEAX,EAAA,GAAAC,EAAAU,IAAA,KAAAX,EAAA,GAAAC,EAAAU,GAAA,SAAAX,EAAA,GAAAC,EAAAU,GAAA,QAAAX,EAAA,GAAAC,EAAA,IAAAU,IA6DA,OAzCAF,EAAAjvH,UAAAwvH,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAn7H,GACA,IAAAkL,EAAAyB,KAAA8yC,KAAA,GAEA3xC,EAAAitH,EAAA7vH,EAAA,GACA2E,EAAAqrH,EAAAhwH,EAAA,GACA6E,EAAAkrH,EAAA/vH,EAAA,GACA8E,EAAAgrH,EAAA9vH,EAAA,GACAkwH,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAC,EAAArwH,EAAAtJ,OAAA,IACA3B,OAAA,EACAu7H,EAAA,EACA5kF,EAAAjqC,KAAA6tH,QAAA,GAGAiB,EAAA7kF,EAAA,GACA8kF,EAAA9kF,EAAA,GACA+kF,EAAA/kF,EAAA,GACAglF,EAAAhlF,EAAA,GACAmjF,EAAAnjF,EAAA,GAGA,IAAA32C,EAAA,EAAeA,EAAAs7H,EAAkBt7H,IACjCm7H,EAAAK,EAAA3tH,IAAA,IAAA4tH,EAAA7rH,GAAA,QAAA8rH,EAAA5rH,GAAA,OAAA6rH,EAAA,IAAA5rH,GAAA9E,EAAAswH,GACAH,EAAAI,EAAA5rH,IAAA,IAAA6rH,EAAA3rH,GAAA,QAAA4rH,EAAA3rH,GAAA,OAAA4rH,EAAA,IAAA9tH,GAAA5C,EAAAswH,EAAA,GACAF,EAAAG,EAAA1rH,IAAA,IAAA2rH,EAAA1rH,GAAA,QAAA2rH,EAAA7tH,GAAA,OAAA8tH,EAAA,IAAA/rH,GAAA3E,EAAAswH,EAAA,GACAxrH,EAAAyrH,EAAAzrH,IAAA,IAAA0rH,EAAA5tH,GAAA,QAAA6tH,EAAA9rH,GAAA,OAAA+rH,EAAA,IAAA7rH,GAAA7E,EAAAswH,EAAA,GACAA,GAAA,EACA1tH,EAAAstH,EAAavrH,EAAAwrH,EAAOtrH,EAAAurH,EAIpB,IAAAr7H,EAAA,EAAeA,EAAA,EAAOA,IACtBk7H,GAAA,GAAAl7H,GAAAD,GAAA+5H,EAAAjsH,IAAA,QAAAisH,EAAAlqH,GAAA,YAAAkqH,EAAAhqH,GAAA,UAAAgqH,EAAA,IAAA/pH,GAAA9E,EAAAswH,KACAJ,EAAAttH,EAAaA,EAAA+B,EAAMA,EAAAE,EAAMA,EAAAC,EAAMA,EAAAorH,GAI/Bb,EA9HA,GAyIA3/E,EAAA,WACA,SAAAA,IACA6F,EAAA9zC,KAAAiuC,GAEAjuC,KAAAs3E,aAmGA,OAvFArpC,EAAAtvC,UAAA68C,GAAA,SAAAj+C,EAAAohD,GACA3+C,KAAAs3E,UAAA/5E,KACAyC,KAAAs3E,UAAA/5E,OAEAyC,KAAAs3E,UAAA/5E,GAAAvJ,KAAA2qD,IAaA1Q,EAAAtvC,UAAAq0C,IAAA,SAAAz1C,EAAAohD,GACA,IAAA3+C,KAAAs3E,UAAA/5E,GACA,SAGA,IAAAY,EAAA6B,KAAAs3E,UAAA/5E,GAAAsH,QAAA85C,GAGA,OADA3+C,KAAAs3E,UAAA/5E,GAAAu+C,OAAA39C,EAAA,GACAA,GAAA,GAWA8vC,EAAAtvC,UAAA4vC,QAAA,SAAAhxC,GACA,IAAA85F,EAAAr3F,KAAAs3E,UAAA/5E,GAEA,GAAA85F,EAQA,OAAAl0F,UAAAlO,OAGA,IAFA,IAAAA,EAAAoiG,EAAApiG,OAEA3B,EAAA,EAAqBA,EAAA2B,IAAY3B,EACjC+jG,EAAA/jG,GAAAuL,KAAAmB,KAAAmD,UAAA,SAMA,IAHA,IAAAf,EAAApE,MAAAW,UAAAC,MAAAC,KAAAsE,UAAA,GACA+rH,EAAA73B,EAAApiG,OAEA+zD,EAAA,EAAsBA,EAAAkmE,IAAclmE,EACpCquC,EAAAruC,GAAAxkD,MAAAxE,KAAAoC,IAUA6rC,EAAAtvC,UAAAuiD,QAAA,WACAlhD,KAAAs3E,cAYArpC,EAAAtvC,UAAA24F,KAAA,SAAAC,GACAv3F,KAAAw7C,GAAA,gBAAAtpD,GACAqlG,EAAAvjG,KAAA9B,MAIA+7C,EAvGA,GAqHA2sF,EAAA,SAAAxL,GAGA,SAAAwL,IACA9mF,EAAA9zC,KAAA46H,GAEA,IAAA36H,EAAAw0C,EAAAz0C,KAAAovH,EAAAvwH,KAAAmB,KAAAiuC,IAKA,OAHAhuC,EAAAovH,QACApvH,EAAAouF,MAAA,EACApuF,EAAAqvH,SAAA,KACArvH,EAiCA,OAlbA,SAAAk0C,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAH,UAAA,kEAAAG,GAGAD,EAAAx1C,UAAAP,OAAAi2C,OAAAD,KAAAz1C,WACA+H,aACAjI,MAAA01C,EACAjkC,YAAA,EACAokC,UAAA,EACArkC,cAAA,KAGAmkC,IAAAh2C,OAAAm2C,eAAAn2C,OAAAm2C,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,GA0XAF,CAAA0mF,EAAAxL,GAoBAwL,EAAAj8H,UAAA6wH,YAAA,WACAxvH,KAAAqvH,KAAA5kF,OAAAzqC,GACAA,KAAAqvH,KAAAp6H,OACA+K,KAAAsvH,SAAAx6F,WAAA90B,KAAAwvH,YAAAhwG,KAAAxf,WAAAquF,OAEAruF,KAAAsvH,SAAA,MAWAsL,EAAAj8H,UAAA3K,KAAA,SAAAy7H,GACAzvH,KAAAqvH,KAAAr7H,KAAAy7H,GACAzvH,KAAAsvH,WACAtvH,KAAAsvH,SAAAx6F,WAAA90B,KAAAwvH,YAAAhwG,KAAAxf,WAAAquF,SAIAusC,EA5CA,CA6CC3sF,GAaDyhF,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAgBAxB,EAAA,SAAA/P,EAAA7/G,EAAAsxH,GAEA,IAAAG,EAAA,IAAAC,WAAA7R,EAAA/rH,OAAA+rH,EAAA9rH,WAAA8rH,EAAA7rH,YAAA,GAEA89H,EAAA,IAAAzC,EAAA5vH,MAAAW,UAAAC,MAAAC,KAAAN,IAGA4/G,EAAA,IAAAlqH,WAAAmqH,EAAA7rH,YACA+9H,EAAA,IAAAL,WAAA9R,EAAA9rH,QAIAk+H,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAtC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAoC,OAAA,EAWA,IAPAJ,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GACAa,EAAAb,EAAA,GAIAc,EAAA,EAAkBA,EAAAX,EAAA/6H,OAA6B07H,GAAA,EAG/CvC,EAAAsB,EAAAM,EAAAW,IACAtC,EAAAqB,EAAAM,EAAAW,EAAA,IACArC,EAAAoB,EAAAM,EAAAW,EAAA,IACApC,EAAAmB,EAAAM,EAAAW,EAAA,IAGAN,EAAAlC,QAAAC,EAAAC,EAAAC,EAAAC,EAAA+B,EAAAK,GAIAL,EAAAK,GAAAjB,EAAAY,EAAAK,GAAAJ,GACAD,EAAAK,EAAA,GAAAjB,EAAAY,EAAAK,EAAA,GAAAH,GACAF,EAAAK,EAAA,GAAAjB,EAAAY,EAAAK,EAAA,GAAAF,GACAH,EAAAK,EAAA,GAAAjB,EAAAY,EAAAK,EAAA,GAAAD,GAGAH,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EAGA,OAAApQ,GAeAwc,EAAA,WACA,SAAAA,EAAAvc,EAAA7/G,EAAAsxH,EAAA59F,GACA6hB,EAAA9zC,KAAA26H,GAEA,IAAA7K,EAAA6K,EAAA5K,KACAC,EAAA,IAAAC,WAAA7R,EAAA/rH,QACA8rH,EAAA,IAAAlqH,WAAAmqH,EAAA7rH,YACAe,EAAA,EAMA,IAJA0M,KAAAkwH,aAAA,IAAA0K,EAGA56H,KAAAkwH,aAAAl8H,KAAAgM,KAAAmwH,cAAAH,EAAA/8H,SAAAK,IAAAw8H,GAAAvxH,EAAAsxH,EAAA1R,IACA7qH,EAAAw8H,EAAkBx8H,EAAA08H,EAAA/6H,OAAwB3B,GAAAw8H,EAC1CD,EAAA,IAAA73H,aAAA03H,EAAAM,EAAA18H,EAAA,IAAAo8H,EAAAM,EAAA18H,EAAA,IAAAo8H,EAAAM,EAAA18H,EAAA,IAAAo8H,EAAAM,EAAA18H,EAAA,MACA0M,KAAAkwH,aAAAl8H,KAAAgM,KAAAmwH,cAAAH,EAAA/8H,SAAAK,IAAAw8H,GAAAvxH,EAAAsxH,EAAA1R,IAGAn+G,KAAAkwH,aAAAl8H,KAAA,WAEAi+B,EAAA,KAAiB7zB,OAAAwhI,EAAA,EAAAxhI,CAAK+/G,MA6BtB,OAfAwc,EAAAh8H,UAAAwxH,cAAA,SAAA/R,EAAA7/G,EAAAsxH,EAAA1R,GACA,kBACA,IAAAz/G,EAAAyvH,EAAA/P,EAAA7/G,EAAAsxH,GAEA1R,EAAApuG,IAAArR,EAAA0/G,EAAA9rH,cAIAutI,EAAAlF,EAAA,OACAp8H,IAAA,OACAuR,IAAA,WAEA,gBAGA6qH,EAjDA,wCC1jBA,IAGAxyB,EAAAC,EACAvC,EAJA53D,EAAa98C,EAAQ,QACrBq2C,EAAgBr2C,EAAQ,SAQxBi3G,EAAA,WACA,IAEA90G,EACAjB,EAFA0zG,EAAA,EAGAqC,EAAAzpG,UAAA6hC,KAAA3hC,KAAAmB,MASAA,KAAAhM,KAAA,SAAA9B,GACA,IAAA8zG,EAsBA,IApBA3zG,IAGA2zG,EAAA,IAAA/xG,WAAA5B,EAAAE,WAAAL,OAAAK,aACAwd,IAAA1d,GACA2zG,EAAAj2F,IAAA7d,OAAAG,EAAAE,YACAF,EAAA2zG,GALA3zG,EAAAH,OAmBU6zG,EAAA1zG,EAAAE,WAAA,EAAmCwzG,IAC7C,OAAA1zG,EAAA0zG,EAAA,IAEAzyG,EAAAyyG,EAAA,EACA,MAIA,KAAAzyG,EAAAjB,EAAAE,YAGA,OAAAF,EAAAiB,IACA,OAEA,OAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MACS,OAAAjB,EAAAiB,EAAA,IACTA,IACA,MAIAyyG,EAAA,IAAAzyG,EAAA,GACA0M,KAAAuuC,QAAA,OAAAl8C,EAAAY,SAAA8yG,EAAA,EAAAzyG,EAAA,IAIA,GACAA,UACS,IAAAjB,EAAAiB,MAAAjB,EAAA4C,QACT8wG,EAAAzyG,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAjB,EAAAiB,EAAA,IACA,IAAAjB,EAAAiB,EAAA,IACAA,GAAA,EACA,MAIA0M,KAAAuuC,QAAA,OAAAl8C,EAAAY,SAAA8yG,EAAA,EAAAzyG,EAAA,IACAyyG,EAAAzyG,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EAKAjB,IAAAY,SAAA8yG,GACAzyG,GAAAyyG,EACAA,EAAA,GAGA/lG,KAAA4sC,MAAA,WAEAv6C,KAAAE,WAAA,GACAyN,KAAAuuC,QAAA,OAAAl8C,EAAAY,SAAA8yG,EAAA,IAGA1zG,EAAA,KACA0zG,EAAA,EACA/lG,KAAAuuC,QAAA,WAGA5vC,UAAA,IAAAsvC,EAKA43D,GACAI,KAAA,EACAC,KAAA,EACAnpF,KAAA,EACAopF,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACA3pF,KAAA,EACA4pF,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,IAOAyB,EAAA,WACA,IAEAh7D,EACAvyC,EACA+rG,EACAC,EAEAC,EACAC,EACAC,EARAC,EAAA,IAAAoB,EAUAD,EAAAxpG,UAAA6hC,KAAA3hC,KAAAmB,MACAmtC,EAAAntC,KAaAA,KAAAhM,KAAA,SAAAw1C,GACA,UAAAA,EAAAjsC,OAGA3C,EAAA4uC,EAAA5uC,QACA+rG,EAAAn9D,EAAAqC,IACA+6D,EAAAp9D,EAAAoC,IAEAo7D,EAAAhzG,KAAAw1C,KAWAw9D,EAAAxrD,GAAA,gBAAAtpD,GACA,IACA49C,GACAl1C,UACAixC,IAAA86D,EACA/6D,IAAAg7D,EACA10G,QAGA,UAAAA,EAAA,IACA,OACA49C,EAAAgoD,YAAA,4CACA,MACA,OACAhoD,EAAAgoD,YAAA,WACAhoD,EAAAwpD,YAAAuN,EAAA30G,EAAAe,SAAA,IACA,MACA,OACA68C,EAAAgoD,YAAA,yBACAhoD,EAAAwpD,YAAAuN,EAAA30G,EAAAe,SAAA,IACA68C,EAAA98C,OAAA8zG,EAAAh3D,EAAAwpD,aACA,MACA,OACAxpD,EAAAgoD,YAAA,yBACA,MACA,OACAhoD,EAAAgoD,YAAA,6BAOA3qD,EAAAoB,QAAA,OAAAuB,KAEAk3D,EAAAxrD,GAAA,kBACArO,EAAAoB,QAAA,UAGAvuC,KAAA4sC,MAAA,WACAo6D,EAAAp6D,SAYAm6D,EAAA,SAAA5+D,EAAA8+D,GACA,IAGAjpC,EAFAkpC,EAAA,EACAC,EAAA,EAIA,IAAAnpC,EAAA,EAAeA,EAAA71B,EAAW61B,IAC1B,IAAAmpC,IAEAA,GAAAD,EADAD,EAAAn+D,gBACA,UAGAo+D,EAAA,IAAAC,EAAAD,EAAAC,GAYAN,EAAA,SAAA30G,GAQA,IAPA,IAIA66C,EAAAisD,EAHA/jG,EAAA/C,EAAAK,WACA0mG,KACA3lG,EAAA,EAIAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACA2lG,EAAAjlG,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2lG,EAAAhkG,OACA,OAAA/C,EAIA66C,EAAA93C,EAAAgkG,EAAAhkG,OACA+jG,EAAA,IAAA/kG,WAAA84C,GACA,IAAAmsD,EAAA,EAEA,IAAA5lG,EAAA,EAAeA,EAAAy5C,EAAemsD,IAAA5lG,IAC9B4lG,IAAAD,EAAA,KAEAC,IAEAD,EAAAxuD,SAEAuuD,EAAA1lG,GAAApB,EAAAgnG,GAGA,OAAAF,GAYA8N,EAAA,SAAA50G,GACA,IAMA+0G,EAAAjkE,EAAAC,EAAAvvC,EACA0zG,EAAAC,EACAC,EAAAC,EACAC,EACAC,EACAC,EACAC,EAEAr0G,EAbAs0G,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAkBA,GANAhlE,GADAikE,EAAA,IAAAz/D,EAAAt1C,IACA82C,mBACAt1C,EAAAuzG,EAAAj+D,mBACA/F,EAAAgkE,EAAAj+D,mBACAi+D,EAAAv+D,wBAGAm9D,EAAA7iE,KAEA,KADAokE,EAAAH,EAAAr+D,0BAEAq+D,EAAA/+D,SAAA,GAEA++D,EAAAv+D,wBACAu+D,EAAAv+D,wBACAu+D,EAAA/+D,SAAA,GACA++D,EAAAl+D,eAEA,IADA2+D,EAAA,IAAAN,EAAA,KACA9zG,EAAA,EAAmBA,EAAAo0G,EAAsBp0G,IACzC2zG,EAAAl+D,eAEAg+D,EADAzzG,EAAA,EACA,GAEA,GAFA2zG,GAYA,GAHAA,EAAAv+D,wBAGA,KAFA2+D,EAAAJ,EAAAr+D,yBAGAq+D,EAAAr+D,6BACK,OAAAy+D,EAKL,IAJAJ,EAAA/+D,SAAA,GACA++D,EAAAt+D,gBACAs+D,EAAAt+D,gBACA2+D,EAAAL,EAAAr+D,wBACAt1C,EAAA,EAAiBA,EAAAg0G,EAAoCh0G,IACrD2zG,EAAAt+D,gBAsBA,GAlBAs+D,EAAAv+D,wBACAu+D,EAAA/+D,SAAA,GAEAq/D,EAAAN,EAAAr+D,wBACA4+D,EAAAP,EAAAr+D,wBAGA,KADA6+D,EAAAR,EAAA5+D,SAAA,KAEA4+D,EAAA/+D,SAAA,GAGA++D,EAAA/+D,SAAA,GACA++D,EAAAl+D,gBACA6+D,EAAAX,EAAAr+D,wBACAi/D,EAAAZ,EAAAr+D,wBACAk/D,EAAAb,EAAAr+D,wBACAm/D,EAAAd,EAAAr+D,yBAEAq+D,EAAAl+D,eAEAk+D,EAAAl+D,cAAA,CAGA,OADAk+D,EAAAj+D,oBAEA,OAAA2+D,GAAA,KAAoC,MACpC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,OAAAA,GAAA,OAAsC,MACtC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,OAAuC,MACvC,QAAAA,GAAA,QAAwC,MACxC,QAAAA,GAAA,KAAqC,MACrC,QAAAA,GAAA,KAAqC,MACrC,QAAAA,GAAA,KAAqC,MACrC,SACAA,GAAAV,EAAAj+D,oBAAA,EACAi+D,EAAAj+D,mBACAi+D,EAAAj+D,oBAAA,EACAi+D,EAAAj+D,oBAIA2+D,IACAK,EAAAL,EAAA,GAAAA,EAAA,IAIA,OACA3kE,aACAC,WACAvvC,uBACAhB,MAAA+H,KAAAwtG,MAAA,IAAAV,EAAA,KAAAK,EAAA,EAAAC,GAAAG,GACAr1G,QAAA,EAAA80G,IAAAD,EAAA,QAAAM,EAAA,EAAAC,MAKAppG,UAAA,IAAAsvC,EAEA5uC,EAAAC,SACA6oG,aACAC,uCC3bA,IAUAQ,EAVAY,GAAA,mBACAC,GAAA,2CACAC,EAAA,SAAAvhE,GAEA,IADA,IAAAhnC,KACAgnC,KACAhnC,EAAAnN,KAAA,GAEA,OAAAmN,GAaAwoG,GACAC,OAAAJ,GAAA,QAAAE,EAAA,WACAG,OAAAL,GAAA,KAAAE,EAAA,WACAI,OAAAN,GAAA,SAAAE,EAAA,WACAK,OAAAP,GAAA,SAAAE,EAAA,kBAAAA,EAAA,WACAM,OAAAR,GAAA,SAAAE,EAAA,kBAAAA,EAAA,WACAO,OAAAT,GAAA,SAAAE,EAAA,cAAAA,EAAA,YACAQ,OAAAV,GAAA,SAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,YACAS,OAAAX,GAAA,SAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,eAAAA,EAAA,cACAU,OAAAX,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,WACAW,OAAAZ,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,YACAY,MAAAb,EAAAC,EAAA,gBAAAA,EAAA,UAGArqG,EAAAC,SAxBAspG,EAwBAe,EAvBAvrG,OAAAC,KAAAuqG,GAAAnoE,OAAA,SAAAyG,EAAA3oC,GAIA,OAHA2oC,EAAA3oC,GAAA,IAAAtK,WAAA20G,EAAArqG,GAAAkiC,OAAA,SAAAuqD,EAAAtkB,GACA,OAAAskB,EAAA/kF,OAAAygE,SAEAx/B,6CCIA,IAAA+G,EAAa98C,EAAQ,QACrB2uI,EAAmB3uI,EAAQ,QAE3B+8C,EAAA,WAEAA,EAAAvvC,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAm5F,mBAEAn5F,KAAAo5F,YACA,IAAA7oD,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,MAGAvwC,KAAAg4D,QAGAh4D,KAAAo5F,WAAAjzF,QAAA,SAAA+K,GACAA,EAAAsqC,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,SACAkR,EAAAsqC,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,UACGA,OAIHkuC,EAAAvvC,UAAA,IAAAsvC,EACAC,EAAAvvC,UAAA3K,KAAA,SAAA87C,GACA,IAAA+oD,EAAAC,EAAAO,EAGA,gBAAAvpD,EAAAgoD,cAKAe,EAAAinC,EAAAC,SAAAjwF,EAAAwpD,cAGAX,cAAAmnC,EAAAE,iCAKAlnC,EAAAgnC,EAAAG,cAAApnC,IAeA,GAAA/oD,EAAAlE,IAAA5rC,KAAAu5F,WAEAv5F,KAAAw5F,qBAAA,MAFA,CAIG,GAAA1pD,EAAAlE,MAAA5rC,KAAAu5F,YAAAv5F,KAAA,oBAMH,OALAA,KAAAy5F,mBACAz5F,KAAAy5F,cAEAz5F,KAAAw5F,qBAAA,IAMAH,EAAAymC,EAAAI,oBAAApwF,EAAAjE,IAAAitD,GACA94F,KAAAm5F,gBAAAn5F,KAAAm5F,gBAAAlzF,OAAAozF,GACAr5F,KAAAu5F,aAAAzpD,EAAAlE,MACA5rC,KAAAy5F,YAAA,GAEAz5F,KAAAy5F,cACAz5F,KAAAu5F,WAAAzpD,EAAAlE,MAGAsC,EAAAvvC,UAAAiuC,MAAA,WAEA5sC,KAAAm5F,gBAAAlkG,QASA+K,KAAAm5F,gBAAAhzF,QAAA,SAAAs0C,EAAAs6C,GACAt6C,EAAAi/C,aAAA3E,IAIA/0F,KAAAm5F,gBAAArE,KAAA,SAAA3zF,EAAA+B,GACA,OAAA/B,EAAA0qC,MAAA3oC,EAAA2oC,IACA1qC,EAAAu4F,aAAAx2F,EAAAw2F,aAEAv4F,EAAA0qC,IAAA3oC,EAAA2oC,MAGA7rC,KAAAm5F,gBAAAhzF,QAAA,SAAAqjC,GACAA,EAAAjsC,KAAA,GAEAyC,KAAA25F,qBAAAnwD,IAIGxpC,MAEHA,KAAAm5F,gBAAAlkG,OAAA,EACA+K,KAAAo5F,WAAAjzF,QAAA,SAAA+K,GACAA,EAAA07B,SACG5sC,OAhCHA,KAAAo5F,WAAAjzF,QAAA,SAAA+K,GACAA,EAAA07B,SACK5sC,OAkCLkuC,EAAAvvC,UAAAq5D,MAAA,WACAh4D,KAAAu5F,WAAA,KACAv5F,KAAAw5F,qBAAA,EACAx5F,KAAAy5F,YAAA,EACAz5F,KAAA45F,sBAAA,WACA55F,KAAAo5F,WAAAjzF,QAAA,SAAA0zF,GACAA,EAAA7hC,WAIA9pB,EAAAvvC,UAAAg7F,qBAAA,SAAAnwD,GAEAxpC,KAAA85F,mBAAAtwD,GACAxpC,KAAA45F,qBAAApwD,EAAAjsC,MAAA,EACGyC,KAAA+5F,mBAAAvwD,KACHxpC,KAAA45F,qBAAApwD,EAAAjsC,MAAA,GAEA,OAAAyC,KAAA45F,qBAAApwD,EAAAjsC,OAKAyC,KAAAo5F,YAAA5vD,EAAAjsC,MAAA,GAAAyC,KAAA45F,qBAAApwD,EAAAjsC,OAAAvJ,KAAAw1C,IAGA0E,EAAAvvC,UAAAm7F,mBAAA,SAAAtwD,GACA,oBAAAA,EAAAuvD,SAEA7qD,EAAAvvC,UAAAo7F,mBAAA,SAAAvwD,GACA,oBAAAA,EAAAuvD,SAcA,IAAAiB,GACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAr9E,IAAA,IACAscAAAA,EACA,IAEAA,EAAAgzD,EAAAhzD,MACA/wC,OAAAC,aAAA8wC,KAQA24D,GAAA,wCACA,oCAIAC,EAAA,WAEA,IADA,IAAArsG,KAAAD,EAAAusG,GACAvsG,KACAC,EAAAS,KAAA,IAEA,OAAAT,GAGAg9C,EAAA,SAAAuvD,EAAAC,GACAxvD,EAAA5xC,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAggG,OAAAF,GAAA,EACA9/F,KAAAigG,aAAAF,GAAA,EAEA//F,KAAA0gD,MAAA,SAAA1gD,KAAAggG,QAAA,EAAAhgG,KAAAigG,eAEAjgG,KAAAkgG,eACAlgG,KAAAg4D,QAEAh4D,KAAAhM,KAAA,SAAAw1C,GACA,IAAAt3C,EAAAiuG,EAAAC,EAAAC,EAAA/9F,EAKA,IAHApQ,EAAA,MAAAs3C,EAAAuvD,UAGA/4F,KAAAsgG,kBAeA,GATA,aAAApuG,GACA8N,KAAAsgG,iBAAApuG,EACKA,IAAA8N,KAAAugG,WACLvgG,KAAAsgG,iBAAA,MAGAF,EAAAluG,IAAA,EACAmuG,EAAA,IAAAnuG,EAEAA,IAAA8N,KAAAugG,SAGK,GAAAruG,IAAA8N,KAAAwgG,wBACLxgG,KAAAygG,MAAA,aAEK,GAAAvuG,IAAA8N,KAAA0gG,gBAKL1gG,KAAAygG,MAAA,QACAzgG,KAAA2gG,gBAAAn3D,EAAAqC,KAEA7rC,KAAA4gG,eAAAp3D,EAAAqC,KAGAs0D,EAAAngG,KAAA6gG,WACA7gG,KAAA6gG,WAAA7gG,KAAA8gG,cACA9gG,KAAA8gG,cAAAX,EAGAngG,KAAA+gG,UAAAv3D,EAAAqC,SAEK,GAAA35C,IAAA8N,KAAAghG,gBACLhhG,KAAAihG,YAAA,EACAjhG,KAAAkhG,UAAA13D,EAAAqC,UACK,GAAA35C,IAAA8N,KAAAmhG,gBACLnhG,KAAAihG,YAAA,EACAjhG,KAAAkhG,UAAA13D,EAAAqC,UACK,GAAA35C,IAAA8N,KAAAohG,gBACLphG,KAAAihG,YAAA,EACAjhG,KAAAkhG,UAAA13D,EAAAqC,UACK,GAAA35C,IAAA8N,KAAAqhG,iBACLrhG,KAAA2gG,gBAAAn3D,EAAAqC,KACA7rC,KAAA4gG,eAAAp3D,EAAAqC,KACA7rC,KAAAshG,eACAthG,KAAA+gG,UAAAv3D,EAAAqC,SAEK,GAAA35C,IAAA8N,KAAAuhG,WACL,UAAAvhG,KAAAygG,MACAzgG,KAAA8gG,cAAA9gG,KAAAwhG,MAAAxhG,KAAA8gG,cAAA9gG,KAAAwhG,MAAA5iG,MAAA,MAEAoB,KAAA6gG,WAAA7gG,KAAAwhG,MAAAxhG,KAAA6gG,WAAA7gG,KAAAwhG,MAAA5iG,MAAA,WAEK,GAAA1M,IAAA8N,KAAAyhG,wBACLzhG,KAAA4gG,eAAAp3D,EAAAqC,KACA7rC,KAAA6gG,WAAAjB,SACK,GAAA1tG,IAAA8N,KAAA0hG,4BACL1hG,KAAA8gG,cAAAlB,SAEK,GAAA1tG,IAAA8N,KAAA2hG,0BACL,YAAA3hG,KAAAygG,QAGAzgG,KAAA4gG,eAAAp3D,EAAAqC,KACA7rC,KAAA6gG,WAAAjB,KAEA5/F,KAAAygG,MAAA,UACAzgG,KAAA+gG,UAAAv3D,EAAAqC,SAGK,GAAA7rC,KAAA4hG,mBAAAxB,EAAAC,GAML/9F,EAAAo9F,GADAU,GAAA,EAAAA,IAAA,GACAC,GACArgG,UAAAygG,OAAAj3D,EAAAqC,IAAAvpC,GACAtC,KAAA6hG,eAGK,GAAA7hG,KAAA8hG,eAAA1B,EAAAC,GAOL,UAAArgG,KAAAygG,MACAzgG,KAAA8gG,cAAA9gG,KAAAwhG,MAAAxhG,KAAA8gG,cAAA9gG,KAAAwhG,MAAA5iG,MAAA,MAEAoB,KAAA6gG,WAAA7gG,KAAAwhG,MAAAxhG,KAAA6gG,WAAA7gG,KAAAwhG,MAAA5iG,MAAA,MAQA0D,EAAAo9F,GADAU,GAAA,EAAAA,IAAA,GACAC,GACArgG,UAAAygG,OAAAj3D,EAAAqC,IAAAvpC,GACAtC,KAAA6hG,eAGK,GAAA7hG,KAAA+hG,aAAA3B,EAAAC,GAELrgG,KAAA2gG,gBAAAn3D,EAAAqC,KAIA7rC,UAAAygG,OAAAj3D,EAAAqC,IAAA,KACA7rC,KAAA6hG,UAEA,QAAAxB,IACArgG,KAAAgiG,cAAAx4D,EAAAqC,KAAA,MAGA,MAAAw0D,IACArgG,KAAAgiG,cAAAx4D,EAAAqC,KAAA,WAIK,GAAA7rC,KAAAiiG,oBAAA7B,EAAAC,GAKLrgG,KAAA6hG,SAAA,EAAAxB,OAGK,GAAArgG,KAAAkiG,MAAA9B,EAAAC,GAAA,CAIL,IAAA8B,EAAAxC,EAAA96F,QAAA,KAAA3S,GAGA,WAAA8N,KAAAygG,OACAzgG,KAAAkhG,UAAA13D,EAAAqC,IAAAs2D,GAGAA,IAAAniG,KAAAwhG,OAEAxhG,KAAA2gG,gBAAAn3D,EAAAqC,KACA7rC,KAAAwhG,KAAAW,GAIA,EAAA9B,IAAA,IAAArgG,KAAAoiG,YAAAv9F,QAAA,MACA7E,KAAAgiG,cAAAx4D,EAAAqC,KAAA,MAGA,QAAA35C,KAKA8N,KAAA6hG,QAAA,OAAA3vG,IAAA,IAGA8N,KAAAqiG,WAAAhC,IAKA,QAAAA,IACArgG,KAAAgiG,cAAAx4D,EAAAqC,KAAA,WAKK7rC,KAAAsiG,aAAAlC,KACL,IAAAC,IACAA,EAAA,MAEA/9F,EAAAo9F,EAAAU,GACA99F,GAAAo9F,EAAAW,GACArgG,UAAAygG,OAAAj3D,EAAAqC,IAAAvpC,GACAtC,KAAA6hG,SAAAv/F,EAAArN,aAxLA+K,KAAAsgG,iBAAA,OA8LA/vD,EAAA5xC,UAAA,IAAAsvC,EAGAsC,EAAA5xC,UAAAiiG,eAAA,SAAA/0D,GACA,IAAA0K,EAAAv2C,KAAA6gG,WAEA3iG,IAAA,SAAAikG,GACA,OAAAA,EAAAt7E,SAGA5oB,KAAA,MAEA6F,QAAA,iBAEAyyC,EAAAthD,QACA+K,KAAAuuC,QAAA,QACAg0D,SAAAviG,KAAA+gG,UACAyB,OAAA32D,EACAvpC,KAAAi0C,EACA7G,OAAA1vC,KAAA0gD,SAQAnQ,EAAA5xC,UAAAq5D,MAAA,WACAh4D,KAAAygG,MAAA,QAKAzgG,KAAAyiG,QAAA,EACAziG,KAAA+gG,UAAA,EACA/gG,KAAA6gG,WAAAjB,IACA5/F,KAAA8gG,cAAAlB,IACA5/F,KAAAsgG,iBAAA,KAGAtgG,KAAA6hG,QAAA,EACA7hG,KAAAwhG,KA1QA,GA2QAxhG,KAAAihG,YAAA,EAGAjhG,KAAAoiG,gBAMA7xD,EAAA5xC,UAAAuhG,aAAA,WAaA,IAAAlgG,KAAAigG,cACAjgG,KAAA0iG,MAAA,GACA1iG,KAAA2iG,KAAA,GACA3iG,KAAA4iG,UAAA,GAAA5iG,KAAAggG,SAAA,EACAhgG,KAAA6iG,QAAA,IACG,IAAA7iG,KAAAigG,eACHjgG,KAAA0iG,MAAA,GACA1iG,KAAA2iG,KAAA,GACA3iG,KAAA4iG,UAAA,GAAA5iG,KAAAggG,SAAA,EACAhgG,KAAA6iG,QAAA,IAOA7iG,KAAAugG,SAAA,EAEAvgG,KAAAwgG,wBAAA,GAAAxgG,KAAA4iG,SACA5iG,KAAA0gG,gBAAA,GAAA1gG,KAAA4iG,SAEA5iG,KAAAghG,gBAAA,GAAAhhG,KAAA4iG,SACA5iG,KAAAmhG,gBAAA,GAAAnhG,KAAA4iG,SACA5iG,KAAAohG,gBAAA,GAAAphG,KAAA4iG,SACA5iG,KAAAqhG,iBAAA,GAAArhG,KAAA4iG,SAEA5iG,KAAA2hG,0BAAA,GAAA3hG,KAAA4iG,SAEA5iG,KAAAuhG,WAAA,GAAAvhG,KAAA4iG,SACA5iG,KAAAyhG,wBAAA,GAAAzhG,KAAA4iG,SACA5iG,KAAA0hG,4BAAA,GAAA1hG,KAAA4iG,UAcAryD,EAAA5xC,UAAAijG,mBAAA,SAAAxB,EAAAC,GACA,OAAAD,IAAApgG,KAAA2iG,MAAAtC,GAAA,IAAAA,GAAA,IAcA9vD,EAAA5xC,UAAAmjG,eAAA,SAAA1B,EAAAC,GACA,OAAAD,IAAApgG,KAAA2iG,KAAA,GAAAvC,IAAApgG,KAAA2iG,KAAA,IACAtC,GAAA,IAAAA,GAAA,IAcA9vD,EAAA5xC,UAAAojG,aAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAApgG,KAAA2iG,MAAAtC,GAAA,IAAAA,GAAA,IAcA9vD,EAAA5xC,UAAAsjG,oBAAA,SAAA7B,EAAAC,GACA,OAAAD,IAAApgG,KAAA6iG,SAAAxC,GAAA,IAAAA,GAAA,IAcA9vD,EAAA5xC,UAAAujG,MAAA,SAAA9B,EAAAC,GACA,OAAAD,GAAApgG,KAAA0iG,OAAAtC,EAAApgG,KAAA0iG,MAAA,GACArC,GAAA,IAAAA,GAAA,KAYA9vD,EAAA5xC,UAAA0jG,WAAA,SAAAhC,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAWA9vD,EAAA5xC,UAAA2jG,aAAA,SAAAh1F,GACA,OAAAA,GAAA,IAAAA,GAAA,KAUAijC,EAAA5xC,UAAAuiG,UAAA,SAAAr1D,EAAAi3D,GAWA,GATA,WAAA9iG,KAAAygG,QACAzgG,KAAAwhG,KAlbA,GAmbAxhG,KAAAygG,MAAA,SAEAzgG,KAAA4gG,eAAA/0D,GACA7rC,KAAA8gG,cAAAlB,IACA5/F,KAAA6gG,WAAAjB,UAGAh8D,IAAAk/D,OAAA9iG,KAAAwhG,KAEA,QAAAluG,EAAA,EAAmBA,EAAA0M,KAAAihG,YAAsB3tG,IACzC0M,KAAA6gG,WAAAiC,EAAAxvG,GAAA0M,KAAA6gG,WAAA7gG,KAAAwhG,KAAAluG,GACA0M,KAAA6gG,WAAA7gG,KAAAwhG,KAAAluG,GAAA,QAIAswC,IAAAk/D,IACAA,EAAA9iG,KAAAwhG,MAEAxhG,KAAAyiG,QAAAK,EAAA9iG,KAAAihG,YAAA,GAKA1wD,EAAA5xC,UAAAqjG,cAAA,SAAAn2D,EAAAk3D,GACA/iG,KAAAoiG,YAAApiG,KAAAoiG,YAAAn8F,OAAA88F,GACA,IAAAzgG,EAAAygG,EAAAtiE,OAAA,SAAAn+B,EAAAygG,GACA,OAAAzgG,EAAA,IAAAygG,EAAA,KACG,IACH/iG,UAAAygG,OAAA50D,EAAAvpC,IAKAiuC,EAAA5xC,UAAAgiG,gBAAA,SAAA90D,GACA,GAAA7rC,KAAAoiG,YAAAntG,OAAA,CAGA,IAAAqN,EAAAtC,KAAAoiG,YAAAY,UAAAviE,OAAA,SAAAn+B,EAAAygG,GACA,OAAAzgG,EAAA,KAAAygG,EAAA,KACG,IACH/iG,KAAAoiG,eACApiG,UAAAygG,OAAA50D,EAAAvpC,KAIAiuC,EAAA5xC,UAAAskG,MAAA,SAAAp3D,EAAAvpC,GACA,IAAA4gG,EAAAljG,KAAA8gG,cAAA9gG,KAAAwhG,MAGA0B,GAAA5gG,EACAtC,KAAA8gG,cAAA9gG,KAAAwhG,MAAA0B,GAGA3yD,EAAA5xC,UAAAwkG,OAAA,SAAAt3D,EAAAvpC,GACA,IAAA4gG,EAAAljG,KAAA6gG,WAAA7gG,KAAAwhG,MAEA0B,GAAA5gG,EACAtC,KAAA6gG,WAAA7gG,KAAAwhG,MAAA0B,GAIA3yD,EAAA5xC,UAAA2iG,aAAA,WACA,IAAAhuG,EAEA,IAAAA,EAAA,EAAaA,EAAA0M,KAAAyiG,QAAkBnvG,IAC/B0M,KAAA6gG,WAAAvtG,GAAA,GAEA,IAAAA,EAAA0M,KAAAwhG,KAAA,EAAyBluG,EAAAusG,GAAoBvsG,IAC7C0M,KAAA6gG,WAAAvtG,GAAA,GAGA,IAAAA,EAAA0M,KAAAyiG,QAAwBnvG,EAAA0M,KAAAwhG,KAAeluG,IACvC0M,KAAA6gG,WAAAvtG,GAAA0M,KAAA6gG,WAAAvtG,EAAA,GAGA0M,KAAA6gG,WAAA7gG,KAAAwhG,MAAA,IAGAjxD,EAAA5xC,UAAAykG,QAAA,SAAAv3D,EAAAvpC,GACA,IAAA4gG,EAAAljG,KAAA6gG,WAAA7gG,KAAAwhG,MAEA0B,GAAA5gG,EACAtC,KAAA6gG,WAAA7gG,KAAAwhG,MAAA0B,GAIA7jG,EAAAC,SACA4uC,gBACAqC,qDCrnBAlxC,EAAAC,SACAygI,SAtJA,SAAArhI,GAWA,IAVA,IACApL,EAAA,EACAC,GACAolG,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAGAtlG,EAAAoL,EAAAnM,YArBA,MAuBAmM,EAAApL,IAFA,CAOA,WAAAoL,EAAApL,IACAqlG,GAAA,IACArlG,IAKA,IAHAqlG,GAAAj6F,EAAApL,KAGA,MAAAoL,EAAApL,IACAslG,GAAA,IACAtlG,IAMA,GAJAslG,GAAAl6F,EAAApL,MAIAC,EAAA85B,SA5CA,IA4CAsrE,EAAA,CACAplG,EAAAolG,cACAplG,EAAAqlG,cACArlG,EAAA85B,QAAA3uB,EAAAzL,SAAAK,IAAAslG,GACA,MAIAtlG,GAAAslG,EACAD,EAAA,EACAC,EAAA,EAGA,OAAArlG,GAyGA0sI,cArGA,SAAApnC,GAGA,aAAAA,EAAAxrE,QAAA,GACA,KAIA,KAAAwrE,EAAAxrE,QAAA,MAAAwrE,EAAAxrE,QAAA,IACA,KAOA,SAHAp3B,OAAAC,aAAA2iG,EAAAxrE,QAAA,GACAwrE,EAAAxrE,QAAA,GACAwrE,EAAAxrE,QAAA,GACAwrE,EAAAxrE,QAAA,IACA,KAIA,IAAAwrE,EAAAxrE,QAAA,GACA,KAKAwrE,EAAAxrE,QAAAp6B,SAAA,EAAA4lG,EAAAxrE,QAAAp4B,OAAA,IA2EAirI,oBAvEA,SAAAr0F,EAAAitD,GACA,IAAAxlG,EAAA60C,EAAA90C,EAAAnB,EAAAquC,KAGA,QAAAu4D,EAAA,IACA,OAAAv4D,EAKA,IADA4H,EAAA,GAAA2wD,EAAA,GACAxlG,EAAA,EAAaA,EAAA60C,EAAW70C,IAExBpB,GACAqL,KAAA,EAAAu7F,EAAA,GAFAzlG,EAAA,EAAAC,IAGAu4C,OAIA,EAAAitD,EAAAzlG,EAAA,KACAnB,EAAA6mG,OAAAD,EAAAzlG,EAAA,MAAAylG,EAAAzlG,EAAA,GACAktC,EAAAvsC,KAAA9B,IAGA,OAAAquC,GAiDAsmE,gCA9CA,SAAA30G,GAQA,IAPA,IAIA66C,EAAAisD,EAHA/jG,EAAA/C,EAAAK,WACA0mG,KACA3lG,EAAA,EAIAA,EAAA2B,EAAA,GACA,IAAA/C,EAAAoB,IAAA,IAAApB,EAAAoB,EAAA,QAAApB,EAAAoB,EAAA,IACA2lG,EAAAjlG,KAAAV,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2lG,EAAAhkG,OACA,OAAA/C,EAIA66C,EAAA93C,EAAAgkG,EAAAhkG,OACA+jG,EAAA,IAAA/kG,WAAA84C,GACA,IAAAmsD,EAAA,EAEA,IAAA5lG,EAAA,EAAeA,EAAAy5C,EAAemsD,IAAA5lG,IAC9B4lG,IAAAD,EAAA,KAEAC,IAEAD,EAAAxuD,SAEAuuD,EAAA1lG,GAAApB,EAAAgnG,GAGA,OAAAF,GASAgnC,+BArKA,wCCTA,IAAA56B,GACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,MAGAnB,EAAA,SAAA/xG,GACA,OAAAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IA4HAmN,EAAAC,SACAisC,gBA1GA,SAAA+8D,EAAAh9D,GACA,IACAi9D,EAAAD,EAAAh9D,EAAA,OACAg9D,EAAAh9D,EAAA,OACAg9D,EAAAh9D,EAAA,MACAg9D,EAAAh9D,EAAA,GAIA,OAFA,GADAg9D,EAAAh9D,EAAA,KACA,EAGAi9D,EAAA,GAEAA,EAAA,IA+FA98D,cA5FA,SAAA68D,EAAAh9D,GACA,IACAk9D,GAAA,IAAAF,EAAAh9D,EAAA,OACAm9D,EAAAH,EAAAh9D,EAAA,MAGA,OAFA,KAAAg9D,EAAAh9D,EAAA,GAEAm9D,EAAAD,GAuFAt3G,UApFA,SAAAo3G,EAAAh9D,GACA,OAAAg9D,EAAAh9D,KAAA,IAAA/I,WAAA,IACA+lE,EAAAh9D,EAAA,SAAA/I,WAAA,IACA+lE,EAAAh9D,EAAA,SAAA/I,WAAA,GACA,kBACG,EAAA+lE,EAAAh9D,IACH,UAAAg9D,EAAAh9D,EAAA,IACA,QAEA,MA4EAI,gBAzEA,SAAAlC,GAGA,IAFA,IAAAl2C,EAAA,EAEAA,EAAA,EAAAk2C,EAAAv0C,QAAA,CACA,SAAAu0C,EAAAl2C,IAAA,UAAAk2C,EAAAl2C,EAAA,IAMA,OAAA8xG,GAAA,GAAA57D,EAAAl2C,EAAA,SAHAA,IAMA,aA6DAk4C,kBA1DA,SAAAhC,GACA,IAAAm7D,EAAAt5D,EAAAhB,EAGAs6D,EAAA,GACA,GAAAn7D,EAAA,KAEAm7D,GAAA,EACAA,GAAAV,EAAAz6D,EAAAv2C,SAAA,SAKA,GAGA,IADAo4C,EAAA44D,EAAAz6D,EAAAv2C,SAAA0xG,EAAA,EAAAA,EAAA,KACA,EACA,YAOA,YALA1uG,OAAAC,aAAAszC,EAAAm7D,GACAn7D,EAAAm7D,EAAA,GACAn7D,EAAAm7D,EAAA,GACAn7D,EAAAm7D,EAAA,IAEA,CACAt6D,EAAAb,EAAAv2C,SAAA0xG,EAAA,GAAAA,EAAAt5D,EAAA,IAEA,QAAA/3C,EAAA,EAAqBA,EAAA+2C,EAAA93C,WAAsBe,IAC3C,OAAA+2C,EAAA/2C,GAAA,CAEA,oDArFAixG,SAXA,SAAA7lG,EAAAyiB,EAAA3jB,GACA,IAAAlK,EAAAC,EAAA,GACA,IAAAD,EAAA6tB,EAAiB7tB,EAAAkK,EAASlK,IAC1BC,GAAA,UAAAmL,EAAApL,GAAAyL,SAAA,KAAAH,OAAA,GAEA,OAAArL,EAMAwwG,CAoFA15D,EAAA,EAAA/2C,IACA,CACA,IAAA+P,EAAAgnC,EAAAp3C,SAAAK,EAAA,GACA0J,GAAA,EAAAqG,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OAIA,OAHArG,GAAA,EACAA,GAAA,EAAAqG,EAAA,GAIA,OAKAshG,GAAA,GACAA,GAAAt5D,QACGs5D,EAAAn7D,EAAAj3C,YACH,iDC/IA,IAAA4tI,EAAA/hI,OAAA+hI,sBACAj7H,EAAA9G,OAAAO,UAAAuG,eACAk7H,EAAAhiI,OAAAO,UAAA0hI,qBAsDAhhI,EAAAC,QA5CA,WACA,IACA,IAAAlB,OAAAyE,OACA,SAMA,IAAAy9H,EAAA,IAAArqI,OAAA,OAEA,GADAqqI,EAAA,QACA,MAAAliI,OAAAo4C,oBAAA8pF,GAAA,GACA,SAKA,IADA,IAAAC,KACAjtI,EAAA,EAAiBA,EAAA,GAAQA,IACzBitI,EAAA,IAAAtqI,OAAAC,aAAA5C,MAKA,kBAHA8K,OAAAo4C,oBAAA+pF,GAAAriI,IAAA,SAAA6E,GACA,OAAAw9H,EAAAx9H,KAEA9E,KAAA,IACA,SAIA,IAAAuiI,KAIA,MAHA,uBAAAphI,MAAA,IAAA+G,QAAA,SAAAs6H,GACAD,EAAAC,OAGA,yBADAriI,OAAAC,KAAAD,OAAAyE,UAAkC29H,IAAAviI,KAAA,IAMhC,MAAAwmC,GAEF,UAIAi8F,GAAAtiI,OAAAyE,OAAA,SAAAsH,EAAA4d,GAKA,IAJA,IAAA83B,EAEA8gF,EADA7gF,EAtDA,SAAApJ,GACA,UAAAA,QAAA9S,IAAA8S,EACA,UAAAzC,UAAA,yDAGA,OAAA71C,OAAAs4C,GAiDAkqF,CAAAz2H,GAGAs5D,EAAA,EAAgBA,EAAAtgE,UAAAlO,OAAsBwuE,IAAA,CAGtC,QAAAllE,KAFAshD,EAAAzhD,OAAA+E,UAAAsgE,IAGAv+D,EAAArG,KAAAghD,EAAAthD,KACAuhD,EAAAvhD,GAAAshD,EAAAthD,IAIA,GAAA4hI,EAAA,CACAQ,EAAAR,EAAAtgF,GACA,QAAAvsD,EAAA,EAAkBA,EAAAqtI,EAAA1rI,OAAoB3B,IACtC8sI,EAAAvhI,KAAAghD,EAAA8gF,EAAArtI,MACAwsD,EAAA6gF,EAAArtI,IAAAusD,EAAA8gF,EAAArtI,MAMA,OAAAwsD,uBCxFA,IAAAr8C,EAGAA,EAAA,WACA,OAAAzD,KADA,GAIA,IAEAyD,KAAA+jF,SAAA,cAAAA,KAAA,EAAAq5C,MAAA,QACC,MAAAt9H,GAED,iBAAAX,SACAa,EAAAb,QAOAvD,EAAAC,QAAAmE,sBCJA,IAAAq9H,GACAC,IAAA,EACAC,IAAA,GAWA,SAAAC,EAAAxiI,GACA,uBAAAA,MAAA,GAAAA,GAAA,IAuGAY,EAAAC,QAnGA,WACA,IAAA8+E,EAAA,IACA8iD,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GAEAnjI,OAAA61D,iBAAAj0D,MACAtN,OACAwd,YAAA,EACAJ,IAAA,WACA,OAAAsuE,GAEAruE,IAAA,SAAAtR,GACA,IAAAwiI,EAAAxiI,GACA,UAAAkF,MAAA,oCAEAy6E,EAAA3/E,IAGA+iI,OACAtxH,YAAA,EACAJ,IAAA,WACA,OAAAoxH,GAEAnxH,IAAA,SAAAtR,GACA,oBAAAA,EACA,UAAAw1C,UAAA,kCAEAitF,EAAAziI,IAGAgjI,eACAvxH,YAAA,EACAJ,IAAA,WACA,OAAAsxH,GAEArxH,IAAA,SAAAtR,GACA,IAAAwiI,EAAAxiI,GACA,UAAAkF,MAAA,4CAEAy9H,EAAA3iI,IAGAijI,eACAxxH,YAAA,EACAJ,IAAA,WACA,OAAAqxH,GAEApxH,IAAA,SAAAtR,GACA,IAAAwiI,EAAAxiI,GACA,UAAAkF,MAAA,4CAEAw9H,EAAA1iI,IAGAkjI,iBACAzxH,YAAA,EACAJ,IAAA,WACA,OAAAwxH,GAEAvxH,IAAA,SAAAtR,GACA,IAAAwiI,EAAAxiI,GACA,UAAAkF,MAAA,8CAEA29H,EAAA7iI,IAGAmjI,iBACA1xH,YAAA,EACAJ,IAAA,WACA,OAAAuxH,GAEAtxH,IAAA,SAAAtR,GACA,IAAAwiI,EAAAxiI,GACA,UAAAkF,MAAA,8CAEA09H,EAAA5iI,IAGAojI,QACA3xH,YAAA,EACAJ,IAAA,WACA,OAAAyxH,GAEAxxH,IAAA,SAAAtR,GACA,IAAAqjI,EArGA,SAAArjI,GACA,uBAAAA,KAGAqiI,EAAAriI,EAAAiK,gBACAjK,EAAAiK,cAgGAq5H,CAAAtjI,GAEA,QAAAqjI,EACA,UAAAE,YAAA,+CAEAT,EAAAO,6BC/HAziI,EAAAC,QAAiBnO,EAAAygC,EAAuB,wDCAxC,IAAAqwG,EAAA9wI,EAAA,SAOA,SAAUqX,EAAU4zC,EAAS8lF,GAGzB9lF,EAAQmrC,OAAO,YAAa,SAASv0F,GAEjC,IAAI6pD,EAAS78C,KACT4zG,EAAY/2D,EAAOzH,KACnB+sF,EAAMvuB,EAAUr3D,qBAAqB,SAAS,GAC9C6lF,EAAgB55H,EAASpH,cAAc,QAC3CpO,EAASA,OACFuK,KAAO,kBACdvK,EAAOqvI,SAAU,EACjBrvI,EAAOsvI,cAAe,EACtBtvI,EAAOuvI,oBAAqB,EAC5BvvI,EAAOwvI,UAAW,EAClBxvI,EAAOyvI,SAAWN,EAClBC,EAAcl5H,MAAMw5H,WAAa,SACjC7lF,EAAO8lF,WAAaT,EAAUU,OAAOR,EAAepvI,GACpD4gH,EAAUt+E,aAAa8sG,EAAexuB,EAAU1zF,YAChDiiH,EAAIj5H,MAAM25H,QAAU,OAGpBhmF,EAAOrB,GAAG,OAAQ,WACV2mF,EAAI77F,WAAa,GACjBuW,EAAO8lF,WAAWG,WAAU,KAEpCjmF,EAAOrB,GAAG,UAAW,WACZqB,EAAOoP,UACRpP,EAAO8lF,WAAWG,WAAU,KAEpCjmF,EAAOrB,GAAG,QAAS,WACfqB,EAAO8lF,WAAWG,WAAU,KAEhCjmF,EAAOrB,GAAG,aAAc,WACpB4mF,EAAcl5H,MAAMw5H,WAAa,YAErC7lF,EAAOrB,GAAG,UAAW,WACbqB,EAAOoP,UACPpP,EAAO8lF,WAAWG,WAAU,KAEpCjmF,EAAOrB,GAAG,SAAU,WACZqB,EAAOoP,UACPpP,EAAO8lF,WAAWG,WAAU,OA1C5C,CA8COt6H,SAAU4zC,IAAS8lF,mECnD1B,IAEAa,EAFA90F,EAAa98C,EAAQ,QAKrBi0G,GACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,OAWA29B,EAAA,WACA,IAAA1wI,EAEA0wI,EAAApkI,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAhM,KAAA,SAAAw1C,GACA,IAGA67D,EACAC,EACAC,EACAC,EACAprG,EACAqrG,EAPAnyG,EAAA,EACAoyG,EAAA,EAQA,aAAAl8D,EAAAjsC,KAkBA,IAXAlL,GACAmzG,EAAAnzG,GACAA,EAAA,IAAA4B,WAAAuxG,EAAAjzG,WAAAi3C,EAAAt3C,KAAAK,aACAwd,IAAAy1F,GACAnzG,EAAA0d,IAAAy5B,EAAAt3C,KAAAszG,EAAAjzG,aAEAF,EAAAm3C,EAAAt3C,KAKAoB,EAAA,EAAAjB,EAAA4C,QAGA,SAAA5C,EAAAiB,IAAA,UAAAjB,EAAAiB,EAAA,KAyBA,GAhBAgyG,EAAA,MAAAjzG,EAAAiB,EAAA,IAIA+xG,GAAA,EAAAhzG,EAAAiB,EAAA,QACAjB,EAAAiB,EAAA,OACA,IAAAjB,EAAAiB,EAAA,OAGAmyG,EAAA,KADArrG,EAAA,WAAA/H,EAAAiB,EAAA,MAEA8xG,GAAA,GAAA/yG,EAAAiB,EAAA,SAEAiyG,EAAAjyG,EAAA+xG,EAIAhzG,EAAAE,WAAAgzG,EACA,OAmBA,GAfAvlG,KAAAuuC,QAAA,QACA1C,IAAArC,EAAAqC,IAAA65D,EAAAD,EACA75D,IAAApC,EAAAoC,IAAA85D,EAAAD,EACArrG,cACAsoC,gBAAA,GAAArwC,EAAAiB,EAAA,UACA+D,cAAA,EAAAhF,EAAAiB,EAAA,QACA,IAAAjB,EAAAiB,EAAA,QACAiE,WAAA6tG,GAAA,GAAA/yG,EAAAiB,EAAA,SACAqvC,wBAAA,GAAAtwC,EAAAiB,EAAA,QAEAgE,WAAA,GACApF,KAAAG,EAAAY,SAAAK,EAAA,EAAAgyG,EAAAC,KAIAlzG,EAAAE,aAAAgzG,EAEA,YADAlzG,OAAAuxC,GAIA8hE,IAGArzG,IAAAY,SAAAsyG,QAlDAjyG,KAqDA0M,KAAA4sC,MAAA,WACA5sC,KAAAuuC,QAAA,WAIA5vC,UAAA,IAAAsvC,EAEA5uC,EAAAC,QAAAyjI,qCCxHA,IAGAC,EAHA/0F,EAAa98C,EAAQ,SASrB6xI,EAAA,WACA,IACA10F,EAAA,IAAAr6C,WACAoX,EAAA,EAEA23H,EAAArkI,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAqoG,aAAA,SAAAj9D,GACA//B,EAAA+/B,GAGAprC,KAAAurC,gBAAA,SAAA+8D,EAAAh9D,GACA,IACAi9D,EAAAD,EAAAh9D,EAAA,OACAg9D,EAAAh9D,EAAA,OACAg9D,EAAAh9D,EAAA,MACAg9D,EAAAh9D,EAAA,GAIA,OAFA,GADAg9D,EAAAh9D,EAAA,KACA,EAGAi9D,EAAA,GAEAA,EAAA,IAGAvoG,KAAAyrC,cAAA,SAAA68D,EAAAh9D,GACA,IACAk9D,GAAA,IAAAF,EAAAh9D,EAAA,OACAm9D,EAAAH,EAAAh9D,EAAA,MAGA,OAFA,KAAAg9D,EAAAh9D,EAAA,GAEAm9D,EAAAD,GAGAxoG,KAAAhM,KAAA,SAAA0K,GACA,IAGAgqG,EACAhE,EACAl7D,EACAm/D,EALAt9D,EAAA,EACAC,EAAA,EAiBA,IATAgD,EAAAr5C,QACA0zG,EAAAr6D,EAAAr5C,QACAq5C,EAAA,IAAAr6C,WAAAyK,EAAAnM,WAAAo2G,IACA54F,IAAAu+B,EAAAr7C,SAAA,EAAA01G,IACAr6D,EAAAv+B,IAAArR,EAAAiqG,IAEAr6D,EAAA5vC,EAGA4vC,EAAAr5C,OAAAq2C,GAAA,GACA,GAAAgD,EAAAhD,KAAA,IAAA/I,WAAA,IACA+L,EAAAhD,EAAA,SAAA/I,WAAA,IACA+L,EAAAhD,EAAA,SAAA/I,WAAA,GAuBO,MAAA+L,EAAAhD,IACP,UAAAgD,EAAAhD,EAAA,IADO,CAKP,GAAAgD,EAAAr5C,OAAAq2C,EAAA,EACA,MAOA,IAJAD,EAAArrC,KAAAyrC,cAAA6C,EAAAhD,IAIAgD,EAAAr5C,OACA,MAGAu0C,GACAjsC,KAAA,QACArL,KAAAo8C,EAAAr7C,SAAAq4C,IAAAD,GACAQ,IAAAxgC,EACAugC,IAAAvgC,GAEArL,KAAAuuC,QAAA,OAAA/E,GACA8B,GAAAD,OAGAC,QApDA,CAMA,GAAAgD,EAAAr5C,OAAAq2C,EAAA,GACA,MAQA,IAJAD,EAAArrC,KAAAurC,gBAAA+C,EAAAhD,IAIAgD,EAAAr5C,OACA,MAEAyvG,GACAnnG,KAAA,iBACArL,KAAAo8C,EAAAr7C,SAAAq4C,IAAAD,IAEArrC,KAAAuuC,QAAA,OAAAm2D,GACAp5D,GAAAD,EA+BAq9D,EAAAp6D,EAAAr5C,OAAAq2C,EAGAgD,EADAo6D,EAAA,EACAp6D,EAAAr7C,SAAAq4C,GAEA,IAAAr3C,cAKA0K,UAAA,IAAAsvC,EAEA5uC,EAAAC,QAAA0jI,qCC3IA3jI,EAAAC,QAAmBnO,EAAQ,8BCH3BkO,EAAAC,QAEA,SAAA4nC,EAAA+7F,GACA,IAAA78F,EACAvR,EAAA,KAEA,IACAuR,EAAAlnC,KAAAlN,MAAAk1C,EAAA+7F,GACK,MAAAx+F,GACL5P,EAAA4P,EAGA,OAAA5P,EAAAuR,uCCDA,IAAAygE,EAAsC11G,EAAQ,QAAgC01G,gCAC9E34D,EAAoB/8C,EAAQ,QAAwB+8C,cACpD/E,EAAYh4C,EAAQ,QACpBoO,EAAcpO,EAAQ,QAYtBm/G,EAAA,SAAAj9G,EAAAgF,GAGA,IAFA,IAAAk4G,EAAAl9G,EAEAC,EAAA,EAAiBA,EAAA+E,EAAApD,OAAoB3B,IAAA,CACrC,IAAAiJ,EAAAlE,EAAA/E,GAEA,GAAAi9G,EAAAh0G,EAAAS,KACA,OAAAT,EAGAg0G,GAAAh0G,EAAAS,KAGA,aA+HAwzG,EAAA,SAAA/jB,EAAAgkB,GAEA,IAAA9vE,EAAAwI,EAAAjJ,QAAAusD,GAAA,gBAGAikB,KACAC,KAuCA,OAzCAxnE,EAAAjJ,QAAAusD,GAAA,SAKAtmF,QAAA,SAAA9P,EAAA8H,GACA,IAAAyyG,EAAAjwE,EAAAxiC,GACAwyG,EAAA38G,MACAqC,OACAuF,KAAAg1G,MAIAD,EAAAxqG,QAAA,SAAA0qG,GACA,IAWAC,EAXAz6G,EAAAw6G,EAAAx6G,KACAuF,EAAAi1G,EAAAj1G,KACAjB,EAAAwuC,EAAAjJ,QAAAtkC,GAAA,SAEAm1G,EAAAxxG,EAAAI,UAAAhF,EAAA,IACAC,EAAAm2G,EAAAn2G,QACAL,EAAA4uC,EAAAjJ,QAAAtkC,GAAA,SAEApB,EAAAD,EAAAtF,OAAA,EAAAsK,EAAAE,UAAAlF,EAAA,IAAAC,oBAAA,EACAw2G,EAAA7nE,EAAAjJ,QAAAtkC,GAAA,SAKA60G,IAAA71G,GAAAo2G,EAAA/7G,OAAA,IAGA67G,EAjJA,SAAAv6G,EAAA8B,EAAAuC,GACA,IAGAq2G,EACA39G,EACA2B,EACAi8G,EALA16G,EAAA,IAAApE,SAAAmE,EAAAlE,OAAAkE,EAAAjE,WAAAiE,EAAAhE,YACAgB,KAMA,IAAAD,EAAA,EAAaA,EAAA,EAAAiD,EAAAtB,OAA0B3B,GAAA2B,EAKvC,GAJAA,EAAAuB,EAAApC,UAAAd,GACAA,GAAA,IAGA2B,GAAA,GAIA,UAAAsB,EAAAjD,IACA,OACA,IAAApB,EAAAqE,EAAAtD,SAAAK,EAAA,EAAAA,EAAA,EAAA2B,GACAk8G,EAAAb,EAAAh9G,EAAA+E,GAEA44G,GACAnZ,YAAA,WACA96F,KAAA/H,EACA/C,OACAonG,YAAAuN,EAAA30G,GACA0I,WAGAu2G,GACAF,EAAAplE,IAAAslE,EAAAtlE,IACAolE,EAAArlE,IAAAulE,EAAAvlE,IACAslE,EAAAC,IAIAF,EAAAplE,IAAAqlE,EAAArlE,IACAolE,EAAArlE,IAAAslE,EAAAtlE,KAGAr4C,EAAAS,KAAAi9G,GAOA,OAAA19G,EAgGA69G,CAAA/6G,EAhFA,SAAA26G,EAAAx2G,EAAAG,GACA,IAAAisG,EAAApsG,EACAa,EAAAV,EAAAU,uBAAA,EACAC,EAAAX,EAAAW,mBAAA,EACAV,EAAAD,EAAAC,QACAy2G,KA6BA,OA3BAL,EAAA7qG,QAAA,SAAA7J,GAIA,IACAjE,EADAkH,EAAAK,UAAAtD,GACAjE,QAEAA,EAAA8N,QAAA,SAAA5J,QACAqnC,IAAArnC,EAAAxF,WACAwF,EAAAxF,SAAAsE,QAEAuoC,IAAArnC,EAAAS,OACAT,EAAAS,KAAA1B,GAEAiB,EAAA3B,UACA2B,EAAAqvC,IAAAg7D,OACAhjE,IAAArnC,EAAAU,wBACAV,EAAAU,sBAAA,GAEAV,EAAAsvC,IAAA+6D,EAAArqG,EAAAU,sBAEA2pG,GAAArqG,EAAAxF,WAGAs6G,IAAAprG,OAAA5N,KAGAg5G,EA4CAC,CAAAN,EAAAx2G,EAAAu2G,GAEAn2G,GAEA81G,EAAA91G,KACA81G,EAAA91G,OAGA81G,EAAA91G,GAAA81G,EAAA91G,GAAAqL,OAAA6qG,MAIAJ,GAoOArxG,EAAAC,QA/LA,WACA,IACA+jG,EAGAqO,EAEA92G,EAEA9D,EAEA66G,EAVAC,GAAA,EAgBA5xG,KAAA4xG,cAAA,WACA,OAAAA,GAOA5xG,KAAAwgC,KAAA,WACA6iE,EAAA,IAAAn1D,EACA0jE,GAAA,EAGAvO,EAAA7nD,GAAA,gBAAA1L,GAEAA,EAAA3P,UAAA2P,EAAAyyD,SAAAzrG,EACAg5C,EAAAma,QAAAna,EAAA0yD,OAAA1rG,EAEA66G,EAAArhD,SAAAt8D,KAAA87C,GACA6hE,EAAAtD,eAAAv+D,EAAAJ,SAAA,KASA1vC,KAAA6xG,UAAA,SAAA7wE,EAAA8wE,GACA,QAAA9wE,GAAA,IAAAA,EAAA/rC,QACA68G,GAAA,iBAAAA,GACA,IAAA1zG,OAAAC,KAAAyzG,GAAA78G,QAIA2F,IAAAomC,EAAA,IACAlqC,IAAAg7G,EAAAl3G,KAaAoF,KAAAhO,MAAA,SAAAy6F,EAAAzrD,EAAA8wE,GACA,IAAAC,EAEA,IAAA/xG,KAAA4xG,gBACA,YAGK,IAAA5wE,IAAA8wE,EACL,YAEK,GAAA9xG,KAAA6xG,UAAA7wE,EAAA8wE,GAGLl3G,EAAAomC,EAAA,GACAlqC,EAAAg7G,EAAAl3G,QAIK,IAAAA,IAAA9D,EAEL,OADA46G,EAAA19G,KAAAy4F,GACA,KAIA,KAAAilB,EAAAz8G,OAAA,IACA,IAAA+8G,EAAAN,EAAAjnE,QAEAzqC,KAAAhO,MAAAggH,EAAAhxE,EAAA8wE,GAKA,eAFAC,EAlHA,SAAAtlB,EAAA7xF,EAAA9D,GAGA,OAAA8D,GAOAk2G,QAHAN,EAAA/jB,EAAA7xF,GAGAA,GACA9D,aAPA,KA8GAm7G,CAAAxlB,EAAA7xF,EAAA9D,KAEAi7G,EAAAjB,SAIA9wG,KAAAkyG,SAAAH,EAAAjB,SAEA9wG,KAAAyvC,cAEAkiE,GAPA,MAgBA3xG,KAAAkyG,SAAA,SAAA57G,GACA,IAAA0J,KAAA4xG,kBAAAt7G,GAAA,IAAAA,EAAArB,OACA,YAGAqB,EAAA6P,QAAA,SAAAgsG,GACA9O,EAAArvG,KAAAm+G,MAQAnyG,KAAAyvC,YAAA,WACA,IAAAzvC,KAAA4xG,gBACA,YAGAvO,EAAAz2D,SAMA5sC,KAAAoyG,oBAAA,WACAT,EAAArhD,YACAqhD,EAAAtD,mBAOAruG,KAAAqyG,mBAAA,WACA,IAAAryG,KAAA4xG,gBACA,YAGAvO,EAAArrC,SAQAh4D,KAAAsyG,iBAAA,WACAtyG,KAAAoyG,sBACApyG,KAAAqyG,sBAMAryG,KAAAg4D,MAAA,WACA05C,KACA92G,EAAA,KACA9D,EAAA,KAEA66G,EAOA3xG,KAAAoyG,sBANAT,GACArhD,YAEA+9C,mBAMAruG,KAAAqyG,sBAGAryG,KAAAg4D,+BC1ZA34D,EAAAC,QAAmBnO,EAAQ,OAARA,sCCjBNiN,OAAA4R,eAAA1Q,EAAA,cAA4Cb,OAAA,IAAW,IAAA2E,EAAA,KAAAG,GAAA,EAAAC,GAAA,EAAAC,EAAA,iBAAAg2E,aAAA,mBAAAA,YAAAnuE,IAAAzH,GAA6F04B,cAAA94B,EAAA,WAA2B,IAAAtC,EAAAuC,IAAA+1E,YAAAnuE,MAA4B,SAAAnK,IAAA,GAAe,WAAY,IAAAA,EAAAuC,IAAApS,KAAAga,MAAqB,SAAAnK,IAAA,GAAe44B,YAAA,GAAgB,SAAAt1B,IAAa,IAAAlB,EAAA,CAAO,IAAApC,EAAAiC,EAAA8/H,WAAmB1/H,EAAAT,IAAAS,GAAA,EAAWouB,EAAAE,EAAA3wB,IAAQ,SAAA2sB,IAAa,IAAA3sB,EAAAiC,EAAAF,EAAAE,EAAAmqB,KAAiB,GAAAnqB,IAAAF,EAAAE,EAAA,SAAgB,CAAK,IAAAC,EAAAD,EAAA+/H,SAAiB//H,EAAAC,EAAAkqB,KAAArqB,EAAWA,EAAAigI,SAAA9/H,EAAalC,EAAAosB,KAAApsB,EAAAgiI,SAAA,MAAuBhiI,IAAAmsB,UAAazpB,GACje,SAAAiuB,EAAA3wB,GAAcoC,GAAA,EAAKM,EAAAk2B,WAAA54B,EAAe,IAAI,GAAAA,EAAA,KAAU,OAAAiC,GAAS,CAAE,IAAAF,EAAA5D,EAAA85B,eAA6B,KAAAh2B,EAAA8/H,YAAAhgI,GAA4D,MAAxC,GAAA4qB,UAAO,OAAA1qB,KAAA8/H,YAAAhgI,QAA4C,UAAAE,EAAkB,GAAA0qB,UAAO,OAAA1qB,GAAA,EAAAM,IAAApE,EAAA85B,gBAA+C,QAAQ71B,GAAA,SAAAH,EAAAqB,IAAAjB,GAAA,GAC/O,IAAAq3B,EAAAh9B,EAAoe+zB,EAAA7uB,EAAAW,EAApeT,EAAA3R,KAAAugC,EAAA,mBAAAiD,2BAAA,EAAAl3B,EAAA,mBAAAgnC,+BAAA,EAAAhK,EAAA,mBAAA6V,iDAAA,EAAAve,EAAA,mBAAAuzB,+CAAA,EAAyQ,SAAAh0B,EAAAtwB,GAAc05B,EAAAD,EAAA,SAAA13B,GAAgBtF,EAAAC,GAAKsD,EAAA+B,KAAOrF,EAAAg0B,EAAA,WAAeK,EAAA2I,GAAK15B,EAAA7B,EAAA85B,iBAA0B,KAAM,GAAA31B,EAAA,CAAM,IAAAkuB,EAAA8nD,YAAkBn6E,EAAA85B,aAAA,WAAgC,OAAAzH,EAAArmB,YAAgBhM,EAAA85B,aAAA,WAAqC,OAAAn2B,EAAAqI,OACpd,uBAAA1I,OAAA,CAAgC,IAAAgO,GAAA,EAASghB,EAAA,SAAAzwB,GAAcyP,EAAAkkB,WAAA3zB,EAAA,OAAsB4B,EAAA,WAAa6hC,aAAAh0B,IAAiBlN,EAAA,WAAa,eAAU,GAAAd,OAAAwgI,WAAA,CAA2B,IAAAzwH,EAAA/P,OAAAwgI,WAAwBxxG,EAAAjf,EAAA,GAAO5P,EAAA4P,EAAA,GAAOjP,EAAAiP,EAAA,OAAO,CAAK,oBAAArS,UAAA,mBAAAs6B,GAAAt6B,QAAAu0B,MAAA,8JAAA3C,GAAA5xB,QAAAu0B,MAAA,2IAC/M,IAAA5hB,EAAA,KAAAoM,GAAA,EAAA+J,GAAA,EAAAC,GAAA,EAAAE,GAAA,EAAAC,EAAA,EAAAM,EAAA,GAAAkF,EAAA,GAA6CtrB,EAAA,WAAa,OAAA8lB,GAAU,IAAAwJ,EAAA,uBAAAv4B,KAAA6M,SAAAvI,SAAA,IAAAH,MAAA,GAAiEgE,OAAA6c,iBAAA,mBAAAte,GAA8C,GAAAA,EAAA4mB,SAAAnlB,QAAAzB,EAAAjP,OAAA8gC,EAAA,CAAkC3T,GAAA,EAAK,IAAAnc,EAAA5D,EAAA85B,eAAkC,GAALj4B,GAAA,EAAK,GAAAqoB,EAAAtmB,EAAA,WAAAkmB,MAAAlmB,GAAmD,YAAfmmB,OAAA,EAAAoI,EAAAiF,KAApCv1B,GAAA,EAA0E,GAAhBioB,GAAA,EAAKlmB,EAAA+P,EAAIA,EAAA,KAAO,OAAA/P,EAAA,CAAaqmB,GAAA,EAAK,IAAIrmB,EAAA/B,GAAK,QAAQooB,GAAA,OAAQ,GAAK,IAAAmN,EAAA,SAAAv1B,GAAkBkoB,GAAA,EAAK,IAAAnmB,EAAA/B,EAAAqoB,EAAAwF,EAAY9rB,EAAA8rB,GAAAlF,EAAAkF,GAAA,EAAA9rB,MAAA,GAAA8rB,EAAA9rB,EAAA4mB,IAAA5mB,GAAA4mB,EAAA5mB,EAAoCsmB,EAAAroB,EAAA6tB,EAAM3P,OAAA,EAAAzc,OAAA2zF,YAAAvjE,EAAA,OAAqCpB,EAAA,SAAAzwB,EACxe+B,GAAG+P,EAAA9R,EAAIioB,EAAAlmB,EAAIqmB,EAAA3mB,OAAA2zF,YAAAvjE,EAAA,KAAA3J,OAAA,EAAAoI,EAAAiF,KAA4C3zB,EAAA,WAAakQ,EAAA,KAAOoM,GAAA,EAAK+J,GAAA,GAAM9pB,EAAAq6B,sBAAA,SAAAx4B,EAAA+B,GAA4C,IAAAG,EAAA/D,EAAA85B,eAAgK,GAApDj4B,GAAGmsB,SAAAnsB,EAAA+hI,WAAlFhgI,OAAA,IAAAA,GAAA,OAAAA,GAAA,OAAAA,EAAA22B,cAAA,IAAA32B,EAAA22B,QAAAx2B,EAAAH,EAAA22B,QAAAx2B,EAAA,IAAkFkqB,KAAA,KAAA41G,SAAA,MAAiD,OAAA//H,IAAAjC,EAAAosB,KAAApsB,EAAAgiI,SAAAhiI,EAAAsD,QAAuC,CAAKpB,EAAA,KAAO,IAAAO,EAAAR,EAAQ,GAAG,GAAAQ,EAAAs/H,WAAAhgI,EAAA,CAAmBG,EAAAO,EAAI,MAAMA,IAAA2pB,WAAS3pB,IAAAR,GAAa,OAAAC,IAAAD,EAAAC,IAAAD,MAAAjC,EAAAsD,MAA+BvB,EAAAG,EAAA8/H,UAAa51G,KAAAlqB,EAAA8/H,SAAAhiI,EAAoBA,EAAAosB,KAAAlqB,EAASlC,EAAAgiI,SAAAjgI,EAAa,OAAA/B,GACze7B,EAAAo6B,6BAAA,SAAAv4B,GAAiD,IAAA+B,EAAA/B,EAAAosB,KAAa,UAAArqB,EAAA,CAAa,GAAAA,IAAA/B,EAAAiC,EAAA,SAAgB,CAAKjC,IAAAiC,MAAAF,GAAa,IAAAG,EAAAlC,EAAAgiI,SAAiB9/H,EAAAkqB,KAAArqB,EAASA,EAAAigI,SAAA9/H,EAAalC,EAAAosB,KAAApsB,EAAAgiI,SAAA,0CCZpJ9jI,EAAAC,QAAmBnO,EAAQ,4BCC3B,IAyKAsmG,EAAA,SAAAptD,EAAAvtC,GACA,IAAAP,GArBAS,KAAA,EACAxL,OACAC,UAAA,EACAC,UAAA,EACAC,aAAA,EACAC,cAAA,EACAG,oBAAA,EACAD,gBAAA,IA2BA,OAXAyK,EAAAO,aACAP,EAAAU,sBAAAotC,EAAAwB,IAAAxB,EAAAuB,IACArvC,EAAAxF,SAAAszC,EAAAtzC,SACAwF,EAAAS,KAAA,EAAAqtC,EAAAp1C,OACAsH,EAAAS,MAAAqtC,EAAA93C,WAEA83C,EAAAqtD,WACAn7F,EAAA/K,MAAAE,UAAA,EACA6K,EAAA/K,MAAAM,gBAAA,GAGAyK,GAiEA8C,EAAAC,SACA+jI,oBAzPA,SAAAzrC,GACA,IACAtkG,EACAukG,EACAttD,KACA+pD,KAIA,IAFA/pD,EAAAh4C,WAAA,EAEAe,EAAA,EAAaA,EAAAskG,EAAA3iG,OAAqB3B,IAIlC,gCAHAukG,EAAAD,EAAAtkG,IAGAwkG,aAGAvtD,EAAAt1C,SACAs1C,EAAAxzC,SAAA8gG,EAAAjsD,IAAArB,EAAAqB,IACA0oD,EAAAtgG,KAAAu2C,KAEAA,GAAAstD,IACAtlG,WAAAslG,EAAA3lG,KAAAK,WACAg4C,EAAAsB,IAAAgsD,EAAAhsD,IACAtB,EAAAqB,IAAAisD,EAAAjsD,MAGA,8CAAAisD,EAAAC,cACAvtD,EAAAmtD,UAAA,GAEAntD,EAAAxzC,SAAA8gG,EAAAjsD,IAAArB,EAAAqB,IACArB,EAAAh4C,YAAAslG,EAAA3lG,KAAAK,WACAg4C,EAAAv2C,KAAA6jG,IAcA,OARAvD,EAAAr/F,UACAs1C,EAAAxzC,UACAwzC,EAAAxzC,UAAA,KACAwzC,EAAAxzC,SAAAu9F,IAAAr/F,OAAA,GAAA8B,UAIAu9F,EAAAtgG,KAAAu2C,GACA+pD,GA6MAgvC,oBAtMA,SAAAhvC,GACA,IACAhhG,EACAi3C,EACAwtD,KACAC,KAiBA,IAbAD,EAAAxlG,WAAA,EACAwlG,EAAAE,SAAA,EACAF,EAAAhhG,SAAA,EACAghG,EAAAlsD,IAAAyoD,EAAA,GAAAzoD,IACAksD,EAAAnsD,IAAA0oD,EAAA,GAAA1oD,IAGAosD,EAAAzlG,WAAA,EACAylG,EAAAC,SAAA,EACAD,EAAAjhG,SAAA,EACAihG,EAAAnsD,IAAAyoD,EAAA,GAAAzoD,IACAmsD,EAAApsD,IAAA0oD,EAAA,GAAA1oD,IAEAt4C,EAAA,EAAaA,EAAAghG,EAAAr/F,OAAmB3B,KAChCi3C,EAAA+pD,EAAAhhG,IAEAokG,UAGAK,EAAA9iG,SACA+iG,EAAAhkG,KAAA+jG,GACAC,EAAAzlG,YAAAwlG,EAAAxlG,WACAylG,EAAAC,UAAAF,EAAAE,SACAD,EAAAjhG,UAAAghG,EAAAhhG,WAGAghG,GAAAxtD,IACA0tD,SAAA1tD,EAAAt1C,OACA8iG,EAAAxlG,WAAAg4C,EAAAh4C,WACAwlG,EAAAlsD,IAAAtB,EAAAsB,IACAksD,EAAAnsD,IAAArB,EAAAqB,IACAmsD,EAAAhhG,SAAAwzC,EAAAxzC,WAEAghG,EAAAhhG,UAAAwzC,EAAAxzC,SACAghG,EAAAE,UAAA1tD,EAAAt1C,OACA8iG,EAAAxlG,YAAAg4C,EAAAh4C,WACAwlG,EAAA/jG,KAAAu2C,IAaA,OATAytD,EAAA/iG,QAAA8iG,EAAAhhG,UAAA,IACAghG,EAAAhhG,SAAAihG,IAAA/iG,OAAA,GAAA8B,UAEAihG,EAAAzlG,YAAAwlG,EAAAxlG,WACAylG,EAAAC,UAAAF,EAAAE,SACAD,EAAAjhG,UAAAghG,EAAAhhG,SAGAihG,EAAAhkG,KAAA+jG,GACAC,GA6IAurC,oBAjIA,SAAAvrC,GACA,IAAAD,EAiBA,OAfAC,EAAA,MAAAN,UAAAM,EAAA/iG,OAAA,IAEA8iG,EAAAC,EAAAvtD,QAEAutD,EAAAzlG,YAAAwlG,EAAAxlG,WACAylG,EAAAC,UAAAF,EAAAE,SAKAD,EAAA,MAAApsD,IAAAmsD,EAAAnsD,IACAosD,EAAA,MAAAnsD,IAAAksD,EAAAlsD,IACAmsD,EAAA,MAAAjhG,UAAAghG,EAAAhhG,UAGAihG,GAgHAwrC,oBAjEA,SAAAxrC,EAAA58F,GACA,IACAsI,EAAApQ,EACAiJ,EACAw7F,EACAxtD,EACAztC,EAAA1B,GAAA,EACA/C,KAEA,IAAAqL,EAAA,EAAaA,EAAAs0F,EAAA/iG,OAAiByO,IAG9B,IAFAq0F,EAAAC,EAAAt0F,GAEApQ,EAAA,EAAeA,EAAAykG,EAAA9iG,OAAuB3B,IACtCi3C,EAAAwtD,EAAAzkG,GAIAwJ,IAFAP,EAAAk7F,EAAAltD,EAAAztC,IAEAE,KAEA3E,EAAArE,KAAAuI,GAGA,OAAAlE,GA4CAorI,mBAxCA,SAAAzrC,GACA,IACAt0F,EAAApQ,EAAA0qE,EACA+5B,EACAxtD,EACAstD,EACA/6F,EAAA,EACAo7F,EAAAF,EAAAzlG,WACA4lG,EAAAH,EAAAC,SAEA/lG,EAAA,IAAA+B,WADAikG,EAAA,EAAAC,GAEAhmG,EAAA,IAAAC,SAAAF,EAAAG,QAGA,IAAAqR,EAAA,EAAaA,EAAAs0F,EAAA/iG,OAAiByO,IAI9B,IAHAq0F,EAAAC,EAAAt0F,GAGApQ,EAAA,EAAeA,EAAAykG,EAAA9iG,OAAuB3B,IAItC,IAHAi3C,EAAAwtD,EAAAzkG,GAGA0qE,EAAA,EAAiBA,EAAAzzB,EAAAt1C,OAAyB+oE,IAC1C65B,EAAAttD,EAAAyzB,GAEA7rE,EAAAswC,UAAA3lC,EAAA+6F,EAAA3lG,KAAAK,YACAuK,GAAA,EACA5K,EAAA6d,IAAA8nF,EAAA3lG,KAAA4K,GACAA,GAAA+6F,EAAA3lG,KAAAK,WAIA,OAAAL,uCCrPA,IAAAwQ,EAAcvR,EAAQ,QAEtBkO,EAAAC,QAAAoD,EAIA,IAAAghI,EAAAC,GAAA,GACAC,EAAAD,GAAA,GACAE,EAAAF,EAAA,MACAG,EAAAH,OAAA//F,GACAmgG,EAAAJ,EAAA,GACAK,EAAAL,EAAA,IAEA,SAAAA,EAAAllI,GACA,IAAAmzB,EAAA,IAAAlvB,IAAAuhI,KAGA,OAFAryG,EAAAsyG,IAAA,EACAtyG,EAAAuyG,IAAA1lI,EACAmzB,EAEAlvB,EAAA6/E,QAAA,SAAA9jF,GACA,GAAAA,aAAAiE,EAAA,OAAAjE,EAEA,UAAAA,EAAA,OAAAolI,EACA,QAAAjgG,IAAAnlC,EAAA,OAAAqlI,EACA,QAAArlI,EAAA,OAAAilI,EACA,QAAAjlI,EAAA,OAAAmlI,EACA,OAAAnlI,EAAA,OAAAslI,EACA,QAAAtlI,EAAA,OAAAulI,EAEA,oBAAAvlI,GAAA,mBAAAA,EACA,IACA,IAAAsT,EAAAtT,EAAAsT,KACA,sBAAAA,EACA,WAAArP,EAAAqP,EAAAyN,KAAA/gB,IAEK,MAAA2lI,GACL,WAAA1hI,EAAA,SAAA6/E,EAAA8hD,GACAA,EAAAD,KAIA,OAAAT,EAAAllI,IAGAiE,EAAAqwC,IAAA,SAAAi4C,GACA,IAAA5oF,EAAApE,MAAAW,UAAAC,MAAAC,KAAAmsF,GAEA,WAAAtoF,EAAA,SAAA6/E,EAAA8hD,GACA,OAAAjiI,EAAAnN,OAAA,OAAAstF,MACA,IAAA+hD,EAAAliI,EAAAnN,OACA,SAAAsvI,EAAAjxI,EAAAojD,GACA,GAAAA,IAAA,iBAAAA,GAAA,mBAAAA,GAAA,CACA,GAAAA,aAAAh0C,GAAAg0C,EAAA3kC,OAAArP,EAAA/D,UAAAoT,KAAA,CACA,SAAA2kC,EAAAwtF,KACAxtF,IAAAytF,IAEA,WAAAztF,EAAAwtF,IAAAK,EAAAjxI,EAAAojD,EAAAytF,MACA,IAAAztF,EAAAwtF,KAAAG,EAAA3tF,EAAAytF,UACAztF,EAAA3kC,KAAA,SAAA2kC,GACA6tF,EAAAjxI,EAAAojD,IACW2tF,IAGX,IAAAtyH,EAAA2kC,EAAA3kC,KACA,sBAAAA,EAKA,YAJA,IAAArP,EAAAqP,EAAAyN,KAAAk3B,IACA3kC,KAAA,SAAA2kC,GACA6tF,EAAAjxI,EAAAojD,IACa2tF,GAKbjiI,EAAA9O,GAAAojD,EACA,KAAA4tF,GACA/hD,EAAAngF,GAGA,QAAA9O,EAAA,EAAmBA,EAAA8O,EAAAnN,OAAiB3B,IACpCixI,EAAAjxI,EAAA8O,EAAA9O,OAKAoP,EAAA2hI,OAAA,SAAA5lI,GACA,WAAAiE,EAAA,SAAA6/E,EAAA8hD,GACAA,EAAA5lI,MAIAiE,EAAA8hI,KAAA,SAAAjyD,GACA,WAAA7vE,EAAA,SAAA6/E,EAAA8hD,GACA9xD,EAAApsE,QAAA,SAAA1H,GACAiE,EAAA6/E,QAAA9jF,GAAAsT,KAAAwwE,EAAA8hD,QAOA3hI,EAAA/D,UAAA,eAAA8lI,GACA,OAAAzkI,KAAA+R,KAAA,KAAA0yH,wCCvGA,SAAAC,IAEA,GACA,oBAAAplG,gCACA,mBAAAA,+BAAAolG,SAcA,IAEAplG,+BAAAolG,YACG,MAAAjgG,GAGHnkC,QAAAu0B,MAAA4P,IAOAigG,GACArlI,EAAAC,QAAmBnO,EAAQ,8BClC3BkO,EAAAC,QAAiBnO,EAAAygC,EAAuB,qNCUlC+yG,mBAEJ,SAAAA,EAAY7kI,gGAAMC,CAAAC,KAAA2kI,GAAA,IAAA1kI,mKAAAC,CAAAF,KAChBG,EAAAtB,KAAAmB,KAAMF,IADU,OAAAG,EAmGlB2kI,YAAc,SAAC7jI,GAAS,IACd+gB,EAAa7hB,EAAKH,MAAlBgiB,SAEJ+iH,YAAe/iH,GACfgjH,KACA9mI,MAAMgI,QAAQ6+H,IAChBA,EAAS3mI,IAAI,SAAA6mI,GACX,OAAQA,EAAQjlI,MAAMvC,MAEpB,IAAK,OACH,OAAOunI,EAAa9wI,MAClBglB,GAAMve,KAAK6M,SAASvI,SAAS,IAAIimI,OAAO,EAAG,GAC3CznI,KAAOwnI,EAAQjlI,MAAMvC,KACrBmE,MAAQqjI,EAAQjlI,MAAM4B,MAAQqjI,EAAQjlI,MAAM4B,MAAQ,GACpDC,IAAMojI,EAAQjlI,MAAM6B,IAAMojI,EAAQjlI,MAAM6B,IAAM,GAC9CW,KAAOyiI,EAAQjlI,MAAMwC,KAAOyiI,EAAQjlI,MAAMwC,KAAO,GACjDC,IAAMwiI,EAAQjlI,MAAMyC,IAAMwiI,EAAQjlI,MAAMyC,IAAM,KAElD,IAAK,SACH,OAAOuiI,EAAa9wI,MAClBglB,GAAMve,KAAK6M,SAASvI,SAAS,IAAIimI,OAAO,EAAG,GAC3CtjI,MAAQqjI,EAAQjlI,MAAM4B,MAAQqjI,EAAQjlI,MAAM4B,MAAQ,GACpDC,IAAMojI,EAAQjlI,MAAM6B,IAAMojI,EAAQjlI,MAAM6B,IAAM,GAC9CsjI,SAAYF,EAAQjlI,MAAMmlI,SAAWF,EAAQjlI,MAAMmlI,SAAW,aAC9DC,kBAAqBH,EAAQjlI,MAAMqlI,QAAUJ,EAAQjlI,MAAMqlI,QAAUllI,EAAKmlI,eAC1EC,kBAAqBN,EAAQjlI,MAAMwlI,WAAaP,EAAQjlI,MAAMwlI,cAC9DC,iBAAoBR,EAAQjlI,MAAMoC,YAAc6iI,EAAQjlI,MAAMoC,YAAcjC,EAAKulI,mBACjFC,iBAAoBV,EAAQjlI,MAAMuC,eAAiB0iI,EAAQjlI,MAAMuC,gBAAmBrM,KAAK,UAE7F,QACE,YAMR,IAAI0vI,GACFnoI,KAAM,kBACNklI,SAAUxiI,EAAKH,MAAM6lI,MACrBhkI,IAAM1B,EAAKH,MAAM6B,IACjBD,MAAOzB,EAAKH,MAAM4B,MAClBE,KAAM3B,EAAKH,MAAM8B,KACjBC,QAAS5B,EAAKH,MAAM+B,QACpBC,QAAS7B,EAAKH,MAAMgC,QACpB8jI,SAAU3lI,EAAKH,MAAM8lI,SACrBC,SAAU5lI,EAAKH,MAAM+lI,SACrBC,OAAQ7lI,EAAKH,MAAMgmI,OACnBC,OAAQ9lI,EAAKH,MAAMimI,OACnBC,WAAY/lI,EAAKH,MAAMkmI,WACvBC,QAAShmI,EAAKH,MAAMmmI,QACpBC,QAASjmI,EAAKH,MAAMomI,QACpBC,aAAalmI,EAAKH,MAAMqmI,aACxBC,cAAcnmI,EAAKH,MAAMsmI,cACzBC,OAAQpmI,EAAKH,MAAMumI,OACnB1lI,MAAQV,EAAKH,MAAMa,MACnB6hI,SAAUviI,EAAKH,MAAM0iI,SACrB8D,uBAAwBrmI,EAAKH,MAAMwmI,uBACnChE,aAAcriI,EAAKH,MAAMwiI,aACzBiE,aAActmI,EAAKH,MAAMymI,aACzBvkI,UAAW/B,EAAKH,MAAMkC,UACtBwkI,UAAWvmI,EAAKH,MAAM0mI,UACtBjE,mBAAoBtiI,EAAKH,MAAMyiI,mBAC/BkE,aAAaxmI,EAAKH,MAAM2mI,aACxB1kI,aAAc9B,EAAKH,MAAM4mI,aACzBC,SAAU7B,GAGZ1mI,OAAOC,KAAKqnI,GAAYv/H,QAAQ,SAAC5H,GAAD,MAA8B,KAApBmnI,EAAWnnI,WAAuBmnI,EAAWnnI,KAEzE,WAAVwC,GAEFd,EAAKwiI,SAASmE,UACd3mI,EAAKwiI,SAAWP,UAAUU,OAAO3iI,EAAKH,MAAMkZ,GAAK/Y,EAAKH,MAAMkZ,GAAK/Y,EAAKc,MAAMiY,GAAI0sH,GAChFzlI,EAAKwiI,SAASjnF,GAAG,OAASv7C,EAAKH,MAAM+mI,QACrC5mI,EAAKwiI,SAASjnF,GAAG,cAAgBv7C,EAAKH,MAAMgnI,eAC5C7mI,EAAKwiI,SAASjnF,GAAG,sBAAwBv7C,EAAKH,MAAMinI,uBACpD9mI,EAAKwiI,SAASjnF,GAAG,QAAUv7C,EAAKH,MAAMwE,SACtCrE,EAAKwiI,SAASjnF,GAAG,eAAiBv7C,EAAKH,MAAMknI,gBAC7C/mI,EAAKwiI,SAASjnF,GAAG,YAAcv7C,EAAKH,MAAMmnI,aAC1ChnI,EAAKwiI,SAASjnF,GAAG,UAAYv7C,EAAKH,MAAMonI,WACxCjnI,EAAKwiI,SAASjnF,GAAG,aAAev7C,EAAKH,MAAMqnI,cAC3ClnI,EAAKwiI,SAASjnF,GAAG,WAAav7C,EAAKH,MAAMsnI,cAGzCnnI,EAAKwiI,SAAWP,UAAUU,OAAO3iI,EAAKH,MAAMkZ,GAAK/Y,EAAKH,MAAMkZ,GAAK/Y,EAAKc,MAAMiY,GAAI0sH,GAEhFzlI,EAAKwiI,SAASjnF,GAAG,OAASv7C,EAAKH,MAAM+mI,QACrC5mI,EAAKwiI,SAASjnF,GAAG,cAAgBv7C,EAAKH,MAAMgnI,eAC5C7mI,EAAKwiI,SAASjnF,GAAG,sBAAwBv7C,EAAKH,MAAMinI,uBACpD9mI,EAAKwiI,SAASjnF,GAAG,QAAUv7C,EAAKH,MAAMwE,SACtCrE,EAAKwiI,SAASjnF,GAAG,eAAiBv7C,EAAKH,MAAMknI,gBAC7C/mI,EAAKwiI,SAASjnF,GAAG,YAAcv7C,EAAKH,MAAMmnI,aAC1ChnI,EAAKwiI,SAASjnF,GAAG,UAAYv7C,EAAKH,MAAMonI,WACxCjnI,EAAKwiI,SAASjnF,GAAG,aAAev7C,EAAKH,MAAMqnI,cAC3ClnI,EAAKwiI,SAASjnF,GAAG,WAAav7C,EAAKH,MAAMsnI,cAjM3BnnI,EAqMlBgxB,kBAAoB,WAClBhxB,EAAK2kI,YAAY,UAtMD3kI,EA6MlBulI,mBAAqB,SAACjiI,EAAInB,GACxB9B,QAAQC,IAAI,kBAAoB6B,EAAKpM,OA9MrBiK,EAiNlBmlI,eAAiB,SAACiC,EAAYjlI,GAC5BilI,EAAW53H,aAAa,KAAM,YAC9B,IAAM63H,EAAO9+H,SAASpH,cAAc,OACpCkmI,EAAKrwF,UAAUjhB,IAAI,WACnB,IAAMuxG,EAAS/+H,SAASpH,cAAc,OACtCmmI,EAAOtwF,UAAUjhB,IAAI,OACrB,IAAMwxG,EAAQh/H,SAASpH,cAAc,OACrComI,EAAMvwF,UAAUjhB,IAAI,MACHxtB,SAASpH,cAAc,OAC/B61C,UAAUjhB,IAAI,SACvBqxG,EAAW3jH,YAAY4jH,GACvBA,EAAK5jH,YAAY8jH,GACjBF,EAAK5jH,YAAY6jH,IA7NDtnI,EAgOlBwnI,UAAY,WACV,OAAOxnI,EAAKwiI,UA/NZxiI,EAAKc,OACHiY,GAAIve,KAAK6M,SAASvI,SAAS,IAAIimI,OAAO,EAAG,IAH3B/kI,oVAyMlBwzB,4BAAoBi0G,GAClB1nI,KAAK4kI,YAAY,uBA0BnB5jI,kBAAS,IAAAC,EAAAjB,KAAA2nI,EACiB3nI,KAAKF,MACzB8nI,GACFl1I,MAHKi1I,EACDj1I,MAGJC,OAJKg1I,EACMh1I,QAKb,OACEk1I,EAAA1mI,EAAAC,cAAA,OACE4X,GAAIhZ,KAAKF,MAAMkZ,GAAKhZ,KAAKF,MAAMkZ,GAAKhZ,KAAKe,MAAMiY,GAC/C9P,MAAO0+H,EACPh9G,IAAK,SAAAxK,GAAA,OAAQnf,EAAK6mI,UAAY1nH,SAhPd3d,eASfslI,WACLjmH,SAAUimH,IAAUC,WAClBD,IAAUE,QAAQF,IAAU3nH,MAC5B2nH,IAAU3nH,OAEZpH,GAAI+uH,IAAU5nF,OACdztD,MAAOq1I,IAAU5nF,OACjBxtD,OAAQo1I,IAAU5nF,OAClBwlF,MAAOoC,IAAU5nF,OACjBx+C,IAAMomI,IAAUr5H,OAChBhN,MAAOqmI,IAAUr5H,OACjB9M,KAAMmmI,IAAUr5H,OAChB7M,QAASkmI,IAAUr5H,OACnB5M,QAASimI,IAAUr5H,OACnBk3H,SAAUmC,IAAUr5H,OACpBm3H,SAAUkC,IAAUr5H,OACpBo3H,OAAQiC,IAAUr5H,OAClBq3H,OAAQgC,IAAUr5H,OAClBs3H,WAAY+B,IAAUr5H,OACtBu3H,QAAS8B,IAAU5hE,KACnB+/D,QAAS6B,IAAU5nF,OACnBgmF,aAAc4B,IAAU5nF,OACxBimF,cAAe2B,IAAU5nF,OACzBx/C,MAAQonI,IAAU5nF,OAClBkmF,OAAQ0B,IAAU5nF,OAClBqiF,SAAUuF,IAAU5hE,KACpBmgE,uBAAwByB,IAAU5hE,KAClCm8D,aAAcyF,IAAU5hE,KACxBogE,aAAcwB,IAAU5hE,KACxBnkE,UAAW+lI,IAAU5hE,KACrBqgE,UAAWuB,IAAU5hE,KACrBo8D,mBAAoBwF,IAAU5hE,KAC9BsgE,aAAcsB,IAAU5hE,KACxB0gE,OAAQkB,IAAU7rF,KAClB4qF,cAAeiB,IAAU7rF,KACzB6qF,sBAAuBgB,IAAU7rF,KACjC53C,QAASyjI,IAAU7rF,KACnB8qF,eAAgBe,IAAU7rF,KAC1B+qF,YAAac,IAAU7rF,KACvBgrF,UAAWa,IAAU7rF,KACrBirF,aAAcY,IAAU7rF,KACxBkrF,WAAYW,IAAU7rF,KACtBwqF,aAAcqB,IAAU5hE,KACxBg/D,QAAS4C,IAAU7rF,KACnBopF,WAAYyC,IAAUjzF,OACtB5yC,YAAY6lI,IAAU7rF,KACtB75C,eAAgB0lI,IAAUjzF,OAC1BmwF,SAAU8C,IAAU5nF,UAIfrsB,cACLhS,YACApvB,MAAO,OACPC,OAAQ,QACRgzI,MAAM,GACNhkI,IAAM,EACND,MAAO,EACPE,KAAM,IACNC,QAAS,GACTC,QAAS,IACT8jI,UAAW,GACXC,SAAU,GACVC,QAAS,IACTC,OAAQ,IACRC,WAAY,EACZC,SAAS,EACTC,QAAS,GACTC,aAAc,GACdC,cAAe,GACfzlI,MAAQ,GACR0lI,OAAQ,GACR7D,UAAU,EACV8D,wBAAwB,EACxBhE,cAAc,EACdiE,cAAc,EACdvkI,WAAW,EACXwkI,WAAW,EACXjE,oBAAoB,EACpBkE,cAAc,EACdI,OAAQ,aACRC,cAAe,aACfC,sBAAuB,aACvBziI,QAAS,aACT0iI,eAAgB,aAChBC,YAAa,aACbC,UAAW,aACXC,aAAc,aACdC,WAAY,aACZV,cAAc,MAmJlB/B,EAAU1iI,QAAU,aACpB0iI,EAAU1iI,QAAU,aACL0iI,yCC/Pf,IAAAuD,EAAiB/2I,EAAQ,QAEzBg3I,EAAA/pI,OAAAO,UAAAI,SACAmG,EAAA9G,OAAAO,UAAAuG,eAwDA7F,EAAAC,QAnBA,SAAAsvD,EAAAl9C,EAAA02H,GACA,IAAAF,EAAAx2H,GACA,UAAAuiC,UAAA,+BAGA,IAAAqrF,EACAn8H,UAAAlO,QAAA,IACAqqI,EAAA8I,GAGA,mBAAAD,EAAAtpI,KAAA+vD,GA7CA,SAAAtnB,EAAA51B,EAAA4tH,GACA,QAAAhsI,EAAA,EAAA+0I,EAAA/gG,EAAAryC,OAAuC3B,EAAA+0I,EAAS/0I,IAChD4R,EAAArG,KAAAyoC,EAAAh0C,KACA,MAAAgsI,EACA5tH,EAAA41B,EAAAh0C,KAAAg0C,GAEA51B,EAAA7S,KAAAygI,EAAAh4F,EAAAh0C,KAAAg0C,IAwCAC,CAAAqnB,EAAAl9C,EAAA4tH,GACK,iBAAA1wE,EAnCL,SAAAzO,EAAAzuC,EAAA4tH,GACA,QAAAhsI,EAAA,EAAA+0I,EAAAloF,EAAAlrD,OAAwC3B,EAAA+0I,EAAS/0I,IAEjD,MAAAgsI,EACA5tH,EAAAyuC,EAAAp5B,OAAAzzB,KAAA6sD,GAEAzuC,EAAA7S,KAAAygI,EAAAn/E,EAAAp5B,OAAAzzB,KAAA6sD,GA8BAmoF,CAAA15E,EAAAl9C,EAAA4tH,GAzBA,SAAAxqF,EAAApjC,EAAA4tH,GACA,QAAA17H,KAAAkxC,EACA5vC,EAAArG,KAAAi2C,EAAAlxC,KACA,MAAA07H,EACA5tH,EAAAojC,EAAAlxC,KAAAkxC,GAEApjC,EAAA7S,KAAAygI,EAAAxqF,EAAAlxC,KAAAkxC,IAqBAyzF,CAAA35E,EAAAl9C,EAAA4tH,uCChDA,IAAAkJ,EAA2Br3I,EAAQ,QAEnC,SAAAs3I,KAEAppI,EAAAC,QAAA,WACA,SAAAopI,EAAA5oI,EAAA22C,EAAA52C,EAAAwd,EAAAsrH,EAAAC,GACA,GAAAA,IAAAJ,EAAA,CAIA,IAAA/jG,EAAA,IAAA9gC,MACA,mLAKA,MADA8gC,EAAAzuC,KAAA,sBACAyuC,GAGA,SAAAokG,IACA,OAAAH,EAFAA,EAAAI,WAAAJ,EAMA,IAAAK,GACAzhG,MAAAohG,EACAviE,KAAAuiE,EACAxsF,KAAAwsF,EACAh6H,OAAAg6H,EACA5zF,OAAA4zF,EACAvoF,OAAAuoF,EACAM,OAAAN,EAEAO,IAAAP,EACAT,QAAAY,EACA10G,QAAAu0G,EACAQ,WAAAL,EACAzoH,KAAAsoH,EACAS,SAAAN,EACAO,MAAAP,EACAb,UAAAa,EACAQ,MAAAR,EACAS,MAAAT,GAMA,OAHAE,EAAAQ,eAAAd,EACAM,EAAAS,UAAAT,EAEAA,wBCxDAzpI,EAAAD,EAAAC,QAEA,SAAAo2C,GACA,OAAAA,EAAA5xC,QAAA,mBAGAy3B,KAAA,SAAAma,GACA,OAAAA,EAAA5xC,QAAA,YAGAxE,EAAA6nE,MAAA,SAAAzxB,GACA,OAAAA,EAAA5xC,QAAA,gCCZAzE,EAAAC,QAIA,SAAAszC,GACA,IAAAuN,EAAAphD,EAAAF,KAAA+zC,GACA,4BAAAuN,GACA,mBAAAvN,GAAA,oBAAAuN,GACA,oBAAAv9C,SAEAgwC,IAAAhwC,OAAAkyB,YACA8d,IAAAhwC,OAAA6mI,OACA72F,IAAAhwC,OAAA8mI,SACA92F,IAAAhwC,OAAA+mI,SAXA,IAAA5qI,EAAAX,OAAAO,UAAAI,4CCFA5N,EAAAkS,EAAAs8H,EAAA,sBAAAiK,IAmCA,SAAAA,EAAAxZ,GACA,OAAAA,EAAAn9H,SAAA,EAAAm9H,EAAA79H,WAAA69H,IAAA79H,WAAA,wCC9BA,IA6EAi+C,EA5EAvC,EAAW98C,EAAQ,QACnB83C,EAAgB93C,EAAQ,QAGxB4yG,EAAA,SAAArlG,EAAAyiB,EAAA3jB,GACA,IAAAlK,EAAAC,EAAA,GACA,IAAAD,EAAA6tB,EAAmB7tB,EAAAkK,EAASlK,IAC5BC,GAAA,UAAAmL,EAAApL,GAAAyL,SAAA,KAAAH,OAAA,GAEA,OAAArL,GAIAywG,EAAA,SAAAtlG,EAAAyiB,EAAA3jB,GACA,OAAArH,mBAAA4tG,EAAArlG,EAAAyiB,EAAA3jB,KAOAymG,EAAA,SAAA/xG,GACA,OAAAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,IAEAgyG,GACAC,KAAA,SAAAnvG,GACA,IAAA1B,EACA,OAAA0B,EAAA9C,KAAA,IAKA,IAAAoB,EAAA,EAAiBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACtC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAq2D,YAAA24C,EAAAhvG,EAAA9C,KAAA,EAAAoB,GAEA0B,EAAAyJ,MAAAulG,EAAAhvG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QAAA6O,QAAA,WACA,MAGA9O,EAAA9C,KAAA8C,EAAAyJ,QAEA2lG,KAAA,SAAApvG,GACA,IAAA1B,EACA,OAAA0B,EAAA9C,KAAA,GAKA,IAAAoB,EAAA,EAAiBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACtC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAq2D,YAAA24C,EAAAhvG,EAAA9C,KAAA,EAAAoB,GACA0B,EAAAga,IAAAg1F,EAAAhvG,EAAA9C,KAAAoB,EAAA,EAAA0B,EAAA9C,KAAA+C,QACA,QAIAovG,KAAA,SAAArvG,GACA,IAAA1B,EA7CAoL,EA+CA,IAAApL,EAAA,EAAiBA,EAAA0B,EAAA9C,KAAA+C,OAAqB3B,IACtC,OAAA0B,EAAA9C,KAAAoB,GAAA,CAEA0B,EAAAsvG,OAlDA5lG,EAkDA1J,EAAA9C,KAjDAqyG,SAAAR,EAAArlG,EAiDA,EAAApL,KACA,MAGA0B,EAAAu/F,YAAAv/F,EAAA9C,KAAAe,SAAAK,EAAA,GACA0B,EAAA9C,KAAA8C,EAAAu/F,eAKA/jD,EAAA,SAAAtuB,GACA,IAeA5uB,EAdAogE,GACAzgB,SAAA/wB,MAAA+wB,OAKAwhC,WAAAvyD,KAAAuyD,YAGA+vB,EAAA,EAEAnyG,KAEAyC,EAAA,EAQA,GALA07C,EAAA7xC,UAAA6hC,KAAA3hC,KAAAmB,MAIAA,KAAAykG,aAAAx7D,EAAAkG,qBAAApwC,SAAA,IACA20D,EAAA+gB,WACA,IAAAnhF,EAAA,EAAeA,EAAAogE,EAAA+gB,WAAAx/E,OAAgC3B,IAC/C0M,KAAAykG,eAAA,KAAA/wC,EAAA+gB,WAAAnhF,GAAAyL,SAAA,KAAAH,OAAA,GAIAoB,KAAAhM,KAAA,SAAA0wG,GACA,IAAA1vG,EAAA2vG,EAAAt5D,EAAAhB,EAAA/2C,EACA,sBAAAoxG,EAAAnnG,KAaA,GANAmnG,EAAAz0D,yBACAn7C,EAAA,EACAzC,EAAA4C,OAAA,GAIA,IAAA5C,EAAA4C,SACAyvG,EAAAxyG,KAAA+C,OAAA,IACAyvG,EAAAxyG,KAAA,SAAAqwC,WAAA,IACAmiE,EAAAxyG,KAAA,SAAAqwC,WAAA,IACAmiE,EAAAxyG,KAAA,SAAAqwC,WAAA,IACAmxB,EAAAzgB,OAEA3yC,QAAAC,IAAA,8CAwBA,GAjBAlO,EAAA2B,KAAA0wG,GACA5vG,GAAA4vG,EAAAxyG,KAAAK,WAGA,IAAAF,EAAA4C,SAKAuvG,EAAAP,EAAAS,EAAAxyG,KAAAe,SAAA,OAIAuxG,GAAA,MAIA1vG,EAAA0vG,GAAA,CAWA,IANAxvG,GACA9C,KAAA,IAAA+B,WAAAuwG,GACAlQ,UACAzoD,IAAAx5C,EAAA,GAAAw5C,IACAD,IAAAv5C,EAAA,GAAAu5C,KAEAt4C,EAAA,EAAeA,EAAAkxG,GACfxvG,EAAA9C,KAAA6d,IAAA1d,EAAA,GAAAH,KAAAe,SAAA,EAAAuxG,EAAAlxG,MACAA,GAAAjB,EAAA,GAAAH,KAAAK,WACAuC,GAAAzC,EAAA,GAAAH,KAAAK,WACAF,EAAAo4C,QAIAk6D,EAAA,GACA,GAAA3vG,EAAA9C,KAAA,KAEAyyG,GAAA,EACAA,GAAAV,EAAAjvG,EAAA9C,KAAAe,SAAA,QAGAuxG,GAAAP,EAAAjvG,EAAA9C,KAAAe,SAAA,SAKA,GAGA,IADAo4C,EAAA44D,EAAAjvG,EAAA9C,KAAAe,SAAA0xG,EAAA,EAAAA,EAAA,KACA,EAEA,OAAArkG,QAAAC,IAAA,+DAaA,IALA8pC,GACArxB,GAPA/iB,OAAAC,aAAAlB,EAAA9C,KAAAyyG,GACA3vG,EAAA9C,KAAAyyG,EAAA,GACA3vG,EAAA9C,KAAAyyG,EAAA,GACA3vG,EAAA9C,KAAAyyG,EAAA,IAKAzyG,KAAA8C,EAAA9C,KAAAe,SAAA0xG,EAAA,GAAAA,EAAAt5D,EAAA,MAEA9sC,IAAA8rC,EAAArxB,GACAkrF,EAAA75D,EAAArxB,MACAkrF,EAAA75D,EAAArxB,IAAAqxB,GAIA,iDAAAA,EAAAi6D,OAAA,CACA,IACAjhG,EAAAgnC,EAAAn4C,KACA8K,GAAA,EAAAqG,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,MACAA,EAAA,OAEArG,GAAA,EACAA,GAAA,EAAAqG,EAAA,GACAgnC,EAAAh/B,UAAArO,OAKA4mC,IAAA5uC,EAAA62C,UAAAjI,IAAA5uC,EAAA42C,MACA52C,EAAA62C,IAAAxB,EAAAh/B,UACArW,EAAA42C,IAAAvB,EAAAh/B,WAEArL,KAAAuuC,QAAA,YAAAlE,GAGAr1C,EAAAs/F,OAAAtgG,KAAAq2C,GAEAs6D,GAAA,GACAA,GAAAt5D,QACKs5D,EAAAH,GACLxkG,KAAAuuC,QAAA,OAAAv5C,OAGA2J,UAAA,IAAAsvC,EAEA5uC,EAAAC,QAAAkxC,sBCnPAnxC,EAAAC,SACA+gC,WALA,SAAA5hC,GACA,OAAAA,IAAA,4DCDA,IAAAorI,EAAA14I,EAAA,QAAA+P,EAAA/P,EAAA4R,EAAA8mI,GAEelK,EAAA,aACb,OACEz+H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KACEowD,KAAK,IACLnwD,UAAU,sBAFZ,oDCUR,IAAAyoI,EAAA,OACAC,GACAhJ,GAAA,EACAiJ,GAAA,EACAC,GAAA,GAEAC,GACA/oH,MAAA,EACAsnF,OAAA,EACAjrG,IAAA,EACA+9B,KAAA,EACA4rC,MAAA,GAWA,SAAAgjE,EAAA1rI,GACA,uBAAAA,MAGAyrI,EAAAzrI,EAAAiK,gBACAjK,EAAAiK,eAGA,SAAA6rD,EAAAp0B,EAAA8pB,EAAA3nD,GASAtC,KAAAoqI,cAAA,EAOA,IAAAC,EAAA,GACAC,GAAA,EACAC,EAAApqG,EACAqqG,EAAAvgF,EACAwgF,EAAAnoI,EACAooI,EAAA,KACAC,EAAA,GACAC,GAAA,EACAC,EAAA,OACAC,EAAA,QACAC,EAAA,GACAC,EAAA,SACAC,EAAA,GACAC,EAAA,SAEA9sI,OAAA61D,iBAAAj0D,MACAgZ,IACA9I,YAAA,EACAJ,IAAA,WACA,OAAAu6H,GAEAt6H,IAAA,SAAAtR,GACA4rI,EAAA,GAAA5rI,IAIA0sI,aACAj7H,YAAA,EACAJ,IAAA,WACA,OAAAw6H,GAEAv6H,IAAA,SAAAtR,GACA6rI,IAAA7rI,IAIA0hC,WACAjwB,YAAA,EACAJ,IAAA,WACA,OAAAy6H,GAEAx6H,IAAA,SAAAtR,GACA,oBAAAA,EACA,UAAAw1C,UAAA,uCAEAs2F,EAAA9rI,EACAuB,KAAAoqI,cAAA,IAIAngF,SACA/5C,YAAA,EACAJ,IAAA,WACA,OAAA06H,GAEAz6H,IAAA,SAAAtR,GACA,oBAAAA,EACA,UAAAw1C,UAAA,qCAEAu2F,EAAA/rI,EACAuB,KAAAoqI,cAAA,IAIA9nI,MACA4N,YAAA,EACAJ,IAAA,WACA,OAAA26H,GAEA16H,IAAA,SAAAtR,GACAgsI,EAAA,GAAAhsI,EACAuB,KAAAoqI,cAAA,IAIAgB,QACAl7H,YAAA,EACAJ,IAAA,WACA,OAAA46H,GAEA36H,IAAA,SAAAtR,GACAisI,EAAAjsI,EACAuB,KAAAoqI,cAAA,IAIA/kE,UACAn1D,YAAA,EACAJ,IAAA,WACA,OAAA66H,GAEA56H,IAAA,SAAAtR,GACA,IAAAqjI,EA5HA,SAAArjI,GACA,uBAAAA,KAGAsrI,EAAAtrI,EAAAiK,gBACAjK,EAAAiK,cAuHA2iI,CAAA5sI,GAEA,QAAAqjI,EACA,UAAAE,YAAA,+CAEA2I,EAAA7I,EACA9hI,KAAAoqI,cAAA,IAIAkB,aACAp7H,YAAA,EACAJ,IAAA,WACA,OAAA86H,GAEA76H,IAAA,SAAAtR,GACAmsI,IAAAnsI,EACAuB,KAAAoqI,cAAA,IAIAnrI,MACAiR,YAAA,EACAJ,IAAA,WACA,OAAA+6H,GAEA96H,IAAA,SAAAtR,GACA,oBAAAA,OAAAqrI,EACA,UAAA9H,YAAA,sDAEA6I,EAAApsI,EACAuB,KAAAoqI,cAAA,IAIAmB,WACAr7H,YAAA,EACAJ,IAAA,WACA,OAAAg7H,GAEA/6H,IAAA,SAAAtR,GACA,IAAAqjI,EAAAqI,EAAA1rI,GACA,IAAAqjI,EACA,UAAAE,YAAA,+CAEA8I,EAAAhJ,EACA9hI,KAAAoqI,cAAA,IAIAriG,UACA73B,YAAA,EACAJ,IAAA,WACA,OAAAi7H,GAEAh7H,IAAA,SAAAtR,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAkF,MAAA,uCAEAonI,EAAAtsI,EACAuB,KAAAoqI,cAAA,IAIAoB,eACAt7H,YAAA,EACAJ,IAAA,WACA,OAAAk7H,GAEAj7H,IAAA,SAAAtR,GACA,IAAAqjI,EAAAqI,EAAA1rI,GACA,IAAAqjI,EACA,UAAAE,YAAA,+CAEAgJ,EAAAlJ,EACA9hI,KAAAoqI,cAAA,IAIAptI,MACAkT,YAAA,EACAJ,IAAA,WACA,OAAAm7H,GAEAl7H,IAAA,SAAAtR,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAAkF,MAAA,mCAEAsnI,EAAAxsI,EACAuB,KAAAoqI,cAAA,IAIAn9B,OACA/8F,YAAA,EACAJ,IAAA,WACA,OAAAo7H,GAEAn7H,IAAA,SAAAtR,GACA,IAAAqjI,EAAAqI,EAAA1rI,GACA,IAAAqjI,EACA,UAAAE,YAAA,+CAEAkJ,EAAApJ,EACA9hI,KAAAoqI,cAAA,MAUApqI,KAAAwhE,kBAAA59B,EAOA2wB,EAAA51D,UAAA8sI,aAAA,WAEA,OAAAj5E,OAAAk5E,oBAAA9oI,OAAA5C,KAAAsC,OAGAjD,EAAAC,QAAAi1D,yBCxRA,SAAAjoB,GAAA,IAAA4oD,EAGAA,EADA,oBAAAtyF,OACAA,YACC,IAAA0pC,EACDA,EACC,oBAAAa,KACDA,QAKA9tC,EAAAC,QAAA41F,yDCVA,IAAAxyF,EAAcvR,EAAQ,QAEtBw6I,GACAj3F,eACAT,UACA23F,YAGA/8E,GAAA,EAEA,SAAAxb,IACAwb,GAAA,EACAnsD,EAAAmpI,IAAA,KACAnpI,EAAAopI,IAAA,KA6FA,SAAAC,EAAAl3G,EAAA+5B,GACA,OAAAA,EAAAlM,KAAA,SAAAspF,GACA,OAAAn3G,aAAAm3G,IAnGA1sI,EAAA+zC,UAOA/zC,EAAAqD,OACA,SAAAuf,GACAA,QACA2sC,GAAAxb,IACAwb,GAAA,EACA,IAAA71C,EAAA,EACAizH,EAAA,EACAC,KAkCA,SAAAC,EAAAnzH,IAEAkJ,EAAAkqH,eACAL,EACAG,EAAAlzH,GAAA6b,MACA3S,EAAAmqH,WAAAV,MAGAO,EAAAlzH,GAAAizH,cACA/pH,EAAAiqH,aACAD,EAAAlzH,GAAAszH,QAAA,EACApqH,EAAAiqH,YACAD,EAAAlzH,GAAAizH,UACAC,EAAAlzH,GAAA6b,SAGAq3G,EAAAlzH,GAAAszH,QAAA,EAyBA,SAAAtzH,EAAA6b,GACAv0B,QAAA4yC,KAAA,6CAAAl6B,EAAA,QACA6b,MAAA3G,OAAA2G,IAAA,IACAz1B,MAAA,MAAA+G,QAAA,SAAAlH,GACAqB,QAAA4yC,KAAA,KAAAj0C,KA5BAstI,CACAL,EAAAlzH,GAAAizH,UACAC,EAAAlzH,GAAA6b,SApDAnyB,EAAAmpI,IAAA,SAAA3qD,GAyDA,IAAAloE,EAvDA,IAAAkoE,EAAAgjD,KACAgI,EAAAhrD,EAAAsrD,OAEAN,EAAAhrD,EAAAsrD,KAAAF,QAoDAtzH,EAnDAkoE,EAAAsrD,IAoDAN,EAAAlzH,GAAAszH,SACApqH,EAAAuqH,UACAvqH,EAAAuqH,UAAAP,EAAAlzH,GAAAizH,UAAAC,EAAAlzH,GAAA6b,OACOq3G,EAAAlzH,GAAAmzH,cACP7rI,QAAA4yC,KACA,kCAAAg5F,EAAAlzH,GAAAizH,UAAA,MAEA3rI,QAAA4yC,KACA,gHACAg5F,EAAAlzH,GAAAizH,UAAA,QA3DArnG,aAAAsnG,EAAAhrD,EAAAsrD,KAAA3yG,gBAEAqyG,EAAAhrD,EAAAsrD,OAGA9pI,EAAAopI,IAAA,SAAA5qD,EAAAz8C,GACA,IAAAy8C,EAAAwrD,MACAxrD,EAAAsrD,IAAAxzH,IACAkzH,EAAAhrD,EAAAsrD,MACAP,UAAA,KACAp3G,MAAA4P,EACA5K,QAAA/E,WACAq3G,EAAA3sH,KAAA,KAAA0hE,EAAAsrD,KAKAT,EAAAtnG,EAAAknG,GACA,IACA,KAEAW,QAAA,4BClCA,IAAA1pI,EAAazR,EAAQ,QAErBuhE,EAAArzD,EAAAC,SACAkzD,OAAUrhE,EAAQ,QAClBojE,OAAUpjE,EAAQ,QAClBw7I,UAAax7I,EAAQ,SAGrByR,EAAA8vD,QACA9vD,EAAA4vD,OAAAE,EAAAF,OAEA,IAAAo6E,EAAAl6E,EAAA6B,OACAs4E,EAAAn6E,EAAAi6E,UACAG,EAAAlqI,EAAA2xD,OACAw4E,EAAAnqI,EAAA+pI,UAEAj6E,EAAAg2E,KAAA,WACA9lI,EAAA2xD,OAAAq4E,EACAhqI,EAAA+pI,UAAAE,GAGAn6E,EAAAs6E,QAAA,WACApqI,EAAA2xD,OAAAu4E,EACAlqI,EAAA+pI,UAAAI,GAGAnqI,EAAA2xD,QACA7B,EAAAg2E,sMCtCMuE,ypBAGJjsI,kBACE,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8rI,EAAA,EAAD,MACAhsI,EAAAC,EAAAC,cAAC+rI,EAAA,EAAD,MACAjsI,EAAAC,EAAAC,cAACgsI,EAAA,EAAD,WARW3qI,aAgBnBzB,iBAAOE,EAAAC,EAAAC,cAAC6rI,EAAD,MAAUzkI,SAAS0tC,cAAc,gKCpBnBm3F,cAEnB,SAAAA,EAAYvtI,gGAAMC,CAAAC,KAAAqtI,GAAA,IAAAptI,mKAAAC,CAAAF,KAChBG,EAAAtB,KAAAmB,KAAMF,IADU,OAAAG,EAOhBqtI,iBAAmB,SAACnrI,EAAMC,GACxB9B,QAAQC,IAAI6B,EAAKpM,MACjBiK,EAAKO,UACH+sI,WAAYC,OARhBvtI,EAAKc,OACHwsI,WAAYE,KAHExtI,oVAiBhBe,kBAAS,IAAAC,EAAAjB,KACP,OACEkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACE,EAAA,GACC5O,MAAM,QACNC,OAAO,QACPgzI,MAAO3lI,KAAKe,MAAMwsI,WAClB7rI,MAAO,GACPC,IAAK,IACLC,KAAM,IACN4gI,UAAA,EACA6D,OAAO,GACP1lI,MAAM,GACN2lI,wBAAwB,EACxBE,WAAA,EACAD,cAAA,EACAvkI,WAAA,EACAkkI,QAAQ,GACRE,cAAc,GACdD,aAAa,GACbM,cAAA,EACAlE,oBAAA,EACAD,cAAA,EACAuE,OAAQ,WAAKvmI,QAAQC,IAAI,oBACzBumI,cAAe,SAAC9tH,GAAM1Y,QAAQC,IAAI,uBAAyByY,IAC3D+tH,sBAAuB,WAAKzmI,QAAQC,IAAI,oBACxC+D,QAAS,SAACmgC,GAAOnkC,QAAQC,IAAI,QAAUkkC,IACvCuiG,eAAgB,WAAK1mI,QAAQC,IAAI,kBACjC0mI,YAAa,SAAC9kI,GAAO7B,QAAQC,IAAI,aAAe4B,IAChD+kI,UAAW,SAAC/kI,GAAO7B,QAAQC,IAAI,WAAY4B,IAC3CglI,aAAc,SAAChlI,GAAO7B,QAAQC,IAAI,cAAe4B,IACjDilI,WAAY,SAACjlI,GAAO7B,QAAQC,IAAI,YAAa4B,IAC7CukI,cAAc,GAEdxlI,EAAAC,EAAAC,cAACE,EAAA,EAAUW,SACT1E,KAAK,OACLmE,MAAO,GACPC,KAAM,IACNW,KAAK,sBACLC,IAAI,+BAGNrB,EAAAC,EAAAC,cAACE,EAAA,EAAUW,SACT1E,KAAK,SACLmE,MAAO,GACPC,IAAK,IACLO,YAAa,SAACC,EAAMC,GAAP,OAAgBnB,EAAKqsI,iBAAiBnrI,EAAMC,IACzDC,gBAAkBrM,KAAO,WAI7BkL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMoB,gBAAc,OAApB,u/CA3EuBC,wPCMjCirI,mBAEJ,SAAAA,EAAY5tI,gGAAMC,CAAAC,KAAA0tI,GAAA,IAAAztI,mKAAAC,CAAAF,KAChBG,EAAAtB,KAAAmB,KAAMF,IADU,OAAAG,EA8DlB0tI,YAAc,SAAC5sI,GAAS,IACd+gB,EAAa7hB,EAAKH,MAAlBgiB,SAEJ+iH,YAAe/iH,GACfgjH,KAgCJ,GA/BI9mI,MAAMgI,QAAQ6+H,IAChBA,EAAS3mI,IAAI,SAAA6mI,GACX,OAAQA,EAAQjlI,MAAMvC,MAEpB,IAAK,OACH,OAAOunI,EAAa9wI,MAClBglB,GAAMve,KAAK6M,SAASvI,SAAS,IAAIimI,OAAO,EAAG,GAC3CznI,KAAOwnI,EAAQjlI,MAAMvC,KACrBmE,MAAQqjI,EAAQjlI,MAAM4B,MAAQqjI,EAAQjlI,MAAM4B,MAAQ,GACpDC,IAAMojI,EAAQjlI,MAAM6B,IAAMojI,EAAQjlI,MAAM6B,IAAM,GAC9CW,KAAOyiI,EAAQjlI,MAAMwC,KAAOyiI,EAAQjlI,MAAMwC,KAAO,GACjDC,IAAMwiI,EAAQjlI,MAAMyC,IAAMwiI,EAAQjlI,MAAMyC,IAAM,KAElD,IAAK,SACH,OAAOuiI,EAAa9wI,MAClBglB,GAAMve,KAAK6M,SAASvI,SAAS,IAAIimI,OAAO,EAAG,GAC3CtjI,MAAQqjI,EAAQjlI,MAAM4B,MAAQqjI,EAAQjlI,MAAM4B,MAAQ,GACpDC,IAAMojI,EAAQjlI,MAAM6B,IAAMojI,EAAQjlI,MAAM6B,IAAM,GAC9CsjI,SAAYF,EAAQjlI,MAAMmlI,SAAWF,EAAQjlI,MAAMmlI,SAAW,aAC9DC,kBAAqBH,EAAQjlI,MAAMqlI,QAAUJ,EAAQjlI,MAAMqlI,QAAUllI,EAAKmlI,eAC1EC,kBAAqBN,EAAQjlI,MAAMwlI,WAAaP,EAAQjlI,MAAMwlI,cAC9DC,iBAAoBR,EAAQjlI,MAAMoC,YAAc6iI,EAAQjlI,MAAMoC,YAAcjC,EAAKulI,mBACjFC,iBAAoBV,EAAQjlI,MAAMuC,eAAiB0iI,EAAQjlI,MAAMuC,gBAAmBrM,KAAK,UAE7F,QACE,YAMM,WAAV+K,EAAmB,CAErBd,EAAKsB,MAAQ66C,YAAQn8C,EAAK2tI,WAC1B,IAAIC,YAAgB5tI,EAAKsB,MAAMohI,WAAWmL,YAAYnH,UAetD,OAdA1mI,EAAKsB,MAAMohI,WAAWoL,OAAO9tI,EAAKH,MAAM6B,KACxC1B,EAAKsB,MAAMohI,WAAWqL,SAAS/tI,EAAKH,MAAM4B,OAC1CzB,EAAKsB,MAAMohI,WAAWsL,QAAQhuI,EAAKH,MAAM8B,MACzC3B,EAAKsB,MAAMohI,WAAWuL,eAAejuI,EAAKH,MAAM+B,QAAQ5B,EAAKH,MAAMgC,UAGnE+rI,EAAU3vI,IAAK,SAAAiwI,GAAA,OAAMluI,EAAKsB,MAAMohI,WAAWyL,cAAcD,EAAGn1H,MAE5D8rH,EAAa5mI,IAAK,SAAAiwI,GAAA,OAAMluI,EAAKsB,MAAMohI,WAAW0L,WAAWF,KAEzDluI,EAAKsB,MAAMgpD,KACThtD,KAAM,YACNgtD,IAAKtqD,EAAKH,MAAMyB,QAEXtB,EAAKsB,MAAM++C,OAElBrgD,EAAKsB,MAAQ66C,YAAQn8C,EAAK2tI,WACxBpsI,KAAKvB,EAAKH,MAAM0B,KAChBC,SAASxB,EAAKH,MAAM2B,SACpB4qD,SAASpsD,EAAKH,MAAMusD,SACpB+c,MAAOnpE,EAAKH,MAAMspE,MAClB6S,SACEimD,WACEvgI,IAAM1B,EAAKH,MAAM6B,IACjBD,MAAOzB,EAAKH,MAAM4B,MAClBE,KAAM3B,EAAKH,MAAM8B,KACjBC,QAAS5B,EAAKH,MAAM+B,QACpBC,QAAS7B,EAAKH,MAAMgC,QACpB8jI,SAAU3lI,EAAKH,MAAM8lI,SACrBC,SAAU5lI,EAAKH,MAAM+lI,SACrBC,OAAQ7lI,EAAKH,MAAMgmI,OACnBC,OAAQ9lI,EAAKH,MAAMimI,OACnBhkI,aAAc9B,EAAKH,MAAM4mI,aACzBV,WAAW/lI,EAAKH,MAAMkmI,WACtBhkI,UAAU/B,EAAKH,MAAMkC,UACrB2kI,SAAU7B,MAIhB7kI,EAAKsB,MAAMgpD,KAAMhtD,KAAM,YAAagtD,IAAKtqD,EAAKH,MAAMyB,QACpDtB,EAAKsB,MAAM++C,QA9IGrgD,EAkJlBgxB,kBAAoB,WAClBhxB,EAAK0tI,YAAY,UAnJD1tI,EA8JlBulI,mBAAqB,SAACjiI,EAAInB,GACxB9B,QAAQC,IAAI,kBAAoB6B,EAAKpM,OA/JrBiK,EAmKlBmlI,eAAiB,SAACiC,EAAYjlI,GAC5BilI,EAAW53H,aAAa,KAAM,YAC9B,IAAM63H,EAAO9+H,SAASpH,cAAc,OACpCkmI,EAAKrwF,UAAUjhB,IAAI,WACnB,IAAMuxG,EAAS/+H,SAASpH,cAAc,OACtCmmI,EAAOtwF,UAAUjhB,IAAI,OACrB,IAAMwxG,EAAQh/H,SAASpH,cAAc,OACrComI,EAAMvwF,UAAUjhB,IAAI,MACHxtB,SAASpH,cAAc,OAC/B61C,UAAUjhB,IAAI,SACvBqxG,EAAW3jH,YAAY4jH,GACvBA,EAAK5jH,YAAY8jH,GACjBF,EAAK5jH,YAAY6jH,IA/KDtnI,EAsLlBwnI,UAAY,WACV,OAAOxnI,EAAKsB,MAAMohI,YArLlB1iI,EAAKc,OACHiY,GAAIve,KAAK6M,SAASvI,SAAS,IAAIimI,OAAO,EAAG,IAH3B/kI,oVAsJlBwzB,4BAAoBi0G,GAGlB1nI,KAAK2tI,YAAY,uBAyBnBz4G,gCACEknB,YAAQp8C,KAAK4tI,WAAW1sF,uBAO1BlgD,kBAAS,IAAAC,EAAAjB,KAAA2nI,EACwB3nI,KAAKF,MAA9BpN,EADCi1I,EACDj1I,MAAOC,EADNg1I,EACMh1I,OACTi1I,GAFGD,EACcpmI,OAEnB7O,MAAQA,EACRC,OAASA,IAEX,OAEEk1I,EAAA1mI,EAAAC,cAAA,OAAKktI,mBAAA,GACHzG,EAAA1mI,EAAAC,cAAA,SACE4X,GAAIhZ,KAAKF,MAAMkZ,GAAKhZ,KAAKF,MAAMkZ,GAAKhZ,KAAKe,MAAMiY,GAC/C3X,UAAU,kDACVupB,IAAK,SAAAxK,GAAA,OAAQnf,EAAK2sI,UAAYxtH,GAC9B43D,QAAQ,OACR7kB,YAAY,YACZjqD,MAAO0+H,SA3MYnlI,eASpBslI,WACLjmH,SAAUimH,IAAUC,WAClBD,IAAUE,QAAQF,IAAU3nH,MAC5B2nH,IAAU3nH,OAEZpH,GAAI+uH,IAAU5nF,OACdztD,MAAOq1I,IAAU5nF,OACjBxtD,OAAQo1I,IAAU5nF,OAClB5+C,MAAOwmI,IAAU5nF,OACjBx+C,IAAMomI,IAAUr5H,OAChBhN,MAAOqmI,IAAUr5H,OACjB9M,KAAMmmI,IAAUr5H,OAChB7M,QAASkmI,IAAUr5H,OACnB5M,QAASimI,IAAUr5H,OACnBk3H,SAAUmC,IAAUr5H,OACpBm3H,SAAUkC,IAAUr5H,OACpBo3H,OAAQiC,IAAUr5H,OAClBq3H,OAAQgC,IAAUr5H,OAClBg4H,aAAcqB,IAAU5hE,KACxB6/D,WAAY+B,IAAUr5H,OACtB1M,UAAW+lI,IAAU5hE,KACrB3kE,KAAKumI,IAAU5hE,KACf1kE,SAASsmI,IAAU5hE,KACnB9Z,SAAS07E,IAAU5hE,KACnBiD,MAAM2+D,IAAU5hE,KAChBg/D,QAAS4C,IAAU7rF,KACnBopF,WAAYyC,IAAUjzF,OACtB5yC,YAAY6lI,IAAU7rF,KACtB75C,eAAgB0lI,IAAUjzF,OAC1BmwF,SAAU8C,IAAU5nF,UAGfrsB,cACLhS,YACApvB,MAAO,OACPC,OAAQ,QACR4O,MAAM,GACNI,IAAM,EACND,MAAO,EACPE,KAAM,IACNC,QAAS,GACTC,QAAS,IACT8jI,UAAW,GACXC,SAAU,GACVC,QAAS,IACTC,OAAQ,IACRW,cAAc,EACdV,WAAY,EACZhkI,WAAW,EACXR,MAAK,EACLC,UAAS,EACT4qD,UAAS,EACT+c,OAAO,MAqJIskE,0BC5Mf,IAAAa,EAAAnwI,OAAAi2C,QAAA,WACA,SAAAh1B,KACA,gBAAAqyD,GACA,OAAAvuE,UAAAlO,OACA,UAAA0O,MAAA,kDAGA,OADA0b,EAAA1gB,UAAA+yE,EACA,IAAAryD,GAPA,GAeA,SAAAmvH,EAAAC,EAAAvlF,GACAlpD,KAAAhK,KAAA,eACAgK,KAAAgnC,KAAAynG,EAAAznG,KACAhnC,KAAAkpD,WAAAulF,EAAAvlF,QAkBA,SAAAwlF,EAAAhnH,GAEA,SAAAinH,EAAAjrI,EAAAe,EAAAg/D,EAAAjgE,GACA,eAAAE,GAAA,MAAAe,IAAA,EAAAg/D,IAAA,EAAAjgE,GAAA,IAGA,IAAAiB,EAAAijB,EAAA1oB,MAAA,oCACA,OAAAyF,EAIAA,EAAA,GAEAkqI,EAAAlqI,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAX,QAAA,QAAAW,EAAA,IACGA,EAAA,MAGHkqI,EAAAlqI,EAAA,GAAAA,EAAA,KAAAA,EAAA,IAGAkqI,EAAA,EAAAlqI,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAZA,KAkBA,SAAAmqI,IACA5uI,KAAAuyE,OAAAg8D,EAAA,MAwDA,SAAAM,EAAAnnH,EAAA4F,EAAAwhH,EAAAC,GACA,IAAA7c,EAAA6c,EAAArnH,EAAAtoB,MAAA2vI,IAAArnH,GACA,QAAAp0B,KAAA4+H,EACA,oBAAAA,EAAA5+H,GAAA,CAGA,IAAA07I,EAAA9c,EAAA5+H,GAAA8L,MAAA0vI,GACA,OAAAE,EAAA/5I,OAKAq4B,EAFA0hH,EAAA,GACAA,EAAA,KAKA,SAAAC,EAAAvnH,EAAAsiC,EAAAklF,GAEA,IAAAC,EAAAznH,EAEA,SAAA0nH,IACA,IAAAhmG,EAAAslG,EAAAhnH,GACA,UAAA0hB,EACA,UAAAolG,IAAAa,OAAAC,aACA,wBAAAH,GAIA,OADAznH,IAAA5jB,QAAA,qBACAslC,EAuEA,SAAAmmG,IACA7nH,IAAA5jB,QAAA,WAOA,GAHAyrI,IACAvlF,EAAA7pB,UAAAivG,IACAG,IACA,WAAA7nH,EAAAs9G,OAAA,KACA,UAAAwJ,IAAAa,OAAAC,aACA,qEACAH,GAEAznH,IAAAs9G,OAAA,GACAuK,IACAvlF,EAAAC,QAAAmlF,IAGAG,IArFA,SAAA7nH,EAAAsiC,GACA,IAAA0J,EAAA,IAAAk7E,EAEAC,EAAAnnH,EAAA,SAAA9jB,EAAAhG,GACA,OAAAgG,GACA,aAEA,QAAAtQ,EAAA47I,EAAAj6I,OAAA,EAA2C3B,GAAA,EAAQA,IACnD,GAAA47I,EAAA57I,GAAA0lB,KAAApb,EAAA,CACA81D,EAAA3jD,IAAAnM,EAAAsrI,EAAA57I,GAAA83I,QACA,MAGA,MACA,eACA13E,EAAA87E,IAAA5rI,EAAAhG,GAAA,YACA,MACA,WACA,IAAA6xI,EAAA7xI,EAAAwB,MAAA,KACAswI,EAAAD,EAAA,GACA/7E,EAAAi8E,QAAA/rI,EAAA8rI,GACAh8E,EAAA+S,QAAA7iE,EAAA8rI,IAAAh8E,EAAA3jD,IAAA,kBACA2jD,EAAA87E,IAAA5rI,EAAA8rI,GAAA,SACA,IAAAD,EAAAx6I,QACAy+D,EAAA87E,IAAA,YAAAC,EAAA,6BAEA,MACA,eACAA,EAAA7xI,EAAAwB,MAAA,KACAs0D,EAAA+S,QAAA7iE,EAAA6rI,EAAA,IACA,IAAAA,EAAAx6I,QACAy+D,EAAA87E,IAAA,gBAAAC,EAAA,6BAEA,MACA,WACA/7E,EAAA+S,QAAA7iE,EAAAhG,GACA,MACA,YACA81D,EAAA87E,IAAA5rI,EAAAhG,GAAA,0CAGK,UAGLosD,EAAAohF,OAAA13E,EAAA5jD,IAAA,eACAk6C,EAAAqb,SAAA3R,EAAA5jD,IAAA,eACAk6C,EAAA/qD,KAAAy0D,EAAA5jD,IAAA,eACAk6C,EAAAuhF,UAAA73E,EAAA5jD,IAAA,qBACAk6C,EAAAshF,YAAA53E,EAAA5jD,IAAA,kBACAk6C,EAAAhtD,KAAA02D,EAAA5jD,IAAA,YACAk6C,EAAAijD,MAAAv5C,EAAA5jD,IAAA,kBACAk6C,EAAAjiB,SAAA2rB,EAAA5jD,IAAA,YACAqR,MAAA,EACAoa,KAAA,EACAktE,OAAA,GACAjrG,IAAA,IACA2pE,MAAA,KACKnd,EAAAijD,OACLjjD,EAAAwhF,cAAA93E,EAAA5jD,IAAA,iBACAqR,MAAA,QACAoa,KAAA,QACAktE,OAAA,SACAjrG,IAAA,MACA2pE,MAAA,OACKnd,EAAAijD,OAsBL2iC,CAAAloH,EAAAsiC,GAzNAwkF,EAAA7vI,UAAA4vI,EAAA5qI,MAAAhF,WACA6vI,EAAA7vI,UAAA+H,YAAA8nI,EAGAA,EAAAa,QACAQ,cACA7oG,KAAA,EACAkiB,QAAA,+BAEAomF,cACAtoG,KAAA,EACAkiB,QAAA,0BAmCA0lF,EAAAjwI,WAEAoR,IAAA,SAAAnM,EAAAhG,GACAoC,KAAA8P,IAAAlM,IAAA,KAAAhG,IACAoC,KAAAuyE,OAAA3uE,GAAAhG,IAQAkS,IAAA,SAAAlM,EAAAksI,EAAAC,GACA,OAAAA,EACA/vI,KAAAy3B,IAAA7zB,GAAA5D,KAAAuyE,OAAA3uE,GAAAksI,EAAAC,GAEA/vI,KAAAy3B,IAAA7zB,GAAA5D,KAAAuyE,OAAA3uE,GAAAksI,GAGAr4G,IAAA,SAAA7zB,GACA,OAAAA,KAAA5D,KAAAuyE,QAGAi9D,IAAA,SAAA5rI,EAAAhG,EAAAuD,GACA,QAAA4B,EAAA,EAAmBA,EAAA5B,EAAAlM,SAAc8N,EACjC,GAAAnF,IAAAuD,EAAA4B,GAAA,CACA/C,KAAA+P,IAAAnM,EAAAhG,GACA,QAKA+xI,QAAA,SAAA/rI,EAAAhG,GACA,UAAA6V,KAAA7V,IACAoC,KAAA+P,IAAAnM,EAAAkgD,SAAAlmD,EAAA,MAIA6oE,QAAA,SAAA7iE,EAAAhG,GAEA,SAAAA,EAAAoB,MAAA,8BACApB,EAAA26C,WAAA36C,KACA,GAAAA,GAAA,OACAoC,KAAA+P,IAAAnM,EAAAhG,IACA,KAkIA,IAAAoyI,GACAC,QAAQ,IACRC,OAAO,IACPC,OAAO,IACPC,QAAQ,IACRC,QAAQ,IACRC,SAAS,KAGTC,GACAntI,EAAA,OACA9P,EAAA,IACA4P,EAAA,IACA2uB,EAAA,IACA2+G,KAAA,OACAC,GAAA,KACA7yI,EAAA,OACA8yI,KAAA,QAGAC,GACA/yI,EAAA,QACA8yI,KAAA,QAGAE,GACAH,GAAA,QAIA,SAAAI,EAAAjuI,EAAA8kB,GACA,SAAAopH,IAEA,IAAAppH,EACA,YASA,IALAn0B,EAKAkR,EAAAijB,EAAA1oB,MAAA,uBAGA,OARAzL,EAQAkR,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAPAijB,IAAAs9G,OAAAzxI,EAAA0B,QACA1B,EAUA,SAAAw9I,EAAAxtI,GACA,OAAAysI,EAAAzsI,GAEA,SAAAghG,EAAA9gC,GACA,KAAAh/D,EAAAg/D,EAAAzkE,MAAA,+BACAykE,IAAA3/D,QAAAW,EAAA,GAAAssI,GAEA,OAAAttE,EAGA,SAAAutE,EAAAz3H,EAAA4a,GACA,OAAAy8G,EAAAz8G,EAAA88G,YACAL,EAAAz8G,EAAA88G,aAAA13H,EAAA03H,UAIA,SAAA7vI,EAAA7D,EAAA2zI,GACA,IAAA5hH,EAAAihH,EAAAhzI,GACA,IAAA+xB,EACA,YAEA,IAAA6E,EAAAvxB,EAAA4F,SAAApH,cAAAkuB,GACA6E,EAAA88G,UAAA3hH,EACA,IAAAt5B,EAAA26I,EAAApzI,GAIA,OAHAvH,GAAAk7I,IACA/8G,EAAAn+B,GAAAk7I,EAAArqH,QAEAsN,EAQA,IALA,IAEAlxB,EAFAkuI,EAAAvuI,EAAA4F,SAAApH,cAAA,OACAmY,EAAA43H,EAEAC,KAEA,QAAAnuI,EAAA6tI,MACA,SAAA7tI,EAAA,GA+CAsW,EAAAmK,YAAA9gB,EAAA4F,SAAA2uB,eAAAotE,EAAAthG,SA/CA,CACA,SAAAA,EAAA,IAEAmuI,EAAAn8I,QACAm8I,IAAAn8I,OAAA,KAAAgO,EAAA+hI,OAAA,GAAAlhI,QAAA,UACAstI,EAAA3mI,MACA8O,IAAA7R,YAGA,SAEA,IACA0Y,EADAgpB,EAAAslG,EAAAzrI,EAAA+hI,OAAA,EAAA/hI,EAAAhO,OAAA,IAEA,GAAAm0C,EAAA,CAEAhpB,EAAAxd,EAAA4F,SAAA6oI,4BAAA,YAAAjoG,GACA7vB,EAAAmK,YAAAtD,GACA,SAEA,IAAA3b,EAAAxB,EAAAjE,MAAA,oDAEA,IAAAyF,EACA,SAIA,KADA2b,EAAAhf,EAAAqD,EAAA,GAAAA,EAAA,KAEA,SAIA,IAAAusI,EAAAz3H,EAAA6G,GACA,SAGA3b,EAAA,KACA2b,EAAA/e,UAAAoD,EAAA,GAAAugI,OAAA,GAAAlhI,QAAA,UAIAstI,EAAAp9I,KAAAyQ,EAAA,IACA8U,EAAAmK,YAAAtD,GACA7G,EAAA6G,EAQA,OAAA+wH,EAQA,IAAAG,IAAA,gDACA,4DACA,4DACA,4DACA,4DACA,4DACA,gDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,wDACA,4DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,kEAEA,SAAAC,EAAAt3H,GACA,QAAA3mB,EAAA,EAAiBA,EAAAg+I,EAAAr8I,OAA4B3B,IAAA,CAC7C,IAAA4lI,EAAAoY,EAAAh+I,GACA,GAAA2mB,GAAAi/G,EAAA,IAAAj/G,GAAAi/G,EAAA,GACA,SAIA,SA4EA,SAAAsY,KAoBA,SAAAC,EAAA7uI,EAAAonD,EAAA0nF,GACAF,EAAA3yI,KAAAmB,MACAA,KAAAgqD,MAIAhqD,KAAAuhE,OAAAsvE,EAAAjuI,EAAAonD,EAAA1nD,MACA,IAAAqvI,GACAvjI,MAAA,yBACAszD,gBAAA,qBACA35B,SAAA,WACAxM,KAAA,EACA4rC,MAAA,EACA1rC,IAAA,EACAymC,OAAA,EACA2gE,QAAA,SACA+O,YAAA,KAAA5nF,EAAAqb,SAAA,gBACA,OAAArb,EAAAqb,SAAA,cACA,cACAwsE,YAAA,aAGA7xI,KAAA8xI,YAAAH,EAAA3xI,KAAAuhE,QAKAvhE,KAAA4xD,IAAAhvD,EAAA4F,SAAApH,cAAA,OACAuwI,GACAnuC,UA1HA,SAAAjiC,GACA,IAAAwwE,KACAzvI,EAAA,GAGA,IAAAi/D,MAAA8S,WACA,YAGA,SAAA29D,EAAAD,EAAA3xH,GACA,QAAA9sB,EAAA8sB,EAAAi0D,WAAAp/E,OAAA,EAA4C3B,GAAA,EAAQA,IACpDy+I,EAAA/9I,KAAAosB,EAAAi0D,WAAA/gF,IAIA,SAAA2+I,EAAAF,GACA,IAAAA,MAAA98I,OACA,YAGA,IAAAmrB,EAAA2xH,EAAAtnI,MACAnI,EAAA8d,EAAAtW,aAAAsW,EAAAy2B,UACA,GAAAv0C,EAAA,CAGA,IAAAmC,EAAAnC,EAAAtD,MAAA,cACA,OAAAyF,GACAstI,EAAA98I,OAAA,EACAwP,EAAA,IAEAnC,EAEA,eAAA8d,EAAAkP,QACA2iH,EAAAF,GAEA3xH,EAAAi0D,YACA29D,EAAAD,EAAA3xH,GACA6xH,EAAAF,SAFA,EAOA,IADAC,EAAAD,EAAAxwE,GACAj/D,EAAA2vI,EAAAF,IACA,QAAAz+I,EAAA,EAAmBA,EAAAgP,EAAArN,OAAiB3B,IAEpC,GAAAi+I,EADAjvI,EAAAigC,WAAAjvC,IAEA,YAIA,YAwEA4+I,CAAAlyI,KAAAuhE,QACAqwE,YAAA,KAAA5nF,EAAAqb,SAAA,gBACA,OAAArb,EAAAqb,SAAA,cACA,cACAwsE,YAAA,YACAM,UAAA,WAAAnoF,EAAAijD,MAAA,SAAAjjD,EAAAijD,MACAmlC,KAAAV,EAAAU,KACAC,WAAA,WACAtqG,SAAA,YAGA/nC,KAAA8xI,YAAAH,GACA3xI,KAAA4xD,IAAAluC,YAAA1jB,KAAAuhE,QAKA,IAAA+wE,EAAA,EACA,OAAAtoF,EAAAwhF,eACA,YACA8G,EAAAtoF,EAAAjiB,SACA,MACA,aACAuqG,EAAAtoF,EAAAjiB,SAAAiiB,EAAAhtD,KAAA,EACA,MACA,UACAs1I,EAAAtoF,EAAAjiB,SAAAiiB,EAAAhtD,KAOA,KAAAgtD,EAAAqb,SACArlE,KAAA8xI,aACAv2G,KAAAv7B,KAAAuyI,YAAAD,EAAA,KACA5/I,MAAAsN,KAAAuyI,YAAAvoF,EAAAhtD,KAAA,OAMAgD,KAAA8xI,aACAr2G,IAAAz7B,KAAAuyI,YAAAD,EAAA,KACA3/I,OAAAqN,KAAAuyI,YAAAvoF,EAAAhtD,KAAA,OAIAgD,KAAAwyI,KAAA,SAAA/0I,GACAuC,KAAA8xI,aACAr2G,IAAAz7B,KAAAuyI,YAAA90I,EAAAg+B,IAAA,MACAymC,OAAAliE,KAAAuyI,YAAA90I,EAAAykE,OAAA,MACA3mC,KAAAv7B,KAAAuyI,YAAA90I,EAAA89B,KAAA,MACA4rC,MAAAnnE,KAAAuyI,YAAA90I,EAAA0pE,MAAA,MACAx0E,OAAAqN,KAAAuyI,YAAA90I,EAAA9K,OAAA,MACAD,MAAAsN,KAAAuyI,YAAA90I,EAAA/K,MAAA,SAUA,SAAA+/I,EAAAvrG,GAKA,IAAA5N,EAAA3mC,EAAAD,EAAA+oC,EACA,GAAAyL,EAAA0qB,IAAA,CACAj/D,EAAAu0C,EAAA0qB,IAAAzY,aACAzmD,EAAAw0C,EAAA0qB,IAAA3Y,YACAxd,EAAAyL,EAAA0qB,IAAA8gF,UAEA,IAAAC,KAAAzrG,EAAA0qB,IAAAyiB,cAAAs+D,IAAA,KACAA,EAAAC,gBAAAD,EAAAC,iBACA1rG,IAAA0qB,IAAAvZ,wBAKA/e,EAAAq5G,EAAAl4I,KAAA6+C,IAAAq5F,EAAA,IAAAA,EAAA,GAAAhgJ,QAAA,EAAAu0C,EAAAv0C,OAAAggJ,EAAA19I,QACA,EAGA+K,KAAAu7B,KAAA2L,EAAA3L,KACAv7B,KAAAmnE,MAAAjgC,EAAAigC,MACAnnE,KAAAy7B,IAAAyL,EAAAzL,OACAz7B,KAAArN,OAAAu0C,EAAAv0C,UACAqN,KAAAkiE,OAAAh7B,EAAAg7B,QAAAzmC,GAAAyL,EAAAv0C,WACAqN,KAAAtN,MAAAw0C,EAAAx0C,SACAsN,KAAA2lB,gBAAAie,IAAAtK,IAAA4N,EAAAvhB,WAsHA,SAAAktH,EAAAjwI,EAAAkwI,EAAAC,EAAAC,GAmCA,IAAAC,EAAA,IAAAR,EAAAK,GACA9oF,EAAA8oF,EAAA9oF,IACAkpF,EA7TA,SAAAlpF,GACA,oBAAAA,EAAA/qD,OACA+qD,EAAAshF,aAAAthF,EAAA/qD,MAAA,GAAA+qD,EAAA/qD,MAAA,KACA,OAAA+qD,EAAA/qD,KAEA,IAAA+qD,EAAAhiC,QAAAgiC,EAAAhiC,MAAAmrH,gBACAnpF,EAAAhiC,MAAAmrH,cAAAC,aACA,SAKA,IAHA,IAAAprH,EAAAgiC,EAAAhiC,MACAu4C,EAAAv4C,EAAAmrH,cACAhrG,EAAA,EACA70C,EAAA,EAAiBA,EAAAitE,EAAAtrE,QAAAsrE,EAAAjtE,KAAA00B,EAAgD10B,IACjE,YAAAitE,EAAAjtE,GAAA43B,MACAid,IAGA,WAAAA,EA4SAkrG,CAAArpF,GACAspF,KAGA,GAAAtpF,EAAAshF,YAAA,CACA,IAAAtuI,EACA,OAAAgtD,EAAAqb,UACA,OACAiuE,GAAA,WACAt2I,EAAA,SACA,MACA,SACAs2I,GAAA,WACAt2I,EAAA,QACA,MACA,SACAs2I,GAAA,WACAt2I,EAAA,QAIA,IAAA8yH,EAAAmjB,EAAAttH,WACAoiB,EAAA+nF,EAAAr1H,KAAAq+C,MAAAo6F,GACAK,EAAAR,EAAA/1I,GAAA8yH,EACA0jB,EAAAF,EAAA,GAKA74I,KAAAg5F,IAAA1rD,GAAAwrG,IACAxrG,IAAA,OACAA,GAAAttC,KAAAwtG,KAAAsrC,EAAAzjB,MAOAojB,EAAA,IACAnrG,GAAA,KAAAiiB,EAAAqb,SAAA0tE,EAAApgJ,OAAAogJ,EAAArgJ,MACA4gJ,IAAAtwC,WAKAiwC,EAAAT,KAAAgB,EAAAzrG,OAEG,CAEH,IAAA0rG,EAAAR,EAAAttH,WAAAotH,EAAApgJ,OAAA,IAEA,OAAAq3D,EAAAuhF,WACA,aACA2H,GAAAO,EAAA,EACA,MACA,UACAP,GAAAO,EAKA,OAAAzpF,EAAAqb,UACA,OACAytE,EAAAhB,aACAr2G,IAAAq3G,EAAAP,YAAAW,EAAA,OAEA,MACA,SACAJ,EAAAhB,aACAv2G,KAAAu3G,EAAAP,YAAAW,EAAA,OAEA,MACA,SACAJ,EAAAhB,aACA3qE,MAAA2rE,EAAAP,YAAAW,EAAA,OAKAI,GAAA,qBAIAL,EAAA,IAAAR,EAAAK,GAGA,IAAAY,EApHA,SAAAxwI,EAAAowI,GAKA,IAJA,IAAAI,EACAC,EAAA,IAAAlB,EAAAvvI,GACA4iE,EAAA,EAEAxyE,EAAA,EAAmBA,EAAAggJ,EAAAr+I,OAAiB3B,IAAA,CACpC,KAAA4P,EAAA0wI,qBAAAb,EAAAO,EAAAhgJ,KACA4P,EAAA2wI,OAAAd,IAAA7vI,EAAA4wI,YAAAd,IACA9vI,EAAAsvI,KAAAc,EAAAhgJ,IAIA,GAAA4P,EAAA2wI,OAAAd,GACA,OAAA7vI,EAEA,IAAA0uB,EAAA1uB,EAAA6wI,oBAAAhB,GAGAjtE,EAAAl0C,IACA8hH,EAAA,IAAAjB,EAAAvvI,GACA4iE,EAAAl0C,GAGA1uB,EAAA,IAAAuvI,EAAAkB,GAEA,OAAAD,GAAAC,EA2FAK,CAAAf,EAAAK,GACAR,EAAAN,KAAAkB,EAAAO,kBAAAlB,IAGA,SAAAvgF,KA9XAg/E,EAAA7yI,UAAAmzI,YAAA,SAAAH,EAAA//E,GAEA,QAAAvc,KADAuc,KAAA5xD,KAAA4xD,IACA+/E,EACAA,EAAAzsI,eAAAmwC,KACAuc,EAAA1oD,MAAAmsC,GAAAs8F,EAAAt8F,KAKAm8F,EAAA7yI,UAAA4zI,YAAA,SAAA77F,EAAAw9F,GACA,WAAAx9F,EAAA,EAAAA,EAAAw9F,GA6FAzC,EAAA9yI,UAAA4vI,EAAAiD,EAAA7yI,WACA8yI,EAAA9yI,UAAA+H,YAAA+qI,EAuCAgB,EAAA9zI,UAAA6zI,KAAA,SAAAc,EAAAa,GAEA,OADAA,OAAAvwG,IAAAuwG,IAAAn0I,KAAA2lB,WACA2tH,GACA,SACAtzI,KAAAu7B,MAAA44G,EACAn0I,KAAAmnE,OAAAgtE,EACA,MACA,SACAn0I,KAAAu7B,MAAA44G,EACAn0I,KAAAmnE,OAAAgtE,EACA,MACA,SACAn0I,KAAAy7B,KAAA04G,EACAn0I,KAAAkiE,QAAAiyE,EACA,MACA,SACAn0I,KAAAy7B,KAAA04G,EACAn0I,KAAAkiE,QAAAiyE,IAMA1B,EAAA9zI,UAAAy1I,SAAA,SAAA1lB,GACA,OAAA1uH,KAAAu7B,KAAAmzF,EAAAvnD,OACAnnE,KAAAmnE,MAAAunD,EAAAnzF,MACAv7B,KAAAy7B,IAAAizF,EAAAxsD,QACAliE,KAAAkiE,OAAAwsD,EAAAjzF,KAIAg3G,EAAA9zI,UAAAm1I,YAAA,SAAAp+I,GACA,QAAApC,EAAA,EAAiBA,EAAAoC,EAAAT,OAAkB3B,IACnC,GAAA0M,KAAAo0I,SAAA1+I,EAAApC,IACA,SAGA,UAIAm/I,EAAA9zI,UAAAk1I,OAAA,SAAAjgC,GACA,OAAA5zG,KAAAy7B,KAAAm4E,EAAAn4E,KACAz7B,KAAAkiE,QAAA0xC,EAAA1xC,QACAliE,KAAAu7B,MAAAq4E,EAAAr4E,MACAv7B,KAAAmnE,OAAAysC,EAAAzsC,OAOAsrE,EAAA9zI,UAAAi1I,qBAAA,SAAAhgC,EAAA0/B,GACA,OAAAA,GACA,SACA,OAAAtzI,KAAAu7B,KAAAq4E,EAAAr4E,KACA,SACA,OAAAv7B,KAAAmnE,MAAAysC,EAAAzsC,MACA,SACA,OAAAnnE,KAAAy7B,IAAAm4E,EAAAn4E,IACA,SACA,OAAAz7B,KAAAkiE,OAAA0xC,EAAA1xC,SAMAuwE,EAAA9zI,UAAAo1I,oBAAA,SAAArlB,GAIA,OAHAj0H,KAAA6+C,IAAA,EAAA7+C,KAAAwgC,IAAAj7B,KAAAmnE,MAAAunD,EAAAvnD,OAAA1sE,KAAA6+C,IAAAt5C,KAAAu7B,KAAAmzF,EAAAnzF,OACA9gC,KAAA6+C,IAAA,EAAA7+C,KAAAwgC,IAAAj7B,KAAAkiE,OAAAwsD,EAAAxsD,QAAAznE,KAAA6+C,IAAAt5C,KAAAy7B,IAAAizF,EAAAjzF,OAEAz7B,KAAArN,OAAAqN,KAAAtN,QAOA+/I,EAAA9zI,UAAAs1I,kBAAA,SAAA1wC,GACA,OACA9nE,IAAAz7B,KAAAy7B,IAAA8nE,EAAA9nE,IACAymC,OAAAqhC,EAAArhC,OAAAliE,KAAAkiE,OACA3mC,KAAAv7B,KAAAu7B,KAAAgoE,EAAAhoE,KACA4rC,MAAAo8B,EAAAp8B,MAAAnnE,KAAAmnE,MACAx0E,OAAAqN,KAAArN,OACAD,MAAAsN,KAAAtN,QAMA+/I,EAAA4B,qBAAA,SAAAntG,GACA,IAAAv0C,EAAAu0C,EAAA0qB,IAAA1qB,EAAA0qB,IAAAzY,aAAAjS,EAAA5X,QAAA4X,EAAAiS,aAAA,EACAzmD,EAAAw0C,EAAA0qB,IAAA1qB,EAAA0qB,IAAA3Y,YAAA/R,EAAA5X,QAAA4X,EAAA+R,YAAA,EACAxd,EAAAyL,EAAA0qB,IAAA1qB,EAAA0qB,IAAA8gF,UAAAxrG,EAAA5X,QAAA4X,EAAAwrG,UAAA,EAYA,OAPAn3G,MAHA2L,IAAA0qB,IAAA1qB,EAAA0qB,IAAAvZ,wBACAnR,EAAA5X,QAAA4X,EAAAmR,wBAAAnR,GAEA3L,KACA4rC,MAAAjgC,EAAAigC,MACA1rC,IAAAyL,EAAAzL,OACA9oC,OAAAu0C,EAAAv0C,UACAuvE,OAAAh7B,EAAAg7B,QAAAzmC,GAAAyL,EAAAv0C,WACAD,MAAAw0C,EAAAx0C,WA4IA8/D,EAAAG,cAAA,WACA,OACA2hF,OAAA,SAAApiJ,GACA,IAAAA,EACA,SAEA,oBAAAA,EACA,UAAAyR,MAAA,iCAEA,OAAAxN,mBAAAmN,mBAAApR,OAKAsgE,EAAAk5E,oBAAA,SAAA9oI,EAAA2xI,GACA,OAAA3xI,GAAA2xI,EAGA1D,EAAAjuI,EAAA2xI,GAFA,MAYA/hF,EAAAwO,YAAA,SAAAp+D,EAAAmnD,EAAAyqF,GACA,IAAA5xI,IAAAmnD,IAAAyqF,EACA,YAIA,KAAAA,EAAAt0H,YACAs0H,EAAA/wH,YAAA+wH,EAAAt0H,YAGA,IAAAu0H,EAAA7xI,EAAA4F,SAAApH,cAAA,OAsBA,GArBAqzI,EAAAvrI,MAAA6+B,SAAA,WACA0sG,EAAAvrI,MAAAqyB,KAAA,IACAk5G,EAAAvrI,MAAAi+D,MAAA,IACAstE,EAAAvrI,MAAAuyB,IAAA,IACAg5G,EAAAvrI,MAAAg5D,OAAA,IACAuyE,EAAAvrI,MAAAwrI,OArBA,OAsBAF,EAAA9wH,YAAA+wH,GAKA,SAAA1qF,GACA,QAAAz2D,EAAA,EAAmBA,EAAAy2D,EAAA90D,OAAiB3B,IACpC,GAAAy2D,EAAAz2D,GAAA82I,eAAArgF,EAAAz2D,GAAAkuE,aACA,SAGA,SAIAmzE,CAAA5qF,GAAA,CAOA,IAAAipF,KACAD,EAAAN,EAAA4B,qBAAAI,GAEA/C,GACAU,KAFA33I,KAAAq+C,MAhDA,IAgDAi6F,EAAApgJ,OAAA,SAEA,kBAGA,WAGA,IAFA,IAAAmgJ,EAAA9oF,EAEA12D,EAAA,EAAmBA,EAAAy2D,EAAA90D,OAAiB3B,IACpC02D,EAAAD,EAAAz2D,GAGAw/I,EAAA,IAAArB,EAAA7uI,EAAAonD,EAAA0nF,GACA+C,EAAA/wH,YAAAovH,EAAAlhF,KAGAihF,EAAAjwI,EAAAkwI,EAAAC,EAAAC,GAIAhpF,EAAAwX,aAAAsxE,EAAAlhF,IAEAohF,EAAAh/I,KAAAy+I,EAAA4B,qBAAAvB,IAjBA,QAbA,QAAAx/I,EAAA,EAAmBA,EAAAy2D,EAAA90D,OAAiB3B,IACpCmhJ,EAAA/wH,YAAAqmC,EAAAz2D,GAAAkuE,eAkCAhP,EAAAC,OAAA,SAAA7vD,EAAA8vD,EAAAk3D,GACAA,IACAA,EAAAl3D,EACAA,MAEAA,IACAA,MAGA1yD,KAAA4C,SACA5C,KAAA0yD,QACA1yD,KAAAe,MAAA,UACAf,KAAA3N,OAAA,GACA2N,KAAA4pH,WAAA,IAAAE,YAAA,QACA9pH,KAAAkvI,eAGA18E,EAAAC,OAAA9zD,WAGAi2I,mBAAA,SAAArxI,GACA,KAAAA,aAAAirI,GAGA,MAAAjrI,EAFAvD,KAAA8yD,gBAAA9yD,KAAA8yD,eAAAvvD,IAKAvR,MAAA,SAAAE,GACA,IAAAi7C,EAAAntC,KAUA,SAAA60I,IAGA,IAFA,IAAAxiJ,EAAA86C,EAAA96C,OACAyiJ,EAAA,EACAA,EAAAziJ,EAAA4C,QAAA,OAAA5C,EAAAyiJ,IAAA,OAAAziJ,EAAAyiJ,MACAA,EAEA,IAAA71I,EAAA5M,EAAA2yI,OAAA,EAAA8P,GASA,MAPA,OAAAziJ,EAAAyiJ,MACAA,EAEA,OAAAziJ,EAAAyiJ,MACAA,EAEA3nG,EAAA96C,SAAA2yI,OAAA8P,GACA71I,EAuFA,SAAA81I,EAAArtH,GACAA,EAAA1oB,MAAA,mBAEA6vI,EAAAnnH,EAAA,SAAA9jB,EAAAhG,GACA,OAAAgG,GACA,sBA1BA8jB,EA2BA9pB,EA1BA81D,EAAA,IAAAk7E,EAEAC,EAAAnnH,EAAA,SAAA9jB,EAAAhG,GACA,OAAAgG,GACA,YACA8vD,EAAAi8E,QAAA/rI,EAAA,IAAAhG,GACA,MACA,WACA81D,EAAA3jD,IAAAnM,EAAA,IAAA8qI,EAAA9wI,MAGO,cAEPuvC,EAAA+8E,gBAAA/8E,EAAA+8E,gBACAF,OAAAt2D,EAAA5jD,IAAA,UACAm6G,MAAAv2D,EAAA5jD,IAAA,WAhBA,IAAA4X,EACAgsC,GA6BS,KAETm7E,EAAAnnH,EAAA,SAAA9jB,EAAAhG,GACA,OAAAgG,GACA,cAhGA,SAAA8jB,GACA,IAAAgsC,EAAA,IAAAk7E,EAsCA,GApCAC,EAAAnnH,EAAA,SAAA9jB,EAAAhG,GACA,OAAAgG,GACA,SACA8vD,EAAA3jD,IAAAnM,EAAAhG,GACA,MACA,YACA81D,EAAA+S,QAAA7iE,EAAAhG,GACA,MACA,YACA81D,EAAAi8E,QAAA/rI,EAAAhG,GACA,MACA,mBACA,qBACA,IAAAo3I,EAAAp3I,EAAAwB,MAAA,KACA,OAAA41I,EAAA//I,OACA,MAIA,IAAAggJ,EAAA,IAAArG,EAGA,GAFAqG,EAAAxuE,QAAA,IAAAuuE,EAAA,IACAC,EAAAxuE,QAAA,IAAAuuE,EAAA,KACAC,EAAAx9G,IAAA,OAAAw9G,EAAAx9G,IAAA,KACA,MAEAi8B,EAAA3jD,IAAAnM,EAAA,IAAAqxI,EAAAnlI,IAAA,MACA4jD,EAAA3jD,IAAAnM,EAAA,IAAAqxI,EAAAnlI,IAAA,MACA,MACA,aACA4jD,EAAA87E,IAAA5rI,EAAAhG,GAAA,SAGO,UAIP81D,EAAAj8B,IAAA,OACA,IAAA2zG,EAAA,IAAAj+F,EAAAulB,MAAAi6E,WAAAx/F,EAAAvqC,OAAA+pI,WACAvB,EAAA14I,MAAAghE,EAAA5jD,IAAA,aACAs7H,EAAA5J,MAAA9tE,EAAA5jD,IAAA,WACAs7H,EAAA1J,cAAAhuE,EAAA5jD,IAAA,mBACAs7H,EAAA3J,cAAA/tE,EAAA5jD,IAAA,qBACAs7H,EAAAxJ,gBAAAluE,EAAA5jD,IAAA,qBACAs7H,EAAAzJ,gBAAAjuE,EAAA5jD,IAAA,uBACAs7H,EAAAvJ,OAAAnuE,EAAA5jD,IAAA,aAEAq9B,EAAA+nG,UAAA/nG,EAAA+nG,SAAA9J,GAGAj+F,EAAA+hG,WAAAl7I,MACAglB,GAAA06C,EAAA5jD,IAAA,MACAs7H,YA4CA+J,CAAAv3I,KAGS,KA7HT1L,IAEAi7C,EAAA96C,QAAA86C,EAAAy8E,QAAA0qB,OAAApiJ,GAAgDw9C,QAAA,KAiIhD,IACA,IAAAzwC,EACA,eAAAkuC,EAAApsC,MAAA,CAEA,cAAA0S,KAAA05B,EAAA96C,QACA,OAAA2N,KAKA,IAAAyE,GAFAxF,EAAA41I,KAEA71I,MAAA,sBACA,IAAAyF,MAAA,GACA,UAAA+pI,IAAAa,OAAAQ,cAGA1iG,EAAApsC,MAAA,SAIA,IADA,IAAAq0I,GAAA,EACAjoG,EAAA96C,QAAA,CAEA,cAAAohB,KAAA05B,EAAA96C,QACA,OAAA2N,KASA,OANAo1I,EAGAA,GAAA,EAFAn2I,EAAA41I,IAKA1nG,EAAApsC,OACA,aAEA,IAAA0S,KAAAxU,GACA81I,EAAA91I,GACWA,IAEXkuC,EAAApsC,MAAA,MAEA,SACA,WAEA9B,IACAkuC,EAAApsC,MAAA,MAEA,SACA,SAEA,oBAAA0S,KAAAxU,GAAA,CACAkuC,EAAApsC,MAAA,OACA,MAGA,IAAA9B,EACA,SAKA,GAHAkuC,EAAA6c,IAAA,IAAA7c,EAAAulB,MAAA6B,QAAApnB,EAAAvqC,OAAA2xD,QAAA,QACApnB,EAAApsC,MAAA,OAEA,IAAA9B,EAAA4F,QAAA,WACAsoC,EAAA6c,IAAAhxC,GAAA/Z,EACA,SAIA,UAEA,IACAgwI,EAAAhwI,EAAAkuC,EAAA6c,IAAA7c,EAAA+hG,YACW,MAAA3rI,GACX4pC,EAAAynG,mBAAArxI,GAEA4pC,EAAA6c,IAAA,KACA7c,EAAApsC,MAAA,SACA,SAEAosC,EAAApsC,MAAA,UACA,SACA,cACA,IAAAs0I,GAAA,IAAAp2I,EAAA4F,QAAA,UAKA,IAAA5F,GAAAo2I,IAAAD,GAAA,IAEAjoG,EAAA0lB,OAAA1lB,EAAA0lB,MAAA1lB,EAAA6c,KACA7c,EAAA6c,IAAA,KACA7c,EAAApsC,MAAA,KACA,SAEAosC,EAAA6c,IAAA1nD,OACA6qC,EAAA6c,IAAA1nD,MAAA,MAEA6qC,EAAA6c,IAAA1nD,MAAArD,EACA,SACA,aAEAA,IACAkuC,EAAApsC,MAAA,MAEA,WAGK,MAAAwC,GACL4pC,EAAAynG,mBAAArxI,GAGA,YAAA4pC,EAAApsC,OAAAosC,EAAA6c,KAAA7c,EAAA0lB,OACA1lB,EAAA0lB,MAAA1lB,EAAA6c,KAEA7c,EAAA6c,IAAA,KAGA7c,EAAApsC,MAAA,YAAAosC,EAAApsC,MAAA,qBAEA,OAAAf,MAEA4sC,MAAA,WAEA,IAWA,GAZA5sC,KAGA3N,QAHA2N,KAGA4pH,QAAA0qB,UAHAt0I,KAKAgqD,KAAA,WALAhqD,KAKAe,SALAf,KAMA3N,QAAA,OANA2N,KAOAhO,SAKA,YAZAgO,KAYAe,MACA,UAAAytI,IAAAa,OAAAQ,cAEK,MAAAtsI,GAfLvD,KAgBA40I,mBAAArxI,GAGA,OAnBAvD,KAkBA+yD,SAlBA/yD,KAkBA+yD,UACA/yD,OAIAX,EAAAC,QAAAkzD,2BC3xCA,SAAAlmB,GAAA,IAIAgpG,EAJAC,OAAA,IAAAjpG,IACA,oBAAA1pC,iBACA4yI,EAAarkJ,EAAQ,GAIrB,oBAAAqX,SACA8sI,EAAA9sI,UAEA8sI,EAAAC,EAAA,gCAGAD,EAAAC,EAAA,6BAAAC,GAIAn2I,EAAAC,QAAAg2I,iEChBAj2I,EAAAC,SACAiyG,UAAapgH,EAAQ,QACrBg4C,MAASh4C,EAAQ,QACjB2+G,WAAc3+G,EAAQ,QAAc2+G,WACpCE,mBAAsB7+G,EAAQ,QAAc6+G,mBAC5CD,mBAAsB5+G,EAAQ,QAAc4+G,mBAC5CyB,cAAiBrgH,EAAQ,4CCIzB,IAAA83C,EAAkB93C,EAAQ,QAE1BskJ,EAAA,SAAAjsG,GACA,IAAAO,EAAA,GAAAP,EAAA,GAGA,OAFAO,IAAA,EACAA,GAAAP,EAAA,IAIAU,EAAA,SAAAV,GACA,YAAAA,EAAA,KAGAksG,EAAA,SAAAlsG,GACA,IAAAn2C,EAAA,EASA,OAHA,GAAAm2C,EAAA,YACAn2C,GAAAm2C,EAAA,MAEAn2C,GAkJAsiJ,EAAA,SAAAp4I,GACA,OAAAA,GACA,OACA,kDACA,OACA,iBACA,OACA,+BACA,OACA,+BACA,OACA,mCACA,QACA,cAsFA8B,EAAAC,SACApO,UAnPA,SAAAs4C,EAAAwF,GACA,IAAAjF,EAAA0rG,EAAAjsG,GACA,WAAAO,EACA,MACGA,IAAAiF,EACH,MACGA,EACH,MAEA,MA2OApE,SAxOA,SAAApB,GACA,IAAAE,EAAAQ,EAAAV,GACAn2C,EAAA,EAAAqiJ,EAAAlsG,GAMA,OAJAE,IACAr2C,GAAAm2C,EAAAn2C,GAAA,IAGA,GAAAm2C,EAAAn2C,EAAA,QAAAm2C,EAAAn2C,EAAA,KAiOAw3C,SA9NA,SAAArB,GACA,IAAAkF,KACAhF,EAAAQ,EAAAV,GACAosG,EAAA,EAAAF,EAAAlsG,GAWA,GATAE,IACAksG,GAAApsG,EAAAosG,GAAA,GAQA,EAAApsG,EAAAosG,EAAA,IAIA,IAAA3mG,EAGAA,EAAA,IADA,GAAAzF,EAAAosG,EAAA,OAAApsG,EAAAosG,EAAA,IACA,EAQA,IADA,IAAAviJ,EAAA,KAHA,GAAAm2C,EAAAosG,EAAA,QAAApsG,EAAAosG,EAAA,KAIAviJ,EAAA47C,GAAA,CACA,IAAA37C,EAAAsiJ,EAAAviJ,EAEAq7C,GAAA,GAAAlF,EAAAl2C,EAAA,OAAAk2C,EAAAl2C,EAAA,IAAAk2C,EAAAl2C,GAIAD,GAAA,OAAAm2C,EAAAl2C,EAAA,OAAAk2C,EAAAl2C,EAAA,IAEA,OAAAo7C,IAyLAxE,iCACAF,aAvLA,SAAAR,EAAAkF,GAGA,OADAA,EADA+mG,EAAAjsG,KAGA,KAAAP,EAAA8B,iBACA,cACA,KAAA9B,EAAA+B,iBACA,cACA,KAAA/B,EAAAkG,qBACA,uBACA,QACA,cA6KAhF,aAzKA,SAAAX,GAEA,IADAU,EAAAV,GAEA,YAGA,IAAAn2C,EAAA,EAAAqiJ,EAAAlsG,GAEA,GAAAn2C,GAAAm2C,EAAAj3C,WAWA,YAGA,IACAw9C,EADAzF,EAAA,KAuCA,OAvBA,KAVAyF,EAAAvG,EAAAn2C,EAAA,OAWAi3C,MAIAuB,KAAA,GAAArC,EAAAn2C,EAAA,SACA,IAAAm2C,EAAAn2C,EAAA,UACA,IAAAm2C,EAAAn2C,EAAA,UACA,IAAAm2C,EAAAn2C,EAAA,SACA,IAAAm2C,EAAAn2C,EAAA,SACAi3C,EAAAuB,KAAA,EACAvB,EAAAuB,MAAA,EAAArC,EAAAn2C,EAAA,SACAi3C,EAAAsB,IAAAtB,EAAAuB,IACA,GAAAkE,IACAzF,EAAAsB,KAAA,GAAApC,EAAAn2C,EAAA,UACA,IAAAm2C,EAAAn2C,EAAA,UACA,IAAAm2C,EAAAn2C,EAAA,UACA,IAAAm2C,EAAAn2C,EAAA,SACA,IAAAm2C,EAAAn2C,EAAA,SACAi3C,EAAAsB,KAAA,EACAtB,EAAAsB,MAAA,EAAApC,EAAAn2C,EAAA,WAGAi3C,GA6GAI,4BAzFA,SAAAlB,GASA,IARA,IAAAn2C,EAAA,EAAAqiJ,EAAAlsG,GACAqsG,EAAArsG,EAAAv2C,SAAAI,GACAyiJ,EAAA,EACAC,EAAA,EACAC,GAAA,EAIQD,EAAAF,EAAAtjJ,WAAA,EAA6CwjJ,IACrD,OAAAF,EAAAE,EAAA,IAEAD,EAAAC,EAAA,EACA,MAIA,KAAAD,EAAAD,EAAAtjJ,YAGA,OAAAsjJ,EAAAC,IACA,OAEA,OAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MACO,OAAAD,EAAAC,EAAA,IACPA,IACA,MAGAC,EAAA,IAAAD,EAAA,GAEA,8CADAH,EAAA,GAAAE,EAAAE,EAAA,MAEAC,GAAA,GAKA,GACAF,UACO,IAAAD,EAAAC,MAAAD,EAAA5gJ,QACP8gJ,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,OAEA,OAAAD,EAAAC,EAAA,IACA,IAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MAIA,8CADAH,EAAA,GAAAE,EAAAE,EAAA,MAEAC,GAAA,GAEAD,EAAAD,EAAA,EACAA,GAAA,EACA,MACA,QAGAA,GAAA,EAeA,OAXAD,IAAA5iJ,SAAA8iJ,GACAD,GAAAC,EACAA,EAAA,EAEAF,KAAAtjJ,WAAA,GAEA,8CADAojJ,EAAA,GAAAE,EAAAE,EAAA,MAEAC,GAAA,GAIAA,0BC/QA,IAGAC,EACAC,EACAC,EACAC,EAEAC,EALAJ,EAAA,yFACAC,EAAA,mBACAC,EAAA,oBACAC,EAAA,qCAEAC,GAOA7rD,iBAAA,SAAAF,EAAAC,EAAAjvC,GAKA,GAJAA,QAEAgvC,IAAAzjE,SACA0jE,IAAA1jE,QACA,CAIA,IAAAy0B,EAAAg7F,gBACA,OAAAhsD,EAEA,IAAAisD,EAAAF,EAAAG,SAAAlsD,GACA,IAAAisD,EACA,UAAA5yI,MAAA,mCAGA,OADA4yI,EAAAl2I,KAAAg2I,EAAAI,cAAAF,EAAAl2I,MACAg2I,EAAAK,kBAAAH,GAEA,IAAAI,EAAAN,EAAAG,SAAAjsD,GACA,IAAAosD,EACA,UAAAhzI,MAAA,uCAEA,GAAAgzI,EAAAC,OAGA,OAAAt7F,EAAAg7F,iBAGAK,EAAAt2I,KAAAg2I,EAAAI,cAAAE,EAAAt2I,MACAg2I,EAAAK,kBAAAC,IAHApsD,EAKA,IAAAssD,EAAAR,EAAAG,SAAAlsD,GACA,IAAAusD,EACA,UAAAlzI,MAAA,mCAEA,IAAAkzI,EAAAC,QAAAD,EAAAx2I,MAAA,MAAAw2I,EAAAx2I,KAAA,IAGA,IAAA2xD,EAAAkkF,EAAAzvF,KAAAowF,EAAAx2I,MACAw2I,EAAAC,OAAA9kF,EAAA,GACA6kF,EAAAx2I,KAAA2xD,EAAA,GAEA6kF,EAAAC,SAAAD,EAAAx2I,OACAw2I,EAAAx2I,KAAA,KAEA,IAAA02I,GAGAH,OAAAC,EAAAD,OACAE,OAAAH,EAAAG,OACAz2I,KAAA,KACAgkC,OAAAsyG,EAAAtyG,OACA2yG,MAAAL,EAAAK,MACAt2G,SAAAi2G,EAAAj2G,UAEA,IAAAi2G,EAAAG,SAIAC,EAAAD,OAAAD,EAAAC,OAGA,MAAAH,EAAAt2I,KAAA,IACA,GAAAs2I,EAAAt2I,KAgBW,CAKX,IAAA42I,EAAAJ,EAAAx2I,KACA62I,EAAAD,EAAAjwH,UAAA,EAAAiwH,EAAAE,YAAA,QAAAR,EAAAt2I,KACA02I,EAAA12I,KAAAg2I,EAAAI,cAAAS,QApBAH,EAAA12I,KAAAw2I,EAAAx2I,KAIAs2I,EAAAtyG,SACA0yG,EAAA1yG,OAAAwyG,EAAAxyG,OAIAsyG,EAAAK,QACAD,EAAAC,MAAAH,EAAAG,QAiBA,OAHA,OAAAD,EAAA12I,OACA02I,EAAA12I,KAAAi7C,EAAAg7F,gBAAAD,EAAAI,cAAAE,EAAAt2I,MAAAs2I,EAAAt2I,MAEAg2I,EAAAK,kBAAAK,IAEAP,SAAA,SAAAxnI,GACA,IAAAooI,EAAAnB,EAAAxvF,KAAAz3C,GACA,OAAAooI,GAIAR,OAAAQ,EAAA,OACAN,OAAAM,EAAA,OACA/2I,KAAA+2I,EAAA,OACA/yG,OAAA+yG,EAAA,OACAJ,MAAAI,EAAA,OACA12G,SAAA02G,EAAA,QARA,MAWAX,cAAA,SAAAp2I,GAgBA,IATAA,IAAAjB,MAAA,IAAA4jG,UAAA/kG,KAAA,IAAA6F,QAAAqyI,EAAA,IASA91I,EAAApL,UAAAoL,IAAAyD,QAAAsyI,EAAA,KAAAnhJ,SACA,OAAAoL,EAAAjB,MAAA,IAAA4jG,UAAA/kG,KAAA,KAEAy4I,kBAAA,SAAAU,GACA,OAAAA,EAAAR,OAAAQ,EAAAN,OAAAM,EAAA/2I,KAAA+2I,EAAA/yG,OAAA+yG,EAAAJ,MAAAI,EAAA12G,WAMArhC,EAAAC,QAAA+2I,uCC/IAh3I,EAAAC,QAFA,wFCcAsD,OAAOs/H,UAAa,SAASt/H,EAAQ4F,EAAUo7B,GAW7C,SAASyzG,EAAOzjC,EAAW0jC,GAEzB,IAGItkJ,EACFukJ,EACArR,EAUAvnB,EAIA64B,EACAC,EAKAC,EAEAC,EACAC,EA5BE33I,EAAQD,KAMV63I,GAAoB,EACpBC,EAAoBxmJ,KAAKga,MACzBysI,EAAwB,EACxBC,EAAwB,EACxBC,GAA4B,EAC5BC,EAAmB,EACnBC,EAAqB,EACrBC,EAAW,IAAIp6I,MAAM,IACrBq6I,GAAmB,EAEnBxjH,GAAQ,EAERyjH,GAAiB,EAGjBC,GAAU52I,IAAO,EAAGD,MAAS,EAAGE,KAAQ,GACxC42I,GAAY,EACZC,GAAc,EACdC,EAAuB,EAEvBC,EAAkB,EAGlBC,KACAC,KACAC,KACA55E,GAAS,EACT65E,GAAkB,EAEhBC,GACFp3I,KAAM,IACNC,QAAS,GACTC,QAAS,IACTJ,MAAO,EACPkkI,SAAUhiG,EACViiG,SAAUjiG,EACVjiC,IAAK,EACLmkI,QAAS,IACTC,OAAQ,IACRkT,KAAM,EACNC,KAAM,IACNC,KAAM,IACNC,QAAS,EACTpT,YAAY,EACZqT,2BAA4B,EAC5BC,oBAAqB11G,EACrBrmC,KAAM,kBACNg8I,YAAa,EACbhX,oBAAoB,EACpBF,SAAS,EACTmX,iBAAiB,EACjBjT,cAAc,EACdvkI,WAAW,EACXsgI,cAAc,EACdE,UAAU,EACViE,cAAc,EACdH,wBAAwB,EACxBvkI,cAAc,EACd2/D,iBAAkB,EAAG,EAAG,GACxB+3E,wBAAwB,EACxBC,wBA8rCF,SAAwBz2I,GAEtB,OAAOA,EAAI,GAAM,EAAEA,EAAEA,GAAQ,EAAE,EAAEA,GAAGA,EAAV,GA/rC1BujI,WAAW,EACXmT,qBAAqB,EACrBxmF,YAAa,YACbymF,yBAA0B,EAC1BC,oBAAqB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAM3Fb,SAEEc,gBAAiB,+BACjBC,aAAc,aACdC,YAAa,QAGbC,gBAAiB,mCACjBC,gBAAiB,qCACjBC,kBAAmB,kDACnBC,eAAgB,0IAGhBC,kBAAmB,mFACnBC,iBAAkB,0LAIlBC,aAAc,6CAIhB3mC,EAAiC,iBAAdA,EAAyBprG,EAASgyI,eAAe5mC,GAAaA,GACvE38D,UAAUjhB,IAAI,kBACxB49E,EAAUh/F,SAAW,EAGrB,IAAI6lI,EAAcjyI,EAASpH,cAAc,OACzCq5I,EAAYp5I,UAAY,UACxBuyG,EAAUlwF,YAAY+2H,GAGtB,IAAIC,EAAkBlyI,EAASpH,cAAc,OAC7Cs5I,EAAgBr5I,UAAY,wBAC5BuyG,EAAUlwF,YAAYg3H,GACtB,IAAIC,EAAUnyI,EAASpH,cAAc,OACrCu5I,EAAQt5I,UAAY,eACpBo5I,EAAY/2H,YAAYi3H,GAGxB,IAAIC,EAAWpyI,EAASpH,cAAc,QACtCw5I,EAASv5I,UAAY,iBACrBu5I,EAASp3H,UAAY,iEACrBi3H,EAAY/2H,YAAYk3H,GACxBD,EAAQl7H,iBAAiB,cAgezB,SAASo7H,EAAa/qG,GACpB,IAAIglG,EAAMgG,EAAchrG,GACxB8qG,EAAS1xI,MAAMqyB,KAAOu5G,EAAI5iH,EAAI,KAC9B0oH,EAAS1xI,MAAMuyB,IAAMq5G,EAAIj6G,EAAI,KAC7B+J,aAAai2G,EAAaE,IAC1Bn2G,aAAai2G,EAAaG,IAC1BJ,EAAS1xI,MAAM25H,QAAU,QACzB+X,EAAS1xI,MAAM0c,QAAU,EACzBi1H,EAAaE,GAAKjmH,WAAW,WAAY8lH,EAAS1xI,MAAM0c,QAAU,GAAK,KACvEi1H,EAAaG,GAAKlmH,WAAW,WAAY8lH,EAAS1xI,MAAM25H,QAAU,QAAU,MAC5E/yF,EAAMhlC,mBAveR,IAAImwI,KAGAC,EAAwB1yI,EAASpH,cAAc,OACnD85I,EAAsB75I,UAAY,4CAClCo5I,EAAY/2H,YAAYw3H,GAGxBD,EAAYrnC,UAAYprG,EAASpH,cAAc,OAC/C65I,EAAYrnC,UAAUvyG,UAAY,qBAClC45I,EAAYt6I,MAAQ6H,EAASpH,cAAc,OAC3C65I,EAAYt6I,MAAMU,UAAY,iBAC9B45I,EAAYrnC,UAAUlwF,YAAYu3H,EAAYt6I,OAC9Cs6I,EAAY5U,OAAS79H,EAASpH,cAAc,OAC5C65I,EAAY5U,OAAOhlI,UAAY,kBAC/B45I,EAAYrnC,UAAUlwF,YAAYu3H,EAAY5U,QAC9CoU,EAAY/2H,YAAYu3H,EAAYrnC,WAGpCqnC,EAAY9lF,QACZ8lF,EAAY9lF,KAAK13D,IAAM+K,EAASpH,cAAc,OAC9C65I,EAAY9lF,KAAK13D,IAAI4D,UAAY,gBACjC45I,EAAY9lF,KAAKgmF,KAAO3yI,EAASpH,cAAc,KAC/C65I,EAAY9lF,KAAK13D,IAAIimB,YAAYu3H,EAAY9lF,KAAKgmF,MAClDF,EAAY9lF,KAAKimF,KAAO5yI,EAASpH,cAAc,OAC/C65I,EAAY9lF,KAAKimF,KAAK/5I,UAAY,YAClC45I,EAAY9lF,KAAKimF,KAAK53H,UAAY,mCAClCy3H,EAAY9lF,KAAK13D,IAAIimB,YAAYu3H,EAAY9lF,KAAKimF,MAClDH,EAAY9lF,KAAKkmF,KAAO7yI,EAASpH,cAAc,OAC/C65I,EAAY9lF,KAAKkmF,KAAKh6I,UAAY,YAClC45I,EAAY9lF,KAAKmmF,SAAW9yI,EAASpH,cAAc,OACnD65I,EAAY9lF,KAAKmmF,SAASj6I,UAAY,iBACtC45I,EAAY9lF,KAAKkmF,KAAK33H,YAAYu3H,EAAY9lF,KAAKmmF,UACnDL,EAAY9lF,KAAK13D,IAAIimB,YAAYu3H,EAAY9lF,KAAKkmF,MAClDJ,EAAY9lF,KAAKomF,IAAM/yI,EAASpH,cAAc,KAC9C65I,EAAY9lF,KAAKomF,IAAIl6I,UAAY,YACjC45I,EAAY9lF,KAAK13D,IAAIimB,YAAYu3H,EAAY9lF,KAAKomF,KAClDd,EAAY/2H,YAAYu3H,EAAY9lF,KAAK13D,KAGzCw9I,EAAYO,SAAWhzI,EAASpH,cAAc,OAC9C65I,EAAYO,SAASn6I,UAAY,+BACjCo5I,EAAY/2H,YAAYu3H,EAAYO,UAGpC,IAAInvF,KACJA,EAASunD,UAAYprG,EAASpH,cAAc,OAC5CirD,EAASunD,UAAUvyG,UAAY,0BAC/Bo5I,EAAY/2H,YAAY2oC,EAASunD,WAGjCvnD,EAAS8I,KAAO3sD,EAASpH,cAAc,OACvCirD,EAAS8I,KAAK9zD,UAAY,mBAC1BgrD,EAAS8I,KAAK11C,iBAAiB,QAAS,WACtCg8H,KACAtmF,OAEFslF,EAAY/2H,YAAY2oC,EAAS8I,MAGjC9I,EAASnmC,KAAO1d,EAASpH,cAAc,OACvCirD,EAASnmC,KAAK7kB,UAAY,mCAC1BgrD,EAASqvF,OAASlzI,EAASpH,cAAc,OACzCirD,EAASqvF,OAAOr6I,UAAY,wCAC5BgrD,EAASqvF,OAAOj8H,iBAAiB,QAw2DjC,WACMk/F,IACFsvB,GAAQj7I,EAAO4O,KAAO,GACtB+5I,QA12DJtvF,EAASnmC,KAAKxC,YAAY2oC,EAASqvF,QACnCrvF,EAASuvF,QAAUpzI,EAASpH,cAAc,OAC1CirD,EAASuvF,QAAQv6I,UAAY,yCAC7BgrD,EAASuvF,QAAQn8H,iBAAiB,QA+2DlC,WACMk/F,IACFsvB,GAAQj7I,EAAO4O,KAAO,GACtB+5I,QAj3DJtvF,EAASnmC,KAAKxC,YAAY2oC,EAASuvF,SACnCvvF,EAASunD,UAAUlwF,YAAY2oC,EAASnmC,MAGxCmmC,EAASwvF,WAAarzI,EAASpH,cAAc,OAC7CirD,EAASwvF,WAAWp8H,iBAAiB,QAASq8H,IAC9CzvF,EAASwvF,WAAWx6I,UAAY,+GAC5BmH,EAASkgE,mBAAqBlgE,EAASuzI,sBAAwBvzI,EAASwzI,yBAA2BxzI,EAASyzI,sBAC7G5vF,EAASunD,UAAUlwF,YAAY2oC,EAASwvF,YAG3CxvF,EAASosF,YAAcjwI,EAASpH,cAAc,OAC9CirD,EAASosF,YAAYh5H,iBAAiB,QAAS,SAASlc,GAClDk1I,EACDyD,KAEAC,OAEL9vF,EAASosF,YAAYh5H,iBAAiB,YAAa,SAASlc,GAAIA,EAAEwH,oBAClEshD,EAASosF,YAAYh5H,iBAAiB,aAAc,SAASlc,GAAIA,EAAEwH,oBACnEshD,EAASosF,YAAYh5H,iBAAiB,cAAe,SAASlc,GAAIA,EAAEwH,oBACpEshD,EAASosF,YAAYp3I,UAAY,kGACjC,IAAI+6I,EAAoBC,GAA8B,EAYlDz5I,EAAO05I,uBACT15I,EAAO6c,iBAAiB,oBAZ1B,SAAS88H,EAAsBh5I,GAC7BX,EAAO+3C,oBAAoB,oBAAqB4hG,GAC5Ch5I,GAAiB,OAAZA,EAAEi5I,OAA6B,OAAXj5I,EAAEk5I,MAA6B,OAAZl5I,EAAEm5I,OAChDrwF,EAASunD,UAAUlwF,YAAY2oC,EAASosF,aACxC2D,GAAqB,EACjBC,GACDF,MAEHC,GAAqB,IAMvBA,GAAqB,EAIvB,IAAInW,EAAUz9H,EAASpH,cAAc,OAoBrC,SAASo/B,IAIP,IAAIoxB,EAAMppD,EAASpH,cAAc,OAEjC,GADAwwD,EAAIpuC,UAAY,8CAC4B,GAAxCouC,EAAIrV,qBAAqB,KAAKtnD,OAAlC,CAQA,IAAI3B,EAAGs+B,EAEP,GALA+lH,EAAW3kJ,EAAO4O,KAClBg2I,EAAY5kJ,EAAO0O,MAIA,WAAf1O,EAAOuK,KAAmB,CAE5B,IADAi6I,KACKlkJ,EAAI,EAAGA,EAAI,EAAGA,IACjBkkJ,EAAUxjJ,KAAK,IAAI2oJ,OACnBnF,EAAUlkJ,GAAG6/D,YAAcngE,EAAOmgE,YAEpC8nF,EAAY9lF,KAAKimF,KAAKlyI,MAAM25H,QAAU,QACtCoY,EAAY9lF,KAAKkmF,KAAKnyI,MAAM25H,QAAU,YACjC,GAAmB,YAAf7vI,EAAOuK,KAAoB,CACpC,IAAI6F,EAAIlE,KAAKlN,MAAMkN,KAAKC,UAAUnM,EAAO4pJ,WAGrC5pJ,EAAO6pJ,UAAY7pJ,EAAO4pJ,SAASC,WACjC,qBAAqBppI,KAAKzgB,EAAO4pJ,SAASC,UAC9Cz5I,EAAEy5I,SAAW7pJ,EAAO6pJ,SAAW7pJ,EAAO4pJ,SAASC,SACtC7pJ,EAAO4pJ,SAASC,SACzBz5I,EAAEy5I,SAAW7pJ,EAAO4pJ,SAASC,SACpB7pJ,EAAO6pJ,WAChBz5I,EAAEy5I,SAAW7pJ,EAAO6pJ,UAEtBrF,EAAYp0I,OAEZ,IAAuB,IAAnBpQ,EAAOqvI,QACTmV,EAAYxkJ,EAAOyvI,aACd,CACL,GAAIzvI,EAAOyvI,WAAa7+F,EAEtB,YADAk5G,EAAQ9pJ,EAAO4hD,QAAQqlG,iBAGzBzC,EAAY,IAAImF,MAKpB,GAAmB,WAAf3pJ,EAAOuK,KAAmB,CAE5B,IAAIw/I,EAAc,EAEdlW,EAAS,WAES,MADpBkW,GAEEC,KAIA14I,EAAU,SAASf,GACrB,IAAIpC,EAAIqH,EAASpH,cAAc,KAC/BD,EAAEqwD,KAAOjuD,EAAE4G,OAAOogD,IAClBppD,EAAE2I,YAAc3I,EAAEqwD,KAClBsrF,EAAQ9pJ,EAAO4hD,QAAQslG,gBAAgBp2I,QAAQ,KAAM3C,EAAE87I,aAGzD,IAAK3pJ,EAAI,EAAGA,EAAIkkJ,EAAUviJ,OAAQ3B,IAEvB,SADTs+B,EAAI5+B,EAAOkqJ,QAAQ5pJ,KAEjBgN,QAAQC,IAAI,uDAAyDjN,GACrEuzI,MAEI7zI,EAAO6pJ,WAAaM,EAAYvrH,KAClCA,EAAI5+B,EAAO6pJ,SAAWjrH,GAExB4lH,EAAUlkJ,GAAGizC,OAASsgG,EACtB2Q,EAAUlkJ,GAAGkzC,QAAUliC,EACvBkzI,EAAUlkJ,GAAGi3D,IAAM6yF,GAAYxrH,SAG9B,GAAmB,YAAf5+B,EAAOuK,KAChBy/I,SAOA,GALAprH,EAAI,GACA5+B,EAAO6pJ,WACTjrH,EAAI5+B,EAAO6pJ,WAGU,IAAnB7pJ,EAAOqvI,QAAkB,CAE3BzwG,EAAIurH,EAAYnqJ,EAAOyvI,UAAYzvI,EAAOyvI,SAAW7wG,EAAI5+B,EAAOyvI,SAEhE+U,EAAUjxG,OAAS,WACjB3jC,EAAOL,IAAI6zF,gBAAgBp2F,KAAKuqD,KAChCyyF,KAGF,IAAI53G,EAAM,IAAIc,eACdd,EAAIi4G,UAAY,WACd,GAAkB,KAAdj4G,EAAIF,OAAe,CAErB,IAAI/jC,EAAIqH,EAASpH,cAAc,KAC/BD,EAAEqwD,KAAO5/B,EACTzwB,EAAE2I,YAAc3I,EAAEqwD,KAClBsrF,EAAQ9pJ,EAAO4hD,QAAQslG,gBAAgBp2I,QAAQ,KAAM3C,EAAE87I,YAEzD,IAwHetX,EACjB2X,EAzHM71H,EAAMznB,KAAK0kC,SAwHAihG,EAvHDl+G,GAwHhB61H,EAAS,IAAIC,YACV99H,iBAAiB,UAAW,WACjC,IAAIgI,EAAM61H,EAAO/pJ,OAIjB,GAAI+yD,UAAUC,UAAU79C,cAAc1J,MAAM,8BAA+B,CACzE,IAAIw+I,EAAY/1H,EAAI5iB,QAAQ,OACxB24I,EAAY,GAAKA,EAAY,QAC9BV,EAAQ9pJ,EAAO4hD,QAAQwlG,gBAG5B,IAAIj5H,EAAQsG,EAAI5iB,QAAQ,cACxB,GAAIsc,GAAS,IAA+B,IAA1BnuB,EAAOyqJ,eAAyB,CAChD,IAAIC,EAAUj2H,EAAIT,UAAU7F,EAAOsG,EAAI5iB,QAAQ,gBAAkB,IAG7D84I,EAAS,SAAS3oJ,GACpB,IAAIzB,EAQJ,OAPImqJ,EAAQ74I,QAAQ7P,EAAM,OAAS,EAEjCzB,GADAA,EAASmqJ,EAAQ12H,UAAU02H,EAAQ74I,QAAQ7P,EAAM,MAAQA,EAAIC,OAAS,IACtD+xB,UAAU,EAAGzzB,EAAOsR,QAAQ,MACnC64I,EAAQ74I,QAAQ7P,EAAM,MAAQ,IAEvCzB,GADAA,EAASmqJ,EAAQ12H,UAAU02H,EAAQ74I,QAAQ7P,EAAM,KAAOA,EAAIC,OAAS,IACrD+xB,UAAU,EAAGzzB,EAAOsR,QAAQ,OAE1CtR,IAAWqwC,EACNmtC,OAAOx9E,GAET,MAILqqJ,GACFC,UAAWF,EAAO,6BAClBG,aAAcH,EAAO,qCACrBI,WAAYJ,EAAO,8BACnBK,cAAeL,EAAO,sCACtBM,UAAWN,EAAO,8BAClBO,QAASP,EAAO,4BAChBQ,aAAcR,EAAO,0BACrBS,YAAaT,EAAO,0BAGA,OAAlBC,EAAIC,WAA2C,OAArBD,EAAIE,cACT,OAAnBF,EAAIG,YAA6C,OAAtBH,EAAII,eACb,OAAlBJ,EAAIK,YAGJnF,EAA6Bj0I,QAAQ,QAAU,IAChD7R,EAAOkmJ,KAAO0E,EAAIE,aAAeF,EAAIC,UAAY,KAChD/E,EAA6Bj0I,QAAQ,QAAU,IAChD7R,EAAOmmJ,KAAOyE,EAAII,cAAgBJ,EAAIG,WAAa,KAClDjF,EAA6Bj0I,QAAQ,WAAa,IACnD7R,EAAOomJ,SAA8E,MAAlEwE,EAAIK,UAAYL,EAAII,cAAgB,GAAKJ,EAAIG,WAAa,KAC5D,OAAhBH,EAAIM,SAAoBpF,EAA6Bj0I,QAAQ,eAAiB,IAEhF7R,EAAOumJ,YAAcqE,EAAIM,SACF,IAAnBlrJ,EAAOizI,UACTjzI,EAAOizI,SAAU,IAGI,OAArB2X,EAAIO,cAA6C,OAApBP,EAAIQ,cAC/BtF,EAA6Bj0I,QAAQ,gBAAkB,IACxD7R,EAAOmrJ,aAAeP,EAAIO,cACzBrF,EAA6Bj0I,QAAQ,eAAiB,IACvD7R,EAAOorJ,YAAcR,EAAIQ,eAQlC5G,EAAUjtF,IAAM3nD,EAAOL,IAAIq0F,gBAAgB+uC,KAEzC2X,EAAOe,qBAAuBz6G,EAC/B05G,EAAOe,mBAAmB1Y,GAE1B2X,EAAOgB,WAAW3Y,GAtMfsV,EAAY9lF,KAAKomF,IAAI/3H,UAAY,IAEnC4hB,EAAIqB,WAAa,SAASljC,GACxB,GAAIA,EAAEg7I,iBAAkB,CAEtB,IAEIrK,EAAMsK,EAAWC,EAFjBh4E,EAAUljE,EAAEo7G,OAASp7G,EAAE8pG,MAAQ,IACnC4tC,EAAY9lF,KAAKmmF,SAASpyI,MAAMxW,MAAQ+zE,EAAU,IAE9CljE,EAAE8pG,MAAQ,KACZ6mC,EAAO,KACPsK,GAAaj7I,EAAEo7G,OAAS,KAAK54C,QAAQ,GACrC04E,GAAel7I,EAAE8pG,MAAQ,KAAKtnC,QAAQ,IAC7BxiE,EAAE8pG,MAAQ,KACnB6mC,EAAO,KACPsK,GAAaj7I,EAAEo7G,OAAS,KAAK54C,QAAQ,GACrC04E,GAAel7I,EAAE8pG,MAAQ,KAAKtnC,QAAQ,KAEtCmuE,EAAO,IACPsK,EAAYj7I,EAAEo7G,OACd8/B,EAAcl7I,EAAE8pG,OAElB4tC,EAAY9lF,KAAKomF,IAAI/3H,UAAYg7H,EAAY,MAAQC,EAAc,IAAMvK,OAGzE+G,EAAY9lF,KAAKimF,KAAKlyI,MAAM25H,QAAU,QACtCoY,EAAY9lF,KAAKkmF,KAAKnyI,MAAM25H,QAAU,QAG1C,IACEz9F,EAAIwB,KAAK,MAAOhV,GAAG,GACnB,MAAOruB,GAEPu5I,EAAQ9pJ,EAAO4hD,QAAQulG,mBAEzB/0G,EAAIE,aAAe,OACnBF,EAAI6B,iBAAiB,SAAU,qBAC/B7B,EAAI0B,gBAAyC,oBAAvB9zC,EAAOmgE,YAC7B/tB,EAAIiC,OAIJr0C,EAAOwzI,WACRiU,EAAYxjG,UAAUjhB,IAAI,aAC7BykH,EAAYxjG,UAAUK,OAAO,sBAlJ3BwlG,IA2JJ,SAASK,EAAYnuI,GAEnB,OAAO,IAAI0jC,OAAO,kBAAmB,KAAKj/B,KAAKzE,IAAkB,KAAVA,EAAI,IAAgC,SAAnBA,EAAIpQ,MAAM,EAAG,GAOvF,SAASo+I,IACFzF,IACFA,EAAW,IAAImH,aAAanH,SAASmD,IAGnCpC,IACHA,GAAiB,EACjBqC,EAAQl7H,iBAAiB,YAAak/H,GAAqB,GAC3Dn2I,EAASiX,iBAAiB,YAAam/H,IAAqB,GAC5Dp2I,EAASiX,iBAAiB,UAAWo/H,IAAmB,GACpD7rJ,EAAOgP,YACTy4I,EAAYh7H,iBAAiB,aAAcq/H,IAAsB,GACjErE,EAAYh7H,iBAAiB,iBAAkBq/H,IAAsB,IAEnE9rJ,EAAOwmJ,iBACTmB,EAAQl7H,iBAAiB,WAAYs/H,GAAuB,GAE9DtE,EAAYh7H,iBAAiB,sBAAuBu/H,IAAoB,GACxEvE,EAAYh7H,iBAAiB,yBAA0Bu/H,IAAoB,GAC3EvE,EAAYh7H,iBAAiB,qBAAsBu/H,IAAoB,GACvEvE,EAAYh7H,iBAAiB,mBAAoBu/H,IAAoB,GACrEp8I,EAAO6c,iBAAiB,SAAUw/H,IAAkB,GACpDr8I,EAAO6c,iBAAiB,oBAAqBw/H,IAAkB,GAC1DjsJ,EAAO2mJ,sBACV/lC,EAAUn0F,iBAAiB,UAAWy/H,IAAoB,GAC1DtrC,EAAUn0F,iBAAiB,QAAS0/H,IAAiB,GACrDvrC,EAAUn0F,iBAAiB,OAAQ2/H,IAAW,IAEhD52I,EAASiX,iBAAiB,aAAco/H,IAAmB,GACN,KAAjDr2I,EAAS6mB,gBAAgBnmB,MAAMm2I,eACgB,KAA/C72I,EAAS6mB,gBAAgBnmB,MAAMo2I,aACjC3E,EAAQl7H,iBAAiB,cAAe8/H,IAAuB,GAC/D5E,EAAQl7H,iBAAiB,cAAe+/H,IAAuB,GAC/D7E,EAAQl7H,iBAAiB,YAAaggI,IAAqB,GAC3D9E,EAAQl7H,iBAAiB,eAAgBggI,IAAqB,KAE9D9E,EAAQl7H,iBAAiB,aAAcigI,IAAsB,GAC7D/E,EAAQl7H,iBAAiB,YAAakgI,IAAqB,GAC3DhF,EAAQl7H,iBAAiB,WAAYmgI,IAAoB,IAIvDh9I,EAAO0jD,UAAUu5F,iBAClBjsC,EAAU1qG,MAAMo2I,YAAc,SA4jCrC,WACE,IACE,IAAIj7G,KACArxC,EAAOmrJ,eAAiBv6G,IACzBS,EAAO85G,aAAenrJ,EAAOmrJ,aAAe1jJ,KAAKqlJ,GAAK,KACrD9sJ,EAAOorJ,cAAgBx6G,IACxBS,EAAO+5G,YAAcprJ,EAAOorJ,YAAc3jJ,KAAKqlJ,GAAK,KACnD9sJ,EAAO0uE,kBAAoB99B,IAC5BS,EAAOq9B,gBAAkB1uE,EAAO0uE,iBACnC61E,EAAS/2G,KAAKg3G,EAAWxkJ,EAAOuK,KAAMvK,EAAOqvI,QAASrvI,EAAOkmJ,KAAOz+I,KAAKqlJ,GAAK,IAAK9sJ,EAAOmmJ,KAAO1+I,KAAKqlJ,GAAK,IAAK9sJ,EAAOomJ,QAAU3+I,KAAKqlJ,GAAK,IAAKC,GAAoB17G,IAC7I,IAAnBrxC,EAAOqvI,UAETmV,EAAY5zG,GAEd,MAAOkM,GAIP,GAAkB,eAAdA,EAAMvyC,MAAuC,YAAduyC,EAAMvyC,KACvCu/I,QACK,IAAkB,oBAAdhtG,EAAMvyC,KAIf,MADAu/I,EAAQ9pJ,EAAO4hD,QAAQ2lG,cACjBzqG,EAHNgtG,EAAQ9pJ,EAAO4hD,QAAQ0lG,iBAAiBx2I,QAAQ,KAAMgsC,EAAMp9C,OAAOoR,QAAQ,KAAMgsC,EAAMkwG,aA9kC3FC,GACAhS,GAAQj7I,EAAO4O,MACfkzB,WAAW,YAAwB,GAAQ,KAkG7C,SAASgoH,EAAQtB,GACXA,IAAa53G,IACd43G,EAAWxoJ,EAAO4hD,QAAQylG,mBAC7BY,EAAYO,SAASh4H,UAAY,MAAQg4H,EAAW,OACpDnvF,EAAS8I,KAAKjsD,MAAM25H,QAAU,OAC9BoY,EAAY9lF,KAAK13D,IAAIyL,MAAM25H,QAAU,OACrCoY,EAAYO,SAAStyI,MAAM25H,QAAU,QACrChuG,GAAQ,EACR6lH,EAAgBxxI,MAAM25H,QAAU,OAChCqd,GAAU,QAAS1E,GAwCrB,SAASV,EAAchrG,GACrB,IAAIqwG,EAASvsC,EAAUv7D,wBACnBy8F,KAGJ,OAFAA,EAAI5iH,EAAI4d,EAAM94B,QAAUmpI,EAAO5kH,KAC/Bu5G,EAAIj6G,EAAIiV,EAAM74B,QAAUkpI,EAAO1kH,IACxBq5G,EAST,SAAS6J,EAAoB7uG,GAO3B,GALAA,EAAMhlC,iBAEN8oG,EAAUrrF,QAGLo2F,GAAW3rH,EAAOwzI,UAAvB,CAKA,IAAIsO,EAAMgG,EAAchrG,GAGxB,GAAI98C,EAAO+O,aAAc,CACvB,IAAIq+I,EAASC,GAAmBvwG,GAChCxvC,QAAQC,IAAI,UAAY6/I,EAAO,GAAK,UAAYA,EAAO,GAAK,mBACxDptJ,EAAO0O,MAAQ,iBAAmB1O,EAAO2O,IAAM,WAAa3O,EAAO4O,MAIzE0+I,KAEApE,KACAlpJ,EAAOimJ,KAAO,EAEdV,EAAM32I,KAAO,EAEbi2I,GAAoB,EACpBC,EAAoBxmJ,KAAKga,MAEzBysI,EAAwBjD,EAAI5iH,EAC5B8lH,EAAwBlD,EAAIj6G,EAE5Bq9G,EAAmBllJ,EAAO2O,IAC1Bw2I,EAAqBnlJ,EAAO0O,MAE5B+4I,EAAYxjG,UAAUjhB,IAAI,iBAC1BykH,EAAYxjG,UAAUK,OAAO,aAE7B4oG,GAAU,YAAapwG,GACvB6rG,MAQF,SAASoD,EAAsBjvG,GAC7B,GAAI98C,EAAO6O,UAAY7O,EAAO4O,KAC5B3B,EAAMguI,QAAQ0J,EAAU,SACnB,CACL,IAAIyI,EAASC,GAAmBvwG,GAChC7vC,EAAMsgJ,OAAOH,EAAO,GAAIA,EAAO,GAAIptJ,EAAO6O,QAAS,MAUvD,SAASw+I,GAAmBvwG,GAC1B,IAAIglG,EAAMgG,EAAchrG,GACpB0wG,EAASjJ,EAASkJ,YAClBC,EAAcF,EAAOG,YACvBC,EAAeJ,EAAOK,aACpB3uH,EAAI4iH,EAAI5iH,EAAIwuH,EAAc,EAAI,EAC9B7lH,GAAK,EAAIi6G,EAAIj6G,EAAI+lH,EAAe,GAAKA,EAAeF,EACpDI,EAAQ,EAAIrmJ,KAAKsmJ,IAAI/tJ,EAAO4O,KAAOnH,KAAKqlJ,GAAK,KAC7Cr8E,EAAIhpE,KAAKumJ,IAAIhuJ,EAAO0O,MAAQjH,KAAKqlJ,GAAK,KACtC18I,EAAI3I,KAAKwmJ,IAAIjuJ,EAAO0O,MAAQjH,KAAKqlJ,GAAK,KACtC3+I,EAAI2/I,EAAQ19I,EAAIy3B,EAAI4oC,EACpBy9E,EAAOzmJ,KAAKmqD,KAAK1yB,EAAEA,EAAI/wB,EAAEA,GACzBO,EAAgD,IAAxCjH,KAAK0mJ,MAAMtmH,EAAIz3B,EAAI09I,EAAQr9E,GAAKy9E,GAAczmJ,KAAKqlJ,GAC3Dn+I,EAAuC,IAAjClH,KAAK2mJ,MAAMlvH,EAAIgvH,EAAM//I,EAAI+/I,GAAczmJ,KAAKqlJ,GAAK9sJ,EAAO2O,IAKlE,OAJIA,GAAO,MACRA,GAAO,KACNA,EAAM,MACPA,GAAO,MACFD,EAAOC,GAQjB,SAASi9I,GAAoB9uG,GAC3B,GAAI+nG,GAAqBl5B,EAAQ,CAC/Bm5B,EAAoBxmJ,KAAKga,MACzB,IAAIk1I,EAASjJ,EAASkJ,YAClBC,EAAcF,EAAOG,YACvBC,EAAeJ,EAAOK,aACpB/L,EAAMgG,EAAchrG,GAEpBnuC,EAA2G,KAAnGlH,KAAK0mJ,KAAKpJ,EAAwB2I,EAAc,EAAI,GAAKjmJ,KAAK0mJ,KAAKrM,EAAI5iH,EAAIwuH,EAAc,EAAI,IAAYjmJ,KAAKqlJ,GAAK9sJ,EAAO4O,KAAO,GAAMs2I,EACnJK,EAAM52I,KAAOA,EAAM3O,EAAO2O,KAAO,IAAM,GACvC3O,EAAO2O,IAAMA,EAEb,IAAI0/I,EAAO,EAAI5mJ,KAAK0mJ,KAAK1mJ,KAAKsmJ,IAAI/tJ,EAAO4O,KAAK,IAAInH,KAAKqlJ,IAAMc,EAAeF,GAAe,IAAMjmJ,KAAKqlJ,GAElGp+I,EAA+G,KAArGjH,KAAK0mJ,KAAKrM,EAAIj6G,EAAI+lH,EAAe,EAAI,GAAKnmJ,KAAK0mJ,KAAKnJ,EAAwB4I,EAAe,EAAI,IAAYnmJ,KAAKqlJ,GAAKuB,EAAO,GAAMlJ,EAChJI,EAAM72I,MAAiC,IAAxBA,EAAQ1O,EAAO0O,OAC9B1O,EAAO0O,MAAQA,GAQnB,SAASm9I,GAAkB/uG,GACpB+nG,IAGLA,GAAoB,EAChBvmJ,KAAKga,MAAQwsI,EAAoB,KAGnCS,EAAM72I,MAAQ62I,EAAM52I,IAAM,GAE5B84I,EAAYxjG,UAAUjhB,IAAI,aAC1BykH,EAAYxjG,UAAUK,OAAO,iBAC7BwgG,EAAoBxmJ,KAAKga,MAEzB40I,GAAU,UAAWpwG,IASvB,SAAS4vG,GAAqB5vG,GAE5B,GAAK6uE,GAAW3rH,EAAOwzI,UAAvB,CAKA8Z,KAEApE,KACAlpJ,EAAOimJ,KAAO,EAEdV,EAAM32I,KAAO,EAGb,IAAI0/I,EAAOxG,EAAchrG,EAAMnyB,cAAc,IAK7C,GAHAo6H,EAAwBuJ,EAAKpvH,EAC7B8lH,EAAwBsJ,EAAKzmH,EAEK,GAA9BiV,EAAMnyB,cAAc1oB,OAAa,CAEnC,IAAIssJ,EAAOzG,EAAchrG,EAAMnyB,cAAc,IAC7Co6H,GAA6C,IAAnBwJ,EAAKrvH,EAAIovH,EAAKpvH,GACxC8lH,GAA6C,IAAnBuJ,EAAK1mH,EAAIymH,EAAKzmH,GACxCo9G,EAA2Bx9I,KAAKmqD,MAAM08F,EAAKpvH,EAAIqvH,EAAKrvH,IAAMovH,EAAKpvH,EAAIqvH,EAAKrvH,IAClCovH,EAAKzmH,EAAI0mH,EAAK1mH,IAAMymH,EAAKzmH,EAAI0mH,EAAK1mH,IAE1Eg9G,GAAoB,EACpBC,EAAoBxmJ,KAAKga,MAEzB4sI,EAAmBllJ,EAAO2O,IAC1Bw2I,EAAqBnlJ,EAAO0O,MAE5Bw+I,GAAU,aAAcpwG,GACxB6rG,MASF,SAASgE,GAAoB7vG,GAC3B,GAAK98C,EAAOwzI,YAKZ12F,EAAMhlC,iBACF6zG,IACFm5B,EAAoBxmJ,KAAKga,OAEvBusI,GAAqBl5B,GAAQ,CAC/B,IAAI2iC,EAAOxG,EAAchrG,EAAMnyB,cAAc,IACzC3G,EAAUsqI,EAAKpvH,EACfjb,EAAUqqI,EAAKzmH,EAEnB,GAAkC,GAA9BiV,EAAMnyB,cAAc1oB,SAA4C,GAA7BgjJ,EAAgC,CACrE,IAAIsJ,EAAOzG,EAAchrG,EAAMnyB,cAAc,IAC7C3G,GAA+B,IAAnBuqI,EAAKrvH,EAAIovH,EAAKpvH,GAC1Bjb,GAA+B,IAAnBsqI,EAAK1mH,EAAIymH,EAAKzmH,GAC1B,IAAI2mH,EAAa/mJ,KAAKmqD,MAAM08F,EAAKpvH,EAAIqvH,EAAKrvH,IAAMovH,EAAKpvH,EAAIqvH,EAAKrvH,IAChCovH,EAAKzmH,EAAI0mH,EAAK1mH,IAAMymH,EAAKzmH,EAAI0mH,EAAK1mH,IAChEozG,GAAQj7I,EAAO4O,KAAiD,IAAzCq2I,EAA2BuJ,IAClDvJ,EAA2BuJ,EAU7B,IAAIC,EAA0BzuJ,EAAO4O,KAAO,IAAO5O,EAAO4mJ,yBAEtDj4I,GAAOo2I,EAAwB/gI,GAAWyqI,EAAyBvJ,EACvEK,EAAM52I,KAAOA,EAAM3O,EAAO2O,KAAO,IAAM,GACvC3O,EAAO2O,IAAMA,EAEb,IAAID,GAASuV,EAAU+gI,GAAyByJ,EAAyBtJ,EACzEI,EAAM72I,MAAiC,IAAxBA,EAAQ1O,EAAO0O,OAC9B1O,EAAO0O,MAAQA,GAQnB,SAASk+I,KACP/H,GAAoB,EAChBvmJ,KAAKga,MAAQwsI,EAAoB,MACnCS,EAAM72I,MAAQ62I,EAAM52I,IAAM,GAE5Bs2I,GAA4B,EAC5BH,EAAoBxmJ,KAAKga,MAEzB40I,GAAU,WAAYpwG,OA7nBxBm2F,EAAQ5kI,UAAY,0CACpBo5I,EAAY/2H,YAAYuiH,GAGpBqR,EAAcoK,WAEhBC,GAAYrK,EAAcoK,YACjBpK,EAActjH,SAAWsjH,EAActjH,QAAQ0tH,WAExDC,GAAYrK,EAActjH,QAAQ0tH,YAElCC,GAAY,MAEdlG,IAAe,GAmnBf,IAAImG,MACFC,MAMF,SAAStC,GAAsBzvG,GACJ,SAArBA,EAAM33B,cACRypI,GAAW5tJ,KAAK87C,EAAMj4B,WACtBgqI,GAAmB7tJ,MAAOgjB,QAAS84B,EAAM94B,QAASC,QAAS64B,EAAM74B,UACjE64B,EAAMnyB,cAAgBkkI,GACtBnC,GAAqB5vG,GACrBA,EAAMhlC,kBASV,SAAS00I,GAAsB1vG,GAC7B,GAAyB,SAArBA,EAAM33B,YACR,IAAK,IAAI7kB,EAAI,EAAGA,EAAIsuJ,GAAW3sJ,OAAQ3B,IACrC,GAAIw8C,EAAMj4B,WAAa+pI,GAAWtuJ,GAMhC,OALAuuJ,GAAmBvuJ,GAAG0jB,QAAU84B,EAAM94B,QACtC6qI,GAAmBvuJ,GAAG2jB,QAAU64B,EAAM74B,QACtC64B,EAAMnyB,cAAgBkkI,GACtBlC,GAAoB7vG,QACpBA,EAAMhlC,iBAYd,SAAS20I,GAAoB3vG,GAC3B,GAAyB,SAArBA,EAAM33B,YAAwB,CAEhC,IADA,IAAI2pI,GAAU,EACLxuJ,EAAI,EAAGA,EAAIsuJ,GAAW3sJ,OAAQ3B,IACjCw8C,EAAMj4B,WAAa+pI,GAAWtuJ,KAC/BsuJ,GAAWtuJ,GAAKswC,GACfg+G,GAAWtuJ,KACZwuJ,GAAU,GAEVA,IACHF,MACAC,MACAjC,MAEF9vG,EAAMhlC,kBASV,SAASg0I,GAAqBhvG,GAEvB6uE,IAA+B,kBAApB3rH,EAAOgP,WAAkCq2I,KAIzDvoG,EAAMhlC,iBAGNw1I,KACAxI,EAAoBxmJ,KAAKga,MAErBwkC,EAAM5xB,aAER+vH,GAAQj7I,EAAO4O,KAA2B,IAApBkuC,EAAM5xB,aAC5Bq6H,EAAM32I,KAAOkuC,EAAM3xB,WAAa,EAAI,GAAK,GAChC2xB,EAAM3xB,YAEf8vH,GAAQj7I,EAAO4O,KAA0B,IAAnBkuC,EAAM3xB,YAC5Bo6H,EAAM32I,KAAOkuC,EAAM3xB,WAAa,EAAI,GAAK,GAChC2xB,EAAMjjC,SAEfohI,GAAQj7I,EAAO4O,KAAsB,IAAfkuC,EAAMjjC,QAC5B0rI,EAAM32I,KAAOkuC,EAAMjjC,OAAS,EAAI,GAAK,GAGvC8uI,MAQF,SAASuD,GAAmBpvG,GAE1BwwG,KACAxI,EAAoBxmJ,KAAKga,MAEzB4wI,KACAlpJ,EAAOimJ,KAAO,EAGd,IAAI8I,EAAYjyG,EAAM7iC,OAAS6iC,EAAMkyG,QAGjChvJ,EAAO6mJ,mBAAmBh1I,QAAQk9I,GAAa,IAEnDjyG,EAAMhlC,iBAGW,IAAbi3I,EAEE1J,GACFyD,KAIFmG,GAAUF,GAAW,IAQzB,SAAS3C,KACP,IAAK,IAAI9rJ,EAAI,EAAGA,EAAI,GAAIA,IACtB8kJ,EAAS9kJ,IAAK,EASlB,SAAS6rJ,GAAgBrvG,GAEvB,IAAIiyG,EAAYjyG,EAAM7iC,OAAS6iC,EAAMkyG,QAGjChvJ,EAAO6mJ,mBAAmBh1I,QAAQk9I,GAAa,IAEnDjyG,EAAMhlC,iBAGNm3I,GAAUF,GAAW,IASvB,SAASE,GAAUF,EAAWtjJ,GAC5B,IAAIyjJ,GAAa,EACjB,OAAQH,GAEN,KAAK,IAAK,KAAK,IAAK,KAAK,GAAI,KAAK,IAC5B3J,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,IAAK,KAAK,IAAK,KAAK,GAAI,KAAK,GAC5B25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAAO,MAGvB,KAAK,GACC25I,EAAS,IAAM35I,IAASyjJ,GAAa,GACzC9J,EAAS,GAAK35I,EAGdyjJ,GAAczjJ,IAEdg5I,EADyB,oBAAhBh+D,aAA+BA,YAAYnuE,MACzCmuE,YAAYnuE,MAEZha,KAAKga,MAElBqwI,MAiKJ,SAASwG,GAAY7O,GACnB,IAAIrwI,EAAI21I,EAAatF,GACjB8O,EAAW3nJ,KAAKwgC,IAAI,EAAGxgC,KAAK6+C,KAAKhoD,KAAKga,MAAQrI,EAAEk9B,WAAa,KAAQl9B,EAAElM,SAAW,KAAO,IACzFxD,EAAS0P,EAAEo/I,cAAgBrvJ,EAAO0mJ,wBAAwB0I,IAAan/I,EAAEq/I,YAAcr/I,EAAEo/I,eAC7F,GAAKp/I,EAAEq/I,YAAcr/I,EAAEo/I,eAAiB9uJ,GAAU0P,EAAEq/I,aACjDr/I,EAAEq/I,YAAcr/I,EAAEo/I,eAAiB9uJ,GAAU0P,EAAEq/I,aAChDr/I,EAAEq/I,cAAgBr/I,EAAEo/I,cAAe,CACnC9uJ,EAAS0P,EAAEq/I,YACX/J,EAAMjF,GAAQ,EACd,IAAIhmH,EAAWsrH,EAAatF,GAAMhmH,SAChCi1H,EAAe3J,EAAatF,GAAMiP,oBAC7B3J,EAAatF,GACI,mBAAbhmH,GACRA,EAASi1H,GAEdvvJ,EAAOsgJ,GAAQ//I,EAiBjB,SAAS0rJ,KAMPD,KAOF,SAASrD,KACHnD,IAGJA,GAAY,EACZgK,MAOF,SAASA,KAIP,GA0CF,WACE,IAAIC,EAEJ,GAAI9jC,EAAQ,CACN3rH,EAAO2O,IAAM,IACf3O,EAAO2O,KAAO,IACL3O,EAAO2O,KAAO,MACvB3O,EAAO2O,KAAO,KAIhB8gJ,EAASzvJ,EAAO2O,IAGhB,IAAI+gJ,EAAU,EAEd,GAAI1vJ,EAAOymJ,uBAAwB,CACjC,IAAI+G,EAASjJ,EAASkJ,YACpBkC,EAAQ3vJ,EAAO4O,KAAO,EACtBghJ,EAAsF,IAA9EnoJ,KAAK2mJ,MAAM3mJ,KAAKsmJ,IAAI4B,EAAQ,IAAMloJ,KAAKqlJ,IAAMU,EAAO9tJ,MAAQ8tJ,EAAO7tJ,QAAiB8H,KAAKqlJ,GACjG+C,EAAa7vJ,EAAOmmJ,KAAOnmJ,EAAOkmJ,KAChC2J,EACQD,GAAS,EAAInoJ,KAAKwgC,IAAIxgC,KAAKwmJ,KAAKjuJ,EAAO0O,MAAQihJ,GAAS,IAAMloJ,KAAKqlJ,IAC3ErlJ,KAAKwmJ,KAAKjuJ,EAAO0O,MAAQihJ,GAAS,IAAMloJ,KAAKqlJ,MAE/C4C,EAAUC,GAAS,EAAIloJ,KAAKwgC,IAAIxgC,KAAKwmJ,KAAKjuJ,EAAO0O,MAAQkhJ,GAAS,IAAMnoJ,KAAKqlJ,IAC3ErlJ,KAAKwmJ,KAAKjuJ,EAAO0O,MAAQkhJ,GAAS,IAAMnoJ,KAAKqlJ,MAKnD,IAAIgD,EAAW9vJ,EAAO+yI,OAAS/yI,EAAO8yI,OACpCA,GAAU,IACVC,EAAS,IACP+c,EAAW,MACbhd,EAAS9yI,EAAO8yI,OAAS9yI,EAAO4O,KAAO,EAAI8gJ,EAC3C3c,EAAS/yI,EAAO+yI,OAAS/yI,EAAO4O,KAAO,EAAI8gJ,EACvCI,EAAW9vJ,EAAO4O,OAEpBkkI,EAASC,GAAUD,EAASC,GAAU,GAExC/yI,EAAO2O,IAAMlH,KAAK6+C,IAAIwsF,EAAQrrI,KAAKwgC,IAAI8qG,EAAQ/yI,EAAO2O,QAK9B,IAAtB3O,EAAOgzI,YAAwByc,GAAUzvJ,EAAO2O,KAChD81I,IAAa7zG,IACf5wC,EAAOgzI,aAAe,GAIxB,IAAIwa,EAASjJ,EAASkJ,YAClBY,EAAO,EAAI5mJ,KAAK0mJ,KAAK1mJ,KAAKsmJ,IAAI/tJ,EAAO4O,KAAO,IAAMnH,KAAKqlJ,GAAK,KAC3DU,EAAO9tJ,MAAQ8tJ,EAAO7tJ,SAAW8H,KAAKqlJ,GAAK,IAC5Cla,EAAW5yI,EAAO4yI,SAAWyb,EAAO,EACtCxb,EAAW7yI,EAAO6yI,SAAWwb,EAAO,EAClC0B,EAAa/vJ,EAAO6yI,SAAW7yI,EAAO4yI,SACtCmd,EAAa1B,IAEfzb,EAAWC,GAAYD,EAAWC,GAAY,GAE5CtyH,MAAMqyH,KACPA,GAAY,IACXryH,MAAMsyH,KACPA,EAAW,IACd7yI,EAAO0O,MAAQjH,KAAK6+C,IAAIssF,EAAUnrI,KAAKwgC,IAAI4qG,EAAU7yI,EAAO0O,QAE5D61I,EAASv2I,OAAOhO,EAAO0O,MAAQjH,KAAKqlJ,GAAK,IAAK9sJ,EAAO2O,IAAMlH,KAAKqlJ,GAAK,IAAK9sJ,EAAO4O,KAAOnH,KAAKqlJ,GAAK,KAAO7G,KAAMjmJ,EAAOimJ,KAAOx+I,KAAKqlJ,GAAK,MAEvIkD,KAGIhwJ,EAAOizI,UACTA,EAAQ/8H,MAAM+5I,UAAY,YAAcjwJ,EAAO2O,IAAM3O,EAAOumJ,aAAe,OAC3EtT,EAAQ/8H,MAAMg6I,gBAAkB,YAAclwJ,EAAO2O,IAAM3O,EAAOumJ,aAAe,SAxHrFv4I,GACI02I,GACD9yG,aAAa8yG,GACZG,IAAqC,IAAhBY,EACvBhoG,sBAAsB+xG,SACjB,GAAIpK,EAAS,IAAMA,EAAS,IAAMA,EAAS,IAAMA,EAAS,IAC/DA,EAAS,IAAMA,EAAS,IAAMA,EAAS,IAAMA,EAAS,IACtDA,EAAS,IAAMA,EAAS,IAAMplJ,EAAOgzI,YACrC4S,EAAal3I,OAASk3I,EAAaj3I,KAAOi3I,EAAah3I,MACvDnH,KAAKg5F,IAAI8kD,EAAM52I,KAAO,KAAQlH,KAAKg5F,IAAI8kD,EAAM72I,OAAS,KACtDjH,KAAKg5F,IAAI8kD,EAAM32I,MAAQ,KA5N3B,WAEE,GAAK+8G,EAAL,CAIA,IAMI32C,EANAm7E,GAAY,EAEZC,EAAYpwJ,EAAO0O,MACnB2hJ,EAAUrwJ,EAAO2O,IACjB2hJ,EAAWtwJ,EAAO4O,KAIpBomE,EADyB,oBAAhByR,aAA+BA,YAAYnuE,MAC1CmuE,YAAYnuE,MAEZha,KAAKga,MAEbmsI,IAAa7zG,IACf6zG,EAAWzvE,GAEb,IAAIsiD,GAAQtiD,EAAUyvE,GAAYzkJ,EAAO4O,KAAO,KAgDhD,GA/CA0oH,EAAO7vH,KAAKwgC,IAAIqvF,EAAM,GAGlB8tB,EAAS,KAA8B,IAAxBplJ,EAAOuzI,eACxB0H,GAAQj7I,EAAO4O,MAAqB,GAAb22I,EAAM32I,KAAa,IAAO0oH,GACjD64B,GAAY,GAIV/K,EAAS,KAA8B,IAAxBplJ,EAAOuzI,eACxB0H,GAAQj7I,EAAO4O,MAAqB,GAAb22I,EAAM32I,KAAa,IAAO0oH,GACjD64B,GAAY,IAIV/K,EAAS,IAAMA,EAAS,MAE1BplJ,EAAO0O,QAAwB,GAAd62I,EAAM72I,MAAc,IAAO4oH,EAC5C64B,GAAY,IAIV/K,EAAS,IAAMA,EAAS,MAE1BplJ,EAAO0O,QAAwB,GAAd62I,EAAM72I,MAAc,IAAO4oH,EAC5C64B,GAAY,IAIV/K,EAAS,IAAMA,EAAS,MAE1BplJ,EAAO2O,MAAoB,GAAZ42I,EAAM52I,IAAY,IAAO2oH,EACxC64B,GAAY,IAIV/K,EAAS,IAAMA,EAAS,MAE1BplJ,EAAO2O,MAAoB,GAAZ42I,EAAM52I,IAAY,IAAO2oH,EACxC64B,GAAY,GAGVA,IACDrL,EAAoBxmJ,KAAKga,OAGHha,KAAKga,MAC1BtY,EAAOgzI,WAAY,CAErB,GAAIh+D,EAAUyvE,EAAW,KAAO,CAC9B,IAAI8L,GAAYv7E,EAAUyvE,GAAY,IAClC+L,GAAWjL,EAAM52I,IAAM4hJ,EAAWj5B,EAA2B,GAApBt3H,EAAOgzI,YAAoBud,EACxEC,IAAYxwJ,EAAOgzI,WAAa,EAAI,GAAK,GAAKvrI,KAAKwgC,IAAIxgC,KAAKg5F,IAAIzgG,EAAOgzI,WAAaud,GAAW9oJ,KAAKg5F,IAAI+vD,IACxGxwJ,EAAO2O,KAAO6hJ,EAIZxwJ,EAAOsmJ,sBACTtmJ,EAAOsmJ,qBAAuBtxE,EAAUyvE,EACpCzkJ,EAAOsmJ,qBAAuB,IAChCtmJ,EAAOsmJ,qBAAsB,EAC7BX,EAAkB3lJ,EAAOgzI,WACzBhzI,EAAOgzI,WAAa,IAuC1B,GAjCI4S,EAAal3I,QACfygJ,GAAY,SACZiB,EAAYpwJ,EAAO0O,OAEjBk3I,EAAaj3I,MACfwgJ,GAAY,OACZkB,EAAUrwJ,EAAO2O,KAEfi3I,EAAah3I,OACfugJ,GAAY,QACZmB,EAAWtwJ,EAAO4O,MAIhB0oH,EAAO,IAAMt3H,EAAOgzI,aAKjBoS,EAAS,IAAOA,EAAS,IAAOA,EAAS,IAAOA,EAAS,IAAOQ,EAAaj3I,MAChF3O,EAAO2O,KAAO42I,EAAM52I,IAAM2oH,EAJb,KAOV8tB,EAAS,IAAOA,EAAS,IAAOA,EAAS,IAAOA,EAAS,IAAOQ,EAAal3I,QAChF1O,EAAO0O,OAAS62I,EAAM72I,MAAQ4oH,EARjB,KAWV8tB,EAAS,IAAOA,EAAS,IAAOQ,EAAah3I,MAChDqsI,GAAQj7I,EAAO4O,KAAO22I,EAAM32I,KAAO0oH,EAZtB,MAgBjBmtB,EAAWzvE,EACPsiD,EAAO,EAAG,CACZiuB,EAAM52I,IAAkB,GAAZ42I,EAAM52I,KAAa3O,EAAO2O,IAAM0hJ,GAAW/4B,EAAO,GAC9DiuB,EAAM72I,MAAsB,GAAd62I,EAAM72I,OAAe1O,EAAO0O,MAAQ0hJ,GAAa94B,EAAO,GACtEiuB,EAAM32I,KAAoB,GAAb22I,EAAM32I,MAAc5O,EAAO4O,KAAO0hJ,GAAYh5B,EAAO,GAGlE,IAAIm5B,EAAWzwJ,EAAOgzI,WAAavrI,KAAKg5F,IAAIzgG,EAAOgzI,YAAc,EACjEuS,EAAM52I,IAAMlH,KAAKwgC,IAAIwoH,EAAUhpJ,KAAK6+C,IAAIi/F,EAAM52I,KAAM8hJ,IACpDlL,EAAM72I,MAAQjH,KAAKwgC,IAAIwoH,EAAUhpJ,KAAK6+C,IAAIi/F,EAAM72I,OAAQ+hJ,IACxDlL,EAAM32I,KAAOnH,KAAKwgC,IAAIwoH,EAAUhpJ,KAAK6+C,IAAIi/F,EAAM32I,MAAO6hJ,IAIpDrL,EAAS,IAAMA,EAAS,KAC1BG,EAAM32I,KAAO,IAEVw2I,EAAS,IAAMA,EAAS,MAAQA,EAAS,IAAMA,EAAS,MAC3DG,EAAM72I,MAAQ,IAEX02I,EAAS,IAAMA,EAAS,MAAQA,EAAS,IAAMA,EAAS,MAC3DG,EAAM52I,IAAM,IA+EZ+hJ,GACI1wJ,EAAOqmJ,2BAA6B,GAAKV,GACzCrnJ,KAAKga,MAAQwsI,EAAoB9kJ,EAAOqmJ,4BACvCrmJ,EAAOgzI,aACVhzI,EAAOgzI,WAAa2S,EACpB14I,EAAMsgJ,OAAO3I,EAAWh0G,EAAW+zG,EAAU,MAE/ClnG,sBAAsB+xG,SACjB,GAAIjL,IAAaA,EAASoM,cAAmC,IAAnB3wJ,EAAOqvI,SAAoBnjE,GAC1EzuB,sBAAsB+xG,QACjB,CACLhK,GAAY,EACZf,EAAW7zG,EACX,IAAIggH,EAAsB5wJ,EAAOqmJ,2BAC5B/nJ,KAAKga,MAAQwsI,GACd8L,EAAsB,EACxBlM,EAAkB5iH,WAAW,WAC3B9hC,EAAOgzI,WAAa2S,EACpB14I,EAAMsgJ,OAAO3I,EAAWh0G,EAAW+zG,EAAU,KAC7CgE,MACCiI,GACM5wJ,EAAOqmJ,2BAA6B,GAAKV,IAClD3lJ,EAAOgzI,WAAa2S,EACpB14I,EAAMsgJ,OAAO3I,EAAWh0G,EAAW+zG,EAAU,KAC7CgE,OAkGN,SAASkI,GAAWjpH,EAAG1I,EAAG2I,EAAGh9B,GAC3BmC,KAAK46B,EAAIA,EACT56B,KAAKkyB,EAAIA,EACTlyB,KAAK66B,EAAIA,EACT76B,KAAKnC,EAAIA,EA4DX,SAASimJ,GAAkBtH,EAAOC,EAAMC,GAEtC,IAAIqH,EAxBN,SAA+BvH,EAAOC,EAAMC,GAC1C,IAAI5uH,GAAK2uH,EAAOA,EAAOhiJ,KAAKqlJ,GAAK,IAAM,EAAI,EACzCpD,EAAQA,EAAQjiJ,KAAKqlJ,GAAK,IAAM,EAAI,EACpCtD,EAAQA,EAAQ/hJ,KAAKqlJ,GAAK,IAAM,EAAI,GAClC18I,GAAK3I,KAAKwmJ,IAAInzH,EAAE,IAAKrzB,KAAKwmJ,IAAInzH,EAAE,IAAKrzB,KAAKwmJ,IAAInzH,EAAE,KAClD21C,GAAKhpE,KAAKumJ,IAAIlzH,EAAE,IAAKrzB,KAAKumJ,IAAIlzH,EAAE,IAAKrzB,KAAKumJ,IAAIlzH,EAAE,KAElD,OAAO,IAAI+1H,GAAWzgJ,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAKqgE,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACjDA,EAAE,GAAGrgE,EAAE,GAAGA,EAAE,GAAKA,EAAE,GAAGqgE,EAAE,GAAGA,EAAE,GAC7BrgE,EAAE,GAAGqgE,EAAE,GAAGrgE,EAAE,GAAKqgE,EAAE,GAAGrgE,EAAE,GAAGqgE,EAAE,GAC7BrgE,EAAE,GAAGA,EAAE,GAAGqgE,EAAE,GAAKA,EAAE,GAAGA,EAAE,GAAGrgE,EAAE,IAcd4gJ,CAAsBxH,EAAOC,EAAMC,GAEpDqH,EAAaA,EAAWE,SAAS,IAAIJ,GAAWppJ,KAAKmqD,KAAK,KAAOnqD,KAAKmqD,KAAK,IAAM,EAAG,IAEpF,IAAIs/F,EAAQthJ,EAAO61I,aAAe71I,EAAO61I,YAAch+I,KAAKqlJ,GAAK,IAAM,EAAI,EAC3E,OAAOiE,EAAWE,SAAS,IAAIJ,GAAWppJ,KAAKwmJ,IAAIiD,GAAQ,GAAIzpJ,KAAKumJ,IAAIkD,GAAQ,IAQlF,SAASC,GAAoB5gJ,GAC3B,IAAIuuB,EAAIgyH,GAAkBvgJ,EAAEi5I,MAAOj5I,EAAEk5I,KAAMl5I,EAAEm5I,OAAO0H,gBACxB,iBAAjB3L,GAA6BA,EAAc,GAKpDA,GAAe,EACU,KAAhBA,GAETC,EAAuB5mH,EAAE,GAAKr3B,KAAKqlJ,GAAK,IAAM9sJ,EAAO2O,IACrD82I,GAAc,EACdhoG,sBAAsB+xG,MAEtBxvJ,EAAO0O,MAAQowB,EAAE,GAAKr3B,KAAKqlJ,GAAK,IAChC9sJ,EAAOimJ,MAAQnnH,EAAE,GAAKr3B,KAAKqlJ,GAAK,IAChC9sJ,EAAO2O,KAAOmwB,EAAE,GAAKr3B,KAAKqlJ,GAAK,IAAMpH,GA2CzC,SAASqH,KAEP,GAAI/sJ,EAAOqxJ,mBAAqB9M,EAAS+M,UAAY1gH,EAAW,CAC9D2zG,EAAS+M,QAAQp7I,MAAM0c,QAAU,EAEjC,IAAI0+H,EAAU/M,EAAS+M,eAChB/M,EAAS+M,QAChBxvH,WAAW,WACT4lH,EAAgBj3H,YAAY6gI,GAC5BpE,GAAU,wBACTltJ,EAAOqxJ,mBAIRrxJ,EAAOizI,QACTA,EAAQ/8H,MAAM25H,QAAU,SAExBoD,EAAQ/8H,MAAM25H,QAAU,OAgH5B,WACE,GAAIkW,EAAkB,OAEjB/lJ,EAAO2zI,UAIV3zI,EAAO2zI,SAAW3zI,EAAO2zI,SAAS7xC,KAAK,SAAS3zF,EAAG+B,GACjD,OAAO/B,EAAEO,MAAQwB,EAAExB,QAErB1O,EAAO2zI,SAASxgI,QAAQo+I,KANxBvxJ,EAAO2zI,YAQToS,GAAkB,EAClBiK,KAzHAwB,GAGAvJ,EAAY9lF,KAAK13D,IAAIyL,MAAM25H,QAAU,OACjCqD,IAAYtiG,IACd82G,EAAgBj3H,YAAYyiH,GAC5BA,EAAUtiG,GAEZ+6E,GAAS,EAETuhC,GAAU,QAEVvE,KAQF,SAAS4I,GAAcpW,GAErBA,EAAGzsI,MAAQqvE,OAAOo9D,EAAGzsI,QAAU,EAC/BysI,EAAGxsI,IAAMovE,OAAOo9D,EAAGxsI,MAAQ,EAE3B,IAAIiwD,EAAMppD,EAASpH,cAAc,OACjCwwD,EAAIvwD,UAAY,oBACZ8sI,EAAGlJ,SACJrzE,EAAIvwD,WAAa,IAAM8sI,EAAGlJ,SAE1BrzE,EAAIvwD,WAAa,kCAAoCojJ,GAAWtW,EAAG5wI,MAEtE,IAII4D,EAJAujJ,EAAOl8I,EAASpH,cAAc,QAKlC,GAJI+sI,EAAG7rI,OACJoiJ,EAAKlhI,UAAYihI,GAAWtW,EAAG7rI,OAG9B6rI,EAAG5sI,MAAO,CACZ,IAAIA,EAAQiH,EAASpH,cAAc,SACjCwwB,EAAIu8G,EAAG5sI,MACLvO,EAAO6pJ,WAAaM,EAAYvrH,KACjCA,EAAI5+B,EAAO6pJ,SAAWjrH,GACzBrwB,EAAMgpD,IAAM6yF,GAAYxrH,GACxBrwB,EAAM8qD,UAAW,EACjB9qD,EAAM2H,MAAMxW,MAAQy7I,EAAGz7I,MAAQ,KAC/BgoJ,EAAgBh3H,YAAYkuC,GAC5B8yF,EAAKhhI,YAAYniB,QACZ,GAAI4sI,EAAGxI,MAAO,CACf/zG,EAAIu8G,EAAGxI,MACP3yI,EAAO6pJ,WAAaM,EAAYvrH,KACjCA,EAAI5+B,EAAO6pJ,SAAWjrH,IACzBzwB,EAAIqH,EAASpH,cAAc,MACzBowD,KAAO4rF,GAAYjP,EAAG5rI,IAAM4rI,EAAG5rI,IAAMqvB,GACvCzwB,EAAEgJ,OAAS,SACXu6I,EAAKhhI,YAAYviB,GACjB,IAAIwkI,EAAQn9H,EAASpH,cAAc,OACnCukI,EAAMp7E,IAAM6yF,GAAYxrH,GACxB+zG,EAAMz8H,MAAMxW,MAAQy7I,EAAGz7I,MAAQ,KAC/BizI,EAAMz8H,MAAMy7I,WAAa,MACzBjK,EAAgBh3H,YAAYkuC,GAC5BzwD,EAAEuiB,YAAYiiH,GACd+e,EAAKx7I,MAAM82I,SAAW,eACb7R,EAAG5rI,MACZpB,EAAIqH,EAASpH,cAAc,MACzBowD,KAAO4rF,GAAYjP,EAAG5rI,KACxBpB,EAAEgJ,OAAS,SACXuwI,EAAgBh3H,YAAYviB,GAC5BywD,EAAIvwD,WAAa,gBACjBqjJ,EAAKrjJ,WAAa,gBAClBF,EAAEuiB,YAAYkuC,KAEVu8E,EAAGyW,UACLhzF,EAAIr8B,QAAUq8B,EAAIizF,WAAa,WAK7B,OAJKjzF,EAAIkzF,UACPlzF,EAAIkzF,SAAU,EACdC,GAAU5W,EAAGyW,QAASzW,EAAG6W,YAAa7W,EAAG8W,UAAW9W,EAAG+W,cAElD,GAETtzF,EAAIvwD,WAAa,gBACjBqjJ,EAAKrjJ,WAAa,iBAEpBq5I,EAAgBh3H,YAAYkuC,IAG1Bu8E,EAAGjJ,kBACLiJ,EAAGjJ,kBAAkBtzE,EAAKu8E,EAAG9I,oBACpB8I,EAAG7rI,MAAQ6rI,EAAG5sI,OAAS4sI,EAAGxI,SACnC/zE,EAAI3a,UAAUjhB,IAAI,gBAClB47B,EAAIluC,YAAYghI,GAChBA,EAAKx7I,MAAMxW,MAAQgyJ,EAAKS,YAAc,GAAK,KAC3CT,EAAKx7I,MAAMk8I,aAAeV,EAAKS,YAAcvzF,EAAI3Y,aAAe,EAAI,KACpEyrG,EAAKx7I,MAAMm8I,WAAaX,EAAKY,aAAe,GAAK,MAE/CnX,EAAG5I,mBACL3zE,EAAInyC,iBAAiB,QAAS,SAASlc,GACrC4qI,EAAG5I,iBAAiBhiI,EAAG4qI,EAAG1I,mBACzB,SACH7zE,EAAIvwD,WAAa,gBACjBqjJ,EAAKrjJ,WAAa,iBAEpB8sI,EAAGv8E,IAAMA,EA+CX,SAAS2zF,GAAcpX,GACrB,IAAIqX,EAAa/qJ,KAAKumJ,IAAI7S,EAAGzsI,MAAQjH,KAAKqlJ,GAAK,KAC7C2F,EAAahrJ,KAAKwmJ,IAAI9S,EAAGzsI,MAAQjH,KAAKqlJ,GAAK,KAC3C4F,EAAiBjrJ,KAAKumJ,IAAIhuJ,EAAO0O,MAAQjH,KAAKqlJ,GAAK,KACnD6F,EAAiBlrJ,KAAKwmJ,IAAIjuJ,EAAO0O,MAAQjH,KAAKqlJ,GAAK,KACnD8F,EAASnrJ,KAAKwmJ,MAAM9S,EAAGxsI,IAAM3O,EAAO2O,KAAOlH,KAAKqlJ,GAAK,KACnDjiJ,EAAI2nJ,EAAaE,EAAiBD,EAAaG,EAASD,EAC5D,GAAKxX,EAAGxsI,KAAO,IAAMwsI,EAAGxsI,KAAO,IAAM9D,GAAK,IACxCswI,EAAGxsI,IAAM,IAAMwsI,EAAGxsI,MAAQ,KAAO9D,GAAK,EACtCswI,EAAGv8E,IAAI1oD,MAAMw5H,WAAa,aACrB,CACL,IAAImjB,EAASprJ,KAAKumJ,MAAM7S,EAAGxsI,IAAM3O,EAAO2O,KAAOlH,KAAKqlJ,GAAK,KACvDgG,EAAUrrJ,KAAKsmJ,IAAI/tJ,EAAO4O,KAAOnH,KAAKqlJ,GAAK,KAC7C3R,EAAGv8E,IAAI1oD,MAAMw5H,WAAa,UAG1B,IAAI8d,EAASjJ,EAASkJ,YACpBC,EAAcF,EAAOG,YACrBC,EAAeJ,EAAOK,aACpBkF,IAAUrF,EAAcoF,EAAUD,EAASJ,EAAa5nJ,EAAI,GAC7D6iJ,EAAcoF,GAAWN,EAAaG,EACrCF,EAAaG,EAASF,GAAkB7nJ,EAAI,GAE5CmoJ,EAAUvrJ,KAAKumJ,IAAIhuJ,EAAOimJ,KAAOx+I,KAAKqlJ,GAAK,KAC7CmG,EAAUxrJ,KAAKwmJ,IAAIjuJ,EAAOimJ,KAAOx+I,KAAKqlJ,GAAK,MAC7CiG,GAASA,EAAM,GAAKE,EAAUF,EAAM,GAAKC,EACvCD,EAAM,GAAKC,EAAUD,EAAM,GAAKE,IAE5B,KAAOvF,EAAcvS,EAAGv8E,IAAI3Y,aAAe,EACjD8sG,EAAM,KAAOnF,EAAezS,EAAGv8E,IAAIzY,cAAgB,EACnD,IAAI8pG,EAAY,aAAe8C,EAAM,GAAK,OAASA,EAAM,GACrD,iCAAmC/yJ,EAAOimJ,KAAO,OACrD9K,EAAGv8E,IAAI1oD,MAAMg6I,gBAAkBD,EAC/B9U,EAAGv8E,IAAI1oD,MAAMg9I,aAAejD,EAC5B9U,EAAGv8E,IAAI1oD,MAAM+5I,UAAYA,GAQ7B,SAASD,KACPhwJ,EAAO2zI,SAASxgI,QAAQo/I,IAQ1B,SAAS5D,GAAYiD,GAEnB,IAAIhhJ,EAAG6/D,EADPzwE,KAEA,IAAImzJ,GAAuB,OAAQ,OAAQ,UAAW,cAAe,eAAgB,eAIrF,IAAKviJ,KAHLk1I,KAGUE,EACJA,EAAc9zI,eAAetB,KAC/B5Q,EAAO4Q,GAAKo1I,EAAcp1I,IAK9B,IAAKA,KAAK0zI,EAActjH,QACtB,GAAIsjH,EAActjH,QAAQ9uB,eAAetB,GACvC,GAAS,WAALA,EACF,IAAK6/D,KAAK6zE,EAActjH,QAAQ4gB,QAC1B0iG,EAActjH,QAAQ4gB,QAAQ1vC,eAAeu+D,KAC/CzwE,EAAO4hD,QAAQ6uB,GAAKghF,GAAWnN,EAActjH,QAAQ4gB,QAAQ6uB,UAIjEzwE,EAAO4Q,GAAK0zI,EAActjH,QAAQpwB,GAC9BuiJ,EAAoBthJ,QAAQjB,IAAM,GACpCk1I,EAA6B9kJ,KAAK4P,GAO1C,GAAiB,OAAZghJ,GAAkC,KAAZA,GAAoBtN,EAAc8O,QAAY9O,EAAc8O,OAAOxB,GAAW,CACvG,IAAIhkJ,EAAQ02I,EAAc8O,OAAOxB,GACjC,IAAKhhJ,KAAKhD,EACR,GAAIA,EAAMsE,eAAetB,GACvB,GAAS,WAALA,EACF,IAAK6/D,KAAK7iE,EAAMg0C,QACVh0C,EAAMg0C,QAAQ1vC,eAAeu+D,KAC/BzwE,EAAO4hD,QAAQ6uB,GAAKghF,GAAW7jJ,EAAMg0C,QAAQ6uB,UAIjDzwE,EAAO4Q,GAAKhD,EAAMgD,GACduiJ,EAAoBthJ,QAAQjB,IAAM,GACpCk1I,EAA6B9kJ,KAAK4P,GAK1C5Q,EAAO4N,MAAQgkJ,EAIjB,IAAKhhJ,KAAK0zI,EACR,GAAIA,EAAcpyI,eAAetB,GAC/B,GAAS,WAALA,EACF,IAAK6/D,KAAK6zE,EAAc1iG,QAClB0iG,EAAc1iG,QAAQ1vC,eAAeu+D,KACvCzwE,EAAO4hD,QAAQ6uB,GAAKghF,GAAWnN,EAAc1iG,QAAQ6uB,UAIzDzwE,EAAO4Q,GAAK0zI,EAAc1zI,GACtBuiJ,EAAoBthJ,QAAQjB,IAAM,GACpCk1I,EAA6B9kJ,KAAK4P,GAY5C,SAAS63I,GAAe4K,GAMtB,IALAA,EAAYA,IAAwB,IAKnB,YAAarzJ,EAAQ,CACpC,IAAI4+B,EAAI5+B,EAAOkzI,QACXlzI,EAAO6pJ,WAAaM,EAAYvrH,KACjCA,EAAI5+B,EAAO6pJ,SAAWjrH,IACzBs0G,EAAU19H,EAASpH,cAAc,QACzBC,UAAY,mBACpB6kI,EAAQh9H,MAAMm2D,gBAAkB,QA8Z3B+9E,GA9ZuDxrH,GA+Z3D9tB,QAAQ,KAAM,OACdA,QAAQ,KAAM,OAhakD,KACjE42I,EAAgBh3H,YAAYwiH,GA4ZhC,IAxZMvlI,EAAQ3N,EAAO2N,MACjB0lI,EAASrzI,EAAOqzI,OAqBlB,IAAK,IAAI9nI,KApBL8nJ,IACE,iBAAkBrzJ,IACnBA,EAAO2N,MAAQ3N,EAAOmzI,cACrB,kBAAmBnzI,IACpBA,EAAOqzI,OAASrzI,EAAOozI,gBAIvBpzI,EAAOkS,eAAe,WACxB+1I,EAAYt6I,MAAM6iB,UAAY,IAC5BxwB,EAAOkS,eAAe,YACxB+1I,EAAY5U,OAAO7iH,UAAY,IAC7BxwB,EAAOkS,eAAe,UAAalS,EAAOkS,eAAe,YAC3D+1I,EAAYrnC,UAAU1qG,MAAM25H,QAAU,QAGzCx2E,EAAS8I,KAAK3xC,UAAY,MAAQxwB,EAAO4hD,QAAQklG,gBAAkB,OACnEmB,EAAY9lF,KAAKgmF,KAAK33H,UAAYxwB,EAAO4hD,QAAQmlG,aAGjC/mJ,EACd,GAAIA,EAAOkS,eAAe3G,GACxB,OAAQA,GACN,IAAK,QACH08I,EAAYt6I,MAAM6iB,UAAYihI,GAAWzxJ,EAAOuL,IAChD08I,EAAYrnC,UAAU1qG,MAAM25H,QAAU,SACtC,MAEF,IAAK,SACHoY,EAAY5U,OAAO7iH,UAAYxwB,EAAO4hD,QAAQolG,YAAYl2I,QAAQ,KAAM2gJ,GAAWzxJ,EAAOuL,KAC1F08I,EAAYrnC,UAAU1qG,MAAM25H,QAAU,SACtC,MAEF,IAAK,WACH,IAAIj7G,EAAOpf,EAASpH,cAAc,KAClCwmB,EAAK4pC,KAAO4rF,GAAYpqJ,EAAOuL,IAC/BqpB,EAAKzd,OAAS,SACdyd,EAAK9d,YAAc,6DACnB,IAAIo/C,EAAU1gD,EAASpH,cAAc,KACrC8nD,EAAQp/C,YAAc,uCACtBo/C,EAAQxlC,YAAYlb,EAASpH,cAAc,OAC3C8nD,EAAQxlC,YAAYkE,GACpBqzH,EAAYO,SAASh4H,UAAY,GACjCy3H,EAAYO,SAAS93H,YAAYwlC,GACjC,MAEF,IAAK,OACH+kF,GAAQl9D,OAAO/9E,EAAOuL,KACtB,MAEF,IAAK,YACiB,IAAhBvL,EAAOuL,IAAiBg5I,IAAa3zG,IAEvCq3G,EAAY9lF,KAAK13D,IAAIyL,MAAM25H,QAAU,SAErCx2E,EAAS8I,KAAKjsD,MAAM25H,QAAU,OAE9BriG,KAEF,MAEF,IAAK,eACCxtC,EAAOuL,IAA+B,GAAvBvL,EAAOyzI,aAExBp6E,EAASnmC,KAAKhd,MAAM25H,QAAU,QAG9Bx2E,EAASnmC,KAAKhd,MAAM25H,QAAU,OAEhC,MAEF,IAAK,qBACC7vI,EAAOuL,IAA+B,GAAvBvL,EAAOyzI,eAA0B,eAAgBj+H,GAAY,kBAAmBA,GAC7F,uBAAwBA,GAAY,wBAAyBA,GAGjE6jD,EAASwvF,WAAW3yI,MAAM25H,QAAU,QAGpCx2E,EAASwvF,WAAW3yI,MAAM25H,QAAU,OAEtC,MAEF,IAAK,eACC7vI,EAAOuL,GACR28I,EAAsBhyI,MAAM25H,QAAU,QAEtCqY,EAAsBhyI,MAAM25H,QAAU,OACzC,MAEF,IAAK,eACE7vI,EAAOuL,KACV8tD,EAASosF,YAAYvvI,MAAM25H,QAAU,OACrCx2E,EAASnmC,KAAKhd,MAAM25H,QAAU,OAC9Bx2E,EAASwvF,WAAW3yI,MAAM25H,QAAU,QAEtC,MAEF,IAAK,yBACC7vI,EAAOuL,KACL69I,IAAuBx4G,EACxBy4G,GAA8B,GACD,IAAvBD,GACND,MAOTkK,IAEE1lJ,EACD3N,EAAO2N,MAAQA,SAER3N,EAAO2N,MACb0lI,EACDrzI,EAAOqzI,OAASA,SAETrzI,EAAOqzI,QAQrB,SAASyV,KACP,GAAIn9B,IAAW9pF,EACb,GAAKwjH,EAeC7vI,EAASogE,eACXpgE,EAASogE,iBACApgE,EAAS89I,oBAClB99I,EAAS89I,sBACA99I,EAAS+9I,uBAClB/9I,EAAS+9I,yBACA/9I,EAASg+I,kBAClBh+I,EAASg+I,wBArBX,IACM5yC,EAAU/qC,kBACZ+qC,EAAU/qC,oBACD+qC,EAAU6yC,qBACnB7yC,EAAU6yC,uBACD7yC,EAAU8yC,oBACnB9yC,EAAU8yC,sBAEV9yC,EAAU+yC,0BAEZ,MAAO72G,KAqBf,SAASkvG,KACP,IAAI4H,EAAgBhkJ,EAAOikJ,YAAcC,OAAOp0J,OAASkQ,EAAOmkJ,aAAeD,OAAOn0J,OAClF6V,EAASqzI,YAAcrzI,EAASw+I,eAAiBx+I,EAASy+I,oBAAsBz+I,EAASy1H,qBAAuB2oB,GAClHv6F,EAASwvF,WAAW5kG,UAAUjhB,IAAI,wCAClCqiH,GAAmB,IAEnBhsF,EAASwvF,WAAW5kG,UAAUK,OAAO,wCACrC+gG,GAAmB,GAIrBd,EAAS2P,SACTjZ,GAAQj7I,EAAO4O,MACf+5I,KA+BF,SAASwL,GAAcvlJ,GAErB,IAAIC,EAAU7O,EAAO6O,QAIrB,GAHmB,YAAf7O,EAAOuK,MAAsBg6I,IAC/B11I,EAAUpH,KAAKwgC,IAAIp5B,EAAS01I,EAASkJ,YAAY/tJ,OAASM,EAAO4pJ,SAASwK,eAAiB,GAAK,MAE9FvlJ,EAAU7O,EAAO8O,QAGnB,OADAxB,QAAQC,IAAI,sDACLvN,EAAO4O,KAEhB,IAAIylJ,EAAUr0J,EAAO4O,KASrB,GAPEylJ,EADEzlJ,EAAOC,EACCA,EACDD,EAAO5O,EAAO8O,QACb9O,EAAO8O,QAEPF,EAGR5O,EAAOymJ,wBAA0BlC,EAAU,CAC7C,IAAIiJ,EAASjJ,EAASkJ,YACtB4G,EAAU5sJ,KAAKwgC,IAAIosH,EAGM,IAFvB5sJ,KAAK0mJ,KAAK1mJ,KAAKsmJ,KAAK/tJ,EAAO6yI,SAAW7yI,EAAO4yI,UAAY,IAAMnrI,KAAKqlJ,IACzCU,EAAO7tJ,OAAS6tJ,EAAO9tJ,OACrB+H,KAAKqlJ,IAEtC,OAAOuH,EAQT,SAASpZ,GAAQrsI,GACf5O,EAAO4O,KAAOulJ,GAAcvlJ,GAO9B,SAAS0+I,KACP1H,KACAD,EAAkB3lJ,EAAOgzI,WAAahzI,EAAOgzI,WAAa2S,EAC1D3lJ,EAAOgzI,YAAa,EAOtB,SAAS7wE,KAriDHtgC,IACFomH,EAAY9lF,KAAK13D,IAAIyL,MAAM25H,QAAU,OACrCoY,EAAYO,SAAStyI,MAAM25H,QAAU,OACrChuG,GAAQ,EACRqrH,GAAU,iBAsiDZvhC,GAAS,EAETtyD,EAAS8I,KAAKjsD,MAAM25H,QAAU,OAC9BoY,EAAY9lF,KAAK13D,IAAIyL,MAAM25H,QAAU,SACrCriG,IAYF,SAASukH,GAAUH,EAASI,EAAaC,EAAWC,EAAYoC,GAK9D,IAAIhD,EAASiD,EAAcC,EAAYC,EACvC,GALA9oC,GAAS,EACTi6B,KAII5lJ,EAAOqxJ,oBAAsBiD,EAAU,CACzC,IAAIp1J,EAAOqlJ,EAASv2I,OAAOhO,EAAO0O,MAAQjH,KAAKqlJ,GAAK,IAAK9sJ,EAAO2O,IAAMlH,KAAKqlJ,GAAK,IAAK9sJ,EAAO4O,KAAOnH,KAAKqlJ,GAAK,KAAO4H,aAAa,IACjI,GAAIx1J,IAAS0xC,EAYX,OAXA0gH,EAAU,IAAI3H,OACNt7I,UAAY,gBACpBijJ,EAAQp7I,MAAME,WAAa,WAAcpW,EAAOqxJ,kBAAoB,IAAQ,IAC5EC,EAAQp7I,MAAMxW,MAAQ,OACtB4xJ,EAAQp7I,MAAMvW,OAAS,OACvB2xJ,EAAQ/9G,OAAS,WACfw+G,GAAUH,EAASI,EAAaC,EAAWC,GAAY,IAEzDZ,EAAQ/5F,IAAMr4D,EACdwoJ,EAAgBh3H,YAAY4gI,QAC5B/M,EAAS+M,QAAUA,GAOrBiD,EADkB,SAAhBvC,EACahyJ,EAAO0O,MAEPsjJ,EAGfwC,EADgB,SAAdvC,EACWjyJ,EAAO2O,IACG,gBAAdsjJ,EACIjyJ,EAAO2O,KAAO3O,EAAOumJ,aAAe,IAAMjC,EAAc8O,OAAOxB,GAASrL,aAAe,GAEvF0L,EAGbwC,EADiB,SAAfvC,EACYlyJ,EAAO4O,KAEPsjJ,EAtelB,WACE,IAAI/W,EAAKn7I,EAAO2zI,SAGhB,GAFAoS,GAAkB,SACX/lJ,EAAO2zI,SACVwH,EACF,IAAK,IAAI76I,EAAI,EAAGA,EAAI66I,EAAGl5I,OAAQ3B,IAAK,CAElC,IADA,IAAIimB,EAAU40H,EAAG76I,GAAGs+D,IACbr4C,EAAQ7R,YAAcgzI,GAC3BnhI,EAAUA,EAAQ7R,WAEpBgzI,EAAgBj3H,YAAYlK,UACrB40H,EAAG76I,GAAGs+D,KA+djB+1F,GAGAhG,GAAYiD,GAGZrM,EAAM52I,IAAM42I,EAAM72I,MAAQ62I,EAAM32I,KAAO,EAGvC65I,KACI8L,IAAiB3jH,IACnB5wC,EAAO0O,MAAQ6lJ,GAEbC,IAAe5jH,IACjB5wC,EAAO2O,IAAM6lJ,GAEXC,IAAgB7jH,IAClB5wC,EAAO4O,KAAO6lJ,GAEhBvH,GAAU,cAAe0E,GACzBzvF,KAOF,SAAS+mF,KACPt5I,EAAO+3C,oBAAoB,oBAAqBwpG,IAChD93F,EAASosF,YAAYxhG,UAAUK,OAAO,kCACtCmhG,GAAc,EAOhB,SAAS0D,KACP1D,EAAc,EACd71I,EAAO6c,iBAAiB,oBAAqB0kI,IAC7C93F,EAASosF,YAAYxhG,UAAUjhB,IAAI,kCASrC,SAASyuH,GAAWhhF,GAClB,OAAK6zE,EAAcmN,WAEZxuJ,OAAOwtE,GAAGrkE,MAAM,MAAMnB,KAAK,SAC/BmB,MAAM,KAAKnB,KAAK,UAChBmB,MAAM,KAAKnB,KAAK,SAChBmB,MAAM,KAAKnB,KAAK,QAChBmB,MAAM,KAAKnB,KAAK,QAChBmB,MAAM,KAAKnB,KAAK,UAChBmB,MAAM,MAAMnB,KAAK,QAPVhI,OAAOwtE,GAAGrkE,MAAM,MAAMnB,KAAK,QAiBvC,SAASm/I,GAAYpuI,GACnB,OAAwD,IAApDA,EAAI6X,OAAOne,cAAc7D,QAAQ,eAC5B,cAEFmK,EA6oBT,SAASkxI,GAAU3iJ,GACjB,GAAIA,KAAQs7I,EAEV,IAAK,IAAIvlJ,EAAIulJ,EAAuBt7I,GAAMtI,OAAQ3B,EAAI,EAAGA,IACvDulJ,EAAuBt7I,GAAMs7I,EAAuBt7I,GAAMtI,OAAS3B,GAAGkR,MAAM,QAAS5F,MAAMC,KAAKsE,UAAW,IAr9CjH0gJ,GAAWllJ,UAAUslJ,SAAW,SAASnyH,GACvC,OAAO,IAAI+xH,GAAW7jJ,KAAK46B,EAAE9I,EAAE8I,EAAI56B,KAAKkyB,EAAEJ,EAAEI,EAAIlyB,KAAK66B,EAAE/I,EAAE+I,EAAI76B,KAAKnC,EAAEi0B,EAAEj0B,EACpEmC,KAAKkyB,EAAEJ,EAAE8I,EAAI56B,KAAK46B,EAAE9I,EAAEI,EAAIlyB,KAAK66B,EAAE/I,EAAEj0B,EAAImC,KAAKnC,EAAEi0B,EAAE+I,EAChD76B,KAAK66B,EAAE/I,EAAE8I,EAAI56B,KAAK46B,EAAE9I,EAAE+I,EAAI76B,KAAKnC,EAAEi0B,EAAEI,EAAIlyB,KAAKkyB,EAAEJ,EAAEj0B,EAChDmC,KAAKnC,EAAEi0B,EAAE8I,EAAI56B,KAAK46B,EAAE9I,EAAEj0B,EAAImC,KAAKkyB,EAAEJ,EAAE+I,EAAI76B,KAAK66B,EAAE/I,EAAEI,IAQpD2xH,GAAWllJ,UAAUylJ,cAAgB,WAMnC,OALU3pJ,KAAK2mJ,MAAM,GAAKphJ,KAAK46B,EAAI56B,KAAKkyB,EAAIlyB,KAAK66B,EAAI76B,KAAKnC,GACtD,EAAI,GAAKmC,KAAKkyB,EAAIlyB,KAAKkyB,EAAIlyB,KAAK66B,EAAI76B,KAAK66B,IACnCpgC,KAAKmtJ,KAAK,GAAK5nJ,KAAK46B,EAAI56B,KAAK66B,EAAI76B,KAAKnC,EAAImC,KAAKkyB,IACjDz3B,KAAK2mJ,MAAM,GAAKphJ,KAAK46B,EAAI56B,KAAKnC,EAAImC,KAAKkyB,EAAIlyB,KAAK66B,GACpD,EAAI,GAAK76B,KAAK66B,EAAI76B,KAAK66B,EAAI76B,KAAKnC,EAAImC,KAAKnC,MA00B/CmC,KAAK6nJ,SAAW,WACd,OAAOzhG,QAAQu4D,IASjB3+G,KAAK8nJ,SAAW,WACd,OAAO90J,EAAO0O,OAahB1B,KAAKguI,SAAW,SAAStsI,EAAOqmJ,EAAUz6H,EAAUi1H,GAelD,OAdAwF,EAAWA,GAAYnkH,EAAY,IAAMmtC,OAAOg3E,IAE9CnP,EAAal3I,OACXy+B,UAAa7uC,KAAKga,MAClB+2I,cAAiBrvJ,EAAO0O,MACxB4gJ,YAAe5gJ,EACf3K,SAAYgxJ,EACZz6H,SAAYA,EACZi1H,aAAgBA,GAGlBvvJ,EAAO0O,MAAQA,EAEjBi6I,KACO37I,MASTA,KAAKgoJ,eAAiB,WACpB,OAAQh1J,EAAO4yI,SAAU5yI,EAAO6yI,WAUlC7lI,KAAKioJ,eAAiB,SAAS9H,GAG7B,OAFAntJ,EAAO4yI,SAAWnrI,KAAK6+C,KAAK,GAAI7+C,KAAKwgC,IAAIklH,EAAO,GAAI,KACpDntJ,EAAO6yI,SAAWprI,KAAK6+C,KAAK,GAAI7+C,KAAKwgC,IAAIklH,EAAO,GAAI,KAC7CngJ,MASTA,KAAKkoJ,OAAS,WACZ,OAAOl1J,EAAO2O,KAahB3B,KAAK+tI,OAAS,SAASpsI,EAAKomJ,EAAUz6H,EAAUi1H,GAsB9C,OApBA5gJ,GAAQA,EAAM,KAAO,IAAO,KAD5BomJ,EAAWA,GAAYnkH,EAAY,IAAMmtC,OAAOg3E,KAI1C/0J,EAAO2O,IAAMA,EAAM,IACpBA,GAAO,IACDA,EAAM3O,EAAO2O,IAAM,MACzBA,GAAO,KAEVi3I,EAAaj3I,KACXw+B,UAAa7uC,KAAKga,MAClB+2I,cAAiBrvJ,EAAO2O,IACxB2gJ,YAAe3gJ,EACf5K,SAAYgxJ,EACZz6H,SAAYA,EACZi1H,aAAgBA,IAGlBvvJ,EAAO2O,IAAMA,EAEfg6I,KACO37I,MASTA,KAAKmoJ,aAAe,WAClB,OAAQn1J,EAAO8yI,OAAQ9yI,EAAO+yI,SAUhC/lI,KAAKooJ,aAAe,SAASjI,GAG3B,OAFAntJ,EAAO8yI,OAASrrI,KAAK6+C,KAAK,IAAK7+C,KAAKwgC,IAAIklH,EAAO,GAAI,MACnDntJ,EAAO+yI,OAAStrI,KAAK6+C,KAAK,IAAK7+C,KAAKwgC,IAAIklH,EAAO,GAAI,MAC5CngJ,MASTA,KAAKqoJ,QAAU,WACb,OAAOr1J,EAAO4O,MAahB5B,KAAKiuI,QAAU,SAASrsI,EAAMmmJ,EAAUz6H,EAAUi1H,GAehD,OAdAwF,EAAWA,GAAYnkH,EAAY,IAAMmtC,OAAOg3E,IAE9CnP,EAAah3I,MACXu+B,UAAa7uC,KAAKga,MAClB+2I,cAAiBrvJ,EAAO4O,KACxB0gJ,YAAe6E,GAAcvlJ,GAC7B7K,SAAYgxJ,EACZz6H,SAAYA,EACZi1H,aAAgBA,GAGlBtU,GAAQrsI,GAEV+5I,KACO37I,MAUTA,KAAKsoJ,cAAgB,WACnB,OAAQt1J,EAAO6O,QAAS7O,EAAO8O,UAUjC9B,KAAKkuI,cAAgB,SAASiS,GAG5B,OAFAntJ,EAAO6O,QAAUpH,KAAK6+C,IAAI,EAAG6mG,EAAO,IACpCntJ,EAAO8O,QAAUrH,KAAK6+C,IAAI,EAAG6mG,EAAO,IAC7BngJ,MAeTA,KAAKugJ,OAAS,SAAS7+I,EAAOC,EAAKC,EAAMmmJ,EAAUz6H,EAAUi1H,GAY3D,OAXAwF,EAAWA,GAAYnkH,EAAY,IAAMmtC,OAAOg3E,GAC5CrmJ,IAAUkiC,IACZ5jC,KAAKguI,SAAStsI,EAAOqmJ,EAAUz6H,EAAUi1H,GACzCj1H,EAAWsW,GAETjiC,IAAQiiC,IACV5jC,KAAK+tI,OAAOpsI,EAAKomJ,EAAUz6H,EAAUi1H,GACrCj1H,EAAWsW,GAEThiC,IAASgiC,GACV5jC,KAAKiuI,QAAQrsI,EAAMmmJ,EAAUz6H,EAAUi1H,GACnCviJ,MASTA,KAAKuoJ,eAAiB,WACpB,OAAOv1J,EAAOumJ,aAUhBv5I,KAAKwoJ,eAAiB,SAAStK,GAG7B,OAFAlrJ,EAAOumJ,YAAc9+I,KAAKwgC,IAAI,IAAKxgC,KAAK6+C,IAAI,EAAG4kG,IAC/CvC,KACO37I,MASTA,KAAKyoJ,eAAiB,WACpB,OAAOz1J,EAAOorJ,aAUhBp+I,KAAK0oJ,eAAiB,SAASzP,GAI7B,OAHAjmJ,EAAOorJ,YAAc3jJ,KAAKwgC,IAAI,GAAIxgC,KAAK6+C,KAAK,GAAI2/F,IAChD1B,EAASoR,QAAQ31J,EAAOmrJ,aAAe1jJ,KAAKqlJ,GAAK,IAAK9sJ,EAAOorJ,YAAc3jJ,KAAKqlJ,GAAK,KACrFnE,KACO37I,MASTA,KAAK4oJ,gBAAkB,WACrB,OAAO51J,EAAOmrJ,cAUhBn+I,KAAK6oJ,gBAAkB,SAASnnJ,GAI9B,OAHA1O,EAAOmrJ,aAAe1jJ,KAAKwgC,IAAI,GAAIxgC,KAAK6+C,KAAK,GAAI53C,IACjD61I,EAASoR,QAAQ31J,EAAOmrJ,aAAe1jJ,KAAKqlJ,GAAK,IAAK9sJ,EAAOorJ,YAAc3jJ,KAAKqlJ,GAAK,KACrFnE,KACO37I,MAUTA,KAAK8oJ,gBAAkB,SAASvQ,GAK9B,OAJAA,EAAQA,GAASI,GAAmB,EACpC3lJ,EAAOgzI,WAAauS,EACpBt4I,EAAMsgJ,OAAO3I,EAAWh0G,EAAW+zG,EAAU,KAC7CgE,KACO37I,MASTA,KAAK+oJ,eAAiB,WAIpB,OAHApQ,EAAkB3lJ,EAAOgzI,WAAahzI,EAAOgzI,WAAa2S,EAC1D3lJ,EAAOgzI,YAAa,EACpBhzI,EAAOqmJ,2BAA6B,EAC7Br5I,MASTA,KAAKgpJ,YAAc,WACjB,OAAOzR,GAUTv3I,KAAK8iI,UAAY,SAAS38D,GAMxB,OALAjH,GAAkB,IAATiH,EACLoxE,IAAa3zG,EACdo5G,IAEArB,KACI37I,MAUTA,KAAKqgJ,mBAAqB,SAASvwG,GACjC,OAAOuwG,GAAmBvwG,IAa5B9vC,KAAK+kJ,UAAY,SAASH,EAASljJ,EAAOC,EAAKC,GAG7C,OAFe,IAAX+8G,GACDomC,GAAUH,EAASljJ,EAAOC,EAAKC,GAC3B5B,MASTA,KAAKipJ,SAAW,WACd,OAAOj2J,EAAO4N,OAWhBZ,KAAKkpJ,SAAW,SAAStE,EAAS5xJ,GAEhC,OADAskJ,EAAc8O,OAAOxB,GAAW5xJ,EACzBgN,MAUTA,KAAKmpJ,YAAc,SAASvE,GAC1B,QAAI5xJ,EAAO4N,QAAUgkJ,IAAYtN,EAAc8O,OAAOlhJ,eAAe0/I,aAE9DtN,EAAc8O,OAAOxB,IACrB,IAST5kJ,KAAK87I,iBAAmB,WAEtB,OADAA,KACO97I,MASTA,KAAK8tI,UAAY,WACf,OAAO96I,GASTgN,KAAKopJ,aAAe,WAClB,OAAOx1C,GAYT5zG,KAAKquI,WAAa,SAASF,EAAIyW,GAC7B,GAAIA,IAAYhhH,GAAa5wC,EAAO4N,QAAUgjC,EAE5C5wC,EAAO2zI,SAAS3yI,KAAKm6I,OAChB,CAEL,IAAIn1H,EAAK4rI,IAAYhhH,EAAYghH,EAAU5xJ,EAAO4N,MAClD,IAAI02I,EAAc8O,OAAOlhJ,eAAe8T,GAQtC,KAAM,oBAPDs+H,EAAc8O,OAAOptI,GAAI9T,eAAe,cAC3CoyI,EAAc8O,OAAOptI,GAAI2tH,YACrB3tH,GAAMhmB,EAAO4N,QACd5N,EAAO2zI,SAAW2Q,EAAc8O,OAAOptI,GAAI2tH,WAEhD2Q,EAAc8O,OAAOptI,GAAI2tH,SAAS3yI,KAAKm6I,GAW3C,OANIyW,IAAYhhH,GAAa5wC,EAAO4N,OAASgkJ,IAE3CL,GAAcpW,GACVxvB,GACD4mC,GAAcpX,IAEZnuI,MAWTA,KAAKouI,cAAgB,SAASib,EAAWzE,GACvC,GAAIA,IAAYhhH,GAAa5wC,EAAO4N,OAASgkJ,EAAS,CACpD,IAAK5xJ,EAAO2zI,SACT,OAAO,EACV,IAAK,IAAIrzI,EAAI,EAAGA,EAAIN,EAAO2zI,SAAS1xI,OAAQ3B,IAC1C,GAAIN,EAAO2zI,SAASrzI,GAAG4R,eAAe,OAChClS,EAAO2zI,SAASrzI,GAAG0lB,KAAOqwI,EAAW,CAGzC,IADA,IAAI9vI,EAAUvmB,EAAO2zI,SAASrzI,GAAGs+D,IAC1Br4C,EAAQ7R,YAAcgzI,GAC1BnhI,EAAUA,EAAQ7R,WAKrB,OAJAgzI,EAAgBj3H,YAAYlK,UACrBvmB,EAAO2zI,SAASrzI,GAAGs+D,IAE1B5+D,EAAO2zI,SAAS7qF,OAAOxoD,EAAG,IACnB,OAGN,CACL,IAAIgkJ,EAAc8O,OAAOlhJ,eAAe0/I,GAYtC,OAAO,EAXP,IAAKtN,EAAc8O,OAAOxB,GAAS1/I,eAAe,YAC/C,OAAO,EACV,IAAS5R,EAAI,EAAGA,EAAIgkJ,EAAc8O,OAAOxB,GAASje,SAAS1xI,OAAQ3B,IACjE,GAAIgkJ,EAAc8O,OAAOxB,GAASje,SAASrzI,GAAG4R,eAAe,OACrDoyI,EAAc8O,OAAOxB,GAASje,SAASrzI,GAAG0lB,KAAOqwI,EAGvD,OADA/R,EAAc8O,OAAOxB,GAASje,SAAS7qF,OAAOxoD,EAAG,IAC1C,IAcjB0M,KAAKknJ,OAAS,WACR3P,GACD0H,MASLj/I,KAAK6nJ,SAAW,WACd,OAAOlpC,GAST3+G,KAAKspJ,uBAAyB,WAC5B,OAAOlN,IAAsB,GAQ/Bp8I,KAAKk8I,gBAAkB,WACrBA,MAQFl8I,KAAKm8I,iBAAmB,WAClBC,GACDD,MASLn8I,KAAKupJ,oBAAsB,WACzB,OAAOnjG,QAAQqyF,IAWjBz4I,KAAKw7C,GAAK,SAASj+C,EAAMohD,GAGvB,OAFAk6F,EAAuBt7I,GAAQs7I,EAAuBt7I,OACtDs7I,EAAuBt7I,GAAMvJ,KAAK2qD,GAC3B3+C,MAUTA,KAAKgzC,IAAM,SAASz1C,EAAMohD,GACxB,IAAKphD,EAGH,OADAs7I,KACO74I,KAET,GAAI2+C,EAAU,CACZ,IAAIrrD,EAAIulJ,EAAuBt7I,GAAMsH,QAAQ85C,GACzCrrD,GAAK,GAEPulJ,EAAuBt7I,GAAMu+C,OAAOxoD,EAAG,GAEE,GAAvCulJ,EAAuBt7I,GAAMtI,eAExB4jJ,EAAuBt7I,eAIzBs7I,EAAuBt7I,GAEhC,OAAOyC,MAsBTA,KAAK4mI,QAAU,WACT2Q,GACDA,EAAS3Q,UACR0R,IACFqC,EAAQhgG,oBAAoB,YAAagkG,GAAqB,GAC9DhE,EAAQhgG,oBAAoB,WAAYokG,GAAuB,GAC/Dv2I,EAASmyC,oBAAoB,YAAaikG,IAAqB,GAC/Dp2I,EAASmyC,oBAAoB,UAAWkkG,IAAmB,GAC3DjrC,EAAUj5D,oBAAoB,aAAcmkG,IAAsB,GAClElrC,EAAUj5D,oBAAoB,iBAAkBmkG,IAAsB,GACtElrC,EAAUj5D,oBAAoB,sBAAuBqkG,IAAoB,GACzEprC,EAAUj5D,oBAAoB,yBAA0BqkG,IAAoB,GAC5EprC,EAAUj5D,oBAAoB,qBAAsBqkG,IAAoB,GACxEprC,EAAUj5D,oBAAoB,mBAAoBqkG,IAAoB,GACtEp8I,EAAO+3C,oBAAoB,SAAUskG,IAAkB,GACvDr8I,EAAO+3C,oBAAoB,oBAAqBskG,IAAkB,GAClErrC,EAAUj5D,oBAAoB,UAAWukG,IAAoB,GAC7DtrC,EAAUj5D,oBAAoB,QAASwkG,IAAiB,GACxDvrC,EAAUj5D,oBAAoB,OAAQykG,IAAW,GACjD52I,EAASmyC,oBAAoB,aAAckkG,IAAmB,GAC9DlE,EAAQhgG,oBAAoB,aAAc+kG,IAAsB,GAChE/E,EAAQhgG,oBAAoB,YAAaglG,IAAqB,GAC9DhF,EAAQhgG,oBAAoB,WAAYilG,IAAoB,GAC5DjF,EAAQhgG,oBAAoB,cAAe4kG,IAAuB,GAClE5E,EAAQhgG,oBAAoB,cAAe6kG,IAAuB,GAClE7E,EAAQhgG,oBAAoB,YAAa8kG,IAAqB,GAC9D9E,EAAQhgG,oBAAoB,eAAgB8kG,IAAqB,IAEnE7rC,EAAUpwF,UAAY,GACtBowF,EAAU38D,UAAUK,OAAO,kBAC3BmjG,EAAYxjG,UAAUK,OAAO,aAC7BmjG,EAAYxjG,UAAUK,OAAO,kBAKjC,OACEsrF,OAAQ,SAAShvB,EAAW5gH,GAC1B,OAAO,IAAIqkJ,EAAOzjC,EAAW5gH,KAx8Ff,CA48FjB4P,OAAQ4F,6CCn+FX,IAAAghJ,EAAAr4J,EAAA,QAAAs4J,EAAAt4J,EAAA,QAAAA,EAAAkS,EAAAs8H,EAAA,sBAAA6pB,EAAA,IAAAr4J,EAAAkS,EAAAs8H,EAAA,sBAAA8pB,EAAA,wBCAA,IAEA5gD,EACAC,EACAC,EACAC,EACA0gD,EACAC,EAEA9gD,EAAA,SAAAx3G,GACA,OATA,IASAA,GAGAy3G,EAAA,SAAAz3G,EAAA85C,GACA,OAAA95C,EAAA85C,GAGA49D,EAAA,SAAA39D,GACA,OAAAA,EAjBA,KAoBA49D,EAAA,SAAA59D,EAAAD,GACA,OAAAC,EAAAD,GAGAu+G,EAAA,SAAAt+G,EAAAD,GACA,OAAA09D,EAAAG,EAAA59D,EAAAD,KAGAw+G,EAAA,SAAAv+G,EAAAD,GACA,OAAA29D,EAAAC,EAAA39D,GAAAD,IAGA9rC,EAAAC,SACAupG,mBACAC,mBACAC,mBACAC,mBACA0gD,mBACAC,uDC3BA,IA+BA55C,EAAAC,EAAAF,EAAA85C,EAIAvgD,EACAC,EACAC,EArCAt7D,EAAa98C,EAAQ,QACrBisE,EAAUjsE,EAAQ,QAClBwmG,EAAiBxmG,EAAQ,QACzBinG,EAAsBjnG,EAAQ,QAC9Bi/C,EAAWj/C,EAAQ,QACnB4xI,EAAiB5xI,EAAQ,QACzBg3G,EAAiBh3G,EAAQ,QAAgBg3G,WACzC66B,EAAgB7xI,EAAQ,QACxBw4G,EAAoBx4G,EAAQ,QAC5Bq5G,EAAYr5G,EAAQ,QAGpBs5G,GACA,kBACA,eACA,aACA,yBACA,cAGAC,GACA,QACA,SACA,aACA,WACA,wBAcArB,EAAA,SAAAn3G,GACA,OAAAA,EAAA,SAAAqwC,WAAA,IACArwC,EAAA,SAAAqwC,WAAA,IACArwC,EAAA,SAAAqwC,WAAA,IASA+mE,EAAA,SAAAnoG,EAAA+B,GACA,IACA5P,EAEA,GAAA6N,EAAAlM,SAAAiO,EAAAjO,OACA,SAIA,IAAA3B,EAAA,EAAaA,EAAA6N,EAAAlM,OAAc3B,IAC3B,GAAA6N,EAAA7N,KAAA4P,EAAA5P,GACA,SAIA,UAMAi2G,EAAA,SAAAjiE,GACA,IACAh0C,EAEAq3G,EAAA,EAGA,IAAAr3G,EAAA,EAAaA,EAAAg0C,EAAAryC,OAAkB3B,IAE/Bq3G,GADArjE,EAAAh0C,GACApB,KAAAK,WAGA,OAAAo4G,IAYAqF,EAAA,SAAAhoF,EAAA9F,GACA,IACA0oF,KACA1zG,EAAA,EACA2zG,EAAA,EACAC,EAAA,EACAC,EAAAjqE,IAEA5e,QAEA8tF,EAAArxG,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAAhM,KAAA,SAAA9B,GACAkmG,EAAAyxD,eAAA7hI,EAAA91B,GAEA81B,GACAyiF,EAAAtkG,QAAA,SAAAkvC,GACArtB,EAAAqtB,GAAAnjD,EAAAmjD,KAKAu1D,EAAA52G,KAAA9B,IAGA8N,KAAAgrG,eAAA,SAAAC,GACAJ,EAAAI,EAAAjjF,EAAAkoB,kBAAA11C,qBAGAwF,KAAAkrG,4BAAA,SAAA1wG,GACAuwG,EAAAvwG,GAGAwF,KAAAmrG,oBAAA,SAAA//D,GACA0/D,EAAA1/D,GAGAprC,KAAA4sC,MAAA,WACA,IACA0nD,EACA78F,EACApB,EACAX,EAGA,IAAAk1G,EAAA31G,QAKAq/F,EAAAt0F,KAAAorG,6BAAAR,GACA5iF,EAAAxtB,oBAAA49F,EAAA0xD,kCACA9hI,EAAA9F,EAAAu2E,wBAEAz4F,KAAAqrG,mBAAArjF,EAAAssE,GAIAtsE,EAAA3vB,QAAA2H,KAAAsrG,qBAAAhX,GAGAj+F,EAAA+mE,EAAA/mE,KAAA2J,KAAAurG,sBAAAjX,IAEAsW,KAEAnzG,EAAA2lE,EAAA3lE,KAAAP,GAAA8wB,IACAtyB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAGA2E,IAEAxB,EAAAqa,IAAAtY,GACA/B,EAAAqa,IAAA1Z,EAAAoB,EAAAlF,YAEA6lG,EAAA2xD,aAAA/hI,GAEAhoB,KAAAuuC,QAAA,QAA0BvmB,QAAAtyB,UAC1BsK,KAAAuuC,QAAA,8BA/BAvuC,KAAAuuC,QAAA,8BAoCAvuC,KAAAqrG,mBAAA,SAAArjF,EAAAssE,GACA,IACAkX,EACAC,EAIAC,EACAp4G,EAJAq4G,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAAvX,EAAAr/F,SAIAu2G,EAAAhB,EAAAk/C,iBAAA1hI,EAAAxtB,oBAAAwtB,EAAAzwB,YAEAk0G,EAAAhxG,KAAAwtG,KAtKA,KAsKAjgF,EAAAzwB,WAAA,OAEAuzG,GAAAC,IAEAY,EACAH,EAAA/wG,KAAA6+C,IAAAwxD,EAAAC,GAGAc,GADAD,EAAAnxG,KAAA+oC,MAAAmoE,EAAAF,IACAA,KAKAG,EAAA,GAAAC,EAAAm+C,OAAA,CAYA,KARAt+C,EAAA/B,EAAA3hF,EAAAzwB,eAKAm0G,EAAApX,EAAA,GAAApiG,MAGAoB,EAAA,EAAeA,EAAAs4G,EAAyBt4G,IACxCghG,EAAAx4C,OAAAxoD,EAAA,GACApB,KAAAw5G,IAIA1jF,EAAAxtB,qBACAC,KAAA+oC,MAAAgnE,EAAAm/C,iBAAA99C,EAAA7jF,EAAAzwB,eAOAyI,KAAAorG,6BAAA,SAAAR,GACA,OAAA5iF,EAAAqwE,eAAAwS,EACAD,GAIA5iF,EAAAqwE,cAAAv3D,IAEA8pE,EAAAtsG,OAAA,SAAAisC,GAEA,OAAAA,EAAAqB,KAAAi/D,IACA7iF,EAAAqwE,cAAA59F,KAAAwgC,IAAAjT,EAAAqwE,cAAA9tD,EAAAqB,KACA5jB,EAAAuwE,cAAAvwE,EAAAqwE,eACA,OAQAr4F,KAAAsrG,qBAAA,SAAAhX,GACA,IACAhhG,EACAi3C,EACAlyC,KAEA,IAAA/E,EAAA,EAAeA,EAAAghG,EAAAr/F,OAAmB3B,IAClCi3C,EAAA+pD,EAAAhhG,GACA+E,EAAArE,MACAgJ,KAAAutC,EAAAr4C,KAAAK,WACAwE,SAAA,OAGA,OAAAsB,GAIA2H,KAAAurG,sBAAA,SAAAjX,GACA,IACAhhG,EACAi3C,EACAztC,EAAA,EACA5K,EAAA,IAAA+B,WAAAs1G,EAAAjV,IAEA,IAAAhhG,EAAA,EAAeA,EAAAghG,EAAAr/F,OAAmB3B,IAClCi3C,EAAA+pD,EAAAhhG,GAEApB,EAAA6d,IAAAw6B,EAAAr4C,KAAA4K,GACAA,GAAAytC,EAAAr4C,KAAAK,WAEA,OAAAL,KAIAyM,UAAA,IAAAsvC,GAaA8hE,EAAA,SAAA/nF,EAAA9F,GACA,IAIAlvB,EACAc,EAJAoD,EAAA,EACA0gG,KACAmU,KAIA7pF,QAEA6tF,EAAApxG,UAAA6hC,KAAA3hC,KAAAmB,aAEAgoB,EAAAgkF,OAEAhsG,KAAAisG,aAUAjsG,KAAAhM,KAAA,SAAAk4G,GACA9T,EAAAyxD,eAAA7hI,EAAAkkF,GAGA,2BAAAA,EAAApU,aAAA9kG,IACAA,EAAAk5G,EAAAl5G,OACAg1B,EAAAn0B,KAAAq4G,EAAAh6G,MAEAw4G,EAAAvkG,QAAA,SAAAkvC,GACArtB,EAAAqtB,GAAAriD,EAAAqiD,IACOr1C,OAGP,2BAAAksG,EAAApU,aACAhkG,IACAA,EAAAo4G,EAAAh6G,KACA81B,EAAAl0B,KAAAo4G,EAAAh6G,OAIA0lG,EAAA5jG,KAAAk4G,IAOAlsG,KAAA4sC,MAAA,WAWA,IAVA,IACA0nD,EACA6X,EACAnU,EACAvgG,EACApB,EACAX,EAIAkiG,EAAA3iG,QACA,+BAAA2iG,EAAA,GAAAE,aAGAF,EAAAntD,QAIA,OAAAmtD,EAAA3iG,OAGA,OAFA+K,KAAAosG,oBACApsG,KAAAuuC,QAAA,6BAgDA,GAzCA+lD,EAAAqD,EAAA0rC,oBAAAzrC,IACAI,EAAAL,EAAA2rC,oBAAAhvC,IAoBA,MAAAoD,YAEAyU,EAAAnsG,KAAAqsG,iBAAAzU,EAAA,GAAA5vE,KAGAgwE,EAAArlD,QAAAw5D,GAGAnU,EAAAzlG,YAAA45G,EAAA55G,WACAylG,EAAAC,UAAAkU,EAAAlU,SACAD,EAAAnsD,IAAAsgE,EAAAtgE,IACAmsD,EAAApsD,IAAAugE,EAAAvgE,IACAosD,EAAAjhG,UAAAo1G,EAAAp1G,UAGAihG,EAAAL,EAAA4rC,oBAAAvrC,IAKA+T,EAAA92G,OAAA,CACA,IAAAq3G,EAQA,KALAA,EADApqF,EAAAqqF,eACAvsG,KAAAwsG,gBAAAxU,GAEAh4F,KAAAysG,kBAAAzU,IAoBA,OAfAh4F,KAAAisG,UAAAt5D,SACA+5D,IAAA1U,EAAAvtF,MACA3W,IAAAk0B,EAAAl0B,IACAD,IAAAm0B,EAAAn0B,MAIAmM,KAAAisG,UAAAh3G,OAAAwF,KAAAwgC,IAAA,EAAAj7B,KAAAisG,UAAAh3G,QAGA2iG,KAGA53F,KAAAosG,oBACApsG,KAAAuuC,QAAA,6BAMA6pD,EAAA2xD,aAAA/hI,GAEAgwE,EAAAsU,EAGAlU,EAAAyxD,eAAA7hI,EAAAgwE,GAIAhwE,EAAA3vB,QAAAs/F,EAAA6rC,oBAAAxrC,GAGA3hG,EAAA+mE,EAAA/mE,KAAAshG,EAAA8rC,mBAAAzrC,IAEAhwE,EAAAxtB,oBAAA49F,EAAA0xD,kCACA9hI,EAAA9F,EAAAu2E,wBAEAz4F,KAAAuuC,QAAA,oBAAAypD,EAAA95F,IAAA,SAAAwuG,GACA,OACA7gE,IAAA6gE,EAAA7gE,IACAD,IAAA8gE,EAAA9gE,IACAr5C,WAAAm6G,EAAAn6G,eAKAyN,KAAAisG,UAAAt5D,SACA+5D,IAAA1U,EAAAvtF,MACA3W,IAAAk0B,EAAAl0B,IACAD,IAAAm0B,EAAAn0B,MAIAmM,KAAAisG,UAAAh3G,OAAAwF,KAAAwgC,IAAA,EAAAj7B,KAAAisG,UAAAh3G,QAGA2iG,KAEA53F,KAAAuuC,QAAA,sBAAAvmB,EAAAxtB,qBACAwF,KAAAuuC,QAAA,oBAAAvmB,EAAAkoB,mBAEAz4C,EAAA2lE,EAAA3lE,KAAAP,GAAA8wB,IAIAtyB,EAAA,IAAAzB,WAAAwD,EAAAlF,WAAA8D,EAAA9D,YAGA2E,IAEAxB,EAAAqa,IAAAtY,GACA/B,EAAAqa,IAAA1Z,EAAAoB,EAAAlF,YAEAyN,KAAAuuC,QAAA,QAA0BvmB,QAAAtyB,UAE1BsK,KAAAosG,eAGApsG,KAAAuuC,QAAA,8BAGAvuC,KAAAosG,aAAA,WACAhU,EAAA2xD,aAAA/hI,GAIAh1B,OAAA4wC,EACA9vC,OAAA8vC,GAKA5jC,KAAAqsG,iBAAA,SAAAH,GACA,IAIAS,EACAC,EACA7U,EACA8U,EACAv5G,EALAw5G,EAAAhsE,IAQA,IAAAxtC,EAAA,EAAeA,EAAA0M,KAAAisG,UAAAh3G,OAA2B3B,IAE1CykG,GADA8U,EAAA7sG,KAAAisG,UAAA34G,IACAo5G,IAGA1kF,EAAAl0B,KAAAw1G,EAAAthF,EAAAl0B,IAAA,GAAA+4G,EAAA/4G,IAAA,KACAk0B,EAAAn0B,KAAAy1G,EAAAthF,EAAAn0B,IAAA,GAAAg5G,EAAAh5G,IAAA,MAKAkkG,EAAAnsD,IAAA5jB,EAAAkoB,kBAAAtE,MAKA+gE,EAAAT,EAAAtgE,IAAAmsD,EAAAnsD,IAAAmsD,EAAAhhG,YAzBA,KA8BA41G,GA/BA,QAmCAC,GACAE,EAAAH,KACAC,EAAAC,EACAC,EAAAH,IAKA,OAAAC,EACAA,EAAAF,IAEA,MAKA1sG,KAAAysG,kBAAA,SAAAzU,GACA,IAAA+U,EAAAC,EAAAC,EAAAP,EAAAn6G,EAAA0lG,EAAAlhG,EAAAu1G,EAOA,IALA/5G,EAAAylG,EAAAzlG,WACA0lG,EAAAD,EAAAC,SACAlhG,EAAAihG,EAAAjhG,SACAg2G,EAAAC,EAAA,EAEAD,EAAAhB,EAAA92G,QAAA+3G,EAAAhV,EAAA/iG,SACAg4G,EAAAlB,EAAAgB,GACAL,EAAA1U,EAAAgV,GAEAC,EAAAphE,MAAA6gE,EAAA7gE,MAIA6gE,EAAA7gE,IAAAohE,EAAAphE,IAGAkhE,KAMAC,IACAz6G,GAAAm6G,EAAAn6G,WACA0lG,GAAAyU,EAAAzU,SACAlhG,GAAA21G,EAAA31G,UAGA,WAAAi2G,EAEAhV,EAGAgV,IAAAhV,EAAA/iG,OAEA,OAGAq3G,EAAAtU,EAAAp5F,MAAAouG,IACAz6G,aACA+5G,EAAAv1G,WACAu1G,EAAArU,WACAqU,EAAAzgE,IAAAygE,EAAA,GAAAzgE,IACAygE,EAAA1gE,IAAA0gE,EAAA,GAAA1gE,IAEA0gE,IAKAtsG,KAAAwsG,gBAAA,SAAAxU,GACA,IAAA+U,EAAAC,EAAAC,EAAAP,EAAAQ,EAAAC,EAmCAC,EA5BA,IALAL,EAAAhB,EAAA92G,OAAA,EACA+3G,EAAAhV,EAAA/iG,OAAA,EACAi4G,EAAA,KACAC,GAAA,EAEAJ,GAAA,GAAAC,GAAA,IAIA,GAHAC,EAAAlB,EAAAgB,GACAL,EAAA1U,EAAAgV,GAEAC,EAAAphE,MAAA6gE,EAAA7gE,IAAA,CACAshE,GAAA,EACA,MAGAF,EAAAphE,IAAA6gE,EAAA7gE,IACAkhE,KAIAA,IAAAhB,EAAA92G,OAAA,IAIAi4G,EAAAF,GAGAA,KAGA,IAAAG,GAAA,OAAAD,EACA,YAWA,QALAE,EADAD,EACAH,EAEAE,GAIA,OAAAlV,EAGA,IAAAsU,EAAAtU,EAAAp5F,MAAAwuG,GACAn8C,EAAAq7C,EAAA7rE,OAAA,SAAA4sE,EAAAX,GAIA,OAHAW,EAAA96G,YAAAm6G,EAAAn6G,WACA86G,EAAAt2G,UAAA21G,EAAA31G,SACAs2G,EAAApV,UAAAyU,EAAAzU,SACAoV,IACQ96G,WAAA,EAAAwE,SAAA,EAAAkhG,SAAA,IAQR,OANAqU,EAAA/5G,WAAA0+D,EAAA1+D,WACA+5G,EAAAv1G,SAAAk6D,EAAAl6D,SACAu1G,EAAArU,SAAAhnC,EAAAgnC,SACAqU,EAAAzgE,IAAAygE,EAAA,GAAAzgE,IACAygE,EAAA1gE,IAAA0gE,EAAA,GAAA1gE,IAEA0gE,GAGAtsG,KAAAstG,cAAA,SAAAC,GACAxB,EAAAwB,KAIA5uG,UAAA,IAAAsvC,GAOA27G,EAAA,SAAA1nI,EAAA6iF,GAIA/kG,KAAAwtG,eAAA,EACAxtG,KAAA+kG,sBAEA,IAAA7iF,EAAAurF,MACAztG,KAAA0tG,cAAAxrF,EAAAurF,MAEAztG,KAAA0tG,aAAA,EAGA1tG,KAAA2tG,iBACA3tG,KAAA4tG,WAAA,KACA5tG,KAAA6tG,gBACA7tG,KAAA8tG,mBACA9tG,KAAA+tG,mBACA/tG,KAAAguG,aAAA,EACAhuG,KAAAiuG,cAAA,EAEA27C,EAAAjrJ,UAAA6hC,KAAA3hC,KAAAmB,MAGAA,KAAAhM,KAAA,SAAAk6G,GAGA,OAAAA,EAAA5rG,KACAtC,KAAA8tG,gBAAA95G,KAAAk6G,GAGAA,EAAA5Z,OACAt0F,KAAA+tG,gBAAA/5G,KAAAk6G,IAMAluG,KAAA2tG,cAAA35G,KAAAk6G,EAAAlmF,OACAhoB,KAAA6tG,aAAA75G,KAAAk6G,EAAAx4G,OACAsK,KAAAguG,cAAAE,EAAAx4G,MAAAnD,WAEA,UAAA27G,EAAAlmF,MAAAzqB,OACAyC,KAAA4tG,WAAAM,EAAAlmF,YAEA,UAAAkmF,EAAAlmF,MAAAzqB,OACAyC,KAAAmuG,WAAAD,EAAAlmF,YAKArpB,UAAA,IAAAsvC,EACA27G,EAAAjrJ,UAAAiuC,MAAA,SAAA4qD,GACA,IAQAxD,EACAoa,EACAvqE,EAEAvwC,EAXAD,EAAA,EACAy8C,GACAwgB,YACA+9C,kBACAp9C,YACAhlB,SAKAqiE,EAAA,EAGA,GAAAtuG,KAAA2tG,cAAA14G,OAAA+K,KAAAwtG,eAAA,CACA,0BAAAhW,GACA,uBAAAA,EAIA,OACK,GAAAx3F,KAAA0tG,YAGL,OACK,OAAA1tG,KAAA2tG,cAAA14G,OAaL,OANA+K,KAAAiuG,qBAEAjuG,KAAAiuG,eAAAjuG,KAAAwtG,iBACAxtG,KAAAuuC,QAAA,QACAvuC,KAAAiuG,cAAA,IAuCA,IAjCAjuG,KAAA4tG,YACAU,EAAAtuG,KAAA4tG,WAAA19D,kBAAArE,IACA6+D,EAAAvkG,QAAA,SAAAkvC,GACAvF,EAAA7D,KAAAoJ,GAAAr1C,KAAA4tG,WAAAv4D,IACKr1C,OACFA,KAAAmuG,aACHG,EAAAtuG,KAAAmuG,WAAAj+D,kBAAArE,IACA4+D,EAAAtkG,QAAA,SAAAkvC,GACAvF,EAAA7D,KAAAoJ,GAAAr1C,KAAAmuG,WAAA94D,IACKr1C,OAGL,IAAAA,KAAA2tG,cAAA14G,OACA66C,EAAAvyC,KAAAyC,KAAA2tG,cAAA,GAAApwG,KAEAuyC,EAAAvyC,KAAA,WAGAyC,KAAAiuG,eAAAjuG,KAAA2tG,cAAA14G,OAEA4uC,EAAAu5B,EAAAv5B,YAAA7jC,KAAA2tG,eAGA79D,EAAAjM,YAAA,IAAA5vC,WAAA4vC,EAAAtxC,YAIAu9C,EAAAjM,YAAA9zB,IAAA8zB,GAGAiM,EAAA59C,KAAA,IAAA+B,WAAA+L,KAAAguG,cAGA16G,EAAA,EAAaA,EAAA0M,KAAA6tG,aAAA54G,OAA8B3B,IAC3Cw8C,EAAA59C,KAAA6d,IAAA/P,KAAA6tG,aAAAv6G,GAAAD,GACAA,GAAA2M,KAAA6tG,aAAAv6G,GAAAf,WAKA,IAAAe,EAAA,EAAaA,EAAA0M,KAAA8tG,gBAAA74G,OAAiC3B,KAC9C0gG,EAAAh0F,KAAA8tG,gBAAAx6G,IACA6sC,UAAA6zD,EAAAuO,SAAA+L,EACAta,EAAA7zD,WAAA,IACA6zD,EAAA/pC,QAAA+pC,EAAAwO,OAAA8L,EACAta,EAAA/pC,SAAA,IACAna,EAAAu+D,eAAAra,EAAAtkD,SAAA,EACAI,EAAAwgB,SAAAt8D,KAAAggG,GAKA,IAAA1gG,EAAA,EAAaA,EAAA0M,KAAA+tG,gBAAA94G,OAAiC3B,KAC9C86G,EAAApuG,KAAA+tG,gBAAAz6G,IACA+gG,QAAA+Z,EAAAviE,IAAAyiE,EACAF,EAAA/Z,SAAA,IACAvkD,EAAAmhB,SAAAj9D,KAAAo6G,GAIAt+D,EAAAmhB,SAAAwzC,aAAAzkG,KAAA+kG,eAAAN,aAGAzkG,KAAA2tG,cAAA14G,OAAA,EACA+K,KAAA4tG,WAAA,KACA5tG,KAAA6tG,aAAA54G,OAAA,EACA+K,KAAA8tG,gBAAA74G,OAAA,EACA+K,KAAAguG,aAAA,EACAhuG,KAAA+tG,gBAAA94G,OAAA,EAGA+K,KAAAuuC,QAAA,OAAAuB,GAGA9vC,KAAAiuG,eAAAjuG,KAAAwtG,iBACAxtG,KAAAuuC,QAAA,QACAvuC,KAAAiuG,cAAA,KASA6B,EAAA,SAAA5tF,GACA,IAGA0rF,EACAO,EAHAhhE,EAAAntC,KACAuuG,GAAA,EAIAuB,EAAAnxG,UAAA6hC,KAAA3hC,KAAAmB,MAEAkiB,QACAliB,KAAAxF,oBAAA0nB,EAAA1nB,qBAAA,EACAwF,KAAAwuG,qBAEAxuG,KAAAyuG,iBAAA,WACA,IAAAC,KACA1uG,KAAAwuG,kBAAAE,EAEAA,EAAAnxG,KAAA,MACAmxG,EAAA3J,eAAA,IAAA30D,EAAAI,eAGAk+D,EAAAC,UAAA,IAAAq0B,EACAt0B,EAAAE,6BAAA,IAAAx+D,EAAAjC,wBAAA,SACAugE,EAAAG,qCAAA,IAAAz+D,EAAAjC,wBAAA,kBACAugE,EAAAI,WAAA,IAAAi0B,EACAr0B,EAAAK,eAAA,IAAA66C,EAAA1nI,EAAAwsF,EAAA3J,gBACA2J,EAAAM,eAAAN,EAAAC,UAEAD,EAAAC,UACArX,KAAAoX,EAAAE,8BACAtX,KAAAoX,EAAAI,YACAJ,EAAAC,UACArX,KAAAoX,EAAAG,sCACAvX,KAAAoX,EAAA3J,gBACAzN,KAAAoX,EAAAK,gBAEAL,EAAA3J,eAAAvpD,GAAA,qBAAAnR,GACAqkE,EAAAC,UAAAtG,aAAAh+D,EAAAh/B,aAGAqjG,EAAAC,UAAAnzD,GAAA,gBAAAtpD,GACA,mBAAAA,EAAAqL,MAAAmxG,EAAAO,qBACAd,MACAj+D,mBACA11C,oBAAA2yC,EAAA3yC,qBAEA21C,MAAA,OACA5yC,KAAA,SAGAmxG,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAAe,EAAA7B,EAAAjsF,GAEAwsF,EAAAI,WACAxX,KAAAoX,EAAAO,oBACA3X,KAAAoX,EAAAK,mBAKAL,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,SAEA0uG,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,UAGAA,KAAAkvG,gBAAA,WACA,IAAAR,KACA1uG,KAAAwuG,kBAAAE,EAEAA,EAAAnxG,KAAA,KACAmxG,EAAA3J,eAAA,IAAA30D,EAAAI,eAGAk+D,EAAAS,aAAA,IAAA/+D,EAAAtC,sBACA4gE,EAAAU,YAAA,IAAAh/D,EAAArC,qBACA2gE,EAAAW,iBAAA,IAAAj/D,EAAApC,iBACA0gE,EAAAY,6BAAA,IAAAl/D,EAAAjC,wBAAA,SACAugE,EAAAE,6BAAA,IAAAx+D,EAAAjC,wBAAA,SACAugE,EAAAG,qCAAA,IAAAz+D,EAAAjC,wBAAA,kBACAugE,EAAAI,WAAA,IAAAi0B,EACAr0B,EAAAa,WAAA,IAAApH,EACAuG,EAAArL,cAAA,IAAAjzD,EAAAlC,cACAwgE,EAAAK,eAAA,IAAA66C,EAAA1nI,EAAAwsF,EAAA3J,gBACA2J,EAAAM,eAAAN,EAAAS,aAGAT,EAAAS,aACA7X,KAAAoX,EAAAU,aACA9X,KAAAoX,EAAAW,kBAIAX,EAAAW,iBACA/X,KAAAoX,EAAAY,8BACAhY,KAAAoX,EAAAa,YACAb,EAAAW,iBACA/X,KAAAoX,EAAAE,8BACAtX,KAAAoX,EAAAI,YAEAJ,EAAAW,iBACA/X,KAAAoX,EAAAG,sCACAvX,KAAAoX,EAAA3J,gBACAzN,KAAAoX,EAAAK,gBAGAL,EAAAa,WAAAjY,KAAAoX,EAAArL,eACA/L,KAAAoX,EAAAK,gBAEAL,EAAAW,iBAAA7zD,GAAA,gBAAAtpD,GACA,IAAAoB,EAEA,gBAAApB,EAAAqL,KAAA,CAIA,IAHAjK,EAAApB,EAAA0wC,OAAA3tC,OAGA3B,KACAs6G,GAAA,UAAA17G,EAAA0wC,OAAAtvC,GAAAiK,KAGW4wG,GAAA,UAAAj8G,EAAA0wC,OAAAtvC,GAAAiK,QACX4wG,EAAAj8G,EAAA0wC,OAAAtvC,IACA48C,kBAAA11C,oBAAA2yC,EAAA3yC,sBAJAozG,EAAA17G,EAAA0wC,OAAAtvC,IACA48C,kBAAA11C,oBAAA2yC,EAAA3yC,oBAQAozG,IAAAc,EAAAc,qBACAd,EAAAK,eAAAvB,iBACAkB,EAAAc,mBAAA,IAAAO,EAAAnC,EAAA1rF,GAEAwsF,EAAAc,mBAAAh0D,GAAA,6BAAAtL,GAIAi+D,IACAA,EAAAj+D,oBAKAw+D,EAAAO,mBAAAjE,eAAA96D,EAAAtE,QAIA8iE,EAAAc,mBAAAh0D,GAAA,oBACArO,EAAAoB,QAAA/uB,KAAA2tB,EAAA,YAEAuhE,EAAAc,mBAAAh0D,GAAA,+BAAAhhD,GACA2zG,GACAO,EAAAO,mBAAA/D,4BAAA1wG,KAKAk0G,EAAAa,WACAjY,KAAAoX,EAAAc,oBACAlY,KAAAoX,EAAAK,iBAGAZ,IAAAO,EAAAO,qBAEAP,EAAAK,eAAAvB,iBACAkB,EAAAO,mBAAA,IAAAe,EAAA7B,EAAAjsF,GAGAwsF,EAAAI,WACAxX,KAAAoX,EAAAO,oBACA3X,KAAAoX,EAAAK,oBAMAL,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,SAEA0uG,EAAAK,eAAAvzD,GAAA,OAAAx7C,KAAAuuC,QAAA/uB,KAAAxf,KAAA,UAIAA,KAAAyvG,uBAAA,SAAAj1G,GACA,IAAAk0G,EAAA1uG,KAAAwuG,kBAEAxuG,KAAAxF,sBACA2zG,IACAA,EAAAj+D,kBAAAtE,SAAAhI,EACAuqE,EAAAj+D,kBAAArE,SAAAjI,EACAw0D,EAAA2xD,aAAA57C,GACAA,EAAAj+D,kBAAA11C,sBACAk0G,EAAAE,8BACAF,EAAAE,6BAAAhL,iBAGAgK,IACAc,EAAAc,qBACAd,EAAAc,mBAAAvD,aACAyC,EAAAY,6BAAA1L,iBAEAgK,EAAA19D,kBAAAtE,SAAAhI,EACAgqE,EAAA19D,kBAAArE,SAAAjI,EACAw0D,EAAA2xD,aAAAn8C,GACAc,EAAArL,cAAArrC,QACA41C,EAAA19D,kBAAA11C,uBAGAk0G,EAAAG,sCACAH,EAAAG,qCAAAjL,iBAIA5jG,KAAAmrG,oBAAA,SAAA//D,GACA+iE,GACAnuG,KAAAwuG,kBAAAS,mBAAA9D,oBAAA//D,IAIAprC,KAAAstG,cAAA,SAAAvB,GACA6B,GAAA5tG,KAAAwuG,kBAAAgB,oBACAxvG,KAAAwuG,kBAAAgB,mBAAAlC,cAAAvB,IAKA/rG,KAAAhM,KAAA,SAAA9B,GACA,GAAAq8G,EAAA,CACA,IAAAmB,EAAArG,EAAAn3G,GAEAw9G,GAAA,QAAA1vG,KAAAwuG,kBAAAjxG,KACAyC,KAAAyuG,mBACOiB,GAAA,OAAA1vG,KAAAwuG,kBAAAjxG,MACPyC,KAAAkvG,kBAEAX,GAAA,EAEAvuG,KAAAwuG,kBAAAQ,eAAAh7G,KAAA9B,IAIA8N,KAAA4sC,MAAA,WACA2hE,GAAA,EAEAvuG,KAAAwuG,kBAAAQ,eAAApiE,SAIA5sC,KAAA2vG,cAAA,WACA3vG,KAAAwuG,kBAAAnL,eACArjG,KAAAwuG,kBAAAnL,cAAArrC,WAKAr5D,UAAA,IAAAsvC,EAEA5uC,EAAAC,SACAwwG,aACAC,qBACAC,qBACAvF,mBACAC,uDC1nCA,IAAAz8D,EAAA,WACAjuC,KAAAwgC,KAAA,WACA,IAAA82C,KAOAt3E,KAAAw7C,GAAA,SAAAj+C,EAAAohD,GACA24B,EAAA/5E,KACA+5E,EAAA/5E,OAEA+5E,EAAA/5E,GAAA+5E,EAAA/5E,GAAA0I,OAAA04C,IAQA3+C,KAAAgzC,IAAA,SAAAz1C,EAAAohD,GACA,IAAAxgD,EACA,QAAAm5E,EAAA/5E,KAGAY,EAAAm5E,EAAA/5E,GAAAsH,QAAA85C,GACA24B,EAAA/5E,GAAA+5E,EAAA/5E,GAAAqB,QACA04E,EAAA/5E,GAAAu+C,OAAA39C,EAAA,GACAA,GAAA,IAOA6B,KAAAuuC,QAAA,SAAAhxC,GACA,IAAA85F,EAAA/jG,EAAA2B,EAAAmN,EAEA,GADAi1F,EAAA/f,EAAA/5E,GAQA,OAAA4F,UAAAlO,OAEA,IADAA,EAAAoiG,EAAApiG,OACA3B,EAAA,EAAmBA,EAAA2B,IAAY3B,EAC/B+jG,EAAA/jG,GAAAuL,KAAAmB,KAAAmD,UAAA,QAEO,CAGP,IAFAf,KACA9O,EAAA6P,UAAAlO,OACA3B,EAAA,EAAmBA,EAAA6P,UAAAlO,SAAsB3B,EACzC8O,EAAApO,KAAAmP,UAAA7P,IAGA,IADA2B,EAAAoiG,EAAApiG,OACA3B,EAAA,EAAmBA,EAAA2B,IAAY3B,EAC/B+jG,EAAA/jG,GAAAkR,MAAAxE,KAAAoC,KAOApC,KAAAkhD,QAAA,WACAo2B,QAcArpC,EAAAtvC,UAAA24F,KAAA,SAAAC,GASA,OARAv3F,KAAAw7C,GAAA,gBAAAtpD,GACAqlG,EAAAvjG,KAAA9B,KAGA8N,KAAAw7C,GAAA,gBAAAg8C,GACAD,EAAA3qD,MAAA4qD,KAGAD,GAOAtpD,EAAAtvC,UAAA3K,KAAA,SAAA9B,GACA8N,KAAAuuC,QAAA,OAAAr8C,IAGA+7C,EAAAtvC,UAAAiuC,MAAA,SAAA4qD,GACAx3F,KAAAuuC,QAAA,OAAAipD,IAGAn4F,EAAAC,QAAA2uC,qCClHA5uC,EAAAC,SACAyrC,iBAAA,GACAC,iBAAA,GACAmE,qBAAA,0BCLA9vC,EAAAC,QAIA,WAGA,IAFA,IAAA6K,KAEA7W,EAAA,EAAmBA,EAAA6P,UAAAlO,OAAsB3B,IAAA,CACzC,IAAAy0B,EAAA5kB,UAAA7P,GAEA,QAAAiL,KAAAwpB,EACA7iB,EAAArG,KAAAkpB,EAAAxpB,KACA4L,EAAA5L,GAAAwpB,EAAAxpB,IAKA,OAAA4L,GAfA,IAAAjF,EAAA9G,OAAAO,UAAAuG,mCCqBAtC,OAAO87I,aAAgB,SAAS97I,EAAQ4F,EAAUo7B,GAShD,SAASqmH,EAASr2C,GAChB,IAIIs2C,EAASC,EAAIC,EAAIC,EACjBC,EACAC,EACAC,EACAC,EACA9kB,EAAO+kB,EAAWroB,EAClBsoB,EAAgBC,EAAaC,EAAqBC,EAClDC,EAXAvK,EAASh4I,EAASpH,cAAc,UA0rBpC,SAAS4pJ,EAAiB7pJ,EAAG+B,GAE3B,OAAe,GAAX/B,EAAEixC,OAAyB,GAAXlvC,EAAEkvC,OACZ,EAEK,GAAXlvC,EAAEkvC,OAAyB,GAAXjxC,EAAEixC,MACb,EAIFlvC,EAAEkoC,UAAYjqC,EAAEiqC,UAUzB,SAAS6/G,EAAuB9pJ,EAAG+B,GAEjC,OAAI/B,EAAEixC,OAASlvC,EAAEkvC,MACRjxC,EAAEixC,MAAQlvC,EAAEkvC,MAIdjxC,EAAEmpH,KAAOpnH,EAAEonH,KA6CpB,SAAS4gC,EAAaC,EAAUC,EAAMh5G,EAAOlgB,EAAG2I,EAAGx6B,GACjDL,KAAKmrJ,SAAWA,EAChBnrJ,KAAKorJ,KAAOA,EACZprJ,KAAKoyC,MAAQA,EACbpyC,KAAKkyB,EAAIA,EACTlyB,KAAK66B,EAAIA,EACT76B,KAAKK,KAAOA,EAAKyD,QAAQ,KAAKsnJ,GAAMtnJ,QAAQ,KAAKsuC,GAAOtuC,QAAQ,KAAKouB,GAAGpuB,QAAQ,KAAK+2B,GAavF,SAASwwH,EAAiBC,EAAUlrI,EAAM1e,EAAOC,EAAKC,GACpD,GAoaF,SAA2B6C,EAAG7G,GAC5B,IAAI2tJ,EAASC,EAAY/mJ,EAAG7G,EAAEgB,MAAM,EAAG,IACnC6sJ,EAASD,EAAY/mJ,EAAG7G,EAAEgB,MAAM,EAAG,IACnC8sJ,EAASF,EAAY/mJ,EAAG7G,EAAEgB,MAAM,EAAG,IACnC+sJ,EAASH,EAAY/mJ,EAAG7G,EAAEgB,MAAM,EAAG,KACnCgtJ,EAAQL,EAAO,GAAKE,EAAO,GAAKC,EAAO,GAAKC,EAAO,GACvD,IAAe,GAAVC,GAAwB,GAATA,EACnB,OAAO,EACR,IAAIC,EAAQN,EAAO,GAAKE,EAAO,GAAKC,EAAO,GAAKC,EAAO,GACvD,IAAe,GAAVE,GAAwB,GAATA,EACnB,OAAO,EAER,OADYN,EAAO,GAAKE,EAAO,GAAKC,EAAO,GAAKC,EAAO,IACvC,EAhbZG,CAAkBR,EAAUlrI,EAAK+qI,UAAW,CAE9C,IAAIvtJ,EAAIwiB,EAAK+qI,SACTj5H,EAAIt0B,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAG,GAC5Bi9B,EAAIj9B,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC3BC,EAAID,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC3BkwB,EAAIrzB,KAAKmqD,KAAK1yB,EAAEA,EAAI2I,EAAEA,EAAIh9B,EAAEA,GAC5BkuJ,EAAQtxJ,KAAKmtJ,KAAK/pJ,EAAIiwB,GAEtB62B,EADMlqD,KAAK2mJ,MAAMvmH,EAAG3I,GACNvwB,EAClBgjD,GAAUA,EAAQlqD,KAAKqlJ,IAAO,EAAIrlJ,KAAKqlJ,GAAMn7F,GAASlqD,KAAKqlJ,GAAM,EAAIrlJ,KAAKqlJ,GAAK,EAC/En7F,EAAQlqD,KAAKg5F,IAAI9uC,GACjBvkC,EAAKkqG,KAAO7vH,KAAKuxJ,KAAKvxJ,KAAKumJ,IAAIt/I,GAASjH,KAAKumJ,IAAI+K,GAAStxJ,KAAKwmJ,IAAIv/I,GAASjH,KAAKwmJ,IAAI8K,GAAStxJ,KAAKwmJ,IAAIt8F,IAIvG,IADA,IAAIsnG,GAAY,EACProJ,EAAI,EAAGA,EAAIsmJ,EAAQgC,UAAUj3J,OAAQ2O,IAC5C,GAAIsmJ,EAAQgC,UAAUtoJ,GAAGvD,MAAQ+f,EAAK/f,KAAM,CAC1C4rJ,GAAY,EACZ/B,EAAQgC,UAAUtoJ,GAAGwnC,UAAY8+G,EAAQiC,qBACzCjC,EAAQgC,UAAUtoJ,GAAG0mH,KAAOlqG,EAAKkqG,KACjC4/B,EAAQkC,aAAap4J,KAAKk2J,EAAQgC,UAAUtoJ,IAC5C,MAYJ,GATKqoJ,IAEH7rI,EAAKgrB,UAAY8+G,EAAQiC,qBACzBjC,EAAQkC,aAAap4J,KAAKosB,GAC1B8pI,EAAQgC,UAAUl4J,KAAKosB,IAKrBA,EAAKgyB,MAAQ83G,EAAQ93G,MAAO,CAC9B,IAAIi6G,EAAW1mB,EAAMyhB,eAAiB3sJ,KAAKC,IAAI,EAAG0lB,EAAKgyB,MAAQuzF,EAAM2mB,UACjEC,EAAW9xJ,KAAKwtG,KAAKokD,EAAW1mB,EAAM6mB,mBAAqB,EAC3DC,EAAiBJ,EAAW1mB,EAAM+mB,eAAiB,EACnDC,EAA2B,EAAXN,EAAgB1mB,EAAM+mB,eACrB,IAAjBC,IACFA,EAAehnB,EAAM+mB,gBAEA,IAAnBD,IACFA,EAAwC,EAAvB9mB,EAAM+mB,gBAEzB,IAAIlpJ,EAAI,GACJ4c,EAAK8R,GAAKq6H,GAAYnsI,EAAKya,GAAK0xH,IAClC/oJ,EAAI,EAAMmiI,EAAM+mB,gBAAkB/mB,EAAM+mB,eAAiBC,IAE3D,IAEUC,EAFNt5J,EAAI,EAAMkQ,EACVse,KAEA+qI,EAAKrpJ,EAAGspJ,EAAKtpJ,EAAGupJ,EAAKvpJ,EAAGwpJ,EAAK15J,EAAG25J,EAAK35J,EAAG45J,EAAK55J,EAE7Cq5J,EAAehnB,EAAM+mB,iBACnBtsI,EAAK8R,GAAKq6H,GAAYnsI,EAAKya,GAAK0xH,GAClCO,EAAK,GACLG,EAAK,GACY,KAAb7sI,EAAKgrI,MAA4B,KAAbhrI,EAAKgrI,OAC3B2B,EAAK,GACLG,EAAK,KAEE9sI,EAAK8R,GAAKq6H,GAAYnsI,EAAKya,GAAK0xH,IACzCM,EAAK,GACLG,EAAK,GACY,KAAb5sI,EAAKgrI,MAA4B,KAAbhrI,EAAKgrI,OAC3B2B,EAAK,GACLG,EAAK,MAKPT,GAAkB9mB,EAAM+mB,iBACtBtsI,EAAK8R,GAAKq6H,IACZM,EAAK,EACLG,EAAK,EACY,KAAb5sI,EAAKgrI,MAA4B,KAAbhrI,EAAKgrI,OAC3B2B,EAAK,EACLG,EAAK,IAGL9sI,EAAKya,GAAK0xH,IACZO,EAAK,EACLG,EAAK,EACY,KAAb7sI,EAAKgrI,MAA4B,KAAbhrI,EAAKgrI,OAC3B2B,EAAK,EACLG,EAAK,KAUXN,EAAO,IAAI1B,GALQttJ,EAAE,GAAgBA,EAAE,GAAgBA,EAAE,GACvDA,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAOpvJ,EAAE,GAAG4F,EAAE5F,EAAE,GAAGtK,EAAIsK,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,EACjDtvJ,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAKpvJ,EAAE,GAAGkvJ,EAAGlvJ,EAAE,GAAGqvJ,EAAKrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,EACjDtvJ,EAAE,GAAG4F,EAAE5F,EAAE,GAAGtK,EAAGsK,EAAE,GAAGkvJ,EAAGlvJ,EAAE,IAAIqvJ,EAAIrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,IAAIsvJ,GAEnB9sI,EAAKgrI,KAAMhrI,EAAKgyB,MAAQ,EAAU,EAAPhyB,EAAK8R,EAAY,EAAP9R,EAAKya,EAAK8qG,EAAMwnB,UACnFrrI,EAAS9tB,KAAK44J,GACRxsI,EAAK8R,GAAKq6H,GAAYE,GAAkB9mB,EAAM+mB,iBAMlDE,EAAO,IAAI1B,GALHttJ,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAOpvJ,EAAE,GAAG4F,EAAE5F,EAAE,GAAGtK,EAAIsK,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,EACvDtvJ,EAAE,GAAgBA,EAAE,GAAgBA,EAAE,GACtCA,EAAE,GAAG4F,EAAE5F,EAAE,GAAGtK,EAAIsK,EAAE,GAAGkvJ,EAAGlvJ,EAAE,GAAGqvJ,EAAKrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,EAC/CtvJ,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAKpvJ,EAAE,GAAGkvJ,EAAGlvJ,EAAE,GAAGqvJ,EAAKrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,GAErB9sI,EAAKgrI,KAAMhrI,EAAKgyB,MAAQ,EAAU,EAAPhyB,EAAK8R,EAAI,EAAU,EAAP9R,EAAKya,EAAK8qG,EAAMwnB,UACrFrrI,EAAS9tB,KAAK44J,IAEVxsI,EAAK8R,GAAKq6H,GAAYE,GAAkB9mB,EAAM+mB,gBACxCtsI,EAAKya,GAAK0xH,GAAYE,GAAkB9mB,EAAM+mB,iBAMxDE,EAAO,IAAI1B,GALHttJ,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAKpvJ,EAAE,GAAGkvJ,EAAGlvJ,EAAE,GAAGqvJ,EAAKrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,EACvDtvJ,EAAE,GAAG4F,EAAE5F,EAAE,GAAGtK,EAAIsK,EAAE,GAAGkvJ,EAAGlvJ,EAAE,GAAGqvJ,EAAKrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,EAC/CtvJ,EAAE,GAAgBA,EAAE,GAAgBA,EAAE,GACtCA,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAMpvJ,EAAE,IAAI4F,EAAE5F,EAAE,GAAGtK,EAAGsK,EAAE,IAAImvJ,EAAGnvJ,EAAE,GAAGsvJ,GAErB9sI,EAAKgrI,KAAMhrI,EAAKgyB,MAAQ,EAAU,EAAPhyB,EAAK8R,EAAI,EAAU,EAAP9R,EAAKya,EAAI,EAAG8qG,EAAMwnB,UACvFrrI,EAAS9tB,KAAK44J,IAEVxsI,EAAKya,GAAK0xH,GAAYE,GAAkB9mB,EAAM+mB,iBAMlDE,EAAO,IAAI1B,GALDttJ,EAAE,GAAG4F,EAAE5F,EAAE,GAAGtK,EAAGsK,EAAE,GAAGkvJ,EAAGlvJ,EAAE,IAAIqvJ,EAAIrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,IAAIsvJ,EACvDtvJ,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAKpvJ,EAAE,GAAGkvJ,EAAGlvJ,EAAE,GAAGqvJ,EAAKrvJ,EAAE,GAAGmvJ,EAAGnvJ,EAAE,GAAGsvJ,EACjDtvJ,EAAE,GAAGivJ,EAAGjvJ,EAAE,GAAGovJ,EAAMpvJ,EAAE,IAAI4F,EAAE5F,EAAE,GAAGtK,EAAGsK,EAAE,IAAImvJ,EAAGnvJ,EAAE,GAAGsvJ,EACjDtvJ,EAAE,GAAeA,EAAE,IAAgBA,EAAE,KAETwiB,EAAKgrI,KAAMhrI,EAAKgyB,MAAQ,EAAU,EAAPhyB,EAAK8R,EAAY,EAAP9R,EAAKya,EAAI,EAAG8qG,EAAMwnB,UACrFrrI,EAAS9tB,KAAK44J,IAEhB,IAAK,IAAI5uF,EAAI,EAAGA,EAAIl8C,EAAS7sB,OAAQ+oE,IACnCqtF,EAAiBC,EAAUxpI,EAASk8C,GAAIt8D,EAAOC,EAAKC,KA0C5D,SAASwrJ,EAAa3oJ,EAAGy/I,EAAO5Q,GAC9B,IAAI7vE,EAAIhpE,KAAKumJ,IAAIkD,GACb9gJ,EAAI3I,KAAKwmJ,IAAIiD,GACjB,MAAY,KAAR5Q,GAEA7uI,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GACpCA,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GACpCA,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,IAG5B,KAAR6uI,GAEAlwI,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIA,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GACpCrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIA,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GACpCrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIA,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,IAG5B,KAAR6uI,GAEAlwI,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIA,EAAE,GACpCrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIA,EAAE,GACpCrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIrB,EAAEqB,EAAE,GAAKg/D,EAAEh/D,EAAE,GAAIA,EAAE,SAJxC,EA8BF,SAAS4oJ,EAAiB5oJ,GACxB,OACEA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAE,IACvBA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAE,IACvBA,EAAG,GAAIA,EAAG,GAAIA,EAAE,IAAKA,EAAE,IACvBA,EAAG,GAAIA,EAAG,GAAIA,EAAE,IAAKA,EAAE,KAl/B3B+7I,EAAOt3I,MAAMxW,MAAQ8tJ,EAAOt3I,MAAMvW,OAAS,OAC3CihH,EAAUlwF,YAAY88H,GA6BtBxgJ,KAAKwgC,KAAO,SAAS8sH,EAAQC,EAAYC,EAAUtU,EAAMC,EAAMsU,EAASngI,EAAU+W,GAKhF,GAHIkpH,IAAe3pH,IAClB2pH,EAAa,mBAEI,mBAAdA,GAAiD,WAAdA,GACnB,YAAdA,EAEJ,MADAjtJ,QAAQC,IAAI,yCACJhD,KAAM,gBAShB,GANAmtJ,EAAY6C,EACZ5nB,EAAQ2nB,EACRjrB,EAAUmrB,EACVzC,EAAe1mH,MAGX6lH,EAAS,CAaX,GAZIE,IACFD,EAAGuD,aAAaxD,EAASE,GACzBD,EAAGwD,aAAavD,IAEdC,IACFF,EAAGuD,aAAaxD,EAASG,GACzBF,EAAGwD,aAAatD,IAElBF,EAAGyD,WAAWzD,EAAG0D,aAAc,MAC/B1D,EAAGyD,WAAWzD,EAAG2D,qBAAsB,MACnC5D,EAAQ6D,SACX5D,EAAG6D,cAAc9D,EAAQ6D,SACtB7D,EAAQgC,UACX,IAAK,IAAI54J,EAAI,EAAGA,EAAI42J,EAAQgC,UAAUj3J,OAAQ3B,IAC5C62J,EAAG6D,cAAc9D,EAAQgC,UAAU54J,GAAGy6J,SACzC5D,EAAG8D,cAAc/D,GACjBA,EAAUtmH,EAIZ,IAAI6/B,EAFJgnF,EAAO7mH,EAGP,IACIsqH,EADAC,GAAc,EAElB,GAAiB,WAAbzD,EACF,IAAKjnF,EAAI,EAAGA,EAAI,EAAGA,IACbkiE,EAAMliE,GAAG/wE,MAAQ,GACfw7J,IAAiBtqH,IACpBsqH,EAAevoB,EAAMliE,GAAG/wE,OACrBw7J,GAAgBvoB,EAAMliE,GAAG/wE,OAC5B4N,QAAQC,IAAI,wCAA0C2tJ,EAAe,QAAUvoB,EAAMliE,GAAG/wE,QAE1Fy7J,GAAc,EAGnB,SAASC,EAAiBC,GACxB,GAAIF,EAAa,CACf,IAAIG,EAASD,EAAUA,EAAU,EAC7BE,EAAa,IAAIC,kBAAkBF,GACnCG,EAAMpqH,EAAOq9B,gBAAkBr9B,EAAOq9B,iBAAmB,EAAG,EAAG,GACnE+sF,EAAI,IAAM,IACVA,EAAI,IAAM,IACVA,EAAI,IAAM,IAEV,IAAK,IAAIn7J,EAAI,EAAGA,EAAIg7J,EAAQh7J,IAC1Bi7J,EAAWj7J,KAAOm7J,EAAI,GACtBF,EAAWj7J,KAAOm7J,EAAI,GACtBF,EAAWj7J,KAAOm7J,EAAI,GAExB,IAAIC,EAAmB,IAAIC,UAAUJ,EAAYF,EAASA,GAC1D,IAAK5qF,EAAI,EAAGA,EAAI,EAAGA,IACK,GAAlBkiE,EAAMliE,GAAG/wE,QACZizI,EAAMliE,GAAKirF,IA8BlB,GAlBmB,WAAbhE,GACwC,IAAvCwD,EAAgBA,EAAe,KAC/B5nG,UAAUC,UAAU79C,cAAc1J,MAAM,+BACzCsnD,UAAUC,UAAU79C,cAAc1J,MAAM,+BACxCsnD,UAAUC,UAAU79C,cAAc1J,MAAM,gCACxCsnD,UAAUC,UAAUvnD,MAAM,2BAEzBmrJ,IACJA,EAAK3J,EAAOoO,WAAW,sBAAwBpS,OAAO,EAAOzpJ,OAAO,KACjEo3J,GAAuB,MAAjBA,EAAG0E,YACZC,MAQE3E,IAAqB,YAAbO,GAA2B/kB,EAAMzgI,eAAe,iBAC1C,WAAbwlJ,KACC,qBAAsBliJ,EAAS6mB,gBAAgBnmB,OAChDo9C,UAAUC,UAAUvnD,MAAM,0BACmB,IAA7CsnD,UAAUyoG,WAAWlqJ,QAAQ,YAJnC,CAeE,IAAIxE,EATAkqJ,GACF32C,EAAUnwF,YAAY8mI,IAIxBA,EAAQ/hJ,EAASpH,cAAc,QACzBC,UAAY,aAKhBhB,EADEslI,EAAMkX,SACDlX,EAAMkX,SAAWlX,EAAMqpB,aAEvBrpB,EAAMqpB,aAEf,IAAIC,GAAS,IAAK,IAAK,IAAK,IAAK,IAAK,KAClCtwC,EAAS,EACTkoB,EAAS,WAEX,IAAIqoB,EAAa1mJ,EAASpH,cAAc,UACxC8tJ,EAAW7tJ,UAAY,kBAAoB4tJ,EAAMjvJ,KAAKorJ,MAAQ,OAC9Db,EAAM7mI,YAAYwrI,GAClB,IAAIC,EAAcD,EAAWN,WAAW,MACxCM,EAAWhmJ,MAAMxW,MAAQsN,KAAKtN,MAAQ,EAAI,KAC1Cw8J,EAAWhmJ,MAAMvW,OAASqN,KAAKrN,OAAS,EAAI,KAC5Cu8J,EAAWx8J,MAAQsN,KAAKtN,MAAQ,EAChCw8J,EAAWv8J,OAASqN,KAAKrN,OAAS,EAClCw8J,EAAYC,UAAUpvJ,KAAM,EAAG,GAC/B,IAII1M,EACA0qE,EALAqxF,EAAUF,EAAYG,aAAa,EAAG,EAAGJ,EAAWx8J,MAAOw8J,EAAWv8J,QACtET,EAAOm9J,EAAQn9J,KAKnB,IAAKoB,EAAI,EAAGA,EAAI47J,EAAWx8J,MAAQ,EAAGY,IACpC,IAAK0qE,EAAI,EAAGA,EAAI,EAAGA,IACjB9rE,EAA8B,GAAxBoB,EAAI47J,EAAWx8J,OAAasrE,GAAK9rE,EAAkC,GAA5BoB,EAAuB,EAAnB47J,EAAWx8J,OAAiBsrE,GAC7E9rE,EAAwD,GAAlDoB,EAAI47J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,IAAUqrE,GAAK9rE,EAAwD,GAAlDoB,EAAI47J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,IAAUqrE,GAGjI,IAAK1qE,EAAI,EAAGA,EAAI47J,EAAWv8J,OAAS,EAAGW,IACrC,IAAK0qE,EAAI,EAAGA,EAAI,EAAGA,IACjB9rE,EAAkC,GAA5BoB,EAAI47J,EAAWx8J,MAAQ,GAASsrE,GAAK9rE,EAAkC,GAA5BoB,EAAI47J,EAAWx8J,MAAQ,GAASsrE,GACjF9rE,EAAwC,IAAjCoB,EAAI,GAAK47J,EAAWx8J,MAAQ,GAASsrE,GAAK9rE,EAAwC,IAAjCoB,EAAI,GAAK47J,EAAWx8J,MAAQ,GAASsrE,GAGjG,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjB9rE,EAA8B,GAAxBg9J,EAAWx8J,MAAQ,GAASsrE,GAAK9rE,EAAkC,GAAT,EAAnBg9J,EAAWx8J,MAAY,GAASsrE,GAC7E9rE,EAAkC,GAAT,EAAnBg9J,EAAWx8J,MAAY,GAASsrE,GAAK9rE,EAAkC,GAAT,EAAnBg9J,EAAWx8J,MAAY,GAASsrE,GACjF9rE,EAAwD,GAAlDg9J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,GAAK,GAASqrE,GAAK9rE,EAAwD,GAAlDg9J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,GAAK,GAASqrE,GAC7H9rE,EAAwD,GAAlDg9J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,GAAK,GAASqrE,GAAK9rE,EAAwD,GAAlDg9J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,GAAK,GAASqrE,GAE/H,IAAK1qE,EAAI,EAAGA,EAAI47J,EAAWx8J,MAAQ,EAAGY,IACpC,IAAK0qE,EAAI,EAAGA,EAAI,EAAGA,IACjB9rE,EAAS,EAAJoB,EAAQ0qE,GAAK9rE,EAA8B,GAAxBoB,EAAI47J,EAAWx8J,OAAasrE,GACpD9rE,EAAwD,GAAlDoB,EAAI47J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,IAAUqrE,GAAK9rE,EAAwD,GAAlDoB,EAAI47J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,IAAUqrE,GAGjI,IAAK1qE,EAAI,EAAGA,EAAI47J,EAAWv8J,OAAS,EAAGW,IACrC,IAAK0qE,EAAI,EAAGA,EAAI,EAAGA,IACjB9rE,EAAMoB,EAAI47J,EAAWx8J,MAAS,EAAIsrE,GAAK9rE,EAAkC,GAA5BoB,EAAI47J,EAAWx8J,MAAQ,GAASsrE,GAC7E9rE,EAAwC,IAAjCoB,EAAI,GAAK47J,EAAWx8J,MAAQ,GAASsrE,GAAK9rE,EAAwC,IAAjCoB,EAAI,GAAK47J,EAAWx8J,MAAQ,GAASsrE,GAGjG,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjB9rE,EAAK8rE,GAAK9rE,EAA8B,GAAxBg9J,EAAWx8J,MAAQ,GAASsrE,GAC5C9rE,EAA8B,GAAxBg9J,EAAWx8J,MAAQ,GAASsrE,GAAK9rE,EAAkC,GAAT,EAAnBg9J,EAAWx8J,MAAY,GAASsrE,GAC7E9rE,EAAMg9J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,GAAM,EAAIqrE,GAAK9rE,EAAwD,GAAlDg9J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,GAAK,GAASqrE,GACzH9rE,EAAkD,GAA5Cg9J,EAAWx8J,MAAQw8J,EAAWv8J,OAAS,GAASqrE,GAAK9rE,EAAwD,GAAlDg9J,EAAWx8J,OAASw8J,EAAWv8J,OAAS,GAAK,GAASqrE,GAIzHmxF,EAAYI,aAAaF,EAAS,EAAG,GAErCG,EAAU3wJ,KAAKmB,OAEbwvJ,EAAY,WACVxvJ,KAAKtN,MAAQ,GACX43J,IAAoB1mH,IACvB0mH,EAAkBtqJ,KAAKtN,OACpB43J,GAAmBtqJ,KAAKtN,OAC3B4N,QAAQC,IAAI,4CAA8C+pJ,EAAkB,QAAUtqJ,KAAKtN,QAE7Fy7J,GAAc,EAED,KADdxvC,IAEE2rC,EAAkBtqJ,KAAKtN,MACvBkhH,EAAUlwF,YAAY6mI,GACtBj9H,MAIJ,IADA6gI,GAAc,EACT1qF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACtB,IAAIgsF,EAAU,IAAI9S,MAClB8S,EAAQt8F,YAAc43F,EAAa53F,YAAc43F,EAAa53F,YAAc,YAC5Es8F,EAAQrE,KAAO3nF,EACfgsF,EAAQlpH,OAASsgG,EACjB4oB,EAAQjpH,QAAUgpH,EAEhBC,EAAQllG,IADO,YAAbmgG,EACYgF,UAAUrvJ,EAAKyD,QAAQ,KAAMmrJ,EAAMxrF,IAAM,IAAMkiE,EAAMgqB,WAErDD,UAAU/pB,EAAMliE,GAAGlZ,KAGrC6jG,EAAiB9D,OA9GnB,CAgHO,IAAKH,EAEV,MADA7pJ,QAAQC,IAAI,sCACJhD,KAAM,YAEC,WAAbmtJ,GACH0D,EAAiBF,GACdvoB,EAAMkX,SACRlX,EAAMwnB,SAAWxnB,EAAMkX,SAAWlX,EAAMtlI,KAExCslI,EAAMwnB,SAAWxnB,EAAMtlI,KAEzBslI,EAAM6mB,kBAAoB,EAAI7mB,EAAM+mB,eAEpC,IAAIvB,IAkqBK,EAAI,GAAI,EAAI,EAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,EAAI,EAAI,GAAI,EAAI,EAAI,GAAI,GAAI,EAAI,EAAI,GAAI,EAAI,GAC3C,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,EAAI,GAAI,GAC5C,GAAI,GAAI,EAAI,GAAI,GAAI,EAAI,GAAI,EAAI,GAAI,GAAI,EAAI,GAC5C,EAAI,EAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC7C,EAAI,GAAI,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,EAAI,GAAI,GAAI,GArqB9C,IADAX,KACK/mF,EAAI,EAAGA,EAAI,EAAGA,IACjB+mF,EAAM/mF,GAAK0nF,EAASvsJ,MAAU,GAAJ6kE,EAAY,GAAJA,EAAS,IAC3C0nF,IA8pBO,EAAI,GAAI,EAAI,EAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,EAAI,EAAI,GAAI,EAAI,EAAI,GAAI,GAAI,EAAI,EAAI,GAAI,EAAI,GAC3C,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAAI,GAAI,EAAI,GAAI,GAC5C,GAAI,GAAI,EAAI,GAAI,GAAI,EAAI,GAAI,EAAI,GAAI,GAAI,EAAI,GAC5C,EAAI,EAAI,GAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC7C,EAAI,GAAI,EAAI,EAAI,EAAI,EAAI,GAAI,EAAI,EAAI,GAAI,GAAI,GA/pB9C,IAAIz4J,EAAQ,EAAGstJ,EAAW,EAQ1B,GAPiB,mBAAb0K,GACFh4J,EAAQ+H,KAAK6+C,IAAIqsF,EAAMjzI,MAAOizI,EAAMhzI,QACpCqtJ,EAAWmK,EAAGyF,aAAazF,EAAG0F,mBACR,WAAbnF,IACTh4J,EAAQw7J,EACRlO,EAAWmK,EAAGyF,aAAazF,EAAG2F,4BAE5Bp9J,EAAQstJ,EAGV,MAFA1/I,QAAQC,IAAI,qCAAwC7N,EAAQ,wDACMstJ,EAAW,QACrEziJ,KAAM,mBAAoB7K,MAAOA,EAAOstJ,SAAUA,GAIxD37G,IAAWT,GAAcS,EAAO85G,eAAiBv6G,GAAaS,EAAO+5G,cAAgBx6G,IACxF6mH,GAAQpmH,EAAO85G,cAAgBv6G,EAAY,EAAIS,EAAO85G,aACrD95G,EAAO+5G,aAAex6G,EAAY,EAAIS,EAAO+5G,cAG/C,IAAI2R,EAAa5F,EAAG6F,WAGpB7F,EAAG8F,SAAS,EAAG,EAAG9F,EAAG+F,mBAAoB/F,EAAGgG,qBAG5C/F,EAAKD,EAAGiG,aAAajG,EAAGkG,eACxB,IAAIC,EAAY1yJ,EACC,YAAb8sJ,IACF4F,EAAYC,GAEdpG,EAAGqG,aAAapG,EAAIkG,GACpBnG,EAAGsG,cAAcrG,GAGjBC,EAAKF,EAAGiG,aAAajG,EAAGuG,iBACxB,IAAIC,EAAcC,EACD,WAAblG,GACFqF,EAAa5F,EAAG0G,iBAChBF,EAAcG,GACQ,YAAbpG,IACTiG,EAAcI,GAEhB5G,EAAGqG,aAAanG,EAAIsG,GACpBxG,EAAGsG,cAAcpG,GAGjBH,EAAUC,EAAG6G,gBACb7G,EAAG8G,aAAa/G,EAASE,GACzBD,EAAG8G,aAAa/G,EAASG,GACzBF,EAAG+G,YAAYhH,GAGVC,EAAGgH,mBAAmB/G,EAAID,EAAGiH,iBACjC9wJ,QAAQC,IAAI4pJ,EAAGkH,iBAAiBjH,IAC5BD,EAAGgH,mBAAmB9G,EAAIF,EAAGiH,iBACjC9wJ,QAAQC,IAAI4pJ,EAAGkH,iBAAiBhH,IAC5BF,EAAGmH,oBAAoBpH,EAASC,EAAGoH,cACvCjxJ,QAAQC,IAAI4pJ,EAAGqH,kBAAkBtH,IAGlCC,EAAGsH,WAAWvH,GAEdA,EAAQwH,gBAAiB,EAGzB,IAAItjJ,EAAQi2B,EAAOq9B,gBAAkBr9B,EAAOq9B,iBAAmB,EAAG,EAAG,GACrEyoF,EAAGwH,WAAWvjJ,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI,GAC5C+7I,EAAG/2G,MAAM+2G,EAAGyH,kBAGZ1H,EAAQ2H,iBAAmB1H,EAAG2H,kBAAkB5H,EAAS,cACzDC,EAAG4H,wBAAwB7H,EAAQ2H,kBAElB,YAAbnH,GAEGC,IACJA,EAAiBR,EAAG6H,gBACrB7H,EAAGyD,WAAWzD,EAAG0D,aAAclD,GAC/BR,EAAG8H,WAAW9H,EAAG0D,aAAc,IAAIqE,eAAe,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,IAAK/H,EAAGgI,aACrFhI,EAAGiI,oBAAoBlI,EAAQ2H,iBAAkB,EAAG1H,EAAGkI,OAAO,EAAO,EAAG,GAGxEnI,EAAQ/sE,YAAcgtE,EAAGmI,mBAAmBpI,EAAS,iBACrDC,EAAGoI,UAAUrI,EAAQ/sE,YAAagtE,EAAG+F,mBAAqB/F,EAAGgG,qBAG7DjG,EAAQv7G,IAAMw7G,EAAGmI,mBAAmBpI,EAAS,SAC7CA,EAAQ6B,MAAQ5B,EAAGmI,mBAAmBpI,EAAS,WAC/CA,EAAQ1mJ,EAAI2mJ,EAAGmI,mBAAmBpI,EAAS,OAC3CA,EAAQxmJ,EAAIymJ,EAAGmI,mBAAmBpI,EAAS,OAC3CA,EAAQtsJ,EAAIusJ,EAAGmI,mBAAmBpI,EAAS,OAC3CA,EAAQsI,GAAKrI,EAAGmI,mBAAmBpI,EAAS,QAC5CA,EAAQuI,IAAMtI,EAAGmI,mBAAmBpI,EAAS,SAG7CC,EAAGoI,UAAUrI,EAAQxmJ,EAAGw1I,GAAkB,EAAVz+I,KAAKqlJ,KACrCqK,EAAGoI,UAAUrI,EAAQtsJ,EAAGu7I,EAAO1+I,KAAKqlJ,IACpCqK,EAAGoI,UAAUrI,EAAQsI,GAAI/E,EAAUhzJ,KAAKqlJ,GAAK,GAG5B,mBAAb4K,IACFR,EAAQxoF,gBAAkByoF,EAAGmI,mBAAmBpI,EAAS,qBACzDC,EAAGuI,WAAWxI,EAAQxoF,gBAAiBtzD,EAAMnI,QAAQ,MAIvDikJ,EAAQ6D,QAAU5D,EAAGwI,gBACrBxI,EAAGyI,YAAY7C,EAAY7F,EAAQ6D,SAGlB,WAAbrD,GAEFP,EAAG0I,WAAW1I,EAAG2I,4BAA6B,EAAG3I,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,EAAM,IACzFwkB,EAAG0I,WAAW1I,EAAG8I,4BAA6B,EAAG9I,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,EAAM,IACzFwkB,EAAG0I,WAAW1I,EAAG+I,4BAA6B,EAAG/I,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,EAAM,IACzFwkB,EAAG0I,WAAW1I,EAAGgJ,4BAA6B,EAAGhJ,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,EAAM,IACzFwkB,EAAG0I,WAAW1I,EAAGiJ,4BAA6B,EAAGjJ,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,EAAM,IACzFwkB,EAAG0I,WAAW1I,EAAGkJ,4BAA6B,EAAGlJ,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,EAAM,KAGzFwkB,EAAG0I,WAAW9C,EAAY,EAAG5F,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,GAIjEwkB,EAAGmJ,cAAcvD,EAAY5F,EAAGoJ,eAAgBpJ,EAAGqJ,eACnDrJ,EAAGmJ,cAAcvD,EAAY5F,EAAGsJ,eAAgBtJ,EAAGqJ,eACnDrJ,EAAGmJ,cAAcvD,EAAY5F,EAAGuJ,mBAAoBvJ,EAAGwJ,QACvDxJ,EAAGmJ,cAAcvD,EAAY5F,EAAGyJ,mBAAoBzJ,EAAGwJ,UAIvDzJ,EAAQ2J,gBAAkB1J,EAAG2H,kBAAkB5H,EAAS,eACxDC,EAAG4H,wBAAwB7H,EAAQ2J,iBAG9BjJ,IACJA,EAAcT,EAAG6H,gBACbnH,IACJA,EAAsBV,EAAG6H,gBACrBlH,IACJA,EAAiBX,EAAG6H,gBAGrB7H,EAAGyD,WAAWzD,EAAG0D,aAAchD,GAC/BV,EAAG8H,WAAW9H,EAAG0D,aAAc,IAAIqE,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAK/H,EAAGgI,aAGvEhI,EAAGyD,WAAWzD,EAAG2D,qBAAsBhD,GACvCX,EAAG8H,WAAW9H,EAAG2D,qBAAsB,IAAIxwJ,aAAa,EAAE,EAAE,EAAE,EAAE,EAAE,IAAK6sJ,EAAGgI,aAG1EjI,EAAQ4J,aAAe3J,EAAGmI,mBAAmBpI,EAAS,iBACtDA,EAAQ6J,YAAc5J,EAAGmI,mBAAmBpI,EAAS,gBAGrDA,EAAQ93G,OAAS,EAEjB83G,EAAQkC,gBACRlC,EAAQgC,aACRhC,EAAQiC,mBAAqB,GAI/B,IAAI1nH,EAAM0lH,EAAG0E,WACb,GAAY,IAARpqH,EAEF,MADAnkC,QAAQC,IAAI,0CAA2CkkC,IAC/ClnC,KAAM,eAGhB+vB,MAQFttB,KAAK4mI,QAAU,WASb,GARIhzB,IAAchwE,IACZ48G,IAAW58G,GAAagwE,EAAU74E,SAASylH,IAC7C5sC,EAAUnwF,YAAY+8H,GAEpB+J,IAAU3mH,GAAagwE,EAAU74E,SAASwvH,IAC5C32C,EAAUnwF,YAAY8mI,IAGtBJ,EAAI,CAGN,IAAIwF,EAAYxF,EAAG6J,aAAa,sBAC5BrE,GACHA,EAAUsE,gBASfj0J,KAAKknJ,OAAS,WACZ,IAAIgN,EAAatxJ,EAAOuxJ,kBAAoB,EAC5C3T,EAAO9tJ,MAAQ8tJ,EAAOG,YAAcuT,EACpC1T,EAAO7tJ,OAAS6tJ,EAAOK,aAAeqT,EAClC/J,IACmB,MAAjBA,EAAG0E,YACNC,IACD3E,EAAG8F,SAAS,EAAG,EAAG9F,EAAG+F,mBAAoB/F,EAAGgG,qBAC3B,YAAbzF,GACFP,EAAGoI,UAAUrI,EAAQ/sE,YAAaqjE,EAAOG,YAAcH,EAAOK,gBAKpE7gJ,KAAKknJ,SAOLlnJ,KAAK2oJ,QAAU,SAASxK,EAAcC,GACpCqM,GAAQtM,EAAcC,IAcxBp+I,KAAKgB,OAAS,SAASU,EAAOC,EAAKC,EAAMyiC,GACvC,IAAIy8G,EAAUr9E,EAAGw1E,EAAO,EAOxB,GANI50G,IAAWT,IACdS,MACGA,EAAO40G,OACVA,EAAO50G,EAAO40G,MAGXwR,IAAS7mH,EAAW,CACtB,IAAIu6G,EAAesM,EAAK,GACtBrM,EAAcqM,EAAK,GAGjB2J,EAAa1yJ,EACf2yJ,EAAW1yJ,EACXuwB,EAAIz3B,KAAKwmJ,IAAI7C,GAAe3jJ,KAAKumJ,IAAIt/I,GAASjH,KAAKumJ,IAAI7C,GAC7C1jJ,KAAKwmJ,IAAIv/I,IAAUjH,KAAKwmJ,IAAI9C,GAAgB1jJ,KAAKwmJ,IAAIt/I,GACrDlH,KAAKumJ,IAAI5C,GAAe3jJ,KAAKumJ,IAAI7C,GAAgB1jJ,KAAKumJ,IAAIr/I,IACpEk5B,GAAKpgC,KAAKumJ,IAAIt/I,GAASjH,KAAKumJ,IAAI5C,GACtB3jJ,KAAKwmJ,IAAIv/I,GAASjH,KAAKwmJ,IAAI7C,GAAe3jJ,KAAKumJ,IAAIr/I,GAC7D9D,EAAIpD,KAAKwmJ,IAAI7C,GAAe3jJ,KAAKwmJ,IAAI9C,GAAgB1jJ,KAAKumJ,IAAIt/I,GACpDjH,KAAKwmJ,IAAIv/I,KAAWjH,KAAKwmJ,IAAIt/I,GAAOlH,KAAKumJ,IAAI7C,GAC7C1jJ,KAAKwmJ,IAAI9C,GAAgB1jJ,KAAKumJ,IAAI5C,GAAe3jJ,KAAKumJ,IAAIr/I,IACtED,EAAQjH,KAAKmtJ,KAAKntJ,KAAK6+C,IAAI7+C,KAAKwgC,IAAIp9B,EAAG,IAAK,IAC5C8D,EAAMlH,KAAK2mJ,MAAMvmH,EAAG3I,GAGpB,IAAIt0B,GAAKnD,KAAKwmJ,IAAImT,IAAe35J,KAAKumJ,IAAI5C,GAAe3jJ,KAAKumJ,IAAI7C,GAAgB1jJ,KAAKwmJ,IAAIoT,GAC/E55J,KAAKwmJ,IAAI9C,GAAgB1jJ,KAAKumJ,IAAIqT,IAC5C55J,KAAKwmJ,IAAImT,GAAc35J,KAAKwmJ,IAAI7C,GAAe3jJ,KAAKwmJ,IAAIoT,GACxD55J,KAAKwmJ,IAAImT,IAAe35J,KAAKwmJ,IAAI9C,GAAgB1jJ,KAAKumJ,IAAI5C,GAAe3jJ,KAAKwmJ,IAAIoT,GACxE55J,KAAKumJ,IAAIqT,GAAY55J,KAAKumJ,IAAI7C,KACxCvjH,IAAMngC,KAAKwmJ,IAAIv/I,GAASjH,KAAKumJ,IAAIr/I,GAAMlH,KAAKwmJ,IAAIv/I,GAASjH,KAAKwmJ,IAAIt/I,IAChE2yJ,EAAW75J,KAAKuxJ,KAAKvxJ,KAAK6+C,IAAI7+C,KAAKwgC,KAAKr9B,EAAE,GAAGg9B,EAAE,GAAKh9B,EAAE,GAAGg9B,EAAE,KACtDngC,KAAKmqD,KAAKhnD,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACtCnD,KAAKmqD,KAAKhqB,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGA,EAAE,KAAM,IAAK,IAC1Ch9B,EAAE,GAAK,IACV02J,EAAW,EAAI75J,KAAKqlJ,GAAKwU,GAC1Brb,GAAQqb,EAIV,GAAKnK,GAAoB,YAAbO,GAAwC,WAAbA,EAAvC,CA4BA,GAAiB,YAAbA,EAAyB,CAE3B,IAAIrJ,EAAO,EAAI5mJ,KAAK0mJ,KAAK1mJ,KAAKsmJ,IAAW,GAAPn/I,IAAeuoJ,EAAG+F,mBAAqB/F,EAAGgG,sBAC5ErP,EAAQ,EAAIrmJ,KAAKsmJ,IAAW,GAAPM,GAGrB8I,EAAGoI,UAAUrI,EAAQv7G,IAAKhtC,GAC1BwoJ,EAAGoI,UAAUrI,EAAQ6B,MAAOrqJ,GAC5ByoJ,EAAGoI,UAAUrI,EAAQuI,IAAKxZ,GAC1BkR,EAAGoI,UAAUrI,EAAQ1mJ,EAAGs9I,IAER,IAAZze,GAEe,mBAAbqoB,IACFP,EAAGyI,YAAYzI,EAAG6F,WAAY9F,EAAQ6D,SACtC5D,EAAG0I,WAAW1I,EAAG6F,WAAY,EAAG7F,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAertB,IAKtEwkB,EAAGoK,WAAWpK,EAAGqK,UAAW,EAAG,OAE1B,CAEL,IAAIC,EA8aR,SAAmB7yJ,EAAM8yJ,EAAQC,EAAOC,GACtC,IAAIC,EAAO,EAAIp6J,KAAK0mJ,KAAK1mJ,KAAKsmJ,IAAIn/I,EAAK,GAAKuoJ,EAAGgG,oBAAsBhG,EAAG+F,oBACpE1sJ,EAAI,EAAI/I,KAAKsmJ,IAAI8T,EAAK,GAC1B,OACErxJ,EAAEkxJ,EAAU,EAAI,EAAI,EACpB,EAAKlxJ,EAAI,EAAI,EACb,EAAK,GAAKoxJ,EAAKD,IAAQA,EAAMC,GAAQ,EAAEA,EAAKD,GAAQA,EAAMC,GAC1D,EAAK,GAAI,EAAI,GArbKE,CAAUlzJ,EAAMuoJ,EAAG+F,mBAAqB/F,EAAGgG,oBAAqB,GAAK,MAuhB3F,SAAmBvuJ,GAEjB,IAAImzJ,EAAW,EACf,KAAQA,EAAWpvB,EAAM2mB,UACnBnC,EAAG+F,mBAAqBvqB,EAAM+mB,eAC9BjyJ,KAAKC,IAAI,EAAGq6J,EAAW,GAAKt6J,KAAKsmJ,IAAIn/I,EAAO,GAAK,MACrDmzJ,IAIF7K,EAAQ93G,MAAQ2iH,EA9hBdC,CAAUpzJ,GAGV,IAAI7J,GAyVJ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAxVNA,EAASq1J,EADTr1J,EAASq1J,EADTr1J,EAASq1J,EAAar1J,GAASkhJ,EAAM,MACNv3I,EAAO,KACRC,EAAK,KACnC5J,IAmYiB0M,EAnYI1M,GAqYnB,GAAI0M,EAAE,GAAIA,EAAE,GAAO,EACrBA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAO,EACrBA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAO,EACrB,EAAM,EAAM,EAAM,GArYlB0lJ,EAAG8K,iBAAiB/K,EAAQ4J,cAAc,EAAO,IAAI5B,aAAa7E,EAAiBoH,KACnFtK,EAAG8K,iBAAiB/K,EAAQ6J,aAAa,EAAO,IAAI7B,aAAa7E,EAAiBt1J,KAGlF,IAAIuzJ,GA0hBgBx9H,EA1hBoB/1B,IA0hBvB65B,EA1hBU6iI,GA4hBxB,GAAG3mI,EAAE,GAAI8D,EAAG,GAAG9D,EAAE,GAAI8D,EAAG,GAAG9D,EAAG,GAAQ,EACzC8D,EAAG,GAAG9D,EAAE,GAAI8D,EAAG,GAAG9D,EAAE,GAAI8D,EAAG,GAAG9D,EAAG,GAAQ,EACzC8D,EAAE,IAAI9D,EAAE,GAAI8D,EAAE,IAAI9D,EAAE,GAAI8D,EAAE,IAAI9D,EAAE,IAAK8D,EAAE,KACtC9D,EAAE,IAAUA,EAAE,IAAUA,EAAE,IAAS,IA7hBpC,GADAo8H,EAAQgC,UAAUp3D,KAAKk2D,GACnBd,EAAQgC,UAAUj3J,OAAS,KACvBi1J,EAAQgC,UAAUj3J,OAASi1J,EAAQkC,aAAan3J,OAAS,GAG/D,IADA,IAAIigK,EAAUhL,EAAQgC,UAAUpwG,OAAO,IAAKouG,EAAQgC,UAAUj3J,OAAS,KAC9D3B,EAAI,EAAGA,EAAI4hK,EAAQjgK,OAAQ3B,IAElC62J,EAAG6D,cAAckH,EAAQ5hK,GAAGy6J,SAGhC7D,EAAQkC,gBAER,IAAI6C,GAAS,IAAK,IAAK,IAAK,IAAK,IAAK,KACtC,IAAKxrF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEtB4nF,EAAiBC,EADN,IAAIJ,EAAaV,EAAM/mF,GAAIwrF,EAAMxrF,GAAI,EAAG,EAAG,EAAGkiE,EAAMwnB,UAC9BzrJ,EAAOC,EAAKC,GAM/C,IAHAsoJ,EAAQkC,aAAat3D,KAAKm2D,GAGrB33J,EAAI6hK,EAAuBlgK,OAAS,EAAG3B,GAAK,EAAGA,KACoB,IAAlE42J,EAAQkC,aAAavnJ,QAAQswJ,EAAuB7hK,GAAG8sB,QACzD+0I,EAAuB7hK,GAAG8sB,KAAKg1I,aAAc,EAC7CD,EAAuBr5G,OAAOxoD,EAAG,IAKrC,GAAsC,IAAlC6hK,EAAuBlgK,OACzB,IAAK3B,EAAI,EAAGA,EAAI42J,EAAQkC,aAAan3J,OAAQ3B,IAAK,CAChD,IAAI8sB,EAAO8pI,EAAQkC,aAAa94J,GAChC,IAAK8sB,EAAK2tI,UAAY3tI,EAAKg1I,YAAa,CACtCh1I,EAAKg1I,aAAc,EAEnBtgI,WAAWugI,EAAiB,EAAGj1I,GAG/B,QAkFV,WACE,IAAK8pI,EAAQwH,eAAgB,CAC3BxH,EAAQwH,gBAAiB,EACzBvH,EAAG/2G,MAAM+2G,EAAGyH,kBACZ,IAAM,IAAIt+J,EAAI,EAAGA,EAAI42J,EAAQkC,aAAan3J,OAAQ3B,IAC5C42J,EAAQkC,aAAa94J,GAAGgiK,cAAgB,IAK1CnL,EAAGyD,WAAWzD,EAAG0D,aAAcjD,GAC/BT,EAAG8H,WAAW9H,EAAG0D,aAAc,IAAIqE,aAAahI,EAAQkC,aAAa94J,GAAG63J,UAAWhB,EAAGgI,aACtFhI,EAAGiI,oBAAoBlI,EAAQ2J,gBAAiB,EAAG1J,EAAGkI,OAAO,EAAO,EAAG,GAGvElI,EAAGyD,WAAWzD,EAAG0D,aAAchD,GAC/BV,EAAGiI,oBAAoBlI,EAAQ2H,iBAAkB,EAAG1H,EAAGkI,OAAO,EAAO,EAAG,GAGxElI,EAAGyI,YAAYzI,EAAG6F,WAAY9F,EAAQkC,aAAa94J,GAAGy6J,SACtD5D,EAAGoL,aAAapL,EAAGqK,UAAW,EAAGrK,EAAGqL,eAAgB,IAGxDtL,EAAQwH,gBAAiB,GAnGzB+D,GA6eJ,IAAqB7jI,EAAG9D,EA9JHrpB,EA5UnB,GAAI4/B,EAAOqjH,cAAgB9jH,EACzB,OAAO48G,EAAOkV,UAAU,iBAtH1B,CAIE,IAAIC,GACFnyJ,EAAG,kBAHLigE,EAAI6mF,EAAkB,GAGM,GAAK,SAAW7mF,EAAI,GAAK,QAAUA,EAAI,MACjEvgE,EAAG,gBAAkBugE,EAAI,GAAK,SAAWA,EAAI,GAAK,OAASA,EAAI,sCAC/D5xC,EAAG,iBAAmB4xC,EAAI,GAAK,QAAUA,EAAI,QAAUA,EAAI,GAAK,sBAChEpgE,EAAG,iBAAmBogE,EAAI,GAAK,OAASA,EAAI,SAAWA,EAAI,GAAK,qBAChE5/D,EAAG,gBAAkB4/D,EAAI,SAAWA,EAAI,GAAK,QAAUA,EAAI,GAAK,qDAChE31C,EAAG,eAAiB21C,EAAI,SAAWA,EAAI,GAAK,SAAWA,EAAI,GAAK,uBAG9Dv9C,GADJ46H,EAAQ,EAAIrmJ,KAAKsmJ,IAAIn/I,EAAO,IACT4+I,EAAOG,YAAc,EAAI,KACxCsC,EAAY,eAAiB/8H,EAAO,gBAAkBA,EAAO,aAAexkB,EAAQ,gBAAkBC,EAAM,QAG5Gi0J,EAAQx3J,OAAOC,KAAKs3J,GACxB,IAAKriK,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACtB,IAAIuiK,EAAOtL,EAAMr0G,cAAc,SAAW0/G,EAAMtiK,GAAK,QAChDuiK,IAELA,EAAK3sJ,MAAMg6I,gBAAkBD,EAAY0S,EAAWC,EAAMtiK,IAC1DuiK,EAAK3sJ,MAAM+5I,UAAYA,EAAY0S,EAAWC,EAAMtiK,QAyG1D0M,KAAK2jJ,UAAY,WACf,GAAIwG,GAAmB,YAAbO,EACR,IAAM,IAAIp3J,EAAI,EAAGA,EAAI42J,EAAQkC,aAAan3J,OAAQ3B,IAChD,IAAK42J,EAAQkC,aAAa94J,GAAGgiK,cAC3B,OAAO,EAIb,OAAO,GASTt1J,KAAKygJ,UAAY,WACf,OAAOD,GA2WT,IAAI2U,KAGAW,EAAe,WACjB,IAEI3iG,EAFA4iG,EAAW,EACXC,KAGJ,SAASC,IACP,IAAI9oH,EAAOntC,KACXA,KAAK+tJ,QAAU/tJ,KAAKstB,SAAW,KAC/BttB,KAAK2lI,MAAQ,IAAIgX,MACjB38I,KAAK2lI,MAAMxyE,YAAcA,GAA4B,YACrD,IAAI+iG,EAAU,WAvBlB,IAA8BzuI,EAAK0uI,EAwBzBhpH,EAAKw4F,MAAMjzI,MAAQ,GAAKy6C,EAAKw4F,MAAMhzI,OAAS,GAxBxB80B,EAyBD0lB,EAAKw4F,MAzBCwwB,EAyBMhpH,EAAK4gH,QAxB5C5D,EAAGyI,YAAYzI,EAAG6F,WAAYmG,GAC9BhM,EAAG0I,WAAW1I,EAAG6F,WAAY,EAAG7F,EAAG4I,IAAK5I,EAAG4I,IAAK5I,EAAG6I,cAAevrI,GAClE0iI,EAAGmJ,cAAcnJ,EAAG6F,WAAY7F,EAAGyJ,mBAAoBzJ,EAAGwJ,QAC1DxJ,EAAGmJ,cAAcnJ,EAAG6F,WAAY7F,EAAGuJ,mBAAoBvJ,EAAGwJ,QAC1DxJ,EAAGmJ,cAAcnJ,EAAG6F,WAAY7F,EAAGoJ,eAAgBpJ,EAAGqJ,eACtDrJ,EAAGmJ,cAAcnJ,EAAG6F,WAAY7F,EAAGsJ,eAAgBtJ,EAAGqJ,eACtDrJ,EAAGyI,YAAYzI,EAAG6F,WAAY,MAmBxB7iH,EAAK7f,SAAS6f,EAAK4gH,SAAS,IAE5B5gH,EAAK7f,SAAS6f,EAAK4gH,SAAS,GAqBlC,SAAmCqI,GACjC,GAAIjB,EAAuBlgK,OAAQ,CACjC,IAAIs4F,EAAM4nE,EAAuB1qH,QACjC2rH,EAAIN,YAAYvoE,EAAIhjC,IAAKgjC,EAAIwgE,QAASxgE,EAAIjgE,eAE3C0oI,EAAkBD,KAAcK,EAxB/BC,CAA0BlpH,IAE5BntC,KAAK2lI,MAAMlmH,iBAAiB,OAAQy2I,GACpCl2J,KAAK2lI,MAAMlmH,iBAAiB,QAASy2I,GAGvCD,EAAmBt3J,UAAUm3J,YAAc,SAASvrG,EAAKwjG,EAASzgI,GAChEttB,KAAK+tJ,QAAUA,EACf/tJ,KAAKstB,SAAWA,EAChBttB,KAAK2lI,MAAMp7E,IAAMA,GAkBnB,IAAK,IAAIj3D,EAAI,EAAGA,EAAIyiK,EAAUziK,IAC7B0iK,EAAkB1iK,GAAK,IAAI2iK,EAE5B,OAAO,SAAS71I,EAAMmqC,EAAKj9B,EAAUgpI,GACnCnjG,EAAcmjG,EACd,IAAIvI,EAAU5D,EAAGwI,gBAKjB,OAJIoD,EACHC,IAAoBD,GAAUD,YAAYvrG,EAAKwjG,EAASzgI,GAExD6nI,EAAuBnhK,KAAK,IAxB/B,SAA+BosB,EAAMmqC,EAAKwjG,EAASzgI,GACjDttB,KAAKogB,KAAOA,EACZpgB,KAAKuqD,IAAMA,EACXvqD,KAAK+tJ,QAAUA,EACf/tJ,KAAKstB,SAAWA,EAoBa,CAA0BlN,EAAMmqC,EAAKwjG,EAASzgI,IACpEygI,GAtDQ,GA+DnB,SAASsH,EAAgBj1I,GACvB01I,EAAY11I,EAAMsvI,UAAUtvI,EAAK/f,KAAO,IAAMslI,EAAMgqB,WAAY,SAAS5B,EAASpvC,GAChFv+F,EAAK2tI,QAAUA,EACf3tI,EAAKk1I,cAAgB32C,EAAS,EAAI,GACjCosC,EAAa53F,aA8DlB,SAASq4F,EAAY/mJ,EAAG7G,GACtB,IAAI24J,EAlBN,SAA4B9xJ,EAAG7G,GAC7B,OACE6G,EAAG,GAAG7G,EAAE,GAAK6G,EAAG,GAAG7G,EAAE,GAAK6G,EAAG,GAAG7G,EAAE,GAClC6G,EAAG,GAAG7G,EAAE,GAAK6G,EAAG,GAAG7G,EAAE,GAAK6G,EAAG,GAAG7G,EAAE,GAClC6G,EAAE,IAAMA,EAAG,GAAG7G,EAAE,GAAK6G,EAAG,GAAG7G,EAAE,GAAK6G,EAAE,IAAI7G,EAAE,GAC1C,GAAG6G,EAAE,IAAI7G,EAAE,GAAK6G,EAAE,IAAI7G,EAAE,GAAK6G,EAAE,IAAI7G,EAAE,KAa7B44J,CAAmB/xJ,EAAG7G,GAC5B64J,EAAOF,EAAI,GAAGA,EAAI,GAClBG,EAAOH,EAAI,GAAGA,EAAI,GAClBI,EAAOJ,EAAI,GAAGA,EAAI,GAClB90G,GAAO,EAAG,EAAG,GAYjB,OAVKg1G,GAAQ,IACZh1G,EAAI,IAAM,GACNg1G,EAAO,IACXh1G,EAAI,GAAK,GACLi1G,GAAQ,IACZj1G,EAAI,IAAM,GACNi1G,EAAO,IACXj1G,EAAI,GAAK,IACLk1G,GAAQ,GAAKA,EAAO,KACxBl1G,EAAI,GAAK,GACHA,EAiCT,SAASqtG,IACPxuJ,QAAQC,IAAI,2CACZigJ,EAAO9tJ,MAAQ+H,KAAKq+C,MAAM0nG,EAAO9tJ,MAAQ,GACzC8tJ,EAAO7tJ,OAAS8H,KAAKq+C,MAAM0nG,EAAO7tJ,OAAS,IAK/C,IAAIiL,GACF,6BACA,2BAEA,gBAEA,4CAGA,2BACA,KACAK,KAAK,IAGHsyJ,GACF,8BACA,6BAEA,6BACA,8BAEA,mCAEA,oBAEA,uEAGA,2BACA,KACAtyJ,KAAK,IAGH24J,GACF,2BAEA,+BACA,uBACA,yBACA,qBACA,qBACA,qBACA,sBACA,uBAEA,8CAGA,6BACA,mCAGA,2BAGA,kCAEA,gBAEA,0CACA,0BACA,6BACA,6BACA,yCACA,yCACA,iCACA,iCACA,+CACA,4CACA,uDACA,iEACA34J,KAAK,MAGH6yJ,EAAW8F,GAEb,2BACA,mGACA,KACA34J,KAAK,MAGH2yJ,EAAsBgG,GAExB,4CAGA,oDAIA,uFACA,oCACA,OACA,iHACA,KACA34J,KAAK,MAGH8yJ,GACF,mCACA,+BAGA,oBAEA,mDAEA,KACA9yJ,KAAK,IAEP,OACEs5I,SAAU,SAAS3jC,EAAW+xB,EAAOkxB,EAAWx0B,GAC9C,OAAO,IAAI4nB,EAASr2C,EAAW+xB,EAAOkxB,EAAWx0B,KAp1ChC,CAw1CpBz/H,OAAQ4F,gCC/2CXnJ,EAAAC,QAAiBnO,EAAAygC,EAAuB,yCCAxC,SAAAub,GACA,aAEA,IAAAA,EAAA2pH,MAAA,CAIA,IAAAC,GACAC,aAAA,oBAAA7pH,EACA8pH,SAAA,WAAA9pH,GAAA,aAAAt8B,OACAimF,KAAA,eAAA3pD,GAAA,SAAAA,GAAA,WACA,IAEA,OADA,IAAA0pD,MACA,EACO,MAAAtzF,GACP,UALA,GAQA2zJ,SAAA,aAAA/pH,EACAgqH,YAAA,gBAAAhqH,GAGA,GAAA4pH,EAAAI,YACA,IAAAC,GACA,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGAC,EAAA,SAAAnwH,GACA,OAAAA,GAAA90C,SAAAuM,UAAAknD,cAAA3e,IAGAowH,EAAA35J,YAAA60F,QAAA,SAAAtrD,GACA,OAAAA,GAAAkwH,EAAAvyJ,QAAAzG,OAAAO,UAAAI,SAAAF,KAAAqoC,KAAA,GAyDAqwH,EAAA54J,UAAAssE,OAAA,SAAAj1E,EAAAyI,GACAzI,EAAAwhK,EAAAxhK,GACAyI,EAAAg5J,EAAAh5J,GACA,IAAAi5J,EAAA13J,KAAA9B,IAAAlI,GACAgK,KAAA9B,IAAAlI,GAAA0hK,IAAA,IAAAj5J,KAGA84J,EAAA54J,UAAA,gBAAA3I,UACAgK,KAAA9B,IAAAs5J,EAAAxhK,KAGAuhK,EAAA54J,UAAAmR,IAAA,SAAA9Z,GAEA,OADAA,EAAAwhK,EAAAxhK,GACAgK,KAAAy3B,IAAAzhC,GAAAgK,KAAA9B,IAAAlI,GAAA,MAGAuhK,EAAA54J,UAAA84B,IAAA,SAAAzhC,GACA,OAAAgK,KAAA9B,IAAAgH,eAAAsyJ,EAAAxhK,KAGAuhK,EAAA54J,UAAAoR,IAAA,SAAA/Z,EAAAyI,GACAuB,KAAA9B,IAAAs5J,EAAAxhK,IAAAyhK,EAAAh5J,IAGA84J,EAAA54J,UAAAwH,QAAA,SAAAmnB,EAAA86G,GACA,QAAApyI,KAAAgK,KAAA9B,IACA8B,KAAA9B,IAAAgH,eAAAlP,IACAs3B,EAAAzuB,KAAAupI,EAAApoI,KAAA9B,IAAAlI,KAAAgK,OAKAu3J,EAAA54J,UAAAN,KAAA,WACA,IAAAqtE,KAEA,OADA1rE,KAAAmG,QAAA,SAAA1H,EAAAzI,GAAwC01E,EAAA13E,KAAAgC,KACxC2hK,EAAAjsF,IAGA6rF,EAAA54J,UAAA4zE,OAAA,WACA,IAAA7G,KAEA,OADA1rE,KAAAmG,QAAA,SAAA1H,GAAkCitE,EAAA13E,KAAAyK,KAClCk5J,EAAAjsF,IAGA6rF,EAAA54J,UAAA1E,QAAA,WACA,IAAAyxE,KAEA,OADA1rE,KAAAmG,QAAA,SAAA1H,EAAAzI,GAAwC01E,EAAA13E,MAAAgC,EAAAyI,MACxCk5J,EAAAjsF,IAGAqrF,EAAAE,WACAM,EAAA54J,UAAAkS,OAAAa,UAAA6lJ,EAAA54J,UAAA1E,SAqJA,IAAA0vF,GAAA,8CA4CAiuE,EAAAj5J,UAAAi5E,MAAA,WACA,WAAAggF,EAAA53J,MAA8BggB,KAAAhgB,KAAA63J,aA6B9BC,EAAAj5J,KAAA+4J,EAAAj5J,WAgBAm5J,EAAAj5J,KAAAk5J,EAAAp5J,WAEAo5J,EAAAp5J,UAAAi5E,MAAA,WACA,WAAAmgF,EAAA/3J,KAAA63J,WACA3yH,OAAAllC,KAAAklC,OACA8yH,WAAAh4J,KAAAg4J,WACAnyH,QAAA,IAAA0xH,EAAAv3J,KAAA6lC,SACA72B,IAAAhP,KAAAgP,OAIA+oJ,EAAAljI,MAAA,WACA,IAAA6P,EAAA,IAAAqzH,EAAA,MAAuC7yH,OAAA,EAAA8yH,WAAA,KAEvC,OADAtzH,EAAAnnC,KAAA,QACAmnC,GAGA,IAAAuzH,GAAA,qBAEAF,EAAAG,SAAA,SAAAlpJ,EAAAk2B,GACA,QAAA+yH,EAAApzJ,QAAAqgC,GACA,UAAA0mG,WAAA,uBAGA,WAAAmsB,EAAA,MAA+B7yH,SAAAW,SAA0BxoB,SAAArO,MAGzDm+B,EAAAoqH,UACApqH,EAAAyqH,UACAzqH,EAAA4qH,WAEA5qH,EAAA2pH,MAAA,SAAApvI,EAAA8Y,GACA,WAAA99B,QAAA,SAAA6/E,EAAA8hD,GACA,IAAA1iD,EAAA,IAAAi2E,EAAAlwI,EAAA8Y,GACA4E,EAAA,IAAAc,eAEAd,EAAAmB,OAAA,WACA,IAlEA4xH,EACAtyH,EAiEA3jB,GACAgjB,OAAAE,EAAAF,OACA8yH,WAAA5yH,EAAA4yH,WACAnyH,SArEAsyH,EAqEA/yH,EAAAW,yBAAA,GApEAF,EAAA,IAAA0xH,EACAY,EAAA/4J,MAAA,SAAA+G,QAAA,SAAAlH,GACA,IAAAm4I,EAAAn4I,EAAAG,MAAA,KACAb,EAAA64I,EAAA3sG,QAAA5jB,OACA,GAAAtoB,EAAA,CACA,IAAAE,EAAA24I,EAAAn5I,KAAA,KAAA4oB,OACAgf,EAAAolC,OAAA1sE,EAAAE,MAGAonC,IA6DA3jB,EAAAlT,IAAA,gBAAAo2B,IAAAgzH,YAAAl2I,EAAA2jB,QAAA/1B,IAAA,iBACA,IAAAkQ,EAAA,aAAAolB,IAAAV,SAAAU,EAAAC,aACAk9C,EAAA,IAAAw1E,EAAA/3I,EAAAkC,KAGAkjB,EAAAoB,QAAA,WACA69F,EAAA,IAAApwF,UAAA,4BAGA7O,EAAAuB,UAAA,WACA09F,EAAA,IAAApwF,UAAA,4BAGA7O,EAAAwB,KAAA+6C,EAAA/7C,OAAA+7C,EAAA3yE,KAAA,GAEA,YAAA2yE,EAAA02E,cACAjzH,EAAA0B,iBAAA,GAGA,iBAAA1B,GAAA2xH,EAAAjgE,OACA1xD,EAAAE,aAAA,QAGAq8C,EAAA97C,QAAA1/B,QAAA,SAAA1H,EAAAzI,GACAovC,EAAA6B,iBAAAjxC,EAAAyI,KAGA2mC,EAAAiC,UAAA,IAAAs6C,EAAAk2E,UAAA,KAAAl2E,EAAAk2E,cAGA1qH,EAAA2pH,MAAAwB,UAAA,EA/ZA,SAAAd,EAAAxhK,GAIA,GAHA,iBAAAA,IACAA,EAAAC,OAAAD,IAEA,6BAAAyd,KAAAzd,GACA,UAAAi+C,UAAA,0CAEA,OAAAj+C,EAAA0S,cAGA,SAAA+uJ,EAAAh5J,GAIA,MAHA,iBAAAA,IACAA,EAAAxI,OAAAwI,IAEAA,EAIA,SAAAk5J,EAAAjsF,GACA,IAAAh6D,GACA6b,KAAA,WACA,IAAA9uB,EAAAitE,EAAAjhC,QACA,OAAgBxY,UAAA2R,IAAAnlC,aAUhB,OANAs4J,EAAAE,WACAvlJ,EAAAb,OAAAa,UAAA,WACA,OAAAA,IAIAA,EAGA,SAAA6lJ,EAAA1xH,GACA7lC,KAAA9B,OAEA2nC,aAAA0xH,EACA1xH,EAAA1/B,QAAA,SAAA1H,EAAAzI,GACAgK,KAAAirE,OAAAj1E,EAAAyI,IACOuB,MACFhC,MAAAgI,QAAA6/B,GACLA,EAAA1/B,QAAA,SAAAmiG,GACAtoG,KAAAirE,OAAAq9B,EAAA,GAAAA,EAAA,KACOtoG,MACF6lC,GACLznC,OAAAo4C,oBAAA3Q,GAAA1/B,QAAA,SAAAnQ,GACAgK,KAAAirE,OAAAj1E,EAAA6vC,EAAA7vC,KACOgK,MA0DP,SAAAu4J,EAAAv4I,GACA,GAAAA,EAAAw4I,SACA,OAAA91J,QAAA2hI,OAAA,IAAApwF,UAAA,iBAEAj0B,EAAAw4I,UAAA,EAGA,SAAAC,EAAAnb,GACA,WAAA56I,QAAA,SAAA6/E,EAAA8hD,GACAiZ,EAAA/2G,OAAA,WACAg8C,EAAA+6D,EAAA/pJ,SAEA+pJ,EAAA92G,QAAA,WACA69F,EAAAiZ,EAAAzoH,UAKA,SAAA6jI,EAAA5hE,GACA,IAAAwmD,EAAA,IAAAC,WACAr8D,EAAAu3E,EAAAnb,GAEA,OADAA,EAAAqb,kBAAA7hE,GACA5V,EAoBA,SAAA03E,EAAAC,GACA,GAAAA,EAAAj6J,MACA,OAAAi6J,EAAAj6J,MAAA,GAEA,IAAAzM,EAAA,IAAA8B,WAAA4kK,EAAAtmK,YAEA,OADAJ,EAAA4d,IAAA,IAAA9b,WAAA4kK,IACA1mK,EAAAE,OAIA,SAAAylK,IA0FA,OAzFA93J,KAAAw4J,UAAA,EAEAx4J,KAAA84J,UAAA,SAAA94I,GAEA,GADAhgB,KAAA63J,UAAA73I,EACAA,EAEO,oBAAAA,EACPhgB,KAAA+4J,UAAA/4I,OACO,GAAA+2I,EAAAjgE,MAAAD,KAAAl4F,UAAAknD,cAAA7lC,GACPhgB,KAAAg5J,UAAAh5I,OACO,GAAA+2I,EAAAG,UAAA+B,SAAAt6J,UAAAknD,cAAA7lC,GACPhgB,KAAAk5J,cAAAl5I,OACO,GAAA+2I,EAAAC,cAAAmC,gBAAAx6J,UAAAknD,cAAA7lC,GACPhgB,KAAA+4J,UAAA/4I,EAAAjhB,gBACO,GAAAg4J,EAAAI,aAAAJ,EAAAjgE,MAAAugE,EAAAr3I,GACPhgB,KAAAo5J,iBAAAR,EAAA54I,EAAA3tB,QAEA2N,KAAA63J,UAAA,IAAAhhE,MAAA72F,KAAAo5J,uBACO,KAAArC,EAAAI,cAAAx5J,YAAAgB,UAAAknD,cAAA7lC,KAAAs3I,EAAAt3I,GAGP,UAAArc,MAAA,6BAFA3D,KAAAo5J,iBAAAR,EAAA54I,QAdAhgB,KAAA+4J,UAAA,GAmBA/4J,KAAA6lC,QAAA/1B,IAAA,kBACA,iBAAAkQ,EACAhgB,KAAA6lC,QAAA91B,IAAA,2CACS/P,KAAAg5J,WAAAh5J,KAAAg5J,UAAAz7J,KACTyC,KAAA6lC,QAAA91B,IAAA,eAAA/P,KAAAg5J,UAAAz7J,MACSw5J,EAAAC,cAAAmC,gBAAAx6J,UAAAknD,cAAA7lC,IACThgB,KAAA6lC,QAAA91B,IAAA,oEAKAgnJ,EAAAjgE,OACA92F,KAAA82F,KAAA,WACA,IAAAuiE,EAAAd,EAAAv4J,MACA,GAAAq5J,EACA,OAAAA,EAGA,GAAAr5J,KAAAg5J,UACA,OAAAt2J,QAAA6/E,QAAAviF,KAAAg5J,WACS,GAAAh5J,KAAAo5J,iBACT,OAAA12J,QAAA6/E,QAAA,IAAAsU,MAAA72F,KAAAo5J,oBACS,GAAAp5J,KAAAk5J,cACT,UAAAv1J,MAAA,wCAEA,OAAAjB,QAAA6/E,QAAA,IAAAsU,MAAA72F,KAAA+4J,cAIA/4J,KAAAm3J,YAAA,WACA,OAAAn3J,KAAAo5J,iBACAb,EAAAv4J,OAAA0C,QAAA6/E,QAAAviF,KAAAo5J,kBAEAp5J,KAAA82F,OAAA/kF,KAAA2mJ,KAKA14J,KAAAsC,KAAA,WACA,IA3FAw0F,EACAwmD,EACAp8D,EAyFAm4E,EAAAd,EAAAv4J,MACA,GAAAq5J,EACA,OAAAA,EAGA,GAAAr5J,KAAAg5J,UACA,OAjGAliE,EAiGA92F,KAAAg5J,UAhGA1b,EAAA,IAAAC,WACAr8D,EAAAu3E,EAAAnb,GACAA,EAAAgB,WAAAxnD,GACA5V,EA8FO,GAAAlhF,KAAAo5J,iBACP,OAAA12J,QAAA6/E,QA5FA,SAAAs2E,GAIA,IAHA,IAAA1mK,EAAA,IAAA8B,WAAA4kK,GACAS,EAAA,IAAAt7J,MAAA7L,EAAA8C,QAEA3B,EAAA,EAAmBA,EAAAnB,EAAA8C,OAAiB3B,IACpCgmK,EAAAhmK,GAAA2C,OAAAC,aAAA/D,EAAAmB,IAEA,OAAAgmK,EAAAr7J,KAAA,IAqFAs7J,CAAAv5J,KAAAo5J,mBACO,GAAAp5J,KAAAk5J,cACP,UAAAv1J,MAAA,wCAEA,OAAAjB,QAAA6/E,QAAAviF,KAAA+4J,YAIAhC,EAAAG,WACAl3J,KAAAk3J,SAAA,WACA,OAAAl3J,KAAAsC,OAAAyP,KAAAuiI,KAIAt0I,KAAAomC,KAAA,WACA,OAAApmC,KAAAsC,OAAAyP,KAAA7S,KAAAlN,QAGAgO,KAWA,SAAA43J,EAAAlwI,EAAAxF,GAEA,IAPA0jB,EACA4zH,EAMAx5I,GADAkC,SACAlC,KAEA,GAAA0H,aAAAkwI,EAAA,CACA,GAAAlwI,EAAA8wI,SACA,UAAAvkH,UAAA,gBAEAj0C,KAAAgP,IAAA0Y,EAAA1Y,IACAhP,KAAAq4J,YAAA3wI,EAAA2wI,YACAn2I,EAAA2jB,UACA7lC,KAAA6lC,QAAA,IAAA0xH,EAAA7vI,EAAAme,UAEA7lC,KAAA4lC,OAAAle,EAAAke,OACA5lC,KAAAkrB,KAAAxD,EAAAwD,KACAlL,GAAA,MAAA0H,EAAAmwI,YACA73I,EAAA0H,EAAAmwI,UACAnwI,EAAA8wI,UAAA,QAGAx4J,KAAAgP,IAAA/Y,OAAAyxB,GAWA,GARA1nB,KAAAq4J,YAAAn2I,EAAAm2I,aAAAr4J,KAAAq4J,aAAA,QACAn2I,EAAA2jB,SAAA7lC,KAAA6lC,UACA7lC,KAAA6lC,QAAA,IAAA0xH,EAAAr1I,EAAA2jB,UAEA7lC,KAAA4lC,QAhCAA,EAgCA1jB,EAAA0jB,QAAA5lC,KAAA4lC,QAAA,MA/BA4zH,EAAA5zH,EAAAxyB,cACAu2E,EAAA9kF,QAAA20J,IAAA,EAAAA,EAAA5zH,GA+BA5lC,KAAAkrB,KAAAhJ,EAAAgJ,MAAAlrB,KAAAkrB,MAAA,KACAlrB,KAAAy5J,SAAA,MAEA,QAAAz5J,KAAA4lC,QAAA,SAAA5lC,KAAA4lC,SAAA5lB,EACA,UAAAi0B,UAAA,6CAEAj0C,KAAA84J,UAAA94I,GAOA,SAAAs0H,EAAAt0H,GACA,IAAAqe,EAAA,IAAA46H,SASA,OARAj5I,EAAA6G,OAAAznB,MAAA,KAAA+G,QAAA,SAAAzH,GACA,GAAAA,EAAA,CACA,IAAAU,EAAAV,EAAAU,MAAA,KACApJ,EAAAoJ,EAAAqrC,QAAA3mC,QAAA,WACArF,EAAAW,EAAAnB,KAAA,KAAA6F,QAAA,WACAu6B,EAAA4sC,OAAA90E,mBAAAH,GAAAG,mBAAAsI,OAGA4/B,EAkBA,SAAA05H,EAAA2B,EAAAx3I,GACAA,IACAA,MAGAliB,KAAAzC,KAAA,UACAyC,KAAAklC,OAAA,WAAAhjB,IAAAgjB,OAAA,IACAllC,KAAA25J,GAAA35J,KAAAklC,QAAA,KAAAllC,KAAAklC,OAAA,IACAllC,KAAAg4J,WAAA,eAAA91I,IAAA81I,WAAA,KACAh4J,KAAA6lC,QAAA,IAAA0xH,EAAAr1I,EAAA2jB,SACA7lC,KAAAgP,IAAAkT,EAAAlT,KAAA,GACAhP,KAAA84J,UAAAY,IAhYA,CA4cC,oBAAAvsH,UAAAntC,4BC5cD,IAAA6mB,EAAW11B,EAAQ,QACnBgV,EAAchV,EAAQ,QAKtBkO,EAAAC,QAAA,SAAAumC,GACA,IAAAA,EACA,SAEA,IAAAtyC,KAmBA,OAjBA4S,EACA0gB,EAAAgf,GAAAzmC,MAAA,MACA,SAAA+iG,GACA,IAbA5lC,EAaAp+D,EAAAgkG,EAAAt9F,QAAA,KACAtG,EAAAsoB,EAAAs7E,EAAAvjG,MAAA,EAAAT,IAAAuK,cACAjK,EAAAooB,EAAAs7E,EAAAvjG,MAAAT,EAAA,SAEA,IAAA5K,EAAAgL,GACAhL,EAAAgL,GAAAE,GAlBA89D,EAmBShpE,EAAAgL,GAlBT,mBAAAH,OAAAO,UAAAI,SAAAF,KAAA09D,GAmBAhpE,EAAAgL,GAAAvK,KAAAyK,GAEAlL,EAAAgL,IAAAhL,EAAAgL,GAAAE,MAKAlL,uBC7BA,SAAAqmK,EAAAn2F,GACA,OAAAA,EAAA3/D,QAAA,gBAIAzE,EAAAC,QAAA,SAAAgG,GAIA,IAHA,IAAAm+D,EAAA,GACAnwE,EAAA,EAEQA,EAAA6P,UAAAlO,OAAsB3B,IAC9BmwE,GAAAm2F,EAAAt0J,EAAAhS,KAAA6P,UAAA7P,EAAA,QAEA,OAAAmwE,sCCVA,IAAAo2F,EAAW1oK,EAAQ,QAEnB,SAAA8oF,KAmBA,IAAA6/E,EAAA,KACAC,KA6BA,SAAAr3J,EAAAkwC,GACA,oBAAA5yC,KACA,UAAAi0C,UAAA,wCAEA,sBAAArB,EACA,UAAAqB,UAAA,oDAEAj0C,KAAA0sI,IAAA,EACA1sI,KAAAkkI,IAAA,EACAlkI,KAAAmkI,IAAA,KACAnkI,KAAAg6J,IAAA,KACApnH,IAAAqnC,GACAggF,EAAArnH,EAAA5yC,MAsBA,SAAAk6J,EAAA/sH,EAAAgtH,GACA,SAAAhtH,EAAA+2F,KACA/2F,IAAAg3F,IAKA,GAHAzhI,EAAAmpI,KACAnpI,EAAAmpI,IAAA1+F,GAEA,IAAAA,EAAA+2F,IACA,WAAA/2F,EAAAu/F,KACAv/F,EAAAu/F,IAAA,OACAv/F,EAAA6sH,IAAAG,IAGA,IAAAhtH,EAAAu/F,KACAv/F,EAAAu/F,IAAA,OACAv/F,EAAA6sH,KAAA7sH,EAAA6sH,IAAAG,UAGAhtH,EAAA6sH,IAAAhmK,KAAAmmK,IAMA,SAAAhtH,EAAAgtH,GACAN,EAAA,WACA,IAAAvwJ,EAAA,IAAA6jC,EAAA+2F,IAAAi2B,EAAAC,YAAAD,EAAA11B,WACA,UAAAn7H,EAAA,CAQA,IAAAm4C,EAxFA,SAAA7O,EAAAzxC,GACA,IACA,OAAAyxC,EAAAzxC,GACG,MAAAijI,GAEH,OADA01B,EAAA11B,EACA21B,GAmFAM,CAAA/wJ,EAAA6jC,EAAAg3F,KACA1iF,IAAAs4G,EACA11B,EAAA81B,EAAAj5E,QAAA44E,GAEAv3E,EAAA43E,EAAAj5E,QAAAz/B,QAXA,IAAAtU,EAAA+2F,IACA3hD,EAAA43E,EAAAj5E,QAAA/zC,EAAAg3F,KAEAE,EAAA81B,EAAAj5E,QAAA/zC,EAAAg3F,OAVAm2B,CAAAntH,EAAAgtH,GAsBA,SAAA53E,EAAAp1C,EAAAotH,GAEA,GAAAA,IAAAptH,EACA,OAAAk3F,EACAl3F,EACA,IAAA8G,UAAA,8CAGA,GACAsmH,IACA,iBAAAA,GAAA,mBAAAA,GACA,CACA,IAAAxoJ,EArHA,SAAAm1B,GACA,IACA,OAAAA,EAAAn1B,KACG,MAAAqyH,GAEH,OADA01B,EAAA11B,EACA21B,GAgHAS,CAAAD,GACA,GAAAxoJ,IAAAgoJ,EACA,OAAA11B,EAAAl3F,EAAA2sH,GAEA,GACA/nJ,IAAAo7B,EAAAp7B,MACAwoJ,aAAA73J,EAKA,OAHAyqC,EAAA+2F,IAAA,EACA/2F,EAAAg3F,IAAAo2B,OACAE,EAAAttH,GAEK,sBAAAp7B,EAEL,YADAkoJ,EAAAloJ,EAAAyN,KAAA+6I,GAAAptH,GAIAA,EAAA+2F,IAAA,EACA/2F,EAAAg3F,IAAAo2B,EACAE,EAAAttH,GAGA,SAAAk3F,EAAAl3F,EAAAotH,GACAptH,EAAA+2F,IAAA,EACA/2F,EAAAg3F,IAAAo2B,EACA73J,EAAAopI,KACAppI,EAAAopI,IAAA3+F,EAAAotH,GAEAE,EAAAttH,GAEA,SAAAstH,EAAAttH,GAKA,GAJA,IAAAA,EAAAu/F,MACAwtB,EAAA/sH,IAAA6sH,KACA7sH,EAAA6sH,IAAA,MAEA,IAAA7sH,EAAAu/F,IAAA,CACA,QAAAp5I,EAAA,EAAmBA,EAAA65C,EAAA6sH,IAAA/kK,OAAqB3B,IACxC4mK,EAAA/sH,IAAA6sH,IAAA1mK,IAEA65C,EAAA6sH,IAAA,MAIA,SAAAU,EAAAN,EAAA31B,EAAAvjD,GACAlhF,KAAAo6J,YAAA,mBAAAA,IAAA,KACAp6J,KAAAykI,WAAA,mBAAAA,IAAA,KACAzkI,KAAAkhF,UASA,SAAA+4E,EAAArnH,EAAAsuC,GACA,IAAAjvD,GAAA,EACAsyG,EA7JA,SAAA3xF,EAAAzxC,EAAA+B,GACA,IACA0vC,EAAAzxC,EAAA+B,GACG,MAAAkhI,GAEH,OADA01B,EAAA11B,EACA21B,GAwJAY,CAAA/nH,EAAA,SAAAn0C,GACAwzB,IACAA,GAAA,EACAswD,EAAArB,EAAAziF,KACG,SAAAqnD,GACH7zB,IACAA,GAAA,EACAoyG,EAAAnjD,EAAAp7B,MAEA7zB,GAAAsyG,IAAAw1B,IACA9nI,GAAA,EACAoyG,EAAAnjD,EAAA44E,IA/JAz6J,EAAAC,QAAAoD,EAgBAA,EAAAmpI,IAAA,KACAnpI,EAAAopI,IAAA,KACAppI,EAAAuhI,IAAAhqD,EAEAv3E,EAAA/D,UAAAoT,KAAA,SAAAqoJ,EAAA31B,GACA,GAAAzkI,KAAA0G,cAAAhE,EACA,OAOA,SAAAyqC,EAAAitH,EAAA31B,GACA,WAAAt3F,EAAAzmC,YAAA,SAAA67E,EAAA8hD,GACA,IAAAE,EAAA,IAAA7hI,EAAAu3E,GACAsqD,EAAAxyH,KAAAwwE,EAAA8hD,GACA61B,EAAA/sH,EAAA,IAAAutH,EAAAN,EAAA31B,EAAAF,MAXAq2B,CAAA56J,KAAAo6J,EAAA31B,GAEA,IAAAF,EAAA,IAAA7hI,EAAAu3E,GAEA,OADAigF,EAAAl6J,KAAA,IAAA06J,EAAAN,EAAA31B,EAAAF,IACAA,sCC7EApzI,EAAAkS,EAAAs8H,EAAA,sBAAAltE,IAAA,IAAA3e,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAYA4mH,EAAAz8J,OAAAyE,QAAA,SAAAsH,GACA,QAAA7W,EAAA,EAAiBA,EAAA6P,UAAAlO,OAAsB3B,IAAA,CACvC,IAAAy0B,EAAA5kB,UAAA7P,GAEA,QAAAiL,KAAAwpB,EACA3pB,OAAAO,UAAAuG,eAAArG,KAAAkpB,EAAAxpB,KACA4L,EAAA5L,GAAAwpB,EAAAxpB,IAKA,OAAA4L,GAKA+pC,EAAA,SAAAC,EAAAC,GACA,sBAAAA,GAAA,OAAAA,EACA,UAAAH,UAAA,kEAAAG,GAGAD,EAAAx1C,UAAAP,OAAAi2C,OAAAD,KAAAz1C,WACA+H,aACAjI,MAAA01C,EACAjkC,YAAA,EACAokC,UAAA,EACArkC,cAAA,KAGAmkC,IAAAh2C,OAAAm2C,eAAAn2C,OAAAm2C,eAAAJ,EAAAC,GAAAD,EAAAK,UAAAJ,IAaAK,EAAA,SAAAtH,EAAAtuC,GACA,IAAAsuC,EACA,UAAAuH,eAAA,6DAGA,OAAA71C,GAAA,iBAAAA,GAAA,mBAAAA,EAAAsuC,EAAAtuC,GAWAovC,EAAA,WACA,SAAAA,IACA6F,EAAA9zC,KAAAiuC,GAEAjuC,KAAAs3E,aAmGA,OAvFArpC,EAAAtvC,UAAA68C,GAAA,SAAAj+C,EAAAohD,GACA3+C,KAAAs3E,UAAA/5E,KACAyC,KAAAs3E,UAAA/5E,OAEAyC,KAAAs3E,UAAA/5E,GAAAvJ,KAAA2qD,IAaA1Q,EAAAtvC,UAAAq0C,IAAA,SAAAz1C,EAAAohD,GACA,IAAA3+C,KAAAs3E,UAAA/5E,GACA,SAGA,IAAAY,EAAA6B,KAAAs3E,UAAA/5E,GAAAsH,QAAA85C,GAGA,OADA3+C,KAAAs3E,UAAA/5E,GAAAu+C,OAAA39C,EAAA,GACAA,GAAA,GAWA8vC,EAAAtvC,UAAA4vC,QAAA,SAAAhxC,GACA,IAAA85F,EAAAr3F,KAAAs3E,UAAA/5E,GACAjK,OAAA,EACA2B,OAAA,EACAmN,OAAA,EAEA,GAAAi1F,EAOA,OAAAl0F,UAAAlO,OAEA,IADAA,EAAAoiG,EAAApiG,OACA3B,EAAA,EAAiBA,EAAA2B,IAAY3B,EAC7B+jG,EAAA/jG,GAAAuL,KAAAmB,KAAAmD,UAAA,SAKA,IAFAf,EAAApE,MAAAW,UAAAC,MAAAC,KAAAsE,UAAA,GACAlO,EAAAoiG,EAAApiG,OACA3B,EAAA,EAAiBA,EAAA2B,IAAY3B,EAC7B+jG,EAAA/jG,GAAAkR,MAAAxE,KAAAoC,IAUA6rC,EAAAtvC,UAAAuiD,QAAA,WACAlhD,KAAAs3E,cAYArpC,EAAAtvC,UAAA24F,KAAA,SAAAC,GACAv3F,KAAAw7C,GAAA,gBAAAtpD,GACAqlG,EAAAvjG,KAAA9B,MAIA+7C,EAvGA,GAqHA6sH,EAAA,SAAA1rC,GAGA,SAAA0rC,IACAhnH,EAAA9zC,KAAA86J,GAEA,IAAA76J,EAAAw0C,EAAAz0C,KAAAovH,EAAAvwH,KAAAmB,OAGA,OADAC,EAAA5N,OAAA,GACA4N,EAsBA,OA9BAi0C,EAAA4mH,EAAA1rC,GAkBA0rC,EAAAn8J,UAAA3K,KAAA,SAAA9B,GACA,IAAA6oK,OAAA,EAKA,IAHA/6J,KAAA3N,QAAAH,EACA6oK,EAAA/6J,KAAA3N,OAAAwS,QAAA,MAEUk2J,GAAA,EAAkBA,EAAA/6J,KAAA3N,OAAAwS,QAAA,MAC5B7E,KAAAuuC,QAAA,OAAAvuC,KAAA3N,OAAA20B,UAAA,EAAA+zI,IACA/6J,KAAA3N,OAAA2N,KAAA3N,OAAA20B,UAAA+zI,EAAA,IAIAD,EA/BA,CAgCC7sH,GAyBD+sH,EAAA,SAAA1kH,GAOA,IALA,IAAAwB,EAAAxB,EAAAl3C,MAVA,IAAAszC,OAAA,yCAWAn/C,KACAD,EAAAwkD,EAAA7iD,OACAijF,OAAA,EAEA5kF,KAEA,KAAAwkD,EAAAxkD,MAKA4kF,EAAA,eAAAzxB,KAAA3O,EAAAxkD,IAAAsL,MAAA,IAEA,GAAAs5E,EAAA,GAAAp0E,QAAA,iBACAo0E,EAAA,GAAAA,EAAA,GAAAp0E,QAAA,iBACAo0E,EAAA,GAAAA,EAAA,GAAAp0E,QAAA,wBACAvQ,EAAA2kF,EAAA,IAAAA,EAAA,IAEA,OAAA3kF,GA4BA0nK,EAAA,SAAA7rC,GAGA,SAAA6rC,IACAnnH,EAAA9zC,KAAAi7J,GAEA,IAAAh7J,EAAAw0C,EAAAz0C,KAAAovH,EAAAvwH,KAAAmB,OAGA,OADAC,EAAAi7J,iBACAj7J,EAoZA,OA5ZAi0C,EAAA+mH,EAAA7rC,GAkBA6rC,EAAAt8J,UAAA3K,KAAA,SAAAiL,GACA,IAAAD,OAAA,EACA8wC,OAAA,EAIA,QADA7wC,IAAA6E,QAAA,kCACA7O,OAMA,SAAAgK,EAAA,IAQA,QAAA3L,EAAA,EAAmBA,EAAA0M,KAAAk7J,cAAAjmK,OAA+B3B,IAClD,GAAA0M,KAAAk7J,cAAA5nK,GAAAuL,KAAAmB,KAAAf,GACA,OAKA,OAAAA,EAAA4F,QAAA,QAcA,GAJA5F,IAAA6E,QAAA,SAGA9E,EAAA,WAAAynD,KAAAxnD,GAEAe,KAAAuuC,QAAA,QACAhxC,KAAA,MACA49J,QAAA,YAHA,CAQA,GADAn8J,EAAA,gCAAAynD,KAAAxnD,GAaA,OAXA6wC,GACAvyC,KAAA,MACA49J,QAAA,OAEAn8J,EAAA,KACA8wC,EAAA/4C,SAAAwhD,WAAAv5C,EAAA,KAEAA,EAAA,KACA8wC,EAAAnvC,MAAA3B,EAAA,SAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,qCAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,kBAEAn8J,EAAA,KACA8wC,EAAA/4C,SAAA+sD,SAAA9kD,EAAA,aAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,mCAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,iBAEAn8J,EAAA,KACA8wC,EAAA/4C,SAAA+sD,SAAA9kD,EAAA,aAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,8BAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,WAEAn8J,EAAA,KACA8wC,EAAAt7C,QAAAsvD,SAAA9kD,EAAA,aAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,wCAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,kBAEAn8J,EAAA,KACA8wC,EAAAphC,OAAAo1C,SAAA9kD,EAAA,aAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,gDAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,0BAEAn8J,EAAA,KACA8wC,EAAAphC,OAAAo1C,SAAA9kD,EAAA,aAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,gCAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,iBAEAn8J,EAAA,KACA8wC,EAAAsrH,aAAAp8J,EAAA,SAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,4CAAAynD,KAAAxnD,GAaA,OAXA6wC,GACAvyC,KAAA,MACA49J,QAAA,aAEAn8J,EAAA,KACA8wC,EAAA76C,OAAA6uD,SAAA9kD,EAAA,QAEAA,EAAA,KACA8wC,EAAAz8C,OAAAywD,SAAA9kD,EAAA,aAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,iCAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,eAEAn8J,EAAA,KACA8wC,EAAAurH,SAAA,KAAA5nJ,KAAAzU,EAAA,UAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,qBAAAynD,KAAAxnD,GACA,CAMA,GALA6wC,GACAvyC,KAAA,MACA49J,QAAA,OAGAn8J,EAAA,IACA,IAAAs3C,EAAA0kH,EAAAh8J,EAAA,IAKA,GAHAs3C,EAAAglH,MACAxrH,EAAA1L,IAAAkS,EAAAglH,KAEAhlH,EAAAilH,UAAA,CACA,IAAAC,EAAAllH,EAAAilH,UAAAn8J,MAAA,KACAnK,EAAAumK,EAAA,GACAnoK,EAAAmoK,EAAA,GAEA1rH,EAAA4iD,aACAz9F,IACA66C,EAAA4iD,UAAAz9F,OAAA6uD,SAAA7uD,EAAA,KAEA5B,IACAy8C,EAAA4iD,UAAAr/F,OAAAywD,SAAAzwD,EAAA,MAKA2M,KAAAuuC,QAAA,OAAAuB,QAIA,GADA9wC,EAAA,4BAAAynD,KAAAxnD,GACA,CAKA,GAJA6wC,GACAvyC,KAAA,MACA49J,QAAA,cAEAn8J,EAAA,IAGA,GAFA8wC,EAAAwG,WAAA0kH,EAAAh8J,EAAA,IAEA8wC,EAAAwG,WAAAsyE,WAAA,CACA,IAAAxpH,EAAA0wC,EAAAwG,WAAAsyE,WAAAxpH,MAAA,KACAupH,KAEAvpH,EAAA,KACAupH,EAAAj2H,MAAAoxD,SAAA1kD,EAAA,QAEAA,EAAA,KACAupH,EAAAh2H,OAAAmxD,SAAA1kD,EAAA,QAEA0wC,EAAAwG,WAAAsyE,WAAAD,EAEA74E,EAAAwG,WAAAi6C,YACAzgD,EAAAwG,WAAAi6C,UAAAzsC,SAAAhU,EAAAwG,WAAAi6C,UAAA,KAEAzgD,EAAAwG,WAAA,gBACAxG,EAAAwG,WAAA,cAAAwN,SAAAhU,EAAAwG,WAAA,mBAGAt2C,KAAAuuC,QAAA,OAAAuB,OA3BA,CA+BA,GADA9wC,EAAA,uBAAAynD,KAAAxnD,GAUA,OARA6wC,GACAvyC,KAAA,MACA49J,QAAA,SAEAn8J,EAAA,KACA8wC,EAAAwG,WAAA0kH,EAAAh8J,EAAA,UAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,kBAAAynD,KAAAxnD,GAEAe,KAAAuuC,QAAA,QACAhxC,KAAA,MACA49J,QAAA,iBAKA,GADAn8J,EAAA,wBAAAynD,KAAAxnD,GAEAe,KAAAuuC,QAAA,QACAhxC,KAAA,MACA49J,QAAA,sBAHA,CAQA,GADAn8J,EAAA,mCAAAynD,KAAAxnD,GAWA,OATA6wC,GACAvyC,KAAA,MACA49J,QAAA,qBAEAn8J,EAAA,KACA8wC,EAAA2rH,eAAAz8J,EAAA,GACA8wC,EAAAo7E,eAAA,IAAA55H,KAAA0N,EAAA,UAEAgB,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,qBAAAynD,KAAAxnD,GAuBA,OArBA6wC,GACAvyC,KAAA,MACA49J,QAAA,OAEAn8J,EAAA,KACA8wC,EAAAwG,WAAA0kH,EAAAh8J,EAAA,IAEA8wC,EAAAwG,WAAAolH,KACA,OAAA5rH,EAAAwG,WAAAolH,GAAA10I,UAAA,KAAAte,gBACAonC,EAAAwG,WAAAolH,GAAA5rH,EAAAwG,WAAAolH,GAAA10I,UAAA,IAGA8oB,EAAAwG,WAAAolH,GAAA5rH,EAAAwG,WAAAolH,GAAA18J,MAAA,SACA8wC,EAAAwG,WAAAolH,GAAA,GAAA53G,SAAAhU,EAAAwG,WAAAolH,GAAA,OACA5rH,EAAAwG,WAAAolH,GAAA,GAAA53G,SAAAhU,EAAAwG,WAAAolH,GAAA,OACA5rH,EAAAwG,WAAAolH,GAAA,GAAA53G,SAAAhU,EAAAwG,WAAAolH,GAAA,OACA5rH,EAAAwG,WAAAolH,GAAA,GAAA53G,SAAAhU,EAAAwG,WAAAolH,GAAA,OACA5rH,EAAAwG,WAAAolH,GAAA,IAAA1jK,YAAA83C,EAAAwG,WAAAolH,WAGA17J,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,uBAAAynD,KAAAxnD,GAaA,OAXA6wC,GACAvyC,KAAA,MACA49J,QAAA,SAEAn8J,EAAA,KACA8wC,EAAAwG,WAAA0kH,EAAAh8J,EAAA,IAEA8wC,EAAAwG,WAAA,eAAAiC,WAAAzI,EAAAwG,WAAA,gBACAxG,EAAAwG,WAAAqlH,QAAA,MAAAloJ,KAAAq8B,EAAAwG,WAAAqlH,eAEA37J,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,+BAAAynD,KAAAxnD,GAYA,OAVA6wC,GACAvyC,KAAA,MACA49J,QAAA,gBAEAn8J,EAAA,GACA8wC,EAAA59C,KAAA8M,EAAA,GAEA8wC,EAAA59C,KAAA,QAEA8N,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,0BAAAynD,KAAAxnD,GAYA,OAVA6wC,GACAvyC,KAAA,MACA49J,QAAA,WAEAn8J,EAAA,GACA8wC,EAAA59C,KAAA8M,EAAA,GAEA8wC,EAAA59C,KAAA,QAEA8N,KAAAuuC,QAAA,OAAAuB,GAIA,GADA9wC,EAAA,yBAAAynD,KAAAxnD,GAYA,OAVA6wC,GACAvyC,KAAA,MACA49J,QAAA,UAEAn8J,EAAA,GACA8wC,EAAA59C,KAAA8M,EAAA,GAEA8wC,EAAA59C,KAAA,QAEA8N,KAAAuuC,QAAA,OAAAuB,GAKA9vC,KAAAuuC,QAAA,QACAhxC,KAAA,MACArL,KAAA+M,EAAAL,MAAA,YAnUAoB,KAAAuuC,QAAA,QACAhxC,KAAA,UACA+E,KAAArD,EAAAL,MAAA,UAjBAoB,KAAAuuC,QAAA,QACAhxC,KAAA,MACA6mC,IAAAnlC,KA+VAg8J,EAAAt8J,UAAAi9J,UAAA,SAAA93E,GACA,IAAA7iF,EAAAjB,KAEA67J,EAAA/3E,EAAA+3E,WACAC,EAAAh4E,EAAAg4E,WACAC,EAAAj4E,EAAAi4E,WACAtvE,EAAA3I,EAAA2I,QAEA,mBAAAsvE,IACAA,EAAA,SAAA98J,GACA,OAAAA,IAGAe,KAAAk7J,cAAAlnK,KAAA,SAAAiL,GAGA,GAFA48J,EAAAp1G,KAAAxnD,GASA,OANAgC,EAAAstC,QAAA,QACAhxC,KAAA,SACArL,KAAA6pK,EAAA98J,GACA68J,aACArvE,aAEA,KAKAwuE,EA7ZA,CA8ZChtH,GA2BDwkB,EAAA,SAAA28D,GAGA,SAAA38D,IACA3e,EAAA9zC,KAAAyyD,GAEA,IAAAxyD,EAAAw0C,EAAAz0C,KAAAovH,EAAAvwH,KAAAmB,OAEAC,EAAA+7J,WAAA,IAAAlB,EACA76J,EAAAmvG,YAAA,IAAA6rD,EACAh7J,EAAA+7J,WAAA1kE,KAAAr3F,EAAAmvG,aAGA,IAAAjiE,EAAAltC,EAEAg8J,KACAC,KAEAC,OAAA,EAEArpH,OAAA,EAEAspH,GACA9tE,SACAC,SACAC,qBACAC,cAGAo3B,EAAA,EAiTA,OA9SA5lH,EAAA2tF,UACAyuE,YAAA,EACAhxC,uBACAh/B,aAIApsF,EAAAmvG,YAAA5zD,GAAA,gBAAA8gH,GACA,IAAA9mC,OAAA,EACA+mC,OAAA,IAGAvnK,IAAA,cAGAwnK,cAAA,WACAx8J,KAAA4tF,SAAAyuE,WAAAC,EAAAjB,QACA,YAAAiB,IACAt8J,KAAAuuC,QAAA,QACA2a,QAAA,iCAEAlpD,KAAA4tF,SAAAyuE,YAAA,IAGA3pE,UAAA,WACA,IAAAA,KAEA,WAAA4pE,IACAJ,EAAAxpE,YACAA,EAAAz9F,OAAAqnK,EAAArnK,OAEA,WAAAqnK,IACAt8J,KAAAuuC,QAAA,QACA2a,QAAA,8BAEAozG,EAAAjpK,OAAA,IAGA,WAAAipK,IACAJ,EAAAxpE,YACAA,EAAAr/F,OAAAipK,EAAAjpK,SAGAopK,QAAA,WACAz8J,KAAA4tF,SAAAE,SAAA,GAEA4uE,IAAA,WACA,kBAAA18J,KAAA4tF,WACA5tF,KAAA4tF,SAAAtB,cAAA,EACAtsF,KAAAuuC,QAAA,QACA2a,QAAA,uCAGA,0BAAAlpD,KAAA4tF,WACA5tF,KAAA4tF,SAAA09B,sBAAA,EACAtrH,KAAAuuC,QAAA,QACA2a,QAAA,+CAGAozG,EAAAvlK,SAAA,IACAmlK,EAAAnlK,SAAAulK,EAAAvlK,UAGA,IAAAulK,EAAAvlK,WACAmlK,EAAAnlK,SAAA,IACAiJ,KAAAuuC,QAAA,QACA2a,QAAA,qDAIAlpD,KAAA4tF,SAAAvB,SAAA4vE,GAEA19J,IAAA,WACA+9J,EAAAhmH,WAOA,SAAAgmH,EAAAhmH,WAAAqmH,OAIAL,EAAAhmH,WAAAglH,KAMAgB,EAAAhmH,WAAAqmH,QACA38J,KAAAuuC,QAAA,QACA2a,QAAA,qCAKApW,GACAlN,OAAA02H,EAAAhmH,WAAAqmH,QAAA,UACAv4H,IAAAk4H,EAAAhmH,WAAAglH,UAGA,IAAAgB,EAAAhmH,WAAAolH,KACA5oH,EAAAurE,GAAAi+C,EAAAhmH,WAAAolH,KAlBA17J,KAAAuuC,QAAA,QACA2a,QAAA,yCALApW,EAAA,KAPA9yC,KAAAuuC,QAAA,QACA2a,QAAA,qDA+BA0zG,iBAAA,WACA77H,SAAAu7H,EAAA5tJ,QAMA1O,KAAA4tF,SAAAtB,cAAAgwE,EAAA5tJ,OALA1O,KAAAuuC,QAAA,QACA2a,QAAA,oCAAAozG,EAAA5tJ,UAMAmuJ,yBAAA,WACA97H,SAAAu7H,EAAA5tJ,SAMA1O,KAAA4tF,SAAA09B,sBAAAgxC,EAAA5tJ,OACAm3G,EAAAy2C,EAAA5tJ,QANA1O,KAAAuuC,QAAA,QACA2a,QAAA,4CAAAozG,EAAA5tJ,UAOAouJ,gBAAA,WACA,YAAArpJ,KAAA6oJ,EAAAlB,cAMAp7J,KAAA4tF,SAAAwtE,aAAAkB,EAAAlB,aALAp7J,KAAAuuC,QAAA,QACA2a,QAAA,mCAAAozG,EAAAnwE,YAMAjuF,IAAA,WACAi+J,KACAG,EAAAl4H,MACA+3H,EAAA/3H,IAAAk4H,EAAAl4H,KAEAk4H,EAAA5pE,YACAypE,EAAAzpE,UAAA4pE,EAAA5pE,YAGAqqE,aAAA,WACA/8J,KAAA4tF,SAAAxB,UAAA6vE,EACAj8J,KAAA4tF,SAAA9B,YAAA9rF,KAAA4tF,SAAA9B,aAAAswE,EAEAE,EAAAhmH,YAOA4lH,EAAA5lH,aACA4lH,EAAA5lH,eAEAukH,EAAAqB,EAAA5lH,WAAAgmH,EAAAhmH,aATAt2C,KAAAuuC,QAAA,QACA2a,QAAA,0CAUAgjC,MAAA,WAGA,GAFAlsF,KAAA4tF,SAAA9B,YAAA9rF,KAAA4tF,SAAA9B,aAAAswE,EAEAE,EAAAhmH,YAAAgmH,EAAAhmH,WAAA0mH,MAAAV,EAAAhmH,WAAA,aAAAgmH,EAAAhmH,WAAA2mH,KAAA,CAQA,IAAAC,EAAAl9J,KAAA4tF,SAAA9B,YAAAwwE,EAAAhmH,WAAA0mH,MAEAE,EAAAZ,EAAAhmH,WAAA,aAAA4mH,EAAAZ,EAAAhmH,WAAA,iBACAk/E,EAAA0nC,EAAAZ,EAAAhmH,WAAA,cAGAimH,GACAvoI,QAAA,OAAAvgB,KAAA6oJ,EAAAhmH,WAAAnD,WAEA,QACAopH,EAAAY,YAAA,EAEAZ,EAAAY,WAAA,OAAA1pJ,KAAA6oJ,EAAAhmH,WAAA8mH,YAEAd,EAAAhmH,WAAA+mH,WACAd,EAAA5lK,SAAA2lK,EAAAhmH,WAAA+mH,UAEAf,EAAAhmH,WAAAglH,MACAiB,EAAAn4H,IAAAk4H,EAAAhmH,WAAAglH,KAEAgB,EAAAhmH,WAAA,iBACAimH,EAAA/pC,WAAA8pC,EAAAhmH,WAAA,gBAEAgmH,EAAAhmH,WAAAgnH,kBACAf,EAAAzrC,gBAAAwrC,EAAAhmH,WAAAgnH,iBAEAhB,EAAAhmH,WAAAinH,SACAhB,EAAAjqC,OAAA,OAAA7+G,KAAA6oJ,EAAAhmH,WAAAinH,SAIA/nC,EAAA8mC,EAAAhmH,WAAA2mH,MAAAV,OAtCAv8J,KAAAuuC,QAAA,QACA2a,QAAA,gDAuCA06C,cAAA,WACAiiB,GAAA,EACAq2C,EAAAt4D,eAAA,EACA5jG,KAAA4tF,SAAAy9B,oBAAAr3H,KAAAioK,EAAAhnK,SAEAuoK,oBAAA,gBACA,IAAAx9J,KAAA4tF,SAAA6tE,iBAKAz7J,KAAA4tF,SAAA6tE,eAAAa,EAAAb,eACAz7J,KAAA4tF,SAAAs9B,eAAAoxC,EAAApxC,gBAGAgxC,EAAAT,eAAAa,EAAAb,eACAS,EAAAhxC,eAAAoxC,EAAApxC,gBAEAuyC,eAAA,YACA18H,SAAAu7H,EAAAvlK,WAAAulK,EAAAvlK,SAAA,EACAiJ,KAAAuuC,QAAA,QACA2a,QAAA,qCAAAozG,EAAAvlK,WAIAiJ,KAAA4tF,SAAAX,eAAAqvE,EAAAvlK,UAEA2mK,cAAA,YACA38H,SAAAu7H,EAAAvlK,WAAAulK,EAAAvlK,SAAA,EACAiJ,KAAAuuC,QAAA,QACA2a,QAAA,oCAAAozG,EAAAvlK,WAIAiJ,KAAA4tF,SAAAsB,cAAAotE,EAAAvlK,UAEAoqB,MAAA,WACAm7I,EAAAhmH,aAAA/iC,MAAA+oJ,EAAAhmH,WAAA,gBAMAt2C,KAAA4tF,SAAAzsE,OACAw8I,WAAArB,EAAAhmH,WAAA,eACAy4C,QAAAutE,EAAAhmH,WAAAqlH,SAPA37J,KAAAuuC,QAAA,QACA2a,QAAA,mEASA00G,UAAA,WACA1B,EAAAnlC,OAAAulC,EAAApqK,MAEA2rK,eAAA,WACA3B,EAAA/kC,WAAAmlC,EAAApqK,MAEA4rK,SAAA,WACA5B,EAAA6B,MAAAzB,EAAApqK,QAEWoqK,EAAAnB,UA/QX,cA+QWt8J,KAAAsuC,IAEX/I,IAAA,WACA83H,EAAA93H,IAAAk4H,EAAAl4H,IACA63H,EAAAjoK,KAAAkoK,IAGAl8J,KAAA4tF,SAAAX,gBAAA,aAAAivE,IACAl8J,KAAAuuC,QAAA,QACA2a,QAAA,uDAEAgzG,EAAAnlK,SAAAiJ,KAAA4tF,SAAAX,gBAGAn6C,IACAopH,EAAA39J,IAAAu0C,GAEAopH,EAAAt3C,SAAAiB,EAEAs2C,IACAD,EAAAh+J,IAAAi+J,GAIAD,MAEA8B,QAAA,aAGAC,OAAA,WAEA3B,EAAA7vE,SACAyvE,EAAA+B,OAAA/B,EAAA+B,WACA/B,EAAA+B,OAAA3B,EAAAR,YAAAQ,EAAApqK,OAGA8N,KAAA4tF,SAAAqwE,OAAAj+J,KAAA4tF,SAAAqwE,WACAj+J,KAAA4tF,SAAAqwE,OAAA3B,EAAAR,YAAAQ,EAAApqK,SAGOoqK,EAAA/+J,MAAAsB,KAAAsuC,KAEPltC,EAwCA,OArXAi0C,EAAAue,EAAA28D,GAuVA38D,EAAA9zD,UAAA3K,KAAA,SAAA0wG,GACA1kG,KAAAg8J,WAAAhoK,KAAA0wG,IAUAjyC,EAAA9zD,UAAAnB,IAAA,WAEAwC,KAAAg8J,WAAAhoK,KAAA,OAaAy+D,EAAA9zD,UAAAi9J,UAAA,SAAA15I,GACAliB,KAAAovG,YAAAwsD,UAAA15I,IAGAuwC,EAtXA,CAuXCxkB,sCCrlCD,IAAAiwH,EAAA12E,SAAA7oF,UAAAI,SAEAo/J,EAAA,cACAC,EAAA,SAAA3/J,GACA,IACA,IAAA4/J,EAAAH,EAAAr/J,KAAAJ,GACA,OAAA0/J,EAAA1qJ,KAAA4qJ,GACE,MAAA96J,GACF,WAaA4kI,EAAA/pI,OAAAO,UAAAI,SAGAu/J,EAAA,mBAAAztJ,QAAA,iBAAAA,OAAA0tJ,YAEAl/J,EAAAC,QAAA,SAAAb,GACA,IAAAA,EAAc,SACd,sBAAAA,GAAA,iBAAAA,EAAgE,SAChE,sBAAAA,MAAAE,UAAuD,SACvD,GAAA2/J,EAAsB,OAlBtB,SAAA7/J,GACA,IACA,OAAA2/J,EAAA3/J,KACAy/J,EAAAr/J,KAAAJ,IACA,GACE,MAAA8E,GACF,UAYsBi7J,CAAA//J,GACtB,GAAA2/J,EAAA3/J,GAA2B,SAC3B,IAAAggK,EAAAt2B,EAAAtpI,KAAAJ,GACA,MAXA,sBAWAggK,GAVA,+BAUAA,sCCnCAttK,EAAAkS,EAAAs8H,EAAA,sBAAA3tI,IAAAb,EAAAkS,EAAAs8H,EAAA,sBAAA++B,IAAA,IAAAC,EAAAxtK,EAAA,QAAAytK,EAAAztK,EAAA4R,EAAA47J,GAAAE,EAAA1tK,EAAA,QAAA2tK,EAAA3tK,EAAA4R,EAAA87J,GAyHAE,EAAA,SAAAC,GACA,IAAAC,EAEA3oH,EAAA0oH,EAAA1oH,WACA+1C,EAAA2yE,EAAA3yE,SAEAF,GACA71C,YAAA2oH,GACAhC,KAAA3mH,EAAAt9B,GACAs1E,MAAA,QACAG,UAAA,OACAm6B,YACAl2H,MAAA4jD,EAAA5jD,MACAC,OAAA2jD,EAAA3jD,QAEAuhH,OAAA59D,EAAA+8D,OACA9iB,UAAAj6C,EAAA66C,WACK8tE,EAAA,gBAAAA,GACL76H,IAAA,GACA0pD,QAAA,YAAAx3C,EAAA/4C,MAAA,UACAqnH,SAAAtuE,EAAA4oH,YACAvyE,YAAA,GACAM,eAAA32C,EAAAv/C,SACAs1F,WACAC,cAAAD,EAAAp3F,OAAAo3F,EAAA,GAAA39E,OAAA,GAOA,OAJA4nC,EAAA4mF,oBACA/wC,EAAA+wC,kBAAA5mF,EAAA4mF,mBAGA/wC,GA4DAt4C,EAAA,mBAAAhjC,QAAA,iBAAAA,OAAAa,SAAA,SAAAw1B,GACA,cAAAA,GACC,SAAAA,GACD,OAAAA,GAAA,mBAAAr2B,QAAAq2B,EAAAxgC,cAAAmK,QAAAq2B,IAAAr2B,OAAAlS,UAAA,gBAAAuoC,GAGA6N,EAAA,SAAA7N,GACA,QAAAA,GAAA,qBAAAA,EAAA,YAAA2M,EAAA3M,KAGAi4H,EAAA,SAAAA,IACA,QAAAtsH,EAAA1vC,UAAAlO,OAAAmqK,EAAAphK,MAAA60C,GAAAC,EAAA,EAAoEA,EAAAD,EAAaC,IACjFssH,EAAAtsH,GAAA3vC,UAAA2vC,GAGA,OAAAssH,EAAA3+H,OAAA,SAAAltC,EAAAw0B,GAYA,OAVA3pB,OAAAC,KAAA0pB,GAAA5hB,QAAA,SAAA5H,GAEAP,MAAAgI,QAAAzS,EAAAgL,KAAAP,MAAAgI,QAAA+hB,EAAAxpB,IACAhL,EAAAgL,GAAAhL,EAAAgL,GAAA0H,OAAA8hB,EAAAxpB,IACOw2C,EAAAxhD,EAAAgL,KAAAw2C,EAAAhtB,EAAAxpB,IACPhL,EAAAgL,GAAA4gK,EAAA5rK,EAAAgL,GAAAwpB,EAAAxpB,IAEAhL,EAAAgL,GAAAwpB,EAAAxpB,KAGAhL,QAIA82F,EAAA,SAAAg1E,EAAAC,GAEA,kBAAA7rJ,KAAA6rJ,GACAA,GAIA,QAAA7rJ,KAAA4rJ,KACAA,EAAcT,EAAAz9J,EAAUqpF,iBAAkBs0E,EAAA39J,EAAMkc,SAAAm0C,KAAA6tG,IAGvCT,EAAAz9J,EAAUqpF,iBAAA60E,EAAAC,KA2BnBC,EAAA,SAAAz7E,GACA,IAAA07E,EAAA17E,EAAAu7E,QACAA,OAAAz7H,IAAA47H,EAAA,GAAAA,EACAC,EAAA37E,EAAA/7D,OACAA,OAAA6b,IAAA67H,EAAA,GAAAA,EACAC,EAAA57E,EAAAl1E,MACAA,OAAAg1B,IAAA87H,EAAA,GAAAA,EAEAl/H,GACA4D,IAAArc,EACA4kE,YAAAtC,EAAAg1E,GAAA,GAAAt3I,IAGA,GAAAnZ,EAAA,CACA,IAAAu5C,EAAAv5C,EAAAxP,MAAA,KACAugK,EAAA77G,SAAAqE,EAAA,OACAy3G,EAAA97G,SAAAqE,EAAA,OAEA3nB,EAAAkyD,WACAz9F,OAAA2qK,EAAAD,EACAtsK,OAAAssK,GAIA,OAAAn/H,GAkBAq/H,EAAA,SAAAvpH,EAAAvnC,EAAAhY,GACA,IAAA+oK,EAAAxpH,EAAAwpH,IACA/kD,EAAAzkE,EAAAykE,aACAglD,EAAAzpH,EAAAypH,sBACAC,EAAA1pH,EAAAx/C,UACAA,OAAA8sC,IAAAo8H,EAAA,EAAAA,EACAC,EAAA3pH,EAAAn1B,MACAA,OAAAyiB,IAAAq8H,EAAA,EAAAA,EACAC,EAAA5pH,EAAA6jE,oBAMAgmD,GAHAL,EAAA/kD,GAAA,UAFAn3E,IAAAs8H,EAAA,EAAAA,IAGAH,EAAA5+I,GAIA,OAAA1mB,KAAAwtG,MAAAk4D,EAAArpK,EAAAiY,GAAAhY,IAgBAqpK,EAAA,SAAA9pH,EAAA+pH,GAiBA,IAhBA,IAAAC,EAAAhqH,EAAA/4C,KACAA,OAAAqmC,IAAA08H,EAAA,SAAAA,EACAC,EAAAjqH,EAAA6jE,oBACAA,OAAAv2E,IAAA28H,EAAA,EAAAA,EACAC,EAAAlqH,EAAA41C,MACAA,OAAAtoD,IAAA48H,EAAA,GAAAA,EACAC,EAAAnqH,EAAAmqH,eACAC,EAAApqH,EAAAx/C,UACAA,OAAA8sC,IAAA88H,EAAA,EAAAA,EACAC,EAAArqH,EAAAsqH,YACAA,OAAAh9H,IAAA+8H,EAAA,EAAAA,EACA/7C,EAAAtuE,EAAA4oH,YAEA7yE,KACAt9E,GAAA,EAEA8xJ,EAAA,EAAsBA,EAAAR,EAAAprK,OAAiC4rK,IAAA,CACvD,IAAAnvI,EAAA2uI,EAAAQ,GACA9pK,EAAA26B,EAAAruB,EACAia,EAAAoU,EAAA5D,GAAA,EACAgzI,EAAApvI,EAAAzuB,GAAA,EAEA8L,EAAA,IAEAA,EAAA+xJ,GAGAA,KAAA/xJ,IAuBAA,EAAA+xJ,GAGA,IAAA34H,OAAA,EAEA,GAAA7qB,EAAA,GACA,IAAAyjJ,EAAAF,EAAA,EAKA14H,EAHA44H,IAAAV,EAAAprK,OAEA,YAAAsI,GAAA48G,EAAA,GAAAjuB,EAAArnF,QAAA,cACAg7J,EAAAvpH,EAAAvnC,EAAAhY,IAGA0pK,EAAA3pK,EAAAiY,GAAAhY,GAGAspK,EAAAU,GAAA99J,EAAA8L,GAAAhY,OAGAoxC,EAAA7qB,EAAA,EAMA,IAHA,IAAA9f,EAAAojK,EAAAv0E,EAAAp3F,OAAAkzC,EACAz5B,EAAAkyJ,EAAAv0E,EAAAp3F,OAEAyZ,EAAAlR,GACA6uF,EAAAr4F,MAAqB0a,SAAA3X,WAAAD,EAAAiY,OAAA61G,aACrB71G,GAAAhY,EACA2X,IAIA,OAAA29E,GAaA20E,EAAA,SAAAC,GACA,OAAAA,EAAAxgI,OAAA,SAAAvO,EAAA2I,GACA,OAAA3I,EAAAjsB,OAAA40B,SAIAglB,EAAA,SAAA+O,GACA,IAAAA,EAAA35D,OACA,SAKA,IAFA,IAAA1B,KAEAD,EAAA,EAAiBA,EAAAs7D,EAAA35D,OAAiB3B,IAClCC,EAAAS,KAAA46D,EAAAt7D,IAGA,OAAAC,GAOA2tK,GASAC,OAAA,SAAA7qH,GACA,IAAAv/C,EAAAu/C,EAAAv/C,SACAipK,EAAA1pH,EAAAx/C,UACAA,OAAA8sC,IAAAo8H,EAAA,EAAAA,EACAS,EAAAnqH,EAAAmqH,eAGA,OACAt/I,MAAA,EACA3jB,IAAA/C,KAAAwtG,KAAAw4D,GAAA1pK,EAAAD,MAaAurI,QAAA,SAAA/rF,GACA,IAAAwpH,EAAAxpH,EAAAwpH,IACA/kD,EAAAzkE,EAAAykE,aACAglD,EAAAzpH,EAAAypH,sBACAW,EAAApqH,EAAAx/C,UACAA,OAAA8sC,IAAA88H,EAAA,EAAAA,EACA3pK,EAAAu/C,EAAAv/C,SACAkpK,EAAA3pH,EAAAn1B,MACAA,OAAAyiB,IAAAq8H,EAAA,EAAAA,EACAC,EAAA5pH,EAAA6jE,oBACAA,OAAAv2E,IAAAs8H,EAAA,EAAAA,EACAkB,EAAA9qH,EAAA+qH,qBACAA,OAAAz9H,IAAAw9H,EAAAtgI,IAAAsgI,EAEA91J,GAAAw0J,EAAA/kD,GAAA,IACAumD,EAAAvB,EAAA5+I,EAEAg/I,EADA70J,EAAA6uG,EACAmnD,EACAC,EAAA9mK,KAAAwtG,KAAAk4D,EAAArpK,EAAAC,GACAyqK,EAAA/mK,KAAA+oC,OAAAl4B,EAAAg2J,EAAAD,GAAAvqK,EAAAC,GACA0qK,EAAAhnK,KAAA+oC,OAAAl4B,EAAAg2J,GAAAxqK,EAAAC,GAEA,OACAoqB,MAAA1mB,KAAA6+C,IAAA,EAAAkoH,GACAhkK,IAAA/C,KAAAwgC,IAAAsmI,EAAAE,MAyDAC,EAAA,SAAAprH,GACA,IAAAgqH,EAAAhqH,EAAA/4C,KACAA,OAAAqmC,IAAA08H,EAAA,SAAAA,EACAvpK,EAAAu/C,EAAAv/C,SACA4qK,EAAArrH,EAAAx/C,UACAA,OAAA8sC,IAAA+9H,EAAA,EAAAA,EACAlB,EAAAnqH,EAAAmqH,eAEAmB,EAAAV,EAAA3jK,GAAA+4C,GAIA+1C,EA9JA,SAAAlrE,EAAA3jB,GAGA,IAFA,IAAAjK,KAEAD,EAAA6tB,EAAqB7tB,EAAAkK,EAASlK,IAC9BC,EAAAS,KAAAV,GAGA,OAAAC,EAuJAqb,CAHAgzJ,EAAAzgJ,MACAygJ,EAAApkK,KAEAU,IAzCA,SAAAo4C,GACA,gBAAA5nC,EAAAvQ,GACA,IAAApH,EAAAu/C,EAAAv/C,SACA8qK,EAAAvrH,EAAAx/C,UACAA,OAAA8sC,IAAAi+H,EAAA,EAAAA,EACA3C,EAAA5oH,EAAA4oH,YACAyB,EAAArqH,EAAAsqH,YAIA,OACAlyJ,aAJAk1B,IAAA+8H,EAAA,EAAAA,GAIAjyJ,EACA3X,WAAAD,EACA8tH,SAAAs6C,EACAnwJ,KAAA5Q,EAAApH,IA2BA+qK,CAAAxrH,IAEA,cAAA/4C,EAAA,CACA,IAAAY,EAAAkuF,EAAAp3F,OAAA,EAGAo3F,EAAAluF,GAAApH,SAAA0pK,EAAA1pK,EAAAD,EAAAqH,EAGA,OAAAkuF,GAGA01E,EAAA,kCAwFAC,EAAA,SAAAhzJ,EAAAujE,GACA,OAAAvjE,EAAAlL,QAAAi+J,EAnDA,SAAAxvF,GACA,gBAAAvzE,EAAAijK,EAAAl/D,EAAArwG,GACA,UAAAsM,EAEA,UAGA,YAAAuzE,EAAA0vF,GACA,OAAAjjK,EAGA,IAAAP,EAAA,GAAA8zE,EAAA0vF,GAEA,2BAAAA,EAEAxjK,GAMA/L,EAHAqwG,EAGAj/C,SAAApxD,EAAA,IAFA,EAKA+L,EAAAxJ,QAAAvC,EACA+L,EAGA,OAAAT,MAAAtL,EAAA+L,EAAAxJ,OAAA,GAAAgJ,KAAA,KAAAQ,IAuBAyjK,CAAA3vF,KA+CA4vF,EAAA,SAAA7rH,EAAA+pH,GACA,IAAA+B,GACAC,iBAAA/rH,EAAAt9B,GACAspJ,UAAAhsH,EAAA66C,WAAA,GAGAoxE,EAAAjsH,EAAAksH,eACAA,OAAA5+H,IAAA2+H,GAA8DE,UAAA,GAAA7zJ,MAAA,IAA2B2zJ,EAGzFG,EAAAnD,GACAF,QAAA/oH,EAAA+oH,QACAt3I,OAAAi6I,EAAAQ,EAAAC,UAAAL,GACAxzJ,MAAA4zJ,EAAA5zJ,QAKA,OAjDA,SAAA0nC,EAAA+pH,GACA,OAAA/pH,EAAAv/C,UAAAspK,EAWA/pH,EAAAv/C,SACA2qK,EAAAprH,GAGA8pH,EAAA9pH,EAAA+pH,KAXA3xJ,OAAA4nC,EAAAsqH,aAAA,EACA7pK,SAAAu/C,EAAAmqH,eACA1xJ,KAAA,EACA61G,SAAAtuE,EAAA4oH,cAuCAyD,CAAArsH,EAAA+pH,GAEAniK,IAAA,SAAAuuF,GACA21E,EAAArxF,OAAA0b,EAAA/9E,OACA0zJ,EAAAQ,KAAAn2E,EAAA19E,KAEA,IAAAq1B,EAAA49H,EAAA1rH,EAAA41C,OAAA,GAAAk2E,GAEA,OACAh+H,MACAwgF,SAAAn4B,EAAAm4B,SACA7tH,SAAA01F,EAAA11F,SACA41F,YAAAtC,EAAA/zC,EAAA+oH,SAAA,GAAAj7H,GACAlmC,IAAAwkK,EACAh0J,OAAA+9E,EAAA/9E,WAKAkkD,EACA,2BADAA,EAEA,sBAFAA,EAGA,mBAHAA,EAIA,cAJAA,EAMA,2BANAA,EAOA,gCAkDAiwG,EAAA,SAAAvsH,EAAA+pH,GACA,IAAAtpK,EAAAu/C,EAAAv/C,SACA+rK,EAAAxsH,EAAAysH,YACAA,OAAAn/H,IAAAk/H,OAKA,IAAA/rK,IAAAspK,GAAAtpK,GAAAspK,EACA,UAAA18J,MAAAivD,GAGA,IAAAowG,EAAAD,EAAA7kK,IAAA,SAAA+kK,GACA,OAjDA,SAAA3sH,EAAA4sH,GACA,IAAA7D,EAAA/oH,EAAA+oH,QACAkD,EAAAjsH,EAAAksH,eACAA,OAAA5+H,IAAA2+H,KAA+DA,EAG/D1+H,EAAA07H,GACAF,UACAt3I,OAAAy6I,EAAAC,UACA7zJ,MAAA4zJ,EAAA5zJ,QAGA69E,EAAA8yE,GACAF,UACAt3I,OAAAm7I,EAAAh3E,MACAt9E,MAAAs0J,EAAAC,aAKA,OAFA12E,EAAAvuF,IAAA2lC,EAEA4oD,EA6BA22E,CAAA9sH,EAAA2sH,KAEAI,OAAA,EA0BA,OAxBAtsK,IACAssK,EAAA3B,EAAAprH,IAGA+pH,IACAgD,EAAAjD,EAAA9pH,EAAA+pH,IAGAgD,EAAAnlK,IAAA,SAAA4iK,EAAA3iK,GACA,GAAA6kK,EAAA7kK,GAAA,CACA,IAAAsuF,EAAAu2E,EAAA7kK,GAKA,OAHAsuF,EAAAm4B,SAAAk8C,EAAAl8C,SACAn4B,EAAA11F,SAAA+pK,EAAA/pK,SACA01F,EAAA/9E,OAAAoyJ,EAAApyJ,OACA+9E,KAKGnuF,OAAA,SAAAmuF,GACH,OAAAA,KAgBA62E,EAAA,SAAAhtH,GACA,IAAA+oH,EAAA/oH,EAAA+oH,QACAkD,EAAAjsH,EAAAksH,eACAA,OAAA5+H,IAAA2+H,KAA+DA,EAC/D9B,EAAAnqH,EAAAmqH,eACAT,EAAA1pH,EAAAx/C,UACAA,OAAA8sC,IAAAo8H,EAAA,EAAAA,EACAuD,EAAAjtH,EAAAktH,WACAA,OAAA5/H,IAAA2/H,EAAA,GAAAA,EACAxsK,EAAAu/C,EAAAv/C,SAIA,IAAAsoK,EACA,UAAA17J,MAAAivD,GAGA,IAAA/uB,EAAA07H,GACAF,UACAt3I,OAAAy6I,EAAAC,UACA7zJ,MAAA4zJ,EAAA5zJ,QAEA69E,EAAA8yE,GAAkCF,UAAAt3I,OAAAs3I,EAAAzwJ,MAAA40J,IAMlC,GAJA/2E,EAAAvuF,IAAA2lC,EAIA9sC,EAAA,CACA,IAAAssK,EAAA3B,EAAAprH,GAEA+sH,EAAApuK,SACAw3F,EAAA11F,SAAAssK,EAAA,GAAAtsK,SACA01F,EAAAm4B,SAAAy+C,EAAA,GAAAz+C,eAEG67C,IACHh0E,EAAA11F,SAAA0pK,EAAA3pK,EACA21F,EAAAm4B,SAAA,GAMA,OAFAn4B,EAAA/9E,OAAA,GAEA+9E,IAGAg3E,EAAA,SAAA3/E,GACA,IAAAxtC,EAAAwtC,EAAAxtC,WACAvK,EAAA+3C,EAAA/3C,YAEA23H,OAAA,EACAC,OAAA,EAaA,GAXA53H,EAAA63H,UACAD,EAAAxB,EACAuB,EAAAvE,EAAA7oH,EAAAvK,EAAA63H,WACG73H,EAAA3kB,MACHu8I,EAAAL,EACAI,EAAAvE,EAAA7oH,EAAAvK,EAAA3kB,OACG2kB,EAAA6iB,OACH+0G,EAAAd,EACAa,EAAAvE,EAAA7oH,EAAAvK,EAAA6iB,QAGA+0G,EACA,OAAYrtH,cAGZ,IAAA+1C,EAAAs3E,EAAAD,EAAA33H,EAAA64E,UAKA,GAAA8+C,EAAA3sK,SAAA,CACA,IAAA8sK,EAAAH,EACA3sK,EAAA8sK,EAAA9sK,SACA+sK,EAAAD,EAAA/sK,UACAA,OAAA8sC,IAAAkgI,EAAA,EAAAA,EAGAJ,EAAA3sK,WAAAD,OACGu1F,EAAAp3F,OAGHyuK,EAAA3sK,SAAAs1F,EAAA5rD,OAAA,SAAA6Y,EAAAmzC,GACA,OAAAhyF,KAAA6+C,MAAA7+C,KAAAwtG,KAAAxb,EAAA11F,YACK,GAEL2sK,EAAA3sK,SAAA,EAGA,OACAu/C,WAAAotH,EACAr3E,aAQA03E,EAAA,SAAA5vI,EAAAn+B,GACA,OAAA6pD,EAAA1rB,EAAAkgD,YAAA/1E,OAAA,SAAAwlF,GAEA,OADAA,EAAAx0D,UACAt5B,KAIAguK,EAAA,SAAA7vI,GACA,OAAAA,EAAArqB,YAAA+c,QAGAo9I,EAAA,SAAAvuH,GACA,IAQA12C,EADA,+EACAynD,KAAA/Q,GAEA,IAAA12C,EACA,SAGA,IAAAklK,EAAAllK,EAAAJ,MAAA,GACAulK,EAAAD,EAAA,GACAz1J,EAAAy1J,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAEA,OAtBA,QAsBA3rH,WAAA4rH,GAAA,GArBA,OAqBA5rH,WAAA9pC,GAAA,GApBA,MAoBA8pC,WAAA6rH,GAAA,GAnBA,KAmBA7rH,WAAA8rH,GAAA,GAlBA,GAkBA9rH,WAAA+rH,GAAA,GAAA/rH,WAAAgsH,GAAA,IAkBAC,GAUAC,0BAAA,SAAAhmK,GACA,OAAAwlK,EAAAxlK,IAcAshK,sBAAA,SAAAthK,GACA,MAtCA,oCAIAgV,KAPAiiC,EAyCAj3C,KAjCAi3C,GAAA,KAGApkD,KAAAU,MAAA0jD,GA8BA,IAzCA,IAAAA,GAsDAykE,oBAAA,SAAA17G,GACA,OAAAwlK,EAAAxlK,IAaA4iK,qBAAA,SAAA5iK,GACA,OAAAwlK,EAAAxlK,IAaA0iB,MAAA,SAAA1iB,GACA,OAAAwlK,EAAAxlK,IAYA/L,MAAA,SAAA+L,GACA,OAAAqlD,SAAArlD,EAAA,KAYA9L,OAAA,SAAA8L,GACA,OAAAqlD,SAAArlD,EAAA,KAYA0yF,UAAA,SAAA1yF,GACA,OAAAqlD,SAAArlD,EAAA,KAYAmiK,YAAA,SAAAniK,GACA,OAAAqlD,SAAArlD,EAAA,KAYA3H,UAAA,SAAA2H,GACA,OAAAqlD,SAAArlD,EAAA,KAgBA1H,SAAA,SAAA0H,GACA,IAAAimK,EAAA5gH,SAAArlD,EAAA,IAEA,OAAA8U,MAAAmxJ,GACAT,EAAAxlK,GAGAimK,GAYArhK,EAAA,SAAA5E,GACA,OAAAqlD,SAAArlD,EAAA,KAaAwE,EAAA,SAAAxE,GACA,OAAAqlD,SAAArlD,EAAA,KAaAqvB,EAAA,SAAArvB,GACA,OAAAqlD,SAAArlD,EAAA,KAaA00C,QAAA,SAAA10C,GACA,OAAAA,IAaAu8J,EAAA,SAAA5lH,GACA,OAAAA,KAAAkB,WAIAuJ,EAAAzK,EAAAkB,YAAA7V,OAAA,SAAAt/B,EAAAoC,GACA,IAAAohK,EAAAH,EAAAjhK,EAAAvN,OAAAwuK,EAAArxH,QAIA,OAFAhyC,EAAAoC,EAAAvN,MAAA2uK,EAAAphK,EAAA9E,OAEA0C,WAcA,IAAAyjK,GACAC,gDAAA,kBACAC,gDAAA,qBACAC,gDAAA,0BACAC,gDAAA,uBAaAC,EAAA,SAAAC,EAAAC,GACA,OAAAA,EAAAlwK,OAIA+rK,EAAAkE,EAAAhnK,IAAA,SAAAqlG,GACA,OAAA4hE,EAAAjnK,IAAA,SAAAknK,GACA,OAAA/6E,EAAAkZ,EAAAygE,EAAAoB,SALAF,GAgCAG,EAAA,SAAAC,GACA,IAAAC,EAAAxB,EAAAuB,EAAA,sBACAE,EAAAzB,EAAAuB,EAAA,kBACAvC,EAAAyC,GAAAzB,EAAAyB,EAAA,cAAAtnK,IAAA,SAAAulE,GACA,OAAA07F,GAAkBnqK,IAAA,cAAoBgmK,EAAAv3F,MAEtCgiG,EAAA1B,EAAAuB,EAAA,kBACAI,EAAAF,GAAAD,EACAlF,EAAAqF,GAAA3B,EAAA2B,EAAA,sBACAC,EAAAH,GAAAC,GAAAF,EACAK,EAAAD,GAAA5B,EAAA4B,EAAA,qBAOA/B,EAAA2B,GAAAvK,EAAAuK,GAEA3B,GAAAgC,EACAhC,EAAApB,eAAAoD,GAAA5K,EAAA4K,GACGhC,KAAApB,iBAIHoB,EAAApB,gBAA+BC,UAAAmB,EAAApB,iBAG/B,IAAAz2H,GACA63H,WACAh/C,SAAAy7C,GAAA0D,EAAA1D,EAAA,KAAAniK,IAAA,SAAAulE,GACA,OAAAu3F,EAAAv3F,KAEA7U,KAAA42G,GAAArG,EAAAnE,EAAAwK,IACAzC,cACAP,eAAAxH,EAAA4K,KAEAx+I,KAAAq+I,GAAAtG,EAAAnE,EAAAyK,IACAjD,eAAAxH,EAAA4K,MAUA,OANAxnK,OAAAC,KAAA0tC,GAAA5lC,QAAA,SAAA5H,GACAwtC,EAAAxtC,WACAwtC,EAAAxtC,KAIAwtC,GA+DA85H,EAAA,SAAAC,GACA,OAAAA,EAAArlI,OAAA,SAAAqpB,EAAA1pC,GACA,IAAAk2B,EAAA0kH,EAAA56I,GACA28G,EAAA6nC,EAAAtuH,EAAAyvH,aAEA,GAAAhpC,EAAA,CACAjzE,EAAAizE,IAAwBzmF,cAExB,IAAA0vH,EAAAjC,EAAA3jJ,EAAA,gBAEA,GAAA4lJ,EAAA,CACA,IAAA7oC,EAAA6mC,EAAAgC,GACAC,EAAA9oC,GAxLA,SAAA+oC,GAIA,IAHA,IAAAC,EAAsBrH,EAAA39J,EAAMilK,KAAAF,GAC5B5+H,EAAA,IAAArzC,WAAAkyK,EAAAlxK,QAEA3B,EAAA,EAAiBA,EAAA6yK,EAAAlxK,OAA0B3B,IAC3Cg0C,EAAAh0C,GAAA6yK,EAAA5jI,WAAAjvC,GAEA,OAAAg0C,EAiLA++H,CAAAlpC,GAEArzE,EAAAizE,GAAAI,KAAA8oC,GAIA,OAAAn8G,QA4BAw8G,EAAA,SAAAC,EAAAC,EAAAC,GACA,gBAAAnB,GACA,IAAAoB,EAAA1L,EAAAsK,GACAqB,EAAA1B,EAAAuB,EAAAzC,EAAAuB,EAAA,YACAn6G,EAAA44G,EAAAuB,EAAA,WACAsB,GAA0Bz7G,KAAA6vG,EAAA7vG,IAE1BrT,EAAAqnH,EAAAoH,EAAAG,EAAAE,GAEA1pC,EAAA2oC,EAAA9B,EAAAuB,EAAA,sBAEAlnK,OAAAC,KAAA6+H,GAAAjoI,SACA6iD,EAAAqnH,EAAArnH,GAA4BolF,uBAG5B,IAAAnxF,EAAAs5H,EAAAC,GACArmC,EAAA8kC,EAAAuB,EAAA,kBACAuB,EAAA1H,EAAAsH,EAAA16H,GAEA,OAAAi1H,EAAA/hC,EAAA/gI,IA1FA,SAAAwoK,EAAAC,EAAAE,GACA,gBAAAC,GACA,IAAAC,EAAAhD,EAAA+C,EAAA,WACAE,EAAA/B,EAAA0B,EAAAI,GACAzwH,EAAA6oH,EAAAuH,EAAA1L,EAAA8L,IACAG,EAAA5B,EAAAyB,GAEA,OAAAE,EAAA9oK,IAAA,SAAAmhK,GACA,OACAtzH,YAAAozH,EAAA0H,EAAAI,GACA3wH,WAAA6oH,EAAA7oH,GAAuC+oH,gBAgFvC6H,CAAApvH,EAAA6uH,EAAAE,OA0DAM,EAAA,SAAAC,GACA,IAAAllJ,EAAA/e,UAAAlO,OAAA,QAAA2uC,IAAAzgC,UAAA,GAAAA,UAAA,MACAkkK,EAAAnlJ,EAAA44F,YACAA,OAAAl3E,IAAAyjI,EAAA,GAAAA,EACAC,EAAAplJ,EAAA49I,IACAA,OAAAl8H,IAAA0jI,EAAAh2K,KAAAga,MAAAg8J,EACAC,EAAArlJ,EAAA64F,aACAA,OAAAn3E,IAAA2jI,EAAA,EAAAA,EAEAC,EAAAzD,EAAAqD,EAAA,UAEA,OAAAI,EAAAvyK,OAEA,UAAA0O,MAAAivD,GAGA,IAAA60G,EAAAzM,EAAAoM,GACAM,EAAAzC,GAAAnqD,GAAAipD,EAAAqD,EAAA,YAMA,OAJAK,EAAAhH,eAAAgH,EAAAhD,2BAAA,EACAgD,EAAA3H,MACA2H,EAAA1sD,eAEAimD,EAAAwG,EAAAtpK,IApDA,SAAAupK,EAAAC,GACA,gBAAAC,EAAAzI,GACA,IAAAsH,EAAAvB,EAAAyC,EAAA3D,EAAA4D,EAAA,YACAC,EAAA5M,EAAA2M,GACApB,EAAApH,EAAAsI,EAAAG,GAA4D1I,gBAC5D2I,EAAA9D,EAAA4D,EAAA,iBACAlB,EAAApB,EAAAsC,GAEA,OAAA3G,EAAA6G,EAAA3pK,IAAAooK,EAAAC,EAAAC,EAAAC,MA4CAqB,CAAAL,EAAAC,MAGAK,EAAA,SAAAC,GACA,QAAAA,EACA,UAAArkK,MAAAivD,GAGA,IACAq1G,GADA,IAAmBnJ,EAAA39J,EAAM+mK,WACzBC,gBAAAH,EAAA,mBACAZ,EAAAa,GAAA,QAAAA,EAAA54I,gBAAAC,QAAA24I,EAAA54I,gBAAA,KAEA,IAAA+3I,QAAA7qH,qBAAA,eAAAtnD,OAAA,EACA,UAAA0O,MAAAivD,GAGA,OAAAw0G,GAgDAp1K,EAAA,SAAAg2K,EAAA9lJ,GACA,OAz+CA,SAAAkmJ,GACA,IAAAC,EAEA,IAAAD,EAAAnzK,OACA,SAIA,IAAAqzK,EAAAF,EAAA,GAAA9xH,WACAv/C,EAAAuxK,EAAA7H,eACA8H,EAAAD,EAAAnuD,oBACAA,OAAAv2E,IAAA2kI,EAAA,EAAAA,EAgBAC,EAAAJ,EAAA9pK,OAbA,SAAAmqK,GACA,IAAAnyH,EAAAmyH,EAAAnyH,WACA,oBAAAA,EAAA4gE,UAAA,UAAA5gE,EAAAoyH,cAWAxqK,IAAA6gK,GACA4J,EAAAP,EAAA9pK,OAVA,SAAAsqK,GACA,IAAAtyH,EAAAsyH,EAAAtyH,WACA,oBAAAA,EAAA4gE,UAAA,UAAA5gE,EAAAoyH,cASAG,EAAAT,EAAA9pK,OAPA,SAAAwqK,GACA,IAAAxyH,EAAAwyH,EAAAxyH,WACA,mBAAAA,EAAA4gE,UAAA,SAAA5gE,EAAAoyH,cAOA/8E,GACA0wE,YAAA,EACAhxC,uBACAh/B,YACAyB,SAAA,EACAhC,aAAAu8E,GACA/5E,SACAC,UACK85E,EAAA,sBAAsCA,EAAA55E,aAA6B45E,GACxEjkI,IAAA,GACArtC,WACAq1F,UAAAo8E,EACAruD,oBAAA,IAAAA,GAWA,OARAwuD,EAAA1zK,SACA02F,EAAAG,YAAAwC,MAAA9rD,MAAAmmI,EAjIAloI,OAAA,SAAAt/B,EAAAgrF,GACA,IAAAhhC,EAAAghC,EAAA71C,WAAA6U,MAAAghC,EAAA71C,WAAA6U,KAAA1sD,OAAA,OACA9H,EAAAw1F,EAAA71C,WAAAo6F,MAAA,GAEAjlF,EAAA,OAOA,OALA90D,IACA80D,EAAA0gC,EAAA71C,WAAAo6F,KAAA,KAAAvlF,EAAA,KAIAhqD,EAAAsqD,IAAAtqD,EAAAsqD,GAAA2gC,UAAA,GAAA91C,WAAAi6C,UAAApE,EAAA71C,WAAA66C,UACAhwF,GAGAA,EAAAsqD,IACA90D,WACAwmK,YAAA,EACAnpI,QAAA,SAAAm3B,EACAihC,WAjFA,SAAAtI,GACA,IAAAilF,EAEAzyH,EAAAwtC,EAAAxtC,WACA+1C,EAAAvI,EAAAuI,SAEAF,GACA71C,YAAAyyH,GACA9L,KAAA3mH,EAAAt9B,GACAu3E,UAAAj6C,EAAA66C,UACA+iB,OAAA59D,EAAA+8D,QACK01D,EAAA,gBAAAA,GACL3kI,IAAA,GACA0pD,QAAA,YAAAx3C,EAAA/4C,MAAA,UACAqnH,SAAAtuE,EAAA4oH,YACAvyE,YAAA,GACAM,eAAA32C,EAAAv/C,SACAs1F,WACAC,cAAAD,EAAAp3F,OAAAo3F,EAAA,GAAA39E,OAAA,GAOA,OAJA4nC,EAAA4mF,oBACA/wC,EAAA+wC,kBAAA5mF,EAAA4mF,mBAGA/wC,EAwDA68E,CAAA78E,IACA/nD,IAAA,IAGAjjC,SA6GA0nK,EAAA5zK,SACA02F,EAAAG,YAAA2C,UAAAw6E,KA1GA,SAAA78E,GACA,OAAAA,EAAA3rD,OAAA,SAAAt/B,EAAAgrF,GACA,IA/DA7H,EACA4kF,EAEA5yH,EACA+1C,EA2DA5gC,EAAA0gC,EAAA71C,WAAAo6F,MAAA,OAGA,OAAAvvI,EAAAsqD,GACAtqD,GAGAA,EAAAsqD,IACA90D,SAAA80D,EACAz3B,SAAA,EACAmpI,YAAA,EACA/wE,YA1EA9H,EA0EA6H,EAvEA71C,EAAAguC,EAAAhuC,WACA+1C,EAAA/H,EAAA+H,cAEA,IAAAA,IAEAA,IACAjoD,IAAAkS,EAAA+oH,QACAz6C,SAAAtuE,EAAA4oH,YACAvyE,YAAAr2C,EAAA+oH,SAAA,GACAtoK,SAAAu/C,EAAAmqH,eACA/xJ,OAAA,IAGA4nC,EAAAv/C,SAAAu/C,EAAAmqH,iBAGAnqH,YAAA4yH,GACAjM,KAAA3mH,EAAAt9B,GACAu3E,UAAAj6C,EAAA66C,WACK+3E,EAAA,gBAAAA,GACL9kI,IAAA,GACA0pD,QAAA,YAAAx3C,EAAA/4C,MAAA,UACAqnH,SAAAtuE,EAAA4oH,YACAvyE,YAAAr2C,EAAA+oH,SAAA,GACApyE,eAAA32C,EAAAv/C,SACAs1F,WACAC,cAAAD,EAAAp3F,OAAAo3F,EAAA,GAAA39E,OAAA,KA8CA01B,IAAA,IAGAjjC,QAyFAgoK,CAAAN,IAGAl9E,EAm7CAy9E,CAAAjC,EAAAY,EAAAC,GAAA9lJ,GApqBAhkB,IAAAulK,KA+qBA/E,EAAA,SAAAsJ,GACA,OAlDA,SAAAZ,GACA,IAAAiC,EAAAtF,EAAAqD,EAAA,gBAEA,IAAAiC,EACA,YAGA,IAAA/yH,EAAA0kH,EAAAqO,GAEA,OAAA/yH,EAAAyvH,aACA,uCACA,uCACAzvH,EAAA1Q,OAAA,OACA,MACA,yCACA,sCACA,yCACA,sCACA0Q,EAAA1Q,OAAA,MACA,MACA,oCACA,oCACA0Q,EAAA1Q,OAAA,SACA0Q,EAAA73C,MAAAnN,KAAAU,MAAAskD,EAAA73C,OACA,MACA,sCACA,iCACA,kCACA,QACA,UAAAkF,MAAAivD,GAGA,OAAAtc,EAkBAgzH,CAAAvB,EAAAC,wCCvoDa,IAAAvjK,EAAMtT,EAAQ,QAAe4R,EAAA,mBAAA8N,eAAAC,IAAA8gB,EAAA7uB,EAAA8N,OAAAC,IAAA,uBAAAghB,EAAA/uB,EAAA8N,OAAAC,IAAA,sBAAAgd,EAAA/qB,EAAA8N,OAAAC,IAAA,wBAAA7N,EAAAF,EAAA8N,OAAAC,IAAA,2BAAA+gB,EAAA9uB,EAAA8N,OAAAC,IAAA,wBAAAlT,EAAAmF,EAAA8N,OAAAC,IAAA,wBAAA8pB,EAAA73B,EAAA8N,OAAAC,IAAA,uBAAAohB,EAAAnvB,EAAA8N,OAAAC,IAAA,0BAAA+pB,EAAA93B,EAAA8N,OAAAC,IAAA,2BAA8Y/N,GAAA8N,OAAAC,IAAA,qBACxb,IAAAjT,EAAA,mBAAAgT,eAAAa,SACA,SAAAigB,EAAAxwB,GAAc,QAAA+B,EAAAC,UAAAlO,OAAA,EAAAoO,EAAA,yDAAAlC,EAAAiC,EAAA,EAA8FA,EAAAF,EAAIE,IAAAC,GAAA,WAAAC,mBAAAH,UAAAC,EAAA,KAD9D,SAAAjC,EAAA+B,EAAAG,EAAAD,EAAAG,EAAAE,EAAAC,EAAAF,GAA4B,IAAArC,EAAA,CAAgB,GAATA,OAAA,OAAS,IAAA+B,EAAA/B,EAAAwC,MAAA,qIAAuJ,CAAK,IAAAC,GAAAP,EAAAD,EAAAG,EAAAE,EAAAC,EAAAF,GAAAK,EAAA,GAAwB1C,EAAAwC,MAAAT,EAAAY,QAAA,iBAAmC,OAAAF,EAAAC,SAAiB7N,KAAA,sBAA6C,MAAhBmL,EAAA4C,YAAA,EAAgB5C,GAC9MswB,EAAA,2BAAAtwB,EAAA,4HAAkCkC,GAA6H,IAAAuN,GAAOkf,UAAA,WAAqB,UAASO,mBAAA,aAAgCD,oBAAA,aAAiCJ,gBAAA,cAA8Brd,KACxc,SAAAM,EAAA9R,EAAA+B,EAAAG,GAAkBrD,KAAAF,MAAAqB,EAAanB,KAAA6uB,QAAA3rB,EAAelD,KAAA2vB,KAAAhd,EAAY3S,KAAAszB,QAAAjwB,GAAAuN,EAAsS,SAAAyO,KAAsC,SAAA+J,EAAAjoB,EAAA+B,EAAAG,GAAkBrD,KAAAF,MAAAqB,EAAanB,KAAA6uB,QAAA3rB,EAAelD,KAAA2vB,KAAAhd,EAAY3S,KAAAszB,QAAAjwB,GAAAuN,EAApXqC,EAAAtU,UAAA8sB,oBAAgCxY,EAAAtU,UAAA6B,SAAA,SAAAW,EAAA+B,GAAmC,iBAAA/B,GAAA,mBAAAA,GAAA,MAAAA,GAAAwwB,EAAA,MAAmE3xB,KAAAszB,QAAAtD,gBAAAhwB,KAAAmB,EAAA+B,EAAA,aAAmD+P,EAAAtU,UAAA4qK,YAAA,SAAApoK,GAAoCnB,KAAAszB,QAAAjD,mBAAArwB,KAAAmB,EAAA,gBAAqEke,EAAA1gB,UAAAsU,EAAAtU,UAAoG,IAAA0qB,EAAAD,EAAAzqB,UAAA,IAAA0gB,EACldgK,EAAA3iB,YAAA0iB,EAAgB3kB,EAAA4kB,EAAApW,EAAAtU,WAAiB0qB,EAAAmH,sBAAA,EAA0B,IAAAjH,GAAOhQ,QAAA,KAAA+d,kBAAA,MAAoC9N,EAAAprB,OAAAO,UAAAuG,eAAA4kB,GAAsCvrB,KAAA,EAAAqsB,KAAA,EAAA4+I,QAAA,EAAAC,UAAA,GAC5I,SAAAz6I,EAAA7tB,EAAA+B,EAAAG,GAAkB,IAAAD,OAAA,EAAAG,KAAiBE,EAAA,KAAAC,EAAA,KAAe,SAAAR,EAAA,IAAAE,UAAA,IAAAF,EAAA0nB,MAAAlnB,EAAAR,EAAA0nB,UAAA,IAAA1nB,EAAA3E,MAAAkF,EAAA,GAAAP,EAAA3E,KAAA2E,EAAAsmB,EAAA3qB,KAAAqE,EAAAE,KAAA0mB,EAAA5kB,eAAA9B,KAAAG,EAAAH,GAAAF,EAAAE,IAA4H,IAAAI,EAAAL,UAAAlO,OAAA,EAAyB,OAAAuO,EAAAD,EAAAue,SAAAze,OAAsB,KAAAG,EAAA,CAAa,QAAAI,EAAA5F,MAAAwF,GAAAK,EAAA,EAAuBA,EAAAL,EAAIK,IAAAD,EAAAC,GAAAV,UAAAU,EAAA,GAAwBN,EAAAue,SAAAle,EAAa,GAAAzC,KAAA2yB,aAAA,IAAA1wB,KAAAI,EAAArC,EAAA2yB,kBAAA,IAAAvwB,EAAAH,KAAAG,EAAAH,GAAAI,EAAAJ,IAA4E,OAAO0O,SAAA8f,EAAAr0B,KAAA4D,EAAA5C,IAAAkF,EAAAmnB,IAAAlnB,EAAA5D,MAAAyD,EAAA6tB,OAAA7H,EAAAhQ,SAChS,SAAAmd,EAAAv1B,GAAc,uBAAAA,GAAA,OAAAA,KAAA2Q,WAAA8f,EAA4J,IAAAgF,EAAA,OAAA5E,KAAkB,SAAA8E,EAAA31B,EAAA+B,EAAAG,EAAAD,GAAoB,GAAA4uB,EAAA/8B,OAAA,CAAa,IAAAsO,EAAAyuB,EAAAvnB,MAAsE,OAAxDlH,EAAAhQ,OAAA4N,EAAWoC,EAAAmmK,UAAAxmK,EAAcK,EAAA24C,KAAA74C,EAASE,EAAAsrB,QAAAzrB,EAAYG,EAAA4kC,MAAA,EAAU5kC,EAAS,OAAOhQ,OAAA4N,EAAAuoK,UAAAxmK,EAAAg5C,KAAA74C,EAAAwrB,QAAAzrB,EAAA+kC,MAAA,GAChZ,SAAA1N,EAAAt5B,GAAcA,EAAA5N,OAAA,KAAc4N,EAAAuoK,UAAA,KAAiBvoK,EAAA+6C,KAAA,KAAY/6C,EAAA0tB,QAAA,KAAe1tB,EAAAgnC,MAAA,EAAU,GAAAnW,EAAA/8B,QAAA+8B,EAAAh+B,KAAAmN,GAEmG,SAAA62B,EAAA72B,EAAA+B,EAAAG,GAAkB,aAAAlC,EAAA,EADvM,SAAAuwB,EAAAvwB,EAAA+B,EAAAG,EAAAD,GAAoB,IAAAG,SAAApC,EAAe,cAAAoC,GAAA,YAAAA,IAAApC,EAAA,MAAyC,IAAAsC,GAAA,EAAS,UAAAtC,EAAAsC,GAAA,OAAiB,OAAAF,GAAe,0BAAAE,GAAA,EAAiC,MAAM,oBAAAtC,EAAA2Q,UAAiC,KAAA8f,EAAA,KAAAE,EAAAruB,GAAA,GAAoB,GAAAA,EAAA,OAAAJ,EAAAD,EAAAjC,EAAA,KAAA+B,EAAA,IAAA60B,EAAA52B,EAAA,GAAA+B,GAAA,EAAgE,GAAvBO,EAAA,EAAIP,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAmBlF,MAAAgI,QAAA7E,GAAA,QAAAuC,EAAA,EAAgCA,EAAAvC,EAAAlM,OAAWyO,IAAA,CAAY,IAAAF,EAAAN,EAAA60B,EAAPx0B,EAAApC,EAAAuC,GAAOA,GAAeD,GAAAiuB,EAAAnuB,EAAAC,EAAAH,EAAAD,QAAc,GAAAI,EAAA,OAAArC,GAAA,iBAAAA,EAAA,wBAAAqC,EAAA3F,GAAAsD,EAAAtD,IAAAsD,EAAA,eAAAqC,EAAA,wBAAAA,EAAA,IAAArC,EAAAqC,EAAA3E,KAAAsC,GAAAuC,EACrW,IAAEH,EAAApC,EAAAosB,QAAA0E,MAAmBxuB,GAAAiuB,EAAAnuB,IAAA9E,MAAA+E,EAAAN,EAAA60B,EAAAx0B,EAAAG,KAAAL,EAAAD,OAAsC,WAAAG,GAAAouB,EAAA,yBAAAtuB,EAAA,GAAAlC,GAAA,qBAA0E/C,OAAAC,KAAA8C,GAAAlD,KAAA,UAA8BoF,EAAA,IAAS,OAAAI,EAA2BiuB,CAAAvwB,EAAA,GAAA+B,EAAAG,GAA6B,SAAA00B,EAAA52B,EAAA+B,GAAgB,uBAAA/B,GAAA,OAAAA,GAAA,MAAAA,EAAA5C,IAHrF,SAAA4C,GAAmB,IAAA+B,GAAOymK,IAAA,KAAAC,IAAA,MAAmB,cAAAzoK,GAAA2C,QAAA,iBAAA3C,GAA6C,OAAA+B,EAAA/B,KAGL/K,CAAA+K,EAAA5C,KAAA2E,EAAAnE,SAAA,IAA8E,SAAAk5B,EAAA92B,EAAA+B,GAAgB/B,EAAA+6C,KAAAr9C,KAAAsC,EAAA0tB,QAAA3rB,EAAA/B,EAAAgnC,SAClV,SAAArlC,EAAA3B,EAAA+B,EAAAG,GAAmB,IAAAD,EAAAjC,EAAA5N,OAAAgQ,EAAApC,EAAAuoK,UAA6BvoK,IAAA+6C,KAAAr9C,KAAAsC,EAAA0tB,QAAA3rB,EAAA/B,EAAAgnC,SAAqCnqC,MAAAgI,QAAA7E,GAAA+2B,EAAA/2B,EAAAiC,EAAAC,EAAA,SAAAlC,GAAqC,OAAAA,IAAS,MAAAA,IAAAu1B,EAAAv1B,OAJnI,SAAAA,EAAA+B,GAAgB,OAAO4O,SAAA8f,EAAAr0B,KAAA4D,EAAA5D,KAAAgB,IAAA2E,EAAA0nB,IAAAzpB,EAAAypB,IAAA9qB,MAAAqB,EAAArB,MAAAsxB,OAAAjwB,EAAAiwB,QAI4G4B,CAAA7xB,EAAAoC,IAAApC,EAAA5C,KAAA2E,KAAA3E,MAAA4C,EAAA5C,IAAA,OAAA4C,EAAA5C,KAAAuF,QAAA8yB,EAAA,YAAAvzB,IAAAD,EAAApP,KAAAmN,IAAwG,SAAA+2B,EAAA/2B,EAAA+B,EAAAG,EAAAD,EAAAG,GAAsB,IAAAE,EAAA,GAAS,MAAAJ,IAAAI,GAAA,GAAAJ,GAAAS,QAAA8yB,EAAA,YAAsDoB,EAAA72B,EAAA2B,EAAbI,EAAA4zB,EAAA5zB,EAAAO,EAAAL,EAAAG,IAAuBk3B,EAAAv3B,GAC1U,IAAA24B,GAAO9Z,UAAU7jB,IAAA,SAAAiD,EAAA+B,EAAAG,GAAoB,SAAAlC,EAAA,OAAAA,EAAoB,IAAAiC,KAAyB,OAAhB80B,EAAA/2B,EAAAiC,EAAA,KAAAF,EAAAG,GAAgBD,GAAS+C,QAAA,SAAAhF,EAAA+B,EAAAG,GAAyB,SAAAlC,EAAA,OAAAA,EAAuC62B,EAAA72B,EAAA82B,EAAnB/0B,EAAA4zB,EAAA,UAAA5zB,EAAAG,IAA4Bo3B,EAAAv3B,IAAKilC,MAAA,SAAAhnC,GAAmB,OAAA62B,EAAA72B,EAAA,WAAsB,aAAY,OAAO0oK,QAAA,SAAA1oK,GAAqB,IAAA+B,KAA2C,OAAlCg1B,EAAA/2B,EAAA+B,EAAA,cAAA/B,GAAuB,OAAAA,IAAW+B,GAAS4mK,KAAA,SAAA3oK,GAAuC,OAArBu1B,EAAAv1B,IAAAwwB,EAAA,OAAqBxwB,IAAU4oK,UAAA,WAAsB,OAAOxwJ,QAAA,OAAc9W,UAAAwQ,EAAA+2J,cAAA5gJ,EAAA6gJ,cAAA,SAAA9oK,EAAA+B,GACzO,YADkS,IAAAA,MAAA,OAAqB/B,GAAG2Q,SAAA8oB,EAAAtG,sBAAApxB,EAC3durB,cAAAttB,EAAA+oK,eAAA/oK,EAAAgpK,SAAA,KAAAC,SAAA,KAAAC,cAAA,OAAiFF,UAAYr4J,SAAAlU,EAAA4wB,SAAArtB,GAAuBA,EAAAipK,SAAAjpK,EAAaA,EAAAkpK,cAF8M,SAAAlpK,EAAA+B,GAAiB,IAAAG,EAAAkmB,EAAA+N,kBAAmD,OAAzB,OAAAj0B,GAAAsuB,EAAA,OAAyBtuB,EAAAgzB,YAAAl1B,EAAA+B,IAElRsc,KAAA,KAAAre,GAAgCA,GAASmpK,WAAA,SAAAnpK,GAAwB,OAAO2Q,SAAA+oB,EAAA75B,OAAAG,IAAqBopK,SAAAz8I,EAAA08I,WAAAvnK,EAAAwnK,mBAAAv4I,EAAAw4I,kBAAA74I,EAAAzwB,cAAA4tB,EAAA27I,aAAA,SAAAxpK,EAAA+B,EAAAG,IAA+G,OAAAlC,QAAA,IAAAA,IAAAwwB,EAAA,MAAAxwB,GAAuC,IAAAiC,OAAA,EAAAG,EAAAkB,KAAmBtD,EAAArB,OAAA2D,EAAAtC,EAAA5C,IAAAmF,EAAAvC,EAAAypB,IAAApnB,EAAArC,EAAAiwB,OAAqC,SAAAluB,EAAA,MAAY,IAAAA,EAAA0nB,MAAAlnB,EAAAR,EAAA0nB,IAAApnB,EAAA+lB,EAAAhQ,cAAsC,IAAArW,EAAA3E,MAAAkF,EAAA,GAAAP,EAAA3E,KAC9d,IAAAqF,OAAA,EAAkE,IAAAR,KAArDjC,EAAA5D,MAAA4D,EAAA5D,KAAAu2B,eAAAlwB,EAAAzC,EAAA5D,KAAAu2B,cAAqD5wB,EAAAsmB,EAAA3qB,KAAAqE,EAAAE,KAAA0mB,EAAA5kB,eAAA9B,KAAAG,EAAAH,QAAA,IAAAF,EAAAE,SAAA,IAAAQ,IAAAR,GAAAF,EAAAE,IAA8G,QAArBA,EAAAD,UAAAlO,OAAA,GAAqBsO,EAAAue,SAAAze,OAAsB,KAAAD,EAAA,CAAaQ,EAAA5F,MAAAoF,GAAW,QAAAS,EAAA,EAAYA,EAAAT,EAAIS,IAAAD,EAAAC,GAAAV,UAAAU,EAAA,GAAwBN,EAAAue,SAAAle,EAAa,OAAOkO,SAAA8f,EAAAr0B,KAAA4D,EAAA5D,KAAAgB,IAAAkF,EAAAmnB,IAAAlnB,EAAA5D,MAAAyD,EAAA6tB,OAAA5tB,IAAqDonK,cAAA,SAAAzpK,GAA2B,IAAA+B,EAAA8rB,EAAAxP,KAAA,KAAAre,GAA8B,OAAT+B,EAAA3F,KAAA4D,EAAS+B,GAAS2nK,eAAAn0I,EAAAliC,QAAA,SAAAkc,oDAAuFqiB,kBAAAxJ,EACxe1mB,OAAA4B,IAAU2zB,GAAIpE,QAAA6H,GAAUxD,EAAAD,GAAAyD,GAAAzD,EAAW/4B,EAAAC,QAAA+4B,EAAArE,SAAAqE,wBCvBnCh5B,EAAAC,QAAiBnO,EAAAygC,EAAuB,sDCaxC,IAAAqc,EAAa98C,EAAQ,QAMrB+3C,EAAA,SAAAzqC,EAAA8kG,GACA,IAAAC,EAAA,EAeA,IAbA/kG,EAAA8kG,IAQAC,GAAA,GAKA/oG,KAAAg5F,IAAA8P,EAAA9kG,GAlBA,YAmBAA,GArBA,WAqBA+kG,EAGA,OAAA/kG,GAGA0vC,EAAA,SAAA5wC,GACA,IAAAkmG,EAAAC,EAEAv1D,EAAAxvC,UAAA6hC,KAAA3hC,KAAAmB,MAEAA,KAAA2jG,MAAApmG,EAEAyC,KAAAhM,KAAA,SAAA9B,GACAA,EAAAqL,OAAAyC,KAAA2jG,aAIA//D,IAAA8/D,IACAA,EAAAxxG,EAAA05C,KAGA15C,EAAA05C,IAAA1C,EAAAh3C,EAAA05C,IAAA83D,GACAxxG,EAAA25C,IAAA3C,EAAAh3C,EAAA25C,IAAA63D,GAEAD,EAAAvxG,EAAA05C,IAEA5rC,KAAAuuC,QAAA,OAAAr8C,KAGA8N,KAAA4sC,MAAA,WACA82D,EAAAD,EACAzjG,KAAAuuC,QAAA,SAGAvuC,KAAA4jG,cAAA,WACAF,OAAA,EACAD,OAAA,IAKAt1D,EAAAxvC,UAAA,IAAAsvC,EAEA5uC,EAAAC,SACA6uC,0BACAjF,sCCcA7pC,EAAAC,SACAyqJ,aAhDA,SAAA/hI,UACAA,EAAAqwE,qBACArwE,EAAAswE,qBACAtwE,EAAAuwE,qBACAvwE,EAAAwwE,eA6CAsxD,kCAlCA,SAAA9hI,EAAAywE,GACA,IACAj+F,EAEA69F,EAAArwE,EAAAqwE,cAyBA,OAtBAI,IACAJ,GAAArwE,EAAAkoB,kBAAAtE,KAKApxC,EAAAwtB,EAAAkoB,kBAAA11C,oBAGAA,GAAA69F,EAGA79F,EAAAC,KAAA6+C,IAAA,EAAA9+C,GAEA,UAAAwtB,EAAAzqB,OAIA/C,GADAwtB,EAAAzwB,WAxFA,IA0FAiD,EAAAC,KAAA+oC,MAAAhpC,IAGAA,GAMAqvJ,eA5FA,SAAA7hI,EAAA91B,GACA,iBAAAA,EAAA25C,WACAjI,IAAA5b,EAAAkoB,kBAAArE,MACA7jB,EAAAkoB,kBAAArE,IAAA35C,EAAA25C,UAGAjI,IAAA5b,EAAAuwE,cACAvwE,EAAAuwE,cAAArmG,EAAA25C,IAEA7jB,EAAAuwE,cAAA99F,KAAAwgC,IAAAjT,EAAAuwE,cAAArmG,EAAA25C,UAGAjI,IAAA5b,EAAAwwE,cACAxwE,EAAAwwE,cAAAtmG,EAAA25C,IAEA7jB,EAAAwwE,cAAA/9F,KAAA6+C,IAAAtxB,EAAAwwE,cAAAtmG,EAAA25C,MAIA,iBAAA35C,EAAA05C,WACAhI,IAAA5b,EAAAkoB,kBAAAtE,MACA5jB,EAAAkoB,kBAAAtE,IAAA15C,EAAA05C,UAGAhI,IAAA5b,EAAAqwE,cACArwE,EAAAqwE,cAAAnmG,EAAA05C,IAEA5jB,EAAAqwE,cAAA59F,KAAAwgC,IAAAjT,EAAAqwE,cAAAnmG,EAAA05C,UAGAhI,IAAA5b,EAAAswE,cACAtwE,EAAAswE,cAAApmG,EAAA05C,IAEA5jB,EAAAswE,cAAA79F,KAAA6+C,IAAAtxB,EAAAswE,cAAApmG,EAAA05C","file":"demo.99bd6978.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = +5d+\n// module chunks = 0","import React, { Component } from 'react';\nimport { Pannellum, PannellumVideo }  from '../../../src';\nimport myVideo from \"../images/jfk.mp4\";\nimport myVideo2 from \"../images/video.mp4\";\n\nexport default class componentName extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      mediaVideo : myVideo2,\n      scene: 1\n    };\n  }\n    \n\n    \n    hanldeClick = (path)=>{\n      console.log(path);\n      this.setState({\n        mediaVideo : myVideo,\n        title: \"ooops\",\n        scene: 2\n      });\n    };\n\n    hanldeClickCheck = (path)=>{\n      console.log(path);\n      this.setState({\n        mediaVideo : myVideo2,\n        title: \"oo\",\n        scene: 1\n      });\n    };\n\n    \n    render() {\n      return (\n        <div className=\"video_main\">\n          <h2 className=\"section_title\">Video Component</h2>\n          <div className=\"pannellum_div\" >\n            {this.state.scene === 1 \n              ?\n              ( \n                <PannellumVideo\n                  video={this.state.mediaVideo}\n                  loop\n                  autoplay\n                  width=\"800px\"\n                  height=\"400px\"\n                  pitch={10}\n                  yaw={180}\n                  hfov={120}\n                  minHfov={50}\n                  maxHfov={150}\n                  hotSpotDebug\n                  mouseZoom={false}\n                >\n                  <Pannellum.Hotspot \n                    type=\"custom\"\n                    pitch={31}\n                    yaw={150}\n                    handleClick={(evt , args) => this.hanldeClick(args.name)}\n                    handleClickArg={{ name : \"video2\" }}\n                  />\n\n                  <Pannellum.Hotspot\n                    type=\"info\"\n                    pitch={31}\n                    yaw={-57}\n                    text=\"Info dfsdfs\"\n                    URL=\"https://github.com/farminf\"\n                  />\n\n                </PannellumVideo>\n              )\n              :\n              (\n                <PannellumVideo\n                  video={this.state.mediaVideo}\n                  loop\n                  autoplay\n                  width=\"600px\"\n                  height=\"400px\"\n                  pitch={10}\n                  yaw={180}\n                  hfov={110}\n                  minHfov={90}\n                  maxHfov={120}\n                  hotSpotDebug\n                  mouseZoom={false}\n                >\n                  <Pannellum.Hotspot \n                    type=\"custom\"\n                    pitch={10}\n                    yaw={120}\n                    handleClick={(evt , args) => this.hanldeClickCheck(args.name)}\n                    handleClickArg={{ name : \"video1\" }}\n                  />\n                  <Pannellum.Hotspot\n                    type=\"info\"\n                    pitch={40}\n                    yaw={160}\n                    text=\"Info Hotspot Text 4\"\n                    URL=\"https://github.com/farminf\"\n                  />\n                </PannellumVideo>\n              )}\n            <div className=\"codebox\">\n              <pre>\n                <code data-language=\"xml\">\n                  {`\n    <PannellumVideo\n        video={this.state.mediaVideo}\n        loop\n        autoplay\n        width=\"800px\"\n        height=\"400px\"\n        pitch={10}\n        yaw={180}\n        hfov={120}\n        minHfov={50}\n        maxHfov={150}\n        hotSpotDebug\n        mouseZoom={false}\n    >\n        <Pannellum.Hotspot \n        type=\"custom\"\n        pitch={31}\n        yaw={150}\n        handleClick={(evt , args) => this.hanldeClick(args.name)}\n        handleClickArg={{ name : \"video2\" }}\n        />\n\n        <Pannellum.Hotspot\n        type=\"info\"\n        pitch={31}\n        yaw={-57}\n        text=\"Info dfsdfs\"\n        URL=\"https://github.com/farminf\"\n        />\n\n    </PannellumVideo>\n                `}</code>\n              </pre>\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/VideoDemo.js","// Ensure polyfill compatibility between create-react-app and zero-config nwb apps.\n// This is from https://github.com/facebookincubator/create-react-app/blob/master/config/polyfills.js\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behaviour.\n  require('promise/lib/rejection-tracking').enable()\n  window.Promise = require('promise/lib/es6-extensions.js')\n}\n\n// fetch() polyfill for making API calls\nrequire('whatwg-fetch')\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nwb/polyfills.js\n// module id = +prg\n// module chunks = 0","/** @license React v16.5.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"schedule\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=wa(d);la(b,c,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)xa(a,b,c[e],d[e]);else c&&xa(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ca(a){return Ba(a,!0)}function Da(a){return Ba(a,!1)}\nvar Ea={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Fa(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ga(a,b){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(b?za(a,Ca):za(a,Da),Aa?t(\"95\"):void 0,ha))throw b=ia,ha=!1,ia=null,b;}var Ha=Math.random().toString(36).slice(2),Ia=\"__reactInternalInstance$\"+Ha,Ja=\"__reactEventHandlers$\"+Ha;function Ka(a){if(a[Ia])return a[Ia];for(;!a[Ia];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ia];return 7===a.tag||8===a.tag?a:null}function La(a){a=a[Ia];return!a||7!==a.tag&&8!==a.tag?null:a}\nfunction Ma(a){if(7===a.tag||8===a.tag)return a.stateNode;t(\"33\")}function Na(a){return a[Ja]||null}function Oa(a){do a=a.return;while(a&&7!==a.tag);return a?a:null}function Pa(a,b,c){if(b=Fa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Qa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Oa(b);for(b=c.length;0<b--;)Pa(c[b],\"captured\",a);for(b=0;b<c.length;b++)Pa(c[b],\"bubbled\",a)}}function Ra(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Fa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Ta(a){a&&a.dispatchConfig.registrationName&&Ra(a._targetInst,null,a)}\nfunction Ua(a){za(a,Qa)}var Va=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Wa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ya={animationend:Wa(\"Animation\",\"AnimationEnd\"),animationiteration:Wa(\"Animation\",\"AnimationIteration\"),animationstart:Wa(\"Animation\",\"AnimationStart\"),transitionend:Wa(\"Transition\",\"TransitionEnd\")},Za={},$a={};\nVa&&($a=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ya.animationend.animation,delete Ya.animationiteration.animation,delete Ya.animationstart.animation),\"TransitionEvent\"in window||delete Ya.transitionend.transition);function ab(a){if(Za[a])return Za[a];if(!Ya[a])return a;var b=Ya[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in $a)return Za[a]=b[c];return a}\nvar bb=ab(\"animationend\"),cb=ab(\"animationiteration\"),db=ab(\"animationstart\"),eb=ab(\"transitionend\"),fb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),gb=null,hb=null,ib=null;\nfunction jb(){if(ib)return ib;var a,b=hb,c=b.length,d,e=\"value\"in gb?gb.value:gb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return ib=e.slice(a,1<d?1-d:void 0)}function kb(){return!0}function lb(){return!1}\nfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?kb:lb;this.isPropagationStopped=lb;return this}\nn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=kb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=kb)},persist:function(){this.isPersistent=kb},isPersistent:lb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=lb;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;mb(c);return c};mb(z);function nb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function ob(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction mb(a){a.eventPool=[];a.getPooled=nb;a.release=ob}var pb=z.extend({data:null}),qb=z.extend({data:null}),rb=[9,13,27,32],sb=Va&&\"CompositionEvent\"in window,tb=null;Va&&\"documentMode\"in document&&(tb=document.documentMode);\nvar ub=Va&&\"TextEvent\"in window&&!tb,vb=Va&&(!sb||tb&&8<tb&&11>=tb),wb=String.fromCharCode(32),xb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},yb=!1;\nfunction zb(a,b){switch(a){case \"keyup\":return-1!==rb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Ab(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Bb=!1;function Cb(a,b){switch(a){case \"compositionend\":return Ab(b);case \"keypress\":if(32!==b.which)return null;yb=!0;return wb;case \"textInput\":return a=b.data,a===wb&&yb?null:a;default:return null}}\nfunction Db(a,b){if(Bb)return\"compositionend\"===a||!sb&&zb(a,b)?(a=jb(),ib=hb=gb=null,Bb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return vb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Eb={eventTypes:xb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(sb)b:{switch(a){case \"compositionstart\":e=xb.compositionStart;break b;case \"compositionend\":e=xb.compositionEnd;break b;case \"compositionupdate\":e=xb.compositionUpdate;break b}e=void 0}else Bb?zb(a,c)&&(e=xb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=xb.compositionStart);e?(vb&&\"ko\"!==c.locale&&(Bb||e!==xb.compositionStart?e===xb.compositionEnd&&Bb&&(f=jb()):(gb=d,hb=\"value\"in gb?gb.value:gb.textContent,Bb=\n!0)),e=pb.getPooled(e,b,c,d),f?e.data=f:(f=Ab(c),null!==f&&(e.data=f)),Ua(e),f=e):f=null;(a=ub?Cb(a,c):Db(a,c))?(b=qb.getPooled(xb.beforeInput,b,c,d),b.data=a,Ua(b)):b=null;return null===f?b:null===b?f:[f,b]}},Fb=null,Gb=null,Hb=null;function Ib(a){if(a=va(a)){\"function\"!==typeof Fb?t(\"280\"):void 0;var b=ua(a.stateNode);Fb(a.stateNode,a.type,b)}}function Jb(a){Gb?Hb?Hb.push(a):Hb=[a]:Gb=a}function Kb(){if(Gb){var a=Gb,b=Hb;Hb=Gb=null;Ib(a);if(b)for(a=0;a<b.length;a++)Ib(b[a])}}\nfunction Lb(a,b){return a(b)}function Mb(a,b,c){return a(b,c)}function Nb(){}var Ob=!1;function Pb(a,b){if(Ob)return a(b);Ob=!0;try{return Lb(a,b)}finally{if(Ob=!1,null!==Gb||null!==Hb)Nb(),Kb()}}var Qb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Rb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Qb[a.type]:\"textarea\"===b?!0:!1}\nfunction Sb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Tb(a){if(!Va)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Ub(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Vb(a){var b=Ub(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Wb(a){a._valueTracker||(a._valueTracker=Vb(a))}function Xb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ub(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Yb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Zb=/^(.*)[\\\\\\/]/,C=\"function\"===typeof Symbol&&Symbol.for,$b=C?Symbol.for(\"react.element\"):60103,ac=C?Symbol.for(\"react.portal\"):60106,bc=C?Symbol.for(\"react.fragment\"):60107,cc=C?Symbol.for(\"react.strict_mode\"):60108,dc=C?Symbol.for(\"react.profiler\"):60114,ec=C?Symbol.for(\"react.provider\"):60109,fc=C?Symbol.for(\"react.context\"):60110,gc=C?Symbol.for(\"react.async_mode\"):60111,hc=C?Symbol.for(\"react.forward_ref\"):60112,ic=C?Symbol.for(\"react.placeholder\"):\n60113,jc=\"function\"===typeof Symbol&&Symbol.iterator;function kc(a){if(null===a||\"object\"!==typeof a)return null;a=jc&&a[jc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction lc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case gc:return\"AsyncMode\";case bc:return\"Fragment\";case ac:return\"Portal\";case dc:return\"Profiler\";case cc:return\"StrictMode\";case ic:return\"Placeholder\"}if(\"object\"===typeof a){switch(a.$$typeof){case fc:return\"Context.Consumer\";case ec:return\"Context.Provider\";case hc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\")}if(\"function\"===typeof a.then&&(a=1===a._reactStatus?a._reactResult:null))return lc(a)}return null}function mc(a){var b=\"\";do{a:switch(a.tag){case 4:case 0:case 1:case 2:case 3:case 7:case 10:var c=a._debugOwner,d=a._debugSource,e=lc(a.type);var f=null;c&&(f=lc(c.type));c=e;e=\"\";d?e=\" (at \"+d.fileName.replace(Zb,\"\")+\":\"+d.lineNumber+\")\":f&&(e=\" (created by \"+f+\")\");f=\"\\n    in \"+(c||\"Unknown\")+e;break a;default:f=\"\"}b+=f;a=a.return}while(a);return b}\nvar nc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(nc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function D(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var E={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){E[a]=new D(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];E[b]=new D(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){E[a]=new D(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){E[a]=new D(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){E[a]=new D(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){E[a]=new D(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){E[a]=new D(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){E[a]=new D(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){E[a]=new D(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nwc);E[b]=new D(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});E.tabIndex=new D(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction xc(a,b,c,d){var e=E.hasOwnProperty(b)?E[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Bc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\nfunction Dc(a,b){Cc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Ec(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Ec(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Fc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Ec(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Gc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Hc(a,b,c){a=z.getPooled(Gc.change,a,b,c);a.type=\"change\";Jb(c);Ua(a);return a}var Ic=null,Jc=null;function Kc(a){Ga(a,!1)}\nfunction Lc(a){var b=Ma(a);if(Xb(b))return a}function Mc(a,b){if(\"change\"===a)return b}var Nc=!1;Va&&(Nc=Tb(\"input\")&&(!document.documentMode||9<document.documentMode));function Oc(){Ic&&(Ic.detachEvent(\"onpropertychange\",Pc),Jc=Ic=null)}function Pc(a){\"value\"===a.propertyName&&Lc(Jc)&&(a=Hc(Jc,a,Sb(a)),Pb(Kc,a))}function Qc(a,b,c){\"focus\"===a?(Oc(),Ic=b,Jc=c,Ic.attachEvent(\"onpropertychange\",Pc)):\"blur\"===a&&Oc()}function Rc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Lc(Jc)}\nfunction Sc(a,b){if(\"click\"===a)return Lc(b)}function Tc(a,b){if(\"input\"===a||\"change\"===a)return Lc(b)}\nvar Uc={eventTypes:Gc,_isInputEventSupported:Nc,extractEvents:function(a,b,c,d){var e=b?Ma(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Mc:Rb(e)?Nc?f=Tc:(f=Rc,g=Qc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Sc);if(f&&(f=f(a,b)))return Hc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Ec(e,\"number\",e.value)}},Vc=z.extend({view:null,detail:null}),Wc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Xc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Wc[a])?!!b[a]:!1}function Yc(){return Xc}\nvar Zc=0,$c=0,ad=!1,bd=!1,cd=Vc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Zc;Zc=a.screenX;return ad?\"mousemove\"===a.type?a.screenX-b:0:(ad=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=$c;$c=a.screenY;return bd?\"mousemove\"===a.type?a.screenY-b:0:(bd=!0,0)}}),dd=cd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),ed={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},fd={eventTypes:ed,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ka(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=cd,h=ed.mouseLeave,k=ed.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=dd,h=ed.pointerLeave,k=ed.pointerEnter,l=\"pointer\";var m=null==f?e:Ma(f);e=null==b?e:Ma(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Oa(g))l++;g=0;for(k=e;k;k=Oa(k))g++;for(;0<l-g;)b=Oa(b),l--;for(;0<g-l;)e=Oa(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Oa(b);e=Oa(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Oa(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Oa(d)}for(d=0;d<b.length;d++)Ra(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Ra(f[d],\"captured\",c);return[a,c]}},gd=Object.prototype.hasOwnProperty;function hd(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction id(a,b){if(hd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!gd.call(b,c[d])||!hd(a[c[d]],b[c[d]]))return!1;return!0}function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 5===b.tag?2:3}function kd(a){2!==jd(a)?t(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}5!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(7===b.tag||8===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar nd=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),od=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),pd=Vc.extend({relatedTarget:null});function qd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar rd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},sd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},td=Vc.extend({key:function(a){if(a.key){var b=rd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=qd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?sd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yc,charCode:function(a){return\"keypress\"===\na.type?qd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?qd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),ud=cd.extend({dataTransfer:null}),vd=Vc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yc}),wd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),xd=cd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),yd=[[\"abort\",\"abort\"],[bb,\"animationEnd\"],[cb,\"animationIteration\"],[db,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[eb,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],zd={},Ad={};function Bd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};zd[a]=b;Ad[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Bd(a,!0)});yd.forEach(function(a){Bd(a,!1)});\nvar Cd={eventTypes:zd,isInteractiveTopLevelEventType:function(a){a=Ad[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Ad[a];if(!e)return null;switch(a){case \"keypress\":if(0===qd(c))return null;case \"keydown\":case \"keyup\":a=td;break;case \"blur\":case \"focus\":a=pd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=cd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nud;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=vd;break;case bb:case cb:case db:a=nd;break;case eb:a=wd;break;case \"scroll\":a=Vc;break;case \"wheel\":a=xd;break;case \"copy\":case \"cut\":case \"paste\":a=od;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=dd;break;default:a=z}b=a.getPooled(e,b,c,d);Ua(b);return b}},Dd=Cd.isInteractiveTopLevelEventType,\nEd=[];function Fd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=5!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ka(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Sb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ga(g,!1)}}var Gd=!0;\nfunction F(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!1)}function Jd(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!0)}function Hd(a,b){Mb(Id,a,b)}\nfunction Id(a,b){if(Gd){var c=Sb(b);c=Ka(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Ed.length){var d=Ed.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Pb(Fd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Ed.length&&Ed.push(a)}}}var Kd={},Ld=0,Md=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Nd(a){Object.prototype.hasOwnProperty.call(a,Md)||(a[Md]=Ld++,Kd[a[Md]]={});return Kd[a[Md]]}function Od(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Od();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Od(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Va&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Od(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&id(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ua(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Nd(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ma(b):window;switch(a){case \"focus\":if(Rb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ea.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=Na;va=La;wa=Ma;Ea.injectEventPluginsByName({SimpleEventPlugin:Cd,EnterLeaveEventPlugin:fd,ChangeEventPlugin:Uc,SelectEventPlugin:be,BeforeInputEventPlugin:Eb});function ce(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction de(a,b){a=n({children:void 0},b);if(b=ce(b.children))a.children=b;return a}function ee(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction fe(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ge(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\nfunction he(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ie(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var je={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ke(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function le(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ke(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar me=void 0,ne=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==je.svg||\"innerHTML\"in a)a.innerHTML=b;else{me=me||document.createElement(\"div\");me.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=me.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction oe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qe=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pe).forEach(function(a){qe.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pe[b]=pe[a]})});\nfunction re(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||pe.hasOwnProperty(e)&&pe[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var se=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction te(a,b){b&&(se[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction ue(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction ve(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Nd(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Jd(\"scroll\",a);break;case \"focus\":case \"blur\":Jd(\"focus\",a);Jd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Tb(e)&&Jd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===fb.indexOf(e)&&F(e,a)}c[e]=!0}}}function we(){}var xe=null,ye=null;\nfunction ze(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ae(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}function Be(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}\nfunction Ce(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var De=[],Ee=-1;function G(a){0>Ee||(a.current=De[Ee],De[Ee]=null,Ee--)}function H(a,b){Ee++;De[Ee]=a.current;a.current=b}var Fe={},I={current:Fe},J={current:!1},Ge=Fe;\nfunction He(a,b){var c=a.type.contextTypes;if(!c)return Fe;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function K(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ie(a){G(J,a);G(I,a)}function Je(a){G(J,a);G(I,a)}\nfunction Ke(a,b,c){I.current!==Fe?t(\"168\"):void 0;H(I,b,a);H(J,c,a)}function Le(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",lc(b)||\"Unknown\",e);return n({},c,d)}function Me(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Fe;Ge=I.current;H(I,b,a);H(J,J.current,a);return!0}\nfunction Ne(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Le(a,b,Ge),d.__reactInternalMemoizedMergedChildContext=b,G(J,a),G(I,a),H(I,b,a)):G(J,a);H(J,c,a)}var Oe=null,Pe=null;function Qe(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Re(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Oe=Qe(function(a){return b.onCommitFiberRoot(c,a)});Pe=Qe(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Se(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Te(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Ue(a,b,c){var d=a.alternate;null===d?(d=new Se(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.childExpirationTime=a.childExpirationTime;d.expirationTime=b!==a.pendingProps?c:a.expirationTime;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.firstContextDependency=a.firstContextDependency;d.sibling=a.sibling;\nd.index=a.index;d.ref=a.ref;return d}\nfunction Ve(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=Te(d)?2:4;else if(\"string\"===typeof d)f=7;else a:switch(d){case bc:return We(a.children,b,c,e);case gc:f=10;b|=3;break;case cc:f=10;b|=2;break;case dc:return d=new Se(15,a,e,b|4),d.type=dc,d.expirationTime=c,d;case ic:f=16;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case ec:f=12;break a;case fc:f=11;break a;case hc:f=13;break a;default:if(\"function\"===typeof d.then){f=4;break a}}t(\"130\",\nnull==d?d:typeof d,\"\")}b=new Se(f,a,e,b);b.type=d;b.expirationTime=c;return b}function We(a,b,c,d){a=new Se(9,a,d,b);a.expirationTime=c;return a}function Xe(a,b,c){a=new Se(8,a,null,b);a.expirationTime=c;return a}function Ye(a,b,c){b=new Se(6,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ze(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c>b?a.earliestPendingTime=b:a.latestPendingTime<b&&(a.latestPendingTime=b);$e(b,a)}function $e(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d>a)&&(e=d);a=e;0!==a&&0!==c&&c<a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var af=!1;\nfunction bf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function cf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction df(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ef(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction ff(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bf(a.memoizedState),e=c.updateQueue=bf(c.memoizedState)):d=a.updateQueue=cf(e):null===e&&(e=c.updateQueue=cf(d));null===e||d===e?ef(d,b):null===d.lastUpdate||null===e.lastUpdate?(ef(d,b),ef(e,b)):(ef(d,b),e.lastUpdate=b)}\nfunction gf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bf(a.memoizedState):hf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function hf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=cf(b));return b}\nfunction jf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:af=!0}return d}\nfunction kf(a,b,c,d,e){af=!1;b=hf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;if(m>e){if(null===g&&(g=k,f=l),0===h||h>m)h=m}else l=jf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;if(r>e){if(null===m&&(m=k,null===g&&(f=l)),0===h||h>r)h=r}else l=jf(a,b,k,l,c,d),\nnull!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction lf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);mf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;mf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function mf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction nf(a,b){return{value:a,source:b,stack:mc(b)}}var of={current:null},pf=null,qf=null,rf=null;function sf(a,b){var c=a.type._context;H(of,c._currentValue,a);c._currentValue=b}function tf(a){var b=of.current;G(of,a);a.type._context._currentValue=b}function uf(a){pf=a;rf=qf=null;a.firstContextDependency=null}\nfunction vf(a,b){if(rf!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)rf=a,b=1073741823;b={context:a,observedBits:b,next:null};null===qf?(null===pf?t(\"277\"):void 0,pf.firstContextDependency=qf=b):qf=qf.next=b}return a._currentValue}var wf={},L={current:wf},xf={current:wf},yf={current:wf};function zf(a){a===wf?t(\"174\"):void 0;return a}\nfunction Af(a,b){H(yf,b,a);H(xf,a,a);H(L,wf,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:le(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=le(b,c)}G(L,a);H(L,b,a)}function Bf(a){G(L,a);G(xf,a);G(yf,a)}function Cf(a){zf(yf.current);var b=zf(L.current);var c=le(b,a.type);b!==c&&(H(xf,a,a),H(L,c,a))}function Df(a){xf.current===a&&(G(L,a),G(xf,a))}var Ef=(new aa.Component).refs;\nfunction Ff(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Jf={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);ff(a,d);If(a,c)}};function Kf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!id(c,d)||!id(e,f):!0}function Lf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jf.enqueueReplaceState(b,b.state,null)}\nfunction Mf(a,b,c,d){var e=a.stateNode,f=K(b)?Ge:I.current;e.props=c;e.state=a.memoizedState;e.refs=Ef;e.context=He(a,f);f=a.updateQueue;null!==f&&(kf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Ff(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&\ne.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(kf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Nf=Array.isArray;\nfunction Of(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag&&3!==c.tag?t(\"110\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Ef&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"254\",a)}return a}\nfunction Pf(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Qf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Ue(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||8!==b.tag)return b=Xe(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Of(a,b,c),d.return=a,d;d=Ve(c,a.mode,d);d.ref=Of(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||6!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nYe(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||9!==b.tag)return b=We(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Xe(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case $b:return c=Ve(b,a.mode,c),c.ref=Of(a,null,b),c.return=a,c;case ac:return b=Ye(b,a.mode,c),b.return=a,b}if(Nf(b)||kc(b))return b=We(b,a.mode,c,null),b.return=\na,b;Pf(a,b)}return null}function A(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case $b:return c.key===e?c.type===bc?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case ac:return c.key===e?l(a,b,c,d):null}if(Nf(c)||kc(c))return null!==e?null:m(a,b,c,d,null);Pf(a,c)}return null}function S(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case $b:return a=a.get(null===d.key?c:d.key)||null,d.type===bc?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case ac:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Nf(d)||kc(d))return a=a.get(c)||null,m(b,a,d,e,null);Pf(b,d)}return null}function B(e,g,h,k){for(var l=null,m=null,p=g,u=g=0,q=null;null!==p&&u<h.length;u++){p.index>u?(q=p,p=null):q=p.sibling;var v=A(e,p,h[u],k);if(null===v){null===p&&(p=q);break}a&&p&&null===v.alternate&&b(e,\np);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;p=q}if(u===h.length)return c(e,p),l;if(null===p){for(;u<h.length;u++)if(p=r(e,h[u],k))g=f(p,g,u),null===m?l=p:m.sibling=p,m=p;return l}for(p=d(e,p);u<h.length;u++)if(q=S(p,e,u,h[u],k))a&&null!==q.alternate&&p.delete(null===q.key?u:q.key),g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;a&&p.forEach(function(a){return b(e,a)});return l}function P(e,g,h,k){var l=kc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;for(var m=l=null,p=g,u=g=\n0,q=null,v=h.next();null!==p&&!v.done;u++,v=h.next()){p.index>u?(q=p,p=null):q=p.sibling;var x=A(e,p,v.value,k);if(null===x){p||(p=q);break}a&&p&&null===x.alternate&&b(e,p);g=f(x,g,u);null===m?l=x:m.sibling=x;m=x;p=q}if(v.done)return c(e,p),l;if(null===p){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(p=d(e,p);!v.done;u++,v=h.next())v=S(p,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&p.delete(null===v.key?u:v.key),g=f(v,g,u),null===\nm?l=v:m.sibling=v,m=v);a&&p.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===bc&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case $b:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(9===k.tag?f.type===bc:k.type===f.type){c(a,k.sibling);d=e(k,f.type===bc?f.props.children:f.props,h);d.ref=Of(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===bc?(d=We(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Ve(f,a.mode,h),h.ref=Of(a,d,f),h.return=a,a=h)}return g(a);case ac:a:{for(k=f.key;null!==d;){if(d.key===k)if(6===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Ye(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&8===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Xe(f,a.mode,h),d.return=a,a=d),g(a);if(Nf(f))return B(a,d,f,h);if(kc(f))return P(a,d,f,h);l&&Pf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 3:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Rf=Qf(!0),Sf=Qf(!1),Tf=null,Uf=null,Vf=!1;function Wf(a,b){var c=new Se(7,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Xf(a,b){switch(a.tag){case 7:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 8:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Yf(a){if(Vf){var b=Uf;if(b){var c=b;if(!Xf(a,b)){b=Be(c);if(!b||!Xf(a,b)){a.effectTag|=2;Vf=!1;Tf=a;return}Wf(Tf,c)}Tf=a;Uf=Ce(b)}else a.effectTag|=2,Vf=!1,Tf=a}}\nfunction Zf(a){for(a=a.return;null!==a&&7!==a.tag&&5!==a.tag;)a=a.return;Tf=a}function $f(a){if(a!==Tf)return!1;if(!Vf)return Zf(a),Vf=!0,!1;var b=a.type;if(7!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ae(b,a.memoizedProps))for(b=Uf;b;)Wf(a,b),b=Be(b);Zf(a);Uf=Tf?Be(a.stateNode):null;return!0}function ag(){Uf=Tf=null;Vf=!1}\nfunction bg(a){switch(a._reactStatus){case 1:return a._reactResult;case 2:throw a._reactResult;case 0:throw a;default:throw a._reactStatus=0,a.then(function(b){if(0===a._reactStatus){a._reactStatus=1;if(\"object\"===typeof b&&null!==b){var c=b.default;b=void 0!==c&&null!==c?c:b}a._reactResult=b}},function(b){0===a._reactStatus&&(a._reactStatus=2,a._reactResult=b)}),a;}}var cg=Yb.ReactCurrentOwner;function M(a,b,c,d){b.child=null===a?Sf(b,null,c,d):Rf(b,a.child,c,d)}\nfunction dg(a,b,c,d,e){c=c.render;var f=b.ref;if(!J.current&&b.memoizedProps===d&&f===(null!==a?a.ref:null))return eg(a,b,e);c=c(d,f);M(a,b,c,e);b.memoizedProps=d;return b.child}function fg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function gg(a,b,c,d,e){var f=K(c)?Ge:I.current;f=He(b,f);uf(b,e);c=c(d,f);b.effectTag|=1;M(a,b,c,e);b.memoizedProps=d;return b.child}\nfunction hg(a,b,c,d,e){if(K(c)){var f=!0;Me(b)}else f=!1;uf(b,e);if(null===a)if(null===b.stateNode){var g=K(c)?Ge:I.current,h=c.contextTypes,k=null!==h&&void 0!==h;h=k?He(b,g):Fe;var l=new c(d,h);b.memoizedState=null!==l.state&&void 0!==l.state?l.state:null;l.updater=Jf;b.stateNode=l;l._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=g,k.__reactInternalMemoizedMaskedChildContext=h);Mf(b,c,d,e);d=!0}else{g=b.stateNode;h=b.memoizedProps;g.props=h;var m=g.context;\nk=K(c)?Ge:I.current;k=He(b,k);var r=c.getDerivedStateFromProps;(l=\"function\"===typeof r||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k);af=!1;var A=b.memoizedState;m=g.state=A;var S=b.updateQueue;null!==S&&(kf(b,S,d,g,e),m=b.memoizedState);h!==d||A!==m||J.current||af?(\"function\"===typeof r&&(Ff(b,c,r,d),m=b.memoizedState),(h=af||Kf(b,c,h,d,A,m,k))?(l||\"function\"!==\ntypeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=m),g.props=d,g.state=m,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=\nb.memoizedProps,g.props=h,m=g.context,k=K(c)?Ge:I.current,k=He(b,k),r=c.getDerivedStateFromProps,(l=\"function\"===typeof r||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k),af=!1,m=b.memoizedState,A=g.state=m,S=b.updateQueue,null!==S&&(kf(b,S,d,g,e),A=b.memoizedState),h!==d||m!==A||J.current||af?(\"function\"===typeof r&&(Ff(b,c,r,d),A=b.memoizedState),(r=af||Kf(b,c,h,d,\nm,A,k))?(l||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,A,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,A,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),\"function\"!==\ntypeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=A),g.props=d,g.state=A,g.context=k,d=r):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),d=!1);return ig(a,b,c,d,f,e)}\nfunction ig(a,b,c,d,e,f){fg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Ne(b,c,!1),eg(a,b,f);d=b.stateNode;cg.current=b;var h=g?null:d.render();b.effectTag|=1;null!==a&&g&&(M(a,b,null,f),b.child=null);M(a,b,h,f);b.memoizedState=d.state;b.memoizedProps=d.props;e&&Ne(b,c,!0);return b.child}function jg(a){var b=a.stateNode;b.pendingContext?Ke(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ke(a,b.context,!1);Af(a,b.containerInfo)}\nfunction ng(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction og(a,b,c,d){null!==a?t(\"155\"):void 0;var e=b.pendingProps;if(\"object\"===typeof c&&null!==c&&\"function\"===typeof c.then){c=bg(c);var f=c;f=\"function\"===typeof f?Te(f)?3:1:void 0!==f&&null!==f&&f.$$typeof?14:4;f=b.tag=f;var g=ng(c,e);switch(f){case 1:return gg(a,b,c,g,d);case 3:return hg(a,b,c,g,d);case 14:return dg(a,b,c,g,d);default:t(\"283\",c)}}f=He(b,I.current);uf(b,d);f=c(e,f);b.effectTag|=1;if(\"object\"===typeof f&&null!==f&&\"function\"===typeof f.render&&void 0===f.$$typeof){b.tag=2;K(c)?\n(g=!0,Me(b)):g=!1;b.memoizedState=null!==f.state&&void 0!==f.state?f.state:null;var h=c.getDerivedStateFromProps;\"function\"===typeof h&&Ff(b,c,h,e);f.updater=Jf;b.stateNode=f;f._reactInternalFiber=b;Mf(b,c,e,d);return ig(a,b,c,!0,g,d)}b.tag=0;M(a,b,f,d);b.memoizedProps=e;return b.child}\nfunction eg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);var d=b.childExpirationTime;if(0===d||d>c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=Ue(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ue(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction pg(a,b,c){var d=b.expirationTime;if(!J.current&&(0===d||d>c)){switch(b.tag){case 5:jg(b);ag();break;case 7:Cf(b);break;case 2:K(b.type)&&Me(b);break;case 3:K(b.type._reactResult)&&Me(b);break;case 6:Af(b,b.stateNode.containerInfo);break;case 12:sf(b,b.memoizedProps.value)}return eg(a,b,c)}b.expirationTime=0;switch(b.tag){case 4:return og(a,b,b.type,c);case 0:return gg(a,b,b.type,b.pendingProps,c);case 1:var e=b.type._reactResult;d=b.pendingProps;a=gg(a,b,e,ng(e,d),c);b.memoizedProps=d;return a;\ncase 2:return hg(a,b,b.type,b.pendingProps,c);case 3:return e=b.type._reactResult,d=b.pendingProps,a=hg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 5:jg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;kf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)ag(),b=eg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)Uf=Ce(b.stateNode.containerInfo),Tf=b,e=Vf=!0;e?(b.effectTag|=2,b.child=Sf(b,null,d,c)):(M(a,b,d,c),ag());b=b.child}return b;\ncase 7:Cf(b);null===a&&Yf(b);d=b.type;e=b.pendingProps;var f=null!==a?a.memoizedProps:null,g=e.children;Ae(d,e)?g=null:null!==f&&Ae(d,f)&&(b.effectTag|=16);fg(a,b);1073741823!==c&&b.mode&1&&e.hidden?(b.expirationTime=1073741823,b.memoizedProps=e,b=null):(M(a,b,g,c),b.memoizedProps=e,b=b.child);return b;case 8:return null===a&&Yf(b),b.memoizedProps=b.pendingProps,null;case 16:return null;case 6:return Af(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Rf(b,null,d,c):M(a,b,d,c),b.memoizedProps=\nd,b.child;case 13:return dg(a,b,b.type,b.pendingProps,c);case 14:return e=b.type._reactResult,d=b.pendingProps,a=dg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 9:return d=b.pendingProps,M(a,b,d,c),b.memoizedProps=d,b.child;case 10:return d=b.pendingProps.children,M(a,b,d,c),b.memoizedProps=d,b.child;case 15:return d=b.pendingProps,M(a,b,d.children,c),b.memoizedProps=d,b.child;case 12:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;b.memoizedProps=e;sf(b,f);if(null!==g){var h=g.value;\nf=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!J.current){b=eg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(2===g.tag||3===g.tag){var k=df(c);k.tag=2;ff(g,k)}if(0===g.expirationTime||g.expirationTime>c)g.expirationTime=c;k=g.alternate;null!==k&&(0===k.expirationTime||\nk.expirationTime>c)&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(0===l.childExpirationTime||l.childExpirationTime>c)l.childExpirationTime=c,null!==k&&(0===k.childExpirationTime||k.childExpirationTime>c)&&(k.childExpirationTime=c);else if(null!==k&&(0===k.childExpirationTime||k.childExpirationTime>c))k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=12===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==\nk;){if(k===b){k=null;break}g=k.sibling;if(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}M(a,b,e.children,c);b=b.child}return b;case 11:return f=b.type,d=b.pendingProps,e=d.children,uf(b,c),f=vf(f,d.unstable_observedBits),e=e(f),b.effectTag|=1,M(a,b,e,c),b.memoizedProps=d,b.child;default:t(\"156\")}}function qg(a){a.effectTag|=4}var rg=void 0,sg=void 0,tg=void 0;rg=function(){};\nsg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;zf(L.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=de(g,f);d=de(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=fe(g,f);d=fe(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=we)}te(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&ve(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&qg(b)}};tg=function(a,b,c,d){c!==d&&qg(b)};\nfunction ug(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=mc(c));null!==c&&lc(c.type);b=b.value;null!==a&&2===a.tag&&lc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function vg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){wg(a,c)}else b.current=null}\nfunction xg(a){\"function\"===typeof Pe&&Pe(a);switch(a.tag){case 2:case 3:vg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){wg(a,c)}break;case 7:vg(a);break;case 6:yg(a)}}function zg(a){return 7===a.tag||5===a.tag||6===a.tag}\nfunction Ag(a){a:{for(var b=a.return;null!==b;){if(zg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 7:b=c.stateNode;d=!1;break;case 5:b=c.stateNode.containerInfo;d=!0;break;case 6:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(oe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||zg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;7!==c.tag&&8!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||6===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(7===e.tag||8===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?(h=f.parentNode,h.insertBefore(g,f)):(h=f,h.appendChild(g)),null===h.onclick&&(h.onclick=we)):b.appendChild(e.stateNode);else if(6!==e.tag&&null!==e.child){e.child.return=\ne;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction yg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 7:d=c.stateNode;e=!1;break a;case 5:d=c.stateNode.containerInfo;e=!0;break a;case 6:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(7===b.tag||8===b.tag){a:for(var f=b,g=f;;)if(xg(g),null!==g.child&&6!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(6===b.tag?(d=b.stateNode.containerInfo,e=!0):xg(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;6===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Bg(a,b){switch(b.tag){case 2:case 3:break;case 7:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Ja]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cc(c,d);ue(a,e);b=ue(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?re(c,h):\"dangerouslySetInnerHTML\"===g?ne(c,h):\"children\"===g?oe(c,h):xc(c,g,h,b)}switch(a){case \"input\":Dc(c,d);break;case \"textarea\":he(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,\nc._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?ee(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?ee(c,!!d.multiple,d.defaultValue,!0):ee(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 8:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 5:break;case 15:break;case 16:break;default:t(\"163\")}}function Cg(a,b,c){c=df(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Dg(d);ug(a,b)};return c}\nfunction Eg(a,b,c){c=df(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===Fg?Fg=new Set([this]):Fg.add(this);var c=b.value,d=b.stack;ug(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction Gg(a){switch(a.tag){case 2:K(a.type)&&Ie(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return K(a.type._reactResult)&&Ie(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return Bf(a),Je(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-1025|64,a;case 7:return Df(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 6:return Bf(a),null;case 12:return tf(a),null;default:return null}}\nvar Hg={readContext:vf},Ig=Yb.ReactCurrentOwner,Jg=0,Kg=0,Lg=!1,N=null,Mg=null,O=0,Ng=!1,Q=null,Og=!1,Fg=null;function Pg(){if(null!==N)for(var a=N.return;null!==a;){var b=a;switch(b.tag){case 2:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ie(b);break;case 3:c=b.type._reactResult.childContextTypes;null!==c&&void 0!==c&&Ie(b);break;case 5:Bf(b);Je(b);break;case 7:Df(b);break;case 6:Bf(b);break;case 12:tf(b)}a=a.return}Mg=null;O=0;Ng=!1;N=null}\nfunction Qg(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){var e=b;b=a;var f=b.pendingProps;switch(b.tag){case 0:case 1:break;case 2:K(b.type)&&Ie(b);break;case 3:K(b.type._reactResult)&&Ie(b);break;case 5:Bf(b);Je(b);f=b.stateNode;f.pendingContext&&(f.context=f.pendingContext,f.pendingContext=null);if(null===e||null===e.child)$f(b),b.effectTag&=-3;rg(b);break;case 7:Df(b);var g=zf(yf.current),h=b.type;if(null!==e&&null!=b.stateNode)sg(e,b,h,f,g),e.ref!==b.ref&&(b.effectTag|=\n128);else if(f){var k=zf(L.current);if($f(b)){f=b;e=f.stateNode;var l=f.type,m=f.memoizedProps,r=g;e[Ia]=f;e[Ja]=m;h=void 0;g=l;switch(g){case \"iframe\":case \"object\":F(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<fb.length;l++)F(fb[l],e);break;case \"source\":F(\"error\",e);break;case \"img\":case \"image\":case \"link\":F(\"error\",e);F(\"load\",e);break;case \"form\":F(\"reset\",e);F(\"submit\",e);break;case \"details\":F(\"toggle\",e);break;case \"input\":Bc(e,m);F(\"invalid\",e);ve(r,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};F(\"invalid\",e);ve(r,\"onChange\");break;case \"textarea\":ge(e,m),F(\"invalid\",e),ve(r,\"onChange\")}te(g,m);l=null;for(h in m)m.hasOwnProperty(h)&&(k=m[h],\"children\"===h?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(h)&&null!=k&&ve(r,h));switch(g){case \"input\":Wb(e);Fc(e,m,!0);break;case \"textarea\":Wb(e);ie(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=we)}h=l;f.updateQueue=h;f=null!==h?!0:!1;f&&qg(b)}else{m=b;e=h;r=f;l=9===g.nodeType?g:g.ownerDocument;k===je.html&&(k=ke(e));k===je.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ia]=m;e[Ja]=f;a:for(m=e,r=b,l=r.child;null!==l;){if(7===l.tag||8===l.tag)m.appendChild(l.stateNode);\nelse if(6!==l.tag&&null!==l.child){l.child.return=l;l=l.child;continue}if(l===r)break;for(;null===l.sibling;){if(null===l.return||l.return===r)break a;l=l.return}l.sibling.return=l.return;l=l.sibling}r=e;l=h;m=f;var A=g,S=ue(l,m);switch(l){case \"iframe\":case \"object\":F(\"load\",r);g=m;break;case \"video\":case \"audio\":for(g=0;g<fb.length;g++)F(fb[g],r);g=m;break;case \"source\":F(\"error\",r);g=m;break;case \"img\":case \"image\":case \"link\":F(\"error\",r);F(\"load\",r);g=m;break;case \"form\":F(\"reset\",r);F(\"submit\",\nr);g=m;break;case \"details\":F(\"toggle\",r);g=m;break;case \"input\":Bc(r,m);g=zc(r,m);F(\"invalid\",r);ve(A,\"onChange\");break;case \"option\":g=de(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};g=n({},m,{value:void 0});F(\"invalid\",r);ve(A,\"onChange\");break;case \"textarea\":ge(r,m);g=fe(r,m);F(\"invalid\",r);ve(A,\"onChange\");break;default:g=m}te(l,g);k=void 0;var B=l,P=r,v=g;for(k in v)if(v.hasOwnProperty(k)){var p=v[k];\"style\"===k?re(P,p):\"dangerouslySetInnerHTML\"===k?(p=p?p.__html:void 0,\nnull!=p&&ne(P,p)):\"children\"===k?\"string\"===typeof p?(\"textarea\"!==B||\"\"!==p)&&oe(P,p):\"number\"===typeof p&&oe(P,\"\"+p):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=p&&ve(A,k):null!=p&&xc(P,k,p,S))}switch(l){case \"input\":Wb(r);Fc(r,m,!1);break;case \"textarea\":Wb(r);ie(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":g=r;g.multiple=!!m.multiple;r=m.value;null!=r?ee(g,!!m.multiple,\nr,!1):null!=m.defaultValue&&ee(g,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof g.onClick&&(r.onclick=we)}(f=ze(h,f))&&qg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 8:e&&null!=b.stateNode?tg(e,b,e.memoizedProps,f):(\"string\"!==typeof f&&(null===b.stateNode?t(\"166\"):void 0),e=zf(yf.current),zf(L.current),$f(b)?(f=b,h=f.stateNode,e=f.memoizedProps,h[Ia]=f,(f=h.nodeValue!==e)&&qg(b)):(h=b,f=(9===e.nodeType?e:e.ownerDocument).createTextNode(f),\nf[Ia]=h,b.stateNode=f));break;case 13:case 14:break;case 16:break;case 9:break;case 10:break;case 15:break;case 6:Bf(b);rg(b);break;case 12:tf(b);break;case 11:break;case 4:t(\"167\");default:t(\"156\")}b=N=null;f=a;if(1073741823===O||1073741823!==f.childExpirationTime){h=0;for(e=f.child;null!==e;){g=e.expirationTime;m=e.childExpirationTime;if(0===h||0!==g&&g<h)h=g;if(0===h||0!==m&&m<h)h=m;e=e.sibling}f.childExpirationTime=h}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gg(a,O);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512)}if(null!==d)return d;if(null!==c)a=c;else break}return null}function Rg(a){var b=pg(a.alternate,a,O);null===b&&(b=Qg(a));Ig.current=null;return b}\nfunction Sg(a,b,c){Lg?t(\"243\"):void 0;Lg=!0;Ig.currentDispatcher=Hg;var d=a.nextExpirationTimeToWorkOn;if(d!==O||a!==Mg||null===N)Pg(),Mg=a,O=d,N=Ue(Mg.current,null,O),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==N&&!Tg();)N=Rg(N);else for(;null!==N;)N=Rg(N)}catch(r){if(null===N)e=!0,Dg(r);else{null===N?t(\"271\"):void 0;var f=N,g=f.return;if(null===g)e=!0,Dg(r);else{a:{var h=g,k=f,l=r;g=O;k.effectTag|=512;k.firstEffect=k.lastEffect=null;Ng=!0;l=nf(l,k);do{switch(h.tag){case 5:h.effectTag|=\n1024;h.expirationTime=g;g=Cg(h,l,g);gf(h,g);break a;case 2:case 3:k=l;var m=h.stateNode;if(0===(h.effectTag&64)&&null!==m&&\"function\"===typeof m.componentDidCatch&&(null===Fg||!Fg.has(m))){h.effectTag|=1024;h.expirationTime=g;g=Eg(h,k,g);gf(h,g);break a}}h=h.return}while(null!==h)}N=Qg(f);continue}}}break}while(1);Lg=!1;rf=qf=pf=Ig.currentDispatcher=null;if(e)Mg=null,a.finishedWork=null;else if(null!==N)a.finishedWork=null;else{b=a.current.alternate;null===b?t(\"281\"):void 0;Mg=null;if(Ng){e=a.latestPendingTime;\nf=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e>d||0!==f&&f>d||0!==g&&g>d){a.didError=!1;c=a.latestPingedTime;0!==c&&c<=d&&(a.latestPingedTime=0);c=a.earliestPendingTime;b=a.latestPendingTime;c===d?a.earliestPendingTime=b===d?a.latestPendingTime=0:b:b===d&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;b=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=d:c>d?a.earliestSuspendedTime=d:b<d&&(a.latestSuspendedTime=d);$e(d,a);a.expirationTime=a.expirationTime;return}if(!a.didError&&\n!c){a.didError=!0;a.nextExpirationTimeToWorkOn=d;d=a.expirationTime=1;a.expirationTime=d;return}}a.pendingCommitExpirationTime=d;a.finishedWork=b}}\nfunction wg(a,b){var c;a:{Lg&&!Og?t(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:case 3:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===Fg||!Fg.has(d))){a=nf(b,a);a=Eg(c,a,1);ff(c,a);If(c,1);c=void 0;break a}break;case 5:a=nf(b,a);a=Cg(c,a,1);ff(c,a);If(c,1);c=void 0;break a}c=c.return}5===a.tag&&(c=nf(b,a),c=Cg(a,c,1),ff(a,c),If(a,1));c=void 0}return c}\nfunction Hf(a,b){0!==Kg?a=Kg:Lg?a=Og?1:O:b.mode&1?(a=Ug?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1),null!==Mg&&a===O&&(a+=1)):a=1;Ug&&(0===Vg||a>Vg)&&(Vg=a);return a}\nfunction If(a,b){a:{if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;var c=a.alternate;null!==c&&(0===c.expirationTime||c.expirationTime>b)&&(c.expirationTime=b);var d=a.return;if(null===d&&5===a.tag)a=a.stateNode;else{for(;null!==d;){c=d.alternate;if(0===d.childExpirationTime||d.childExpirationTime>b)d.childExpirationTime=b;null!==c&&(0===c.childExpirationTime||c.childExpirationTime>b)&&(c.childExpirationTime=b);if(null===d.return&&5===d.tag){a=d.stateNode;break a}d=d.return}a=null}}if(null!==\na){!Lg&&0!==O&&b<O&&Pg();Ze(a,b);if(!Lg||Og||Mg!==a){b=a;a=a.expirationTime;if(null===b.nextScheduledRoot)b.expirationTime=a,null===T?(U=T=b,b.nextScheduledRoot=b):(T=T.nextScheduledRoot=b,T.nextScheduledRoot=U);else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t(\"185\"))}}function bh(a,b,c,d,e){var f=Kg;Kg=1;try{return a(b,c,d,e)}finally{Kg=f}}\nvar U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0)+2,lh=kh,ah=50,$g=0,mh=null,nh=1;function oh(){kh=((ba.unstable_now()-jh)/10|0)+2}function Zg(a,b){if(0!==ch){if(b>ch)return;null!==dh&&ba.unstable_cancelScheduledWork(dh)}ch=b;a=ba.unstable_now()-jh;dh=ba.unstable_scheduleWork(ph,{timeout:10*(b-2)-a})}function Gf(){if(V)return lh;qh();if(0===Z||1073741823===Z)oh(),lh=kh;return lh}\nfunction qh(){var a=0,b=null;if(null!==T)for(var c=T,d=U;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===T?t(\"244\"):void 0;if(d===d.nextScheduledRoot){U=T=d.nextScheduledRoot=null;break}else if(d===U)U=e=d.nextScheduledRoot,T.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===T){T=c;T.nextScheduledRoot=U;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===T)break;if(1===a)break;\nc=d;d=d.nextScheduledRoot}}Y=b;Z=a}function ph(a){if(a.didTimeout&&null!==U){oh();var b=U;do{var c=b.expirationTime;0!==c&&kh>=c&&(b.nextExpirationTimeToWorkOn=kh);b=b.nextScheduledRoot}while(b!==U)}Yg(0,a)}\nfunction Yg(a,b){hh=b;qh();if(null!==hh)for(oh(),lh=kh;null!==Y&&0!==Z&&(0===a||a>=Z)&&(!eh||kh>=Z);)Xg(Y,Z,kh>=Z),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=null;if(null!==ih)for(a=ih,ih=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){fh||(fh=!0,gh=d)}}if(fh)throw a=gh,gh=null,fh=!1,a;}\nfunction Xg(a,b,c){V?t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh(a,d,b))}else d=a.finishedWork,null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!0,c),d=a.finishedWork,null!==d&&(Tg()?a.finishedWork=d:rh(a,d,b)));V=!1}\nfunction rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===mh?$g++:(mh=a,$g=0);Og=Lg=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=0===d||0!==e&&e<d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=\n0,a.latestPingedTime=0):(e=a.latestPendingTime,0!==e&&(e<d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime<d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?Ze(a,d):d>a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,Ze(a,d)):d<e&&Ze(a,d));$e(0,a);Ig.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;xe=Gd;e=Td();if(Ud(e)){if(\"selectionStart\"in e)var f=\n{start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(Xa){f=null;break a}var l=0,m=-1,r=-1,A=0,S=0,B=e,P=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;P=B;B=v}for(;;){if(B===\ne)break b;P===f&&++A===h&&(m=l);P===k&&++S===g&&(r=l);if(null!==(v=B.nextSibling))break;B=P;P=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;ye={focusedElem:e,selectionRange:f};Gd=!1;for(Q=d;null!==Q;){e=!1;f=void 0;try{for(;null!==Q;){if(Q.effectTag&256){var p=Q.alternate;a:switch(h=Q,h.tag){case 2:case 3:if(h.effectTag&256&&null!==p){var u=p.memoizedProps,x=p.memoizedState,R=h.stateNode;R.props=h.memoizedProps;R.state=h.memoizedState;var yh=R.getSnapshotBeforeUpdate(u,\nx);R.__reactInternalSnapshotBeforeUpdate=yh}break a;case 5:case 7:case 8:case 6:break a;default:t(\"163\")}}Q=Q.nextEffect}}catch(Xa){e=!0,f=Xa}e&&(null===Q?t(\"178\"):void 0,wg(Q,f),null!==Q&&(Q=Q.nextEffect))}for(Q=d;null!==Q;){p=!1;u=void 0;try{for(;null!==Q;){var w=Q.effectTag;w&16&&oe(Q.stateNode,\"\");if(w&128){var y=Q.alternate;if(null!==y){var q=y.ref;null!==q&&(\"function\"===typeof q?q(null):q.current=null)}}switch(w&14){case 2:Ag(Q);Q.effectTag&=-3;break;case 6:Ag(Q);Q.effectTag&=-3;Bg(Q.alternate,\nQ);break;case 4:Bg(Q.alternate,Q);break;case 8:x=Q,yg(x),x.return=null,x.child=null,x.alternate&&(x.alternate.child=null,x.alternate.return=null)}Q=Q.nextEffect}}catch(Xa){p=!0,u=Xa}p&&(null===Q?t(\"178\"):void 0,wg(Q,u),null!==Q&&(Q=Q.nextEffect))}q=ye;y=Td();w=q.focusedElem;u=q.selectionRange;if(y!==w&&w&&w.ownerDocument&&Sd(w.ownerDocument.documentElement,w)){null!==u&&Ud(w)&&(y=u.start,q=u.end,void 0===q&&(q=y),\"selectionStart\"in w?(w.selectionStart=y,w.selectionEnd=Math.min(q,w.value.length)):\n(p=w.ownerDocument||document,y=(p&&p.defaultView||window).getSelection(),x=w.textContent.length,q=Math.min(u.start,x),u=void 0===u.end?q:Math.min(u.end,x),!y.extend&&q>u&&(x=u,u=q,q=x),x=Rd(w,q),R=Rd(w,u),x&&R&&(1!==y.rangeCount||y.anchorNode!==x.node||y.anchorOffset!==x.offset||y.focusNode!==R.node||y.focusOffset!==R.offset)&&(p=p.createRange(),p.setStart(x.node,x.offset),y.removeAllRanges(),q>u?(y.addRange(p),y.extend(R.node,R.offset)):(p.setEnd(R.node,R.offset),y.addRange(p)))));y=[];for(q=w;q=\nq.parentNode;)1===q.nodeType&&y.push({element:q,left:q.scrollLeft,top:q.scrollTop});\"function\"===typeof w.focus&&w.focus();for(w=0;w<y.length;w++)q=y[w],q.element.scrollLeft=q.left,q.element.scrollTop=q.top}ye=null;Gd=!!xe;xe=null;a.current=b;for(Q=d;null!==Q;){d=!1;w=void 0;try{for(y=c;null!==Q;){var Sa=Q.effectTag;if(Sa&36){var oc=Q.alternate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.componentDidMount();\nelse{var Ih=oc.memoizedProps,Jh=oc.memoizedState;X.props=q.memoizedProps;X.state=q.memoizedState;X.componentDidUpdate(Ih,Jh,X.__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;case 5:var lg=q.updateQueue;if(null!==lg){u=null;if(null!==q.child)switch(q.child.tag){case 7:u=q.child.stateNode;break;case 2:case 3:u=q.child.stateNode}lf(q,lg,u,p)}break;case 7:var Kh=q.stateNode;null===oc&&q.effectTag&4&&ze(q.type,q.memoizedProps)&&\nKh.focus();break;case 8:break;case 6:break;case 15:break;case 16:break;default:t(\"163\")}}if(Sa&128){var Ac=Q.ref;if(null!==Ac){var mg=Q.stateNode;switch(Q.tag){case 7:var Pd=mg;break;default:Pd=mg}\"function\"===typeof Ac?Ac(Pd):Ac.current=Pd}}var Lh=Q.nextEffect;Q.nextEffect=null;Q=Lh}}catch(Xa){d=!0,w=Xa}d&&(null===Q?t(\"178\"):void 0,wg(Q,w),null!==Q&&(Q=Q.nextEffect))}Lg=Og=!1;\"function\"===typeof Oe&&Oe(b.stateNode);Sa=b.expirationTime;b=b.childExpirationTime;b=0===Sa||0!==b&&b<Sa?b:Sa;0===b&&(Fg=\nnull);a.expirationTime=b;a.finishedWork=null}function Tg(){return eh?!0:null===hh||hh.timeRemaining()>nh?!1:eh=!0}function Dg(a){null===Y?t(\"246\"):void 0;Y.expirationTime=0;fh||(fh=!0,gh=a)}function sh(a,b){var c=W;W=!0;try{return a(b)}finally{(W=c)||V||Yg(1,null)}}function th(a,b){if(W&&!Wg){Wg=!0;try{return a(b)}finally{Wg=!1}}return a(b)}function uh(a,b,c){if(Ug)return a(b,c);W||V||0===Vg||(Yg(Vg,null),Vg=0);var d=Ug,e=W;W=Ug=!0;try{return a(b,c)}finally{Ug=d,(W=e)||V||Yg(1,null)}}\nfunction vh(a){if(!a)return Fe;a=a._reactInternalFiber;a:{2!==jd(a)||2!==a.tag&&3!==a.tag?t(\"170\"):void 0;var b=a;do{switch(b.tag){case 5:b=b.stateNode.context;break a;case 2:if(K(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}break;case 3:if(K(b.type._reactResult)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);t(\"171\");b=void 0}if(2===a.tag){var c=a.type;if(K(c))return Le(a,c,b)}else if(3===a.tag&&(c=a.type._reactResult,K(c)))return Le(a,\nc,b);return b}function wh(a,b,c,d,e){var f=b.current;c=vh(c);null===b.context?b.context=c:b.pendingContext=c;b=e;e=df(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);ff(f,e);If(f,d);return d}function xh(a,b,c,d){var e=b.current,f=Gf();e=Hf(f,e);return wh(a,b,c,e,d)}function zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 7:return a.child.stateNode;default:return a.child.stateNode}}\nfunction Ah(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ac,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nFb=function(a,b,c){switch(b){case \"input\":Dc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Na(d);e?void 0:t(\"90\");Xb(d);Dc(d,e)}}}break;case \"textarea\":he(a,c);break;case \"select\":b=c.value,null!=b&&ee(a,!!c.multiple,b,!1)}};\nfunction Bh(a){var b=2+25*(((Gf()-2+500)/25|0)+1);b<=Jg&&(b=Jg+1);this._expirationTime=Jg=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Bh.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Ch;wh(a,b,null,c,d._onCommit);return d};\nBh.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nBh.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;b=c;V?t(\"253\"):void 0;Y=a;Z=b;Xg(a,b,!0);Yg(1,null);b=this._next;this._next=null;b=a.firstBatch=b;null!==\nb&&b._hasChildren&&b.render(b._children)}else this._next=null,this._defer=!1};Bh.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Ch(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Ch.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nCh.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction Dh(a,b,c){b=new Se(5,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nDh.prototype.render=function(a,b){var c=this._internalRoot,d=new Ch;b=void 0===b?null:b;null!==b&&d.then(b);xh(a,c,null,d._onCommit);return d};Dh.prototype.unmount=function(a){var b=this._internalRoot,c=new Ch;a=void 0===a?null:a;null!==a&&c.then(a);xh(null,b,null,c._onCommit);return c};Dh.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Ch;c=void 0===c?null:c;null!==c&&e.then(c);xh(b,d,a,e._onCommit);return e};\nDh.prototype.createBatch=function(){var a=new Bh(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Eh(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Lb=sh;Mb=uh;Nb=function(){V||0===Vg||(Yg(Vg,null),Vg=0)};\nfunction Fh(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Dh(a,!1,b)}\nfunction Gh(a,b,c,d,e){Eh(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Fh(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=zh(f._internalRoot);h.call(a)}}th(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return zh(f._internalRoot)}\nfunction Hh(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Eh(b)?void 0:t(\"200\");return Ah(a,b,null,c)}\nvar Mh={createPortal:Hh,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=md(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return Gh(null,a,b,!0,c)},render:function(a,b,c){return Gh(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return Gh(a,b,c,!1,d)},unmountComponentAtNode:function(a){Eh(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(th(function(){Gh(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Hh.apply(void 0,arguments)},unstable_batchedUpdates:sh,unstable_interactiveUpdates:uh,flushSync:function(a,b){V?t(\"187\"):void 0;var c=W;W=!0;try{return bh(a,b)}finally{W=c,Yg(1,null)}},unstable_flushControlled:function(a){var b=W;W=!0;try{bh(a)}finally{(W=b)||V||Yg(1,null)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[La,\nMa,Na,Ea.injectEventPluginsByName,qa,Ua,function(a){za(a,Ta)},Jb,Kb,Id,Ga]},unstable_createRoot:function(a,b){Eh(a)?void 0:t(\"278\");return new Dh(a,!0,null!=b&&!0===b.hydrate)}};(function(a){var b=a.findFiberByHostInstance;return Re(n({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ka,bundleType:0,version:\"16.5.2\",rendererPackageName:\"react-dom\"});\nvar Nh={default:Mh},Oh=Nh&&Mh||Nh;module.exports=Oh.default||Oh;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = /OLF\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/mp4-generator.js\n// module id = 020U\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/exp-golomb.js\n// module id = 2BoW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 3Cgm\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/m2ts.js\n// module id = 4cG2\n// module chunks = 0","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/RequestAnimationFrame.js","/**\n * @license\n * Video.js 7.2.2 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.2.2\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\nvar EVENT_MAP = void 0;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n\n\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.2.4\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n\n    var toUnsigned$1 = bin.toUnsigned;\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n    // Find the data for a box specified by its path\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n\n        type = parseType(data.subarray(i + 4, i + 8));\n\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n        i = end;\n      }\n\n      // we've finished searching all of data\n      return results;\n    };\n\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']);\n\n      // mdhd timescale\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n\n        tkhd = _findBox(trak, ['tkhd'])[0];\n        if (!tkhd) {\n          return null;\n        }\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n        if (!mdhd) {\n          return null;\n        }\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result;\n\n      // we need info from two childrend of each track fragment box\n      trafs = _findBox(fragment, ['moof', 'traf']);\n\n      // determine the start times for each track\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime;\n\n          // get the track id from the tfhd\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]);\n          // assume a 90kHz clock if no timescale was specified\n          scale = timescale[id] || 90e3;\n\n          // get the base media decode time from the tfdt\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity;\n\n          // convert base time to seconds\n          return baseTime / scale;\n        });\n      }));\n\n      // return the minimum\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i];\n\n        // Split on 'aud'-type nal units\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      }\n\n      // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      }\n\n      // Push the final frame\n      frames.push(currentFrame);\n      return frames;\n    };\n\n    // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = [];\n\n      // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts;\n\n      // store some metadata about all the Gops\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration;\n\n      // push the final Gop\n      gops.push(currentGop);\n      return gops;\n    };\n\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount;\n\n        // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    };\n\n    // generate the track's sample table from an array of gops\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          sample = sampleForFrame(currentFrame, dataOffset);\n\n          dataOffset += sample.size;\n\n          samples.push(sample);\n        }\n      }\n      return samples;\n    };\n\n    // generate the track's raw mdat data from an array of gops\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer);\n\n      // For each Gop..\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        // For each Frame..\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          // For each NAL..\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n\n    var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData;\n\n      // Find all `Emulation Prevention Bytes`\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      }\n\n      // If no Emulation Prevention Bytes were found just return the original\n      // array\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      }\n\n      // Create a new array to hold the NAL unit data\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++;\n          // Remove this position index\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n\n    // exports\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    };\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = captionPacketParser.parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = captionPacketParser.parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts;\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          // Configure the caption window if we're in roll-up mode\n          if (this.mode_ === 'rollUp') {\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp';\n        // Spec says to wipe memories when switching to roll-up\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        // This triggers data on the H264Stream\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS$1 = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$1;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$1;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var isLikelyAacData, arrayEquals, sumFrameByteLengths;\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        trackDecodeInfo.clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$2 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$2 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          trackDecodeInfo.clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = frameUtils.generateSampleTable(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$1 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n      return result;\n    },\n\n\n    // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i;\n\n        // iterate past any SPSs\n        offset = 6;\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        // iterate past any PPSs\n        numOfPictureParameterSets = data[offset];\n        offset++;\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$1(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$1(data.subarray(i, i + 4)));\n          i += 4;\n        }\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$1(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8;\n\n        // parse out the name field\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n          result.name += String.fromCharCode(data[i]);\n        }\n        // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n        result.name = decodeURIComponent(escape(result.name));\n\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        };\n\n        // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n\n        // convert fixed-point, base 16 back to a number\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n\n        i = 8;\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2;\n        // convert fixed-point, base 16 back to a number\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n\n\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n\n\n        // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n\n\n        // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n\n\n        // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n\n\n        // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n\n\n        // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n\n\n        // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        }\n\n        // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n        }\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box;\n\n      // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        // parse type-specific data\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n        box.size = size;\n        box.type = type;\n\n        // store this box and move to the next\n        result.push(box);\n        i = end;\n      }\n      return result;\n    };\n\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' ');\n\n      // iterate over all the boxes\n      return inspectedMp4.map(function (box, index) {\n\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' +\n\n        // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes';\n\n          // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key];\n\n          // print out raw bytes as hexademical\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n            if (!bytes) {\n              return prefix + '<>';\n            }\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          }\n\n          // stringify generic objects\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + (\n\n        // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // Bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n          sample.pts = currentDts + sample.compositionTimeOffset;\n\n          currentDts += sample.duration;\n        });\n\n        allSamples = allSamples.concat(samples);\n      });\n\n      return allSamples;\n    };\n\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']);\n      // To get SEI NAL units\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = [];\n\n      // Pair up each traf with a mdat as moofs and mdats are in pairs\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']);\n        // Exactly 1 tfhd per traf\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']);\n        // Either 0 or 1 tfdt per traf\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals;\n\n        // Only parse video data for the chosen video track\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n\n      return captionNals;\n    };\n\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1;\n\n      // Stores segments seen before trackId and timescale are set\n      var segmentCache;\n      // Stores video track ID of the track being parsed\n      var trackId;\n      // Stores the timescale of the track being parsed\n      var timescale;\n      // Stores captions parsed so far\n      var parsedCaptions;\n\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true;\n\n        // Collect dispatched captions\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && (typeof timescales === 'undefined' ? 'undefined' : _typeof(timescales)) === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null;\n\n          // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId];\n\n          // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        }\n\n        // Now that a timescale and trackId is set, parse cached segments\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals);\n        // Force the parsed captions to be dispatched\n        this.flushStream();\n\n        return parsedCaptions;\n      };\n\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n\n      /**\n        * Reset caption buckets for new data\n       **/\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n\n      /**\n        * Reset caption parser\n       **/\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  // neither buffer has been created yet\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  }\n\n  // only one buffer is configured\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are configured\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are empty\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  }\n\n  // Handle the case where we have both buffers and create an\n  // intersection of the two\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length;\n\n  // A) Gather up all start and end times\n  while (count--) {\n    extents.push({ time: videoBuffered.start(count), type: 'start' });\n    extents.push({ time: videoBuffered.end(count), type: 'end' });\n  }\n  count = audioBuffered.length;\n  while (count--) {\n    extents.push({ time: audioBuffered.start(count), type: 'start' });\n    extents.push({ time: audioBuffered.end(count), type: 'end' });\n  }\n  // B) Sort them by time\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  });\n\n  // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++;\n\n      // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--;\n\n      // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    }\n\n    // F) Record overlapping ranges\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n\n    // Initialize CaptionParser if it hasn't been yet\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({ type: 'usage', name: 'hls-608' });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n    // Fmp4 CaptionParser\n    _this.captionParser_ = new CaptionParser();\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done);\n      // clears fmp4 captions\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      // This has fmp4 captions, add them to text tracks\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        });\n        // Reset stored captions since we added parsed\n        // captions to a text track at this point\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media);\n\n      // delete all buffered data to allow an immediate quality switch, then seek\n      // in place to give the browser a kick to remove any cached frames from the\n      // previous rendition\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause\n        // segments from the previously enabled rendition to load before the new playlist\n        // has finished loading\n        _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n      });\n\n      // don't need to reset audio as it is reset when media changes\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n            _this5.seekTo_(seekable$$1.end(0));\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.2.4\";\n\n// since VHS handles HLS and DASH (and in the future, more types), use * to capture all\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    }\n  };\n});\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n      // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = 63pp\n// module chunks = 0","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = 6gfP\n// module chunks = 0","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/h264.js\n// module id = 7GJ1\n// module chunks = 0","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/data/silence.js\n// module id = 7JOd\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      return row.trim();\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 8Ig8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 8KjM\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/probe.js\n// module id = 9ltH\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = BEQ0\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","module.exports = __webpack_public_path__ + \"video.76aa451a.mp4\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/video.mp4\n// module id = Eiv8\n// module chunks = 0","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js'\n\n(function(document, videojs, pannellum) {\n    'use strict';\n    \n    videojs.plugin('pannellum', function(config) {\n        // Create Pannellum instance\n        var player = this;\n        var container = player.el();\n        var vid = container.getElementsByTagName('video')[0],\n            pnlmContainer = document.createElement('div');\n        config = config || {};\n        config.type = 'equirectangular';\n        config.dynamic = true;\n        config.showZoomCtrl = false;\n        config.showFullscreenCtrl = false;\n        config.autoLoad = true;\n        config.panorama = vid;\n        pnlmContainer.style.visibility = 'hidden';\n        player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n        container.insertBefore(pnlmContainer, container.firstChild);\n        vid.style.display = 'none';\n    \n        // Handle update settings\n        player.on('play', function() {\n            if (vid.readyState > 1)\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('canplay', function() {\n            if (!player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('pause', function() {\n            player.pnlmViewer.setUpdate(false);\n        });\n        player.on('loadeddata', function() {\n            pnlmContainer.style.visibility = 'visible';\n        });\n        player.on('seeking', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('seeked', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(false);\n        });\n    });\n    \n    })(document, videojs, pannellum);\n    \n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/videojs-pannellum-plugin.js","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/adts.js\n// module id = GJFR\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.parseId3TagSize = function(header, byteIndex) {\n    var\n      returnSize = (header[byteIndex + 6] << 21) |\n                   (header[byteIndex + 7] << 14) |\n                   (header[byteIndex + 8] << 7) |\n                   (header[byteIndex + 9]),\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n\n  this.parseAdtsSize = function(header, byteIndex) {\n    var\n      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n    return (highTwo | middle) | lowThree;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = this.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = this.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/index.js\n// module id = GfXe\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = GiK3\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = Jyyp\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = KSGD\n// module chunks = 0","/** @license React v16.5.2\n * schedule.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,e=!1,f=!1,g=\"object\"===typeof performance&&\"function\"===typeof performance.now,l={timeRemaining:g?function(){var a=h()-performance.now();return 0<a?a:0}:function(){var a=h()-Date.now();return 0<a?a:0},didTimeout:!1};function m(){if(!e){var a=c.timesOutAt;f?n():f=!0;p(q,a)}}function r(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;a=a.callback;a(l)}\nfunction q(a){e=!0;l.didTimeout=a;try{if(a)for(;null!==c;){var b=exports.unstable_now();if(c.timesOutAt<=b){do r();while(null!==c&&c.timesOutAt<=b)}else break}else if(null!==c){do r();while(null!==c&&0<h()-exports.unstable_now())}}finally{e=!1,null!==c?m(c):f=!1}}\nvar t=Date,u=\"function\"===typeof setTimeout?setTimeout:void 0,v=\"function\"===typeof clearTimeout?clearTimeout:void 0,w=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,x=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,y,z;function A(a){y=w(function(b){v(z);a(b)});z=u(function(){x(y);a(exports.unstable_now())},100)}if(g){var B=performance;exports.unstable_now=function(){return B.now()}}else exports.unstable_now=function(){return t.now()};var p,n,h;\nif(\"undefined\"===typeof window){var C=-1;p=function(a){C=setTimeout(a,0,!0)};n=function(){clearTimeout(C)};h=function(){return 0}}else if(window._schedMock){var D=window._schedMock;p=D[0];n=D[1];h=D[2]}else{\"undefined\"!==typeof console&&(\"function\"!==typeof w&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof x&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\nvar E=null,F=!1,G=-1,H=!1,I=!1,J=0,K=33,L=33;h=function(){return J};var M=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===M){F=!1;var b=exports.unstable_now();a=!1;if(0>=J-b)if(-1!==G&&G<=b)a=!0;else{H||(H=!0,A(N));return}G=-1;b=E;E=null;if(null!==b){I=!0;try{b(a)}finally{I=!1}}}},!1);var N=function(a){H=!1;var b=a-J+L;b<L&&K<L?(8>b&&(b=8),L=b<K?K:b):K=b;J=a+L;F||(F=!0,window.postMessage(M,\"*\"))};p=function(a,\nb){E=a;G=b;I?window.postMessage(M,\"*\"):H||(H=!0,A(N))};n=function(){E=null;F=!1;G=-1}}exports.unstable_scheduleWork=function(a,b){var d=exports.unstable_now();b=void 0!==b&&null!==b&&null!==b.timeout&&void 0!==b.timeout?d+b.timeout:d+5E3;a={callback:a,timesOutAt:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,m(c);else{d=null;var k=c;do{if(k.timesOutAt>b){d=k;break}k=k.next}while(k!==c);null===d?d=c:d===c&&(c=a,m(c));b=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};\nexports.unstable_cancelScheduledWork=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/schedule/cjs/schedule.production.min.js\n// module id = LRaD\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/schedule.production.min.js');\n} else {\n  module.exports = require('./cjs/schedule.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/schedule/index.js\n// module id = LnNA\n// module chunks = 0","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/frame-utils.js\n// module id = MjOi\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = Nq5S\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = O27J\n// module chunks = 0","module.exports = __webpack_public_path__ + \"milan.df0cb5c8.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/milan.jpg\n// module id = O67U\n// module chunks = 0","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\n\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\n\n\nclass Pannellum extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: Math.random().toString(36).substr(2, 9),\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    image: propTypes.string,\n    yaw : propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    autoRotate: propTypes.number,\n    compass: propTypes.bool,\n    preview: propTypes.string,\n    previewTitle: propTypes.string,\n    previewAuthor: propTypes.string,\n    title : propTypes.string,\n    author: propTypes.string,\n    autoLoad: propTypes.bool,\n    orientationOnByDefault: propTypes.bool,\n    showZoomCtrl: propTypes.bool,\n    keyboardZoom: propTypes.bool,\n    mouseZoom: propTypes.bool,\n    draggable: propTypes.bool,\n    showFullscreenCtrl: propTypes.bool,\n    showControls: propTypes.bool,\n    onLoad: propTypes.func,\n    onScenechange: propTypes.func,\n    onScenechangefadedone: propTypes.func,\n    onError: propTypes.func,\n    onErrorcleared: propTypes.func,\n    onMousedown: propTypes.func,\n    onMouseup: propTypes.func,\n    onTouchstart: propTypes.func,\n    onTouchend: propTypes.func,\n    hotspotDebug: propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick:propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n    \n  }\n\n  static defaultProps = {\n    children:[],\n    width: '100%',\n    height: '400px',\n    image:'',\n    yaw : 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    autoRotate: 0,\n    compass: false,\n    preview: '',\n    previewTitle: '',\n    previewAuthor: '',\n    title : '',\n    author: '',\n    autoLoad: false,\n    orientationOnByDefault: false,\n    showZoomCtrl: true,\n    keyboardZoom: true,\n    mouseZoom: true,\n    draggable: true,\n    showFullscreenCtrl: true,\n    showControls: true,\n    onLoad: ()=>{},\n    onScenechange: ()=>{},\n    onScenechangefadedone: ()=>{},\n    onError: ()=>{},\n    onErrorcleared: ()=>{},\n    onMousedown: ()=>{},\n    onMouseup: ()=>{},\n    onTouchstart: ()=>{},\n    onTouchend: ()=>{},\n    hotspotDebug: false,\n  }\n\n  renderImage = (state) =>{\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one \n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)){\n      hotspots.map(hotspot =>{\n        switch (hotspot.props.type){\n\n          case \"info\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"type\":hotspot.props.type,\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"text\":hotspot.props.text ? hotspot.props.text : \"\",\n              \"URL\":hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : this.hotspotTooltip,\n              \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : this.handleClickHotspot ,\n              \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name:\"test\" },\n            });\n          default:\n            return [];\n        }\n        \n      });\n    }\n\n    let jsonConfig = {\n      type: \"equirectangular\",\n      panorama: this.props.image,\n      yaw : this.props.yaw,\n      pitch: this.props.pitch,\n      hfov: this.props.hfov,\n      minHfov: this.props.minHfov,\n      maxHfov: this.props.maxHfov,\n      minPitch: this.props.minPitch,\n      maxPitch: this.props.maxPitch,\n      minYaw: this.props.minYaw,\n      maxYaw: this.props.maxYaw,\n      autoRotate: this.props.autoRotate,\n      compass: this.props.compass,\n      preview: this.props.preview,\n      previewTitle:this.props.previewTitle,\n      previewAuthor:this.props.previewAuthor,\n      author: this.props.author,\n      title : this.props.title,\n      autoLoad: this.props.autoLoad,\n      orientationOnByDefault: this.props.orientationOnByDefault,\n      showZoomCtrl: this.props.showZoomCtrl,\n      keyboardZoom: this.props.keyboardZoom,\n      mouseZoom: this.props.mouseZoom,\n      draggable: this.props.draggable,\n      showFullscreenCtrl: this.props.showFullscreenCtrl,\n      showControls:this.props.showControls,\n      hotSpotDebug: this.props.hotspotDebug,\n      hotSpots: hotspotArray\n    };\n  \n    Object.keys(jsonConfig).forEach((key) => (jsonConfig[key] === \"\") && delete jsonConfig[key]);\n    \n    if (state === \"update\"){\n\n      this.panorama.destroy();\n      this.panorama = pannellum.viewer(this.props.id ? this.props.id : this.state.id, jsonConfig);\n      this.panorama.on(\"load\" , this.props.onLoad);\n      this.panorama.on(\"scenechange\" , this.props.onScenechange);\n      this.panorama.on(\"scenechangefadedone\" , this.props.onScenechangefadedone);\n      this.panorama.on(\"error\" , this.props.onError);\n      this.panorama.on(\"errorcleared\" , this.props.onErrorcleared);\n      this.panorama.on(\"mousedown\" , this.props.onMousedown);\n      this.panorama.on(\"mouseup\" , this.props.onMouseup);\n      this.panorama.on(\"touchstart\" , this.props.onTouchstart);\n      this.panorama.on(\"touchend\" , this.props.onTouchend);\n\n    } else {\n      this.panorama = pannellum.viewer(this.props.id ? this.props.id : this.state.id, jsonConfig);\n\n      this.panorama.on(\"load\" , this.props.onLoad);\n      this.panorama.on(\"scenechange\" , this.props.onScenechange);\n      this.panorama.on(\"scenechangefadedone\" , this.props.onScenechangefadedone);\n      this.panorama.on(\"error\" , this.props.onError);\n      this.panorama.on(\"errorcleared\" , this.props.onErrorcleared);\n      this.panorama.on(\"mousedown\" , this.props.onMousedown);\n      this.panorama.on(\"mouseup\" , this.props.onMouseup);\n      this.panorama.on(\"touchstart\" , this.props.onTouchstart);\n      this.panorama.on(\"touchend\" , this.props.onTouchend);\n    } \n  }\n\n  componentDidMount = () => {\n    this.renderImage(\"mount\");\n  }\n\n  componentDidUpdate (prevProps){\n    this.renderImage(\"update\");\n  }\n\n  handleClickHotspot = (e , args) => {\n    console.log(\"hotspot clicked\" , args.name);\n  }\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  getViewer = () => {\n    return this.panorama;\n  }\n\n  render() {\n    let { width, height } = this.props;\n    let divStyle = {\n      width : width,\n      height : height\n    };\n    return (\n      <div \n        id={this.props.id ? this.props.id : this.state.id}\n        style={divStyle}\n        ref={node => this.imageNode = node}\n      />\n    );\n  }\n}\nPannellum.Hotspot = () => {};\nPannellum.Hotspot = () => {};\nexport default Pannellum;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/Pannellum.js","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = Q4WQ\n// module chunks = 0","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trim/index.js\n// module id = QYuf\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = UR7O\n// module chunks = 0","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/metadata-stream.js\n// module id = X4yv\n// module chunks = 0","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","import React from 'react';\n\nexport default () => {\n  return (\n    <header className=\"header\">\n      <div>\n        <a \n          href=\"/\"\n          className=\"main-header__brand\"\n        >\n            Pannellum React Component\n        </a>\n      </div>\n    </header>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/Header.js","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = bJHr\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport \"./index.css\";\nimport Header  from \"./components/Header\";\nimport ImageDemo from \"./components/ImageDemo\";\nimport VideoDemo from \"./components/VideoDemo\";\n\n\n\n\nclass Demo extends Component {\n  \n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <ImageDemo />\n        <VideoDemo />\n      </div>\n    );\n  }\n\n}\n\n\nrender(<Demo />, document.querySelector('#demo'));\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/index.js","import React, { Component } from 'react';\nimport { Pannellum }  from '../../../src';\nimport myImage from \"../images/alma.jpg\";\nimport myImage2 from \"../images/milan.jpg\";\n\n\nexport default class ImageDemo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state ={\n      mediaPhoto: myImage,\n    };\n  }\n    \n    hanldeClickImage = (evt , args) => {\n      console.log(args.name);\n      this.setState({\n        mediaPhoto: myImage2,\n      });\n\n    }\n    \n\n\n    render() {\n      return (\n        <div className=\"image_main\">\n        \n          <h2 className=\"section_title\">Image Component</h2>\n          <div className=\"pannellum_div\" >\n            <Pannellum\n              width=\"800px\"\n              height=\"400px\"\n              image={this.state.mediaPhoto}\n              pitch={10}\n              yaw={180}\n              hfov={120}\n              autoLoad\n              author=\"\"\n              title=\"\"\n              orientationOnByDefault={false}\n              draggable\n              keyboardZoom\n              mouseZoom\n              preview=\"\"      \n              previewAuthor=\"\"\n              previewTitle=\"\"\n              showControls\n              showFullscreenCtrl\n              showZoomCtrl\n              onLoad={()=>{console.log(\"panorama loaded\");}}\n              onScenechange={(id)=>{console.log(\"Scene has change on \" + id);}}\n              onScenechangefadedone={()=>{console.log(\"panorama loaded\");}}\n              onError={(err)=>{console.log(\"Error\" , err);}}\n              onErrorcleared={()=>{console.log(\"Error Cleared\");}}\n              onMousedown={(evt)=>{console.log(\"Mouse Down\" , evt);}}\n              onMouseup={(evt)=>{console.log(\"Mouse Up\", evt);}}\n              onTouchstart={(evt)=>{console.log(\"Touch Start\", evt);}}\n              onTouchend={(evt)=>{console.log(\"Touch End\", evt);}}\n              hotspotDebug={false}\n            >\n              <Pannellum.Hotspot \n                type=\"info\"\n                pitch={11}\n                yaw={-167}\n                text=\"Info Hotspot Text 3\"\n                URL=\"https://github.com/farminf\"\n              />\n\n              <Pannellum.Hotspot \n                type=\"custom\"\n                pitch={31}\n                yaw={150}\n                handleClick={(evt , args) => this.hanldeClickImage(evt , args)}\n                handleClickArg={{ \"name\":\"test\" }}\n              />\n\n            </Pannellum>\n            <div className=\"codebox\">\n              <pre>\n                <code data-language=\"xml\">\n                  {`\n    <Pannellum\n        width=\"800px\"\n        height=\"400px\"\n        image={this.state.mediaPhoto}\n        pitch={10}\n        yaw={180}\n        hfov={500}\n        autoLoad\n        author=\"\"\n        title=\"\"\n        orientationOnByDefault={false}\n        draggable\n        keyboardZoom\n        mouseZoom\n        preview=\"\"      \n        previewAuthor=\"\"\n        previewTitle=\"\"\n        showControls\n        showFullscreenCtrl\n        showZoomCtrl\n        onLoad={()=>{console.log(\"panorama loaded\");}}\n        onScenechange={(id)=>{console.log(\"Scene has change on \" + id);}}\n        onScenechangefadedone={()=>{console.log(\"panorama loaded\");}}\n        onError={(err)=>{console.log(\"Error\" , err);}}\n        onErrorcleared={()=>{console.log(\"Error Cleared\");}}\n        onMousedown={(evt)=>{console.log(\"Mouse Down\" , evt);}}\n        onMouseup={(evt)=>{console.log(\"Mouse Up\", evt);}}\n        onTouchstart={(evt)=>{console.log(\"Touch Start\", evt);}}\n        onTouchend={(evt)=>{console.log(\"Touch End\", evt);}}\n        hotspotDebug={false}\n    >\n        <Pannellum.Hotspot \n        type=\"info\"\n        pitch={11}\n        yaw={-167}\n        text=\"Info Hotspot Text 3\"\n        URL=\"https://github.com/farminf\"\n        />\n\n        <Pannellum.Hotspot \n        type=\"custom\"\n        pitch={31}\n        yaw={150}\n        handleClick={(evt , args) => this.hanldeClickImage(evt , args)}\n        handleClickArg={{ \"name\":\"test\" }}\n        />\n\n    </Pannellum>\n                `}</code>\n              </pre>\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/ImageDemo.js","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\n\n\nclass PannellumVideo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    video: propTypes.string,\n    yaw : propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    hotspotDebug: propTypes.bool,\n    autoRotate: propTypes.number,\n    mouseZoom: propTypes.bool,\n    loop:propTypes.bool,\n    autoplay:propTypes.bool,\n    controls:propTypes.bool,\n    muted:propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick:propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n  }\n\n  static defaultProps = {\n    children:[],\n    width: '100%',\n    height: '400px',\n    video:'',\n    yaw : 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    hotspotDebug: false,\n    autoRotate: 0,\n    mouseZoom: true,\n    loop:false,\n    autoplay:true,\n    controls:false,\n    muted: true\n  }\n\n  renderVideo = (state) =>{\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one \n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)){\n      hotspots.map(hotspot =>{\n        switch (hotspot.props.type){\n\n          case \"info\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"type\":hotspot.props.type,\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"text\":hotspot.props.text ? hotspot.props.text : \"\",\n              \"URL\":hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : this.hotspotTooltip,\n              \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : this.handleClickHotspot ,\n              \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name:\"test\" },\n            });\n          default:\n            return [];\n        }\n        \n      });\n    }\n\n    if (state === \"update\"){\n      \n      this.video = videojs(this.videoNode);\n      let cuurentHS = [...this.video.pnlmViewer.getConfig().hotSpots];\n      this.video.pnlmViewer.setYaw(this.props.yaw);\n      this.video.pnlmViewer.setPitch(this.props.pitch);\n      this.video.pnlmViewer.setHfov(this.props.hfov);\n      this.video.pnlmViewer.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n      \n      //remove all hotspots\n      cuurentHS.map( hs => this.video.pnlmViewer.removeHotSpot(hs.id));\n      // Adding new hotspots\n      hotspotArray.map( hs => this.video.pnlmViewer.addHotSpot(hs));\n      // setting new video\n      this.video.src({ \n        type: 'video/mp4', \n        src: this.props.video \n      });\n      return this.video.play();\n    } else {\n      this.video = videojs(this.videoNode, {\n        loop:this.props.loop,\n        autoplay:this.props.autoplay,\n        controls:this.props.controls,\n        muted: this.props.muted,\n        plugins: {\n          pannellum: {\n            yaw : this.props.yaw,\n            pitch: this.props.pitch,\n            hfov: this.props.hfov,\n            minHfov: this.props.minHfov,\n            maxHfov: this.props.maxHfov,\n            minPitch: this.props.minPitch,\n            maxPitch: this.props.maxPitch,\n            minYaw: this.props.minYaw,\n            maxYaw: this.props.maxYaw,\n            hotSpotDebug: this.props.hotspotDebug,\n            autoRotate:this.props.autoRotate,\n            mouseZoom:this.props.mouseZoom,\n            hotSpots: hotspotArray\n          }\n        } \n      });\n      this.video.src({ type: 'video/mp4', src: this.props.video });\n      this.video.play();\n    }\n  }\n\n  componentDidMount = () => {\n    this.renderVideo(\"mount\");    \n  }\n\n  componentDidUpdate (prevProps){\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n\n\n  }\n\n  handleClickHotspot = (e , args) => {\n    console.log(\"hotspot clicked\" , args.name);\n  }\n\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  }\n  \n  getViewer = () => {\n    return this.video.pnlmViewer;\n  }\n\n  render() {\n    let { width, height, video } = this.props;\n    let divStyle = {\n      width : width,\n      height : height\n    };\n    return (\n\n      <div data-vjs-player>\n        <video\n          id={this.props.id ? this.props.id : this.state.id}\n          className=\"video-js vjs-default-skin vjs-big-play-centered\" \n          ref={node => this.videoNode = node}\n          preload=\"none\" \n          crossOrigin=\"anonymous\"\n          style={divStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PannellumVideo;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/PannellumVideo.js","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/index.js\n// module id = fYOu\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = gt/O\n// module chunks = 0","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.pannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama viewer.\n * @constructor\n * @param {HTMLElement|string} container - The container (div) element for the\n *      viewer, or its ID.\n * @param {Object} initialConfig - Inital configuration for viewer.\n */\n  function Viewer(container, initialConfig) {\n\n    var _this = this;\n\n    // Declare variables\n    var config,\n      renderer,\n      preview,\n      isUserInteracting = false,\n      latestInteraction = Date.now(),\n      onPointerDownPointerX = 0,\n      onPointerDownPointerY = 0,\n      onPointerDownPointerDist = -1,\n      onPointerDownYaw = 0,\n      onPointerDownPitch = 0,\n      keysDown = new Array(10),\n      fullscreenActive = false,\n      loaded,\n      error = false,\n      isTimedOut = false,\n      listenersAdded = false,\n      panoImage,\n      prevTime,\n      speed = { 'yaw': 0, 'pitch': 0, 'hfov': 0 },\n      animating = false,\n      orientation = false,\n      orientationYawOffset = 0,\n      autoRotateStart,\n      autoRotateSpeed = 0,\n      origHfov,\n      origPitch,\n      animatedMove = {},\n      externalEventListeners = {},\n      specifiedPhotoSphereExcludes = [],\n      update = false, // Should we update when still to render dynamic content\n      hotspotsCreated = false;\n\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189],\n    };\n\n    // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n    defaultConfig.strings = {\n    // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Loading...',\n      bylineLabel: 'by %s',    // One substitution: author\n\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',  // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" +\n                    \"progressive encoded JPEGs work for your device (this \" +\n                    \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' +\n                '%spx wide, but your device only supports images up to ' +\n                '%spx wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)',    // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.',\n    };\n\n    // Initialize container\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0;\n\n    // Create container for ui\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer);\n\n    // Create container for renderer\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix);\n\n    // Display about information on right click\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage);\n\n    // Create info display\n    var infoDisplay = {};\n\n    // Hot spot debug indicator\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator);\n\n    // Panorama info\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container);\n\n    // Load box\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box);\n\n    // Error message\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg);\n\n    // Create controls\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container);\n\n    // Load button\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function() {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load);\n\n    // Zoom controls\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom);\n\n    // Fullscreen toggle\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled)\n      {controls.container.appendChild(controls.fullscreen);}\n\n    // Device orientation toggle\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function(e) {\n      if (orientation)\n        {stopOrientation();}\n      else\n        {startOrientation();}\n    });\n    controls.orientation.addEventListener('mousedown', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('touchstart', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('pointerdown', function(e) {e.stopPropagation();});\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport, startOrientationIfSupported = false;\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n        if (startOrientationIfSupported)\n          {startOrientation();}\n      } else {\n        orientationSupport = false;\n      }\n    }\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    }\n\n    // Compass\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass);\n\n    // Load and process configuration\n    if (initialConfig.firstScene) {\n    // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n    // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n    processOptions(true);\n\n    /**\n * Initializes viewer.\n * @private\n */\n    function init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n\n      var i, p;\n    \n      if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n        if (config.basePath && config.multiRes.basePath &&\n            !(/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath))) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n          panoImage = new Image();\n        }\n      }\n\n      // Configure image loading\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n          itemsToLoad--;\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n        \n        var onError = function(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n          if (p == \"null\") { // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n        if (config.basePath) {\n          p = config.basePath;\n        }\n        \n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n          panoImage.onload = function() {\n            window.URL.revokeObjectURL(this.src);  // Clean up\n            onImageLoad();\n          };\n            \n          var xhr = new XMLHttpRequest();\n          xhr.onloadend = function() {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n          xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n    \n      if (config.draggable)\n        {uiContainer.classList.add('pnlm-grab');}\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n\n    /**\n * Test if URL is absolute or relative.\n * @private\n * @param {string} url - URL to test\n * @returns {boolean} True if absolute, else false\n */\n    function absoluteURL(url) {\n    // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    };\n\n    /**\n * Create renderer and initialize event listeners once image is loaded.\n * @private\n */\n    function onImageLoad() {\n      if (!renderer)\n        {renderer = new libpannellum.renderer(renderContainer);}\n\n      // Only add event listeners once\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n        if (document.documentElement.style.pointerAction === '' &&\n            document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n\n        // Deal with MS pointer events\n        if (window.navigator.pointerEnabled)\n          {container.style.touchAction = 'none';}\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n      setTimeout(function(){isTimedOut = true;}, 500);\n    }\n\n    /**\n * Parses Google Photo Sphere XMP Metadata.\n * https://developers.google.com/photo-sphere/metadata/\n * @private\n * @param {Image} image - Image to read XMP metadata from.\n */\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function() {\n        var img = reader.result;\n\n        // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n          if (flagIndex < 0 || flagIndex > 65536)\n            {anError(config.strings.iOS8WebGLError);}\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n          // Extract the requested tag from the XMP data\n          var getTag = function(tag) {\n            var result;\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n            if (result !== undefined) {\n              return Number(result);\n            }\n            return null;\n          };\n            \n            // Relevant XMP data\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n            \n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0)\n              {config.haov = xmp.croppedWidth / xmp.fullWidth * 360;}\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0)\n              {config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;}\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0)\n              {config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;}\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0)\n                {config.horizonPitch = xmp.horizonPitch;}\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0)\n                {config.horizonRoll = xmp.horizonRoll;}\n            }\n                \n            // TODO: add support for initial view settings\n          }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n      if (reader.readAsBinaryString !== undefined)\n        {reader.readAsBinaryString(image);}\n      else\n        {reader.readAsText(image);}\n    }\n\n    /**\n * Displays an error message.\n * @private\n * @param {string} errorMsg - Error message to display. If not specified, a\n *      generic WebGL error is displayed.\n */\n    function anError(errorMsg) {\n      if (errorMsg === undefined)\n        {errorMsg = config.strings.genericWebGLError;}\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n\n    /**\n * Hides error message display.\n * @private\n */\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n\n    /**\n * Displays about message.\n * @private\n * @param {MouseEvent} event - Right click location\n */\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n      aboutMessage.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n      event.preventDefault();\n    }\n\n    /**\n * Calculate mouse position relative to top left of viewer container.\n * @private\n * @param {MouseEvent} event - Mouse event to use in calculation\n * @returns {Object} Calculated X and Y coordinates\n */\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n\n    /**\n * Event handler for mouse clicks. Initializes panning. Prints center and click\n * location coordinates when hot spot debugging is enabled.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentMouseDown(event) {\n    // Override default action\n      event.preventDefault();\n      // But not all of it\n      container.focus();\n    \n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n    \n      // Calculate mouse position relative to top left of viewer container\n      var pos = mousePosition(event);\n\n      // Log pitch / yaw of mouse click when debugging / placing hot spots\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' +\n            config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      }\n    \n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n    \n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n    \n      fireEvent('mousedown', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for double clicks. Zooms in at clicked location\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n        canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x*x + a*a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n      if (yaw < -180)\n        {yaw += 360;}\n      if (yaw > 180)\n        {yaw -= 360;}\n      return [pitch, yaw];\n    }\n\n    /**\n * Event handler for mouse moves. Pans center of view.\n * @private\n * @param {MouseEvent} event - Document mouse move event.\n */\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event);\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for mouse up events. Stops panning.\n * @private\n */\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n\n      fireEvent('mouseup', event);\n    }\n\n    /**\n * Event handler for touches. Initializes panning if one touch or zooming if\n * two touches.\n * @private\n * @param {TouchEvent} event - Document touch start event.\n */\n    function onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      // Calculate touch position relative to top left of viewer container\n      var pos0 = mousePosition(event.targetTouches[0]);\n\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n    \n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                             (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for touch movements. Pans center of view if one touch or\n * adjusts zoom if two touches.\n * @private\n * @param {TouchEvent} event - Document touch move event.\n */\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      }\n\n      // Override default action\n      event.preventDefault();\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                       (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        }\n\n        // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n        var touchmovePanSpeedCoeff = (config.hfov / 360) * config.touchPanSpeedCoeffFactor;\n\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for end of touches. Stops panning and/or zooming.\n * @private\n */\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n      pointerCoordinates = [];\n    /**\n * Event handler for touch starts in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer down event.\n */\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({ clientX: event.clientX, clientY: event.clientY });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for touch moves in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer move event.\n */\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for touch ends in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer up event.\n */\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i])\n            {pointerIDs[i] = undefined;}\n          if (pointerIDs[i])\n            {defined = true;}\n        }\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for mouse wheel. Changes zoom.\n * @private\n * @param {WheelEvent} event - Document mouse wheel event.\n */\n    function onDocumentMouseWheel(event) {\n    // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || (config.mouseZoom == 'fullscreenonly' && !fullscreenActive)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n    \n      animateInit();\n    }\n\n    /**\n * Event handler for key presses. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key press event.\n */\n    function onDocumentKeyPress(event) {\n    // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      stopOrientation();\n      config.roll = 0;\n\n      // Record key pressed\n      var keynumber = event.which || event.keycode;\n\n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // If escape key is pressed\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n\n    /**\n * Clears list of currently pressed keys.\n * @private\n */\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n\n    /**\n * Event handler for key releases. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key up event.\n */\n    function onDocumentKeyUp(event) {\n    // Record key pressed\n      var keynumber = event.which || event.keycode;\n    \n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // Change key\n      changeKey(keynumber, false);\n    }\n\n    /**\n * Updates list of currently pressed keys.\n * @private\n * @param {number} keynumber - Key number.\n * @param {boolean} value - Whether or not key is pressed.\n */\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n      switch (keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17: case 173:\n          if (keysDown[0] != value) { keyChanged = true; }\n          keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16: case 61:\n          if (keysDown[1] != value) { keyChanged = true; }\n          keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n          if (keysDown[2] != value) { keyChanged = true; }\n          keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n          if (keysDown[6] != value) { keyChanged = true; }\n          keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n          if (keysDown[3] != value) { keyChanged = true; }\n          keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n          if (keysDown[7] != value) { keyChanged = true; }\n          keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n          if (keysDown[4] != value) { keyChanged = true; }\n          keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n          if (keysDown[8] != value) { keyChanged = true; }\n          keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n          if (keysDown[5] != value) { keyChanged = true; }\n          keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n          if (keysDown[9] != value) { keyChanged = true; }\n          keysDown[9] = value;\n      }\n    \n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n        animateInit();\n      }\n    }\n\n    /**\n * Pans and/or zooms panorama based on currently pressed keys. Also handles\n * panorama \"inertia\" and auto rotation.\n * @private\n */\n    function keyRepeat() {\n    // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n    \n      var newTime;\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0);\n    \n      // If minus key is down\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      }\n    \n      // If plus key is down\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      }\n    \n      // If up arrow or \"w\" is down\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If down arrow or \"s\" is down\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If left arrow or \"a\" is down\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If right arrow or \"d\" is down\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown)\n        {latestInteraction = Date.now();}\n\n      // If auto-rotate\n      var inactivityInterval = Date.now() - latestInteraction;\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      }\n\n      // Animated moves\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      }\n\n      // \"Inertia\"\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      }\n    \n      // Stop movement if opposite controls are pressed\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n\n    /**\n * Animates moves.\n * @param {string} axis - Axis to animate\n * @private\n */\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n      if ((t.endPosition > t.startPosition && result >= t.endPosition) ||\n        (t.endPosition < t.startPosition && result <= t.endPosition) ||\n        t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n          callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n        if (typeof callback === 'function')\n          {callback(callbackArgs);}\n      }\n      config[axis] = result;\n    }\n\n    /**\n * @param {number} t - Normalized time in animation\n * @return {number} Position in animation\n * @private\n */\n    function timingFunction(t) {\n    // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2*t*t : -1+(4-2*t)*t;\n    }\n\n    /**\n * Event handler for document resizes. Updates viewer size and rerenders view.\n * @private\n */\n    function onDocumentResize() {\n    // Resize panorama renderer (moved to onFullScreenChange)\n    //renderer.resize();\n    //animateInit();\n\n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n\n    /**\n * Initializes animation.\n * @private\n */\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n      animating = true;\n      animate();\n    }\n\n    /**\n * Animates view, using requestAnimationFrame to trigger rendering.\n * @private\n */\n    function animate() {\n      render();\n      if (autoRotateStart)\n        {clearTimeout(autoRotateStart);}\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        animatedMove.pitch || animatedMove.yaw || animatedMove.hfov ||\n        Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 ||\n        Math.abs(speed.hfov) > 0.01) {\n\n        keyRepeat();\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed &&\n            Date.now() - latestInteraction > config.autoRotateInactivityDelay &&\n            !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || (config.dynamic === true && update))) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay -\n            (Date.now() - latestInteraction);\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function() {\n            config.autoRotate = autoRotateSpeed;\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n          animateInit();\n        }\n      }\n    }\n\n    /**\n * Renders panorama view.\n * @private\n */\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n        var hoffcut = 0,\n          voffcut = 0;\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n            hfov2 = config.hfov / 2,\n            vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), (canvas.width / canvas.height)) * 180 / Math.PI,\n            transposed = config.vaov > config.haov;\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        }\n\n        // Ensure the yaw is within min and max allowed\n        var yawRange = config.maxYaw - config.minYaw,\n          minYaw = -180,\n          maxYaw = 180;\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        }\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw &&\n            prevTime !== undefined) { // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) /\n            (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n          maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n        if (isNaN(minPitch))\n          {minPitch = -90;}\n        if (isNaN(maxPitch))\n          {maxPitch = 90;}\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { roll: config.roll * Math.PI / 180 });\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n      }\n    }\n\n    /**\n * Creates a new quaternion.\n * @private\n * @constructor\n * @param {Number} w - W value\n * @param {Number} x - X value\n * @param {Number} y - Y value\n * @param {Number} z - Z value\n */\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    /**\n * Multiplies quaternions.\n * @private\n * @param {Quaternion} q - Quaternion to multiply\n * @returns {Quaternion} Result of multiplication\n */\n    Quaternion.prototype.multiply = function(q) {\n      return new Quaternion(this.w*q.w - this.x*q.x - this.y*q.y - this.z*q.z,\n        this.x*q.w + this.w*q.x + this.y*q.z - this.z*q.y,\n        this.y*q.w + this.w*q.y + this.z*q.x - this.x*q.z,\n        this.z*q.w + this.w*q.z + this.x*q.y - this.y*q.x);\n    };\n\n    /**\n * Converts quaternion to Euler angles.\n * @private\n * @returns {Number[]} [phi angle, theta angle, psi angle]\n */\n    Quaternion.prototype.toEulerAngles = function() {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z),\n          1 - 2 * (this.x * this.x + this.y * this.y)),\n        theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n        psi = Math.atan2(2 * (this.w * this.z + this.x * this.y),\n          1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n\n    /**\n * Converts device orientation API Tait-Bryan angles to a quaternion.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0,\n        gamma ? gamma * Math.PI / 180 / 2 : 0,\n        alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n        s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n\n      return new Quaternion(c[0]*c[1]*c[2] - s[0]*s[1]*s[2],\n        s[0]*c[1]*c[2] - c[0]*s[1]*s[2],\n        c[0]*s[1]*c[2] + s[0]*c[1]*s[2],\n        c[0]*c[1]*s[2] + s[0]*s[1]*c[2]);\n    }\n\n    /**\n * Computes current device orientation quaternion from device orientation API\n * Tait-Bryan angles.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function computeQuaternion(alpha, beta, gamma) {\n    // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma);\n      // Apply world transform\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n      // Apply screen transform\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n\n    /**\n * Event handler for device orientation API. Controls pointing.\n * @private\n * @param {DeviceOrientationEvent} event - Device orientation event.\n */\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n      if (typeof(orientation) === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n\n    /**\n * Initializes renderer.\n * @private\n */\n    function renderInit() {\n      try {\n        var params = {};\n        if (config.horizonPitch !== undefined)\n          {params.horizonPitch = config.horizonPitch * Math.PI / 180;}\n        if (config.horizonRoll !== undefined)\n          {params.horizonRoll = config.horizonRoll * Math.PI / 180;}\n        if (config.backgroundColor !== undefined)\n          {params.backgroundColor = config.backgroundColor;}\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n\n    /**\n * Triggered when render initialization finishes. Handles fading between\n * scenes as well as showing the compass and hotspots and hiding the loading\n * display.\n * @private\n */\n    function renderInitCallback() {\n    // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0;\n        // Remove image\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function() {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      }\n    \n      // Show compass if applicable\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      }\n    \n      // Show hotspots\n      createHotSpots();\n    \n      // Hide loading display\n      infoDisplay.load.box.style.display = 'none';\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n      loaded = true;\n\n      fireEvent('load');\n    \n      animateInit();\n    }\n\n    /**\n * Creates hot spot element for the current scene.\n * @private\n * @param {Object} hs - The configuration for the hotspot\n */\n    function createHotSpot(hs) {\n    // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n      if (hs.cssClass)\n        {div.className += ' ' + hs.cssClass;}\n      else\n        {div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);}\n\n      var span = document.createElement('span');\n      if (hs.text)\n        {span.innerHTML = escapeHTML(hs.text);}\n\n      var a;\n      if (hs.video) {\n        var video = document.createElement('video'),\n          p = hs.video;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function() {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n            return false;\n          };\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function(e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n      hs.div = div;\n    };\n\n    /**\n * Creates hot spot elements for the current scene.\n * @private\n */\n    function createHotSpots() {\n      if (hotspotsCreated) {return;}\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n\n    /**\n * Destroys currently created hot spot elements.\n * @private\n */\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n\n    /**\n * Renders hot spot, updating its position and visibility.\n * @private\n */\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n        hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n        configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n        configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n        yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n      if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n      ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n          hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible';\n        // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n        var canvas = renderer.getCanvas(),\n          canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2,\n          -canvasWidth / hfovTan * (hsPitchSin * configPitchCos -\n            hsPitchCos * yawCos * configPitchSin) / z / 2];\n        // Apply roll\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n          rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin,\n          coord[0] * rollSin + coord[1] * rollCos];\n        // Apply transform\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] +\n            'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n\n    /**\n * Renders hot spots, updating their positions and visibility.\n * @private\n */\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n\n    /**\n * Merges a scene configuration into the current configuration.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n */\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = [];\n    \n      // Merge default config\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      }\n    \n      // Merge default scene config\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    \n      // Merge current scene config\n      if ((sceneId !== null) && (sceneId !== '') && (initialConfig.scenes) && (initialConfig.scenes[sceneId])) {\n        var scene = initialConfig.scenes[sceneId];\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n        config.scene = sceneId;\n      }\n    \n      // Merge initial config\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n * Processes configuration options.\n * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n * @private\n */\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false;\n\n      // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      }\n\n      // Handle different preview values\n      var title = config.title,\n        author = config.author;\n      if (isPreview) {\n        if ('previewTitle' in config)\n          {config.title = config.previewTitle;}\n        if ('previewAuthor' in config)\n          {config.author = config.previewAuthor;}\n      }\n\n      // Reset title / author display\n      if (!config.hasOwnProperty('title'))\n        {infoDisplay.title.innerHTML = '';}\n      if (!config.hasOwnProperty('author'))\n        {infoDisplay.author.innerHTML = '';}\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author'))\n        {infoDisplay.container.style.display = 'none';}\n\n      // Fill in load button label and loading box text\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel;\n\n      // Process other options\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n            \n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n            \n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline';\n                // Hide load button\n                controls.load.style.display = 'none';\n                // Initialize\n                init();\n              }\n              break;\n            \n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key])\n                {hotSpotDebugIndicator.style.display = 'block';}\n              else\n                {hotSpotDebugIndicator.style.display = 'none';}\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined)\n                  {startOrientationIfSupported = true;}\n                else if (orientationSupport === true)\n                  {startOrientation();}\n              }\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title)\n          {config.title = title;}\n        else\n          {delete config.title;}\n        if (author)\n          {config.author = author;}\n        else\n          {delete config.author;}\n      }\n    }\n\n    /**\n * Toggles fullscreen mode.\n * @private\n */\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {\n            // Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for fullscreen changes.\n * @private\n */\n    function onFullScreenChange() {\n      let isFullScreen = (window.innerWidth == screen.width && window.innerHeight == screen.height);\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || isFullScreen) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      }\n\n      // Resize renderer (deal with browser quirks and fixes #155)\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n\n    /**\n * Increases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Decreases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Clamps horzontal field of view to viewer's limits.\n * @private\n * @param {number} hfov - Input horizontal field of view (in degrees)\n * @return {number} - Clamped horizontal field of view (in degrees)\n */\n    function constrainHfov(hfov) {\n    // Keep field of view within bounds\n      var minHfov = config.minHfov;\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n      var newHfov = config.hfov;\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      }\n      // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov,\n          Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) /\n                                     canvas.height * canvas.width)\n                               * 360 / Math.PI);\n      }\n      return newHfov;\n    }\n\n    /**\n * Sets viewer's horizontal field of view.\n * @private\n * @param {number} hfov - Desired horizontal field of view in degrees.\n */\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n\n    /**\n * Stops auto rotation and animated moves.\n * @private\n */\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n\n    /**\n * Loads panorama.\n * @private\n */\n    function load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n\n    /**\n * Loads scene.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n * @param {number} targetHfov - HFOV viewer should use once scene loads.\n * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n */\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {};\n    \n      // Set up fade if specified\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { returnImage: true });\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n          fadeImg.onload = function() {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      }\n    \n      // Set new pointing\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      }\n    \n      // Destroy hot spots from previous scene\n      destroyHotSpots();\n    \n      // Create the new config for the scene\n      mergeConfig(sceneId);\n\n      // Stop motion\n      speed.yaw = speed.pitch = speed.hfov = 0;\n\n      // Reload scene\n      processOptions();\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n\n    /**\n * Stop using device orientation.\n * @private\n */\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n\n    /**\n * Start using device orientation.\n * @private\n */\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n\n    /**\n * Escapes HTML string (to mitigate possible DOM XSS attacks).\n * @private\n * @param {string} s - String to escape\n * @returns {string} Escaped string\n */\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML)\n        {return String(s).split('\\n').join('<br>');}\n      return String(s).split(/&/g).join('&amp;')\n        .split('\"').join('&quot;')\n        .split(\"'\").join('&#39;')\n        .split('<').join('&lt;')\n        .split('>').join('&gt;')\n        .split('/').join('&#x2f;')\n        .split('\\n').join('<br>');  // Allow line breaks\n    }\n\n    /**\n * Removes possibility of XSS attacks with URLs.\n * The URL cannot be of protocol 'javascript'.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n      return url;\n    }\n\n    /**\n * Removes possibility of XSS atacks with URLs for CSS.\n * The URL will be sanitized with `sanitizeURL()` and single quotes\n * and double quotes escaped.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url)\n        .replace(/\"/g, '%22')\n        .replace(/'/g, '%27');\n    }\n\n    /**\n * Checks whether or not a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} `true` if a panorama is loaded, else `false`\n */\n    this.isLoaded = function() {\n      return Boolean(loaded);\n    };\n\n    /**\n * Returns the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Pitch in degrees\n */\n    this.getPitch = function() {\n      return config.pitch;\n    };\n\n    /**\n * Sets the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Pitch in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setPitch = function(pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum pitch, maximum pitch]\n */\n    this.getPitchBounds = function() {\n      return [config.minPitch, config.maxPitch];\n    };\n\n    /**\n * Set the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum pitch, maximum pitch]\n * @returns {Viewer} `this`\n */\n    this.setPitchBounds = function(bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n\n    /**\n * Returns the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Yaw in degrees\n */\n    this.getYaw = function() {\n      return config.yaw;\n    };\n\n    /**\n * Sets the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} yaw - Yaw in degrees [-180, 180]\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setYaw = function(yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      yaw = ((yaw + 180) % 360) - 180; // Keep in bounds\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180)\n          {yaw += 360}\n        else if (yaw - config.yaw > 180)\n          {yaw -= 360}\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [yaw pitch, maximum yaw]\n */\n    this.getYawBounds = function() {\n      return [config.minYaw, config.maxYaw];\n    };\n\n    /**\n * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum yaw, maximum yaw]\n * @returns {Viewer} `this`\n */\n    this.setYawBounds = function(bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n\n    /**\n * Returns the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizontal field of view in degrees\n */\n    this.getHfov = function() {\n      return config.hfov;\n    };\n\n    /**\n * Sets the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @param {number} hfov - Horizontal field of view in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setHfov = function(hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed horizontal fields of view\n * (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum hfov, maximum hfov]\n */\n    this.getHfovBounds = function() {\n      return [config.minHfov, config.maxHfov];\n    };\n\n    /**\n * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum hfov, maximum hfov]\n * @returns {Viewer} `this`\n */\n    this.setHfovBounds = function(bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n\n    /**\n * Set a new view. Any parameters not specified remain the same.\n * @memberof Viewer\n * @instance\n * @param {number} [pitch] - Target pitch\n * @param {number} [yaw] - Target yaw\n * @param {number} [hfov] - Target hfov\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.lookAt = function(pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (hfov !== undefined)\n        {this.setHfov(hfov, animated, callback, callbackArgs);}\n      return this;\n    };\n\n    /**\n * Returns the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @returns {number} North offset in degrees\n */\n    this.getNorthOffset = function() {\n      return config.northOffset;\n    };\n\n    /**\n * Sets the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @param {number} heading - North offset in degrees\n * @returns {Viewer} `this`\n */\n    this.setNorthOffset = function(heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon roll in degrees\n */\n    this.getHorizonRoll = function() {\n      return config.horizonRoll;\n    };\n\n    /**\n * Sets the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @param {number} roll - Horizon roll in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonRoll = function(roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon pitch in degrees\n */\n    this.getHorizonPitch = function() {\n      return config.horizonPitch;\n    };\n\n    /**\n * Sets the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonPitch = function(pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Start auto rotation.\n * @memberof Viewer\n * @instance\n * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n * @returns {Viewer} `this`\n */\n    this.startAutoRotate = function(speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Stop auto rotation.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.stopAutoRotate = function() {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n\n    /**\n * Returns the panorama renderer.\n * @memberof Viewer\n * @instance\n * @returns {Renderer}\n */\n    this.getRenderer = function() {\n      return renderer;\n    };\n\n    /**\n * Sets update flag for dynamic content.\n * @memberof Viewer\n * @instance\n * @param {boolean} bool - Whether or not viewer should update even when still\n * @returns {Viewer} `this`\n */\n    this.setUpdate = function(bool) {\n      update = bool === true;\n      if (renderer === undefined)\n        {onImageLoad();}\n      else\n        {animateInit();}\n      return this;\n    };\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @memberof Viewer\n * @instance\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    this.mouseEventToCoords = function(event) {\n      return mouseEventToCoords(event);\n    };\n\n    /**\n * Change scene being viewed.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - Identifier of scene to switch to.\n * @param {number} [pitch] - Pitch to use with new scene\n * @param {number} [yaw] - Yaw to use with new scene\n * @param {number} [hfov] - HFOV to use with new scene\n * @returns {Viewer} `this`\n */\n    this.loadScene = function(sceneId, pitch, yaw, hfov) {\n      if (loaded !== false)\n        {loadScene(sceneId, pitch, yaw, hfov);}\n      return this;\n    };\n\n    /**\n * Get ID of current scene.\n * @memberof Viewer\n * @instance\n * @returns {string} ID of current scene\n */\n    this.getScene = function() {\n      return config.scene;\n    };\n\n    /**\n * Add a new scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the new scene\n * @param {string} config - The configuration of the new scene\n * @returns {Viewer} `this`\n */\n    this.addScene = function(sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n\n    /**\n * Remove a scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the scene\n * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n */\n    this.removeScene = function(sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId))\n        {return false;}\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n\n    /**\n * Toggle fullscreen.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.toggleFullscreen = function() {\n      toggleFullscreen();\n      return this;\n    };\n\n    /**\n * Get configuration of current scene.\n * @memberof Viewer\n * @instance\n * @returns {Object} Configuration of current scene\n */\n    this.getConfig = function() {\n      return config;\n    };\n\n    /**\n * Get viewer's container element.\n * @memberof Viewer\n * @instance\n * @returns {HTMLElement} Container `div` element\n */\n    this.getContainer = function() {\n      return container;\n    };\n\n    /**\n * Add a new hot spot.\n * @memberof Viewer\n * @instance\n * @param {Object} hs - The configuration for the hot spot\n * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n * @returns {Viewer} `this`\n * @throws Throws an error if the scene ID is provided but invalid\n */\n    this.addHotSpot = function(hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n            if (id == config.scene)\n              {config.hotSpots = initialConfig.scenes[id].hotSpots;}    // Link to current config\n          }\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n        if (loaded)\n          {renderHotSpot(hs);}\n      }\n      return this;\n    };\n\n    /**\n * Remove a hot spot.\n * @memberof Viewer\n * @instance\n * @param {string} hotSpotId - The ID of the hot spot\n * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n * @returns {boolean} True if deletion is successful, else false\n */\n    this.removeHotSpot = function(hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots)\n          {return false;}\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') &&\n                config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n            while (current.parentNode != renderContainer)\n              {current = current.parentNode;}\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div;\n            // Remove hot spot from configuration\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots'))\n            {return false;}\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') &&\n                    initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n * This method should be called if the viewer's container is resized.\n * @memberof Viewer\n * @instance\n */\n    this.resize = function() {\n      if (renderer)\n        {onDocumentResize();}\n    };\n\n    /**\n * Check if a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if a panorama is loaded, else false\n */\n    this.isLoaded = function() {\n      return loaded;\n    };\n\n    /**\n * Check if device orientation control is supported.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if supported, else false\n */\n    this.isOrientationSupported = function() {\n      return orientationSupport || false;\n    };\n\n    /**\n * Stop using device orientation.\n * @memberof Viewer\n * @instance\n */\n    this.stopOrientation = function() {\n      stopOrientation();\n    };\n\n    /**\n * Start using device orientation (does nothing if not supported).\n * @memberof Viewer\n * @instance\n */\n    this.startOrientation = function() {\n      if (orientationSupport)\n        {startOrientation();}\n    };\n\n    /**\n * Check if device orientation control is currently activated.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if active, else false\n */\n    this.isOrientationActive = function() {\n      return Boolean(orientation);\n    };\n\n    /**\n * Subscribe listener to specified event.\n * @memberof Viewer\n * @instance\n * @param {string} type - Type of event to subscribe to.\n * @param {Function} listener - Listener function to subscribe to event.\n * @returns {Viewer} `this`\n */\n    this.on = function(type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n\n    /**\n * Remove an event listener (or listeners).\n * @memberof Viewer\n * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n * @returns {Viewer} `this`\n */\n    this.off = function(type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n      return this;\n    };\n\n    /**\n * Fire listeners attached to specified event.\n * @private\n * @param {string} [type] - Type of event to fire listeners for.\n */\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n\n    /**\n * Destructor.\n * @instance\n * @memberof Viewer\n */\n    this.destroy = function() {\n      if (renderer)\n        {renderer.destroy()};\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n\n  }\n\n  return {\n    viewer: function(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/pannellum.js","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\n\nexport {\n  Pannellum,\n  PannellumVideo\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = lamJ\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n// Helper functions\nvar\n  isLikelyAacData,\n  arrayEquals,\n  sumFrameByteLengths;\n\nisLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\narrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nsumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.prefixWithSilence_(track, frames);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = this.generateSampleTable_(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n  this.prefixWithSilence_ = function(track, frames) {\n    var\n      baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n    // determine frame clock duration based on sample rate, round up to avoid overfills\n    frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration =\n        baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n      // number of full frames in the audio gap\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    }\n\n    // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n    if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = coneOfSilence[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      frames.splice(i, 0, {\n        data: silentFrame\n      });\n    }\n\n    track.baseMediaDecodeTime -=\n      Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n  };\n\n  // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    }\n\n    // We will need to recalculate the earliest segment Dts\n    track.minSegmentDts = Infinity;\n\n    return adtsFrames.filter(function(currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      }\n      // Otherwise, discard it\n      return false;\n    });\n  };\n\n  // generate the track's raw mdat data from an array of frames\n  this.generateSampleTable_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  };\n\n  // generate the track's sample table from an array of frames\n  this.concatenateFrameData_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = (caption.startPts - timelineStartPts);\n    caption.startTime /= 90e3;\n    caption.endTime = (caption.endPts - timelineStartPts);\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = (id3.pts - timelineStartPts);\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    this.baseMediaDecodeTime = baseMediaDecodeTime;\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/transmuxer.js\n// module id = nAZl\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.libpannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama renderer.\n * @constructor\n * @param {HTMLElement} container - The container element for the renderer.\n */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n    this.init = function(_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined)\n      {_imageType = 'equirectangular';}\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' &&\n            _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw { type: 'config error' };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {};\n\n      // Clear old data\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        if (program.texture)\n        {gl.deleteTexture(program.texture);}\n        if (program.nodeCache)\n        {for (var i = 0; i < program.nodeCache.length; i++)\n          {gl.deleteTexture(program.nodeCache[i].texture);}}\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n      pose = undefined;\n\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined)\n            {cubeImgWidth = image[s].width;}\n            if (cubeImgWidth != image[s].width)\n            {console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);}\n          } else\n          {faceMissing = true;}\n        }\n      }\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) { // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255;\n          // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0)\n            {image[s] = backgroundSquare;}\n          }\n        }\n      }\n        \n      // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n      if (!(imageType == 'cubemap' &&\n            (cubeImgWidth & (cubeImgWidth - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl)\n        {gl = canvas.getContext('experimental-webgl', { alpha: false, depth: false });}\n        if (gl && gl.getError() == 1286)\n        {handleWebGLError1286();}\n      }\n        \n      // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n      if (!gl && ((imageType == 'multires' && image.hasOwnProperty('fallbackPath')) ||\n            imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        }\n            \n        // Initialize renderer\n        world = document.createElement('div');\n        world.className = 'pnlm-world';\n            \n        // Add images\n        var path;\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n        var onLoad = function() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data;\n                \n          // Duplicate edge pixels\n          var i;\n          var j;\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          }\n                \n          // Draw image width duplicated edge pixels on canvas\n          faceContext.putImageData(imgData, 0, 0);\n                \n          incLoaded.call(this);\n        };\n        var incLoaded = function() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined)\n            {fallbackImgSize = this.width;}\n            if (fallbackImgSize != this.width)\n            {console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);}\n          } else\n          {faceMissing = true;}\n          loaded++;\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n        faceMissing = false;\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw { type: 'no webgl' };\n      }\n      if (imageType == 'cubemap')\n      {fillMissingFaces(cubeImgWidth);}\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n      image.invTileResolution = 1 / image.tileResolution;\n        \n      var vertices = createCube();\n      vtmps = [];\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      }\n        \n      // Make sure image isn't too big\n      var width = 0, maxWidth = 0;\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, '+\n                        'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw { type: 'webgl size error', width: width, maxWidth: maxWidth };\n      }\n\n      // Store horizon pitch and roll if applicable\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined))\n      {pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch,\n        params.horizonRoll == undefined ? 0 : params.horizonRoll];}\n\n      // Set 2d texture binding\n      var glBindType = gl.TEXTURE_2D;\n\n      // Create viewport for entire canvas\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n      // Create vertex shader\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs);\n\n      // Create fragment shader\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs);\n\n      // Link WebGL program\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      // Log errors\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(vs));}\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(fs));}\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n      {console.log(gl.getProgramInfoLog(program));}\n\n      // Use WebGL program\n      gl.useProgram(program);\n\n      program.drawInProgress = false;\n\n      // Set background clear color (does not apply to cubemap/fallback image)\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Look up texture coordinates location\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer)\n        {texCoordBuffer = gl.createBuffer();}\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        // Pass aspect ratio\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight);\n\n        // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot');\n\n        // Pass horizontal extent, vertical extent, and vertical offset\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2);\n\n        // Set background color\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        }\n\n        // Create texture\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture);\n\n        // Upload images to texture depending on type\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        }\n\n        // Set parameters for rendering any size\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation);\n\n        // Create buffers\n        if (!cubeVertBuf)\n        {cubeVertBuf = gl.createBuffer();}\n        if (!cubeVertTexCoordBuf)\n        {cubeVertTexCoordBuf = gl.createBuffer();}\n        if (!cubeVertIndBuf)\n        {cubeVertIndBuf = gl.createBuffer();}\n\n        // Bind texture coordinate buffer and pass coordinates to WebGL\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n\n        // Bind square index buffer and pass indicies to WebGL\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n\n        // Find uniforms\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n        //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      }\n\n      // Check if there was an error\n      var err = gl.getError();\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw { type: 'webgl error' };\n      }\n\n      callback();\n    };\n\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n    this.destroy = function() {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n        if (extension)\n        {extension.loseContext();}\n      }\n    };\n\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n    this.resize = function() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n      if (gl) {\n        if (gl.getError() == 1286)\n        {handleWebGLError1286();}\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    };\n    // Initialize canvas size\n    this.resize();\n\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n    this.setPose = function(horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n    this.render = function(pitch, yaw, hfov, params) {\n      var focal, i, s, roll = 0;\n      if (params === undefined)\n      {params = {};}\n      if (params.roll)\n      {roll = params.roll;}\n\n      // Apply pitch and roll transformation if applicable\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n          horizonRoll = pose[1];\n\n        // Calculate new pitch and yaw\n        var orig_pitch = pitch,\n          orig_yaw = yaw,\n          x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) +\n                    Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) +\n                    Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n          y = -Math.sin(pitch) * Math.sin(horizonRoll) +\n                    Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n          z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) +\n                    Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) +\n                    Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x);\n\n        // Calculate roll\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) -\n                    Math.cos(horizonPitch) * Math.sin(orig_yaw)),\n          Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw),\n          Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) +\n                    Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n          w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0]*w[0] + v[1]*w[1]) /\n                (Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]) *\n                Math.sqrt(w[0]*w[0]+w[1]*w[1])), 1), -1));\n        if (v[2] < 0)\n        {roll_adj = 2 * Math.PI - roll_adj;}\n        roll += roll_adj;\n      }\n\n      // If no WebGL\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n            \n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) ';\n            \n        // Apply face transforms\n        var faces = Object.keys(transforms);\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n          if (!face)\n          {continue;} // ignore missing face to support partial cubemap/fallback image\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n        return;\n      }\n        \n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5);\n\n        // Pass psi, theta, roll, and focal length\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n            \n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        }\n            \n        // Draw using current buffer\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0);\n            \n        // Find correct zoom level\n        checkZoom(hfov);\n            \n        // Create rotation matrix\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix);\n            \n        // Set matrix uniforms\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix)));\n            \n        // Find current nodes\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n        if (program.nodeCache.length > 200 &&\n                program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n        program.currentNodes = [];\n            \n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n            \n        program.currentNodes.sort(multiresNodeRenderSort);\n            \n        // Unqueue any pending requests for nodes that are no longer visible\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        }\n            \n        // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n            \n              setTimeout(processNextTile, 0, node);\n                        \n              // Only process one tile per frame to improve responsiveness\n              break;\n            }\n          }\n        }\n            \n        // Draw tiles\n        multiresDraw();\n      }\n        \n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    \n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n    this.isLoading = function() {\n      if (gl && imageType == 'multires') {\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    \n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n    this.getCanvas = function() {\n      return canvas;\n    };\n    \n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      }\n        \n      // Higher timestamp first\n      return b.timestamp - a.timestamp;\n    }\n    \n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      }\n        \n      // Lower distance from center first\n      return a.diff - b.diff;\n    }\n    \n    /**\n     * Draws multires nodes.\n     * @private\n     */\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n                    \n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0);\n                    \n            // Prep for texture\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n                    \n            // Bind texture and draw tile\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n        program.drawInProgress = false;\n      }\n    }\n\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);\n    }\n\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[ 9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x*x + y*y + z*z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += (ydiff > Math.PI) ? -2 * Math.PI : (ydiff < -Math.PI) ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff));\n            \n        // Add node to current nodes and load texture if needed\n        var inCurrent = false;\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        }\n            \n        // TODO: Test error\n        // Create child nodes\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = (cubeSize * 2) % image.tileResolution;\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n          var f = 0.5;\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f, f2 = f, f3 = f, i1 = i, i2 = i, i3 = i;\n          // Handle non-symmetric tiles\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          }\n          // Handle small tiles that have fewer than four children\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n                \n          vtmp = [           v[0],             v[1],             v[2],\n            v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n            v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n            v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3\n          ];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2, image.fullpath);\n          children.push(ntmp);\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n              v[3],             v[4],             v[5],\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) &&\n                    !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[6],             v[7],             v[8],\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [  v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3,\n              v[9],            v[10],            v[11]\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    \n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n    function createCube() {\n      return [-1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, // Front face\n        1,  1,  1, -1,  1,  1, -1, -1,  1,  1, -1,  1, // Back face\n        -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1, -1, // Up face\n        -1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1,  1, // Down face\n        -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, // Left face\n        1,  1, -1,  1,  1,  1,  1, -1,  1,  1, -1, -1  // Right face\n      ];\n    }\n    \n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n    function identityMatrix3() {\n      return [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ];\n    }\n    \n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      if (axis == 'x') {\n        return [\n          m[0], c*m[1] + s*m[2], c*m[2] - s*m[1],\n          m[3], c*m[4] + s*m[5], c*m[5] - s*m[4],\n          m[6], c*m[7] + s*m[8], c*m[8] - s*m[7]\n        ];\n      }\n      if (axis == 'y') {\n        return [\n          c*m[0] - s*m[2], m[1], c*m[2] + s*m[0],\n          c*m[3] - s*m[5], m[4], c*m[5] + s*m[3],\n          c*m[6] - s*m[8], m[7], c*m[8] + s*m[6]\n        ];\n      }\n      if (axis == 'z') {\n        return [\n          c*m[0] + s*m[1], c*m[1] - s*m[0], m[2],\n          c*m[3] + s*m[4], c*m[4] - s*m[3], m[5],\n          c*m[6] + s*m[7], c*m[7] - s*m[6], m[8]\n        ];\n      }\n    }\n    \n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n    function makeMatrix4(m) {\n      return [\n        m[0], m[1], m[2],    0,\n        m[3], m[4], m[5],    0,\n        m[6], m[7], m[8],    0,\n        0,    0,    0,    1\n      ];\n    }\n    \n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n    function transposeMatrix4(m) {\n      return [\n        m[ 0], m[ 4], m[ 8], m[12],\n        m[ 1], m[ 5], m[ 9], m[13],\n        m[ 2], m[ 6], m[10], m[14],\n        m[ 3], m[ 7], m[11], m[15]\n      ];\n    }\n    \n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov/2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy/2);\n      return [\n        f/aspect,   0,  0,  0,\n        0,   f,  0,  0,\n        0,   0,  (zfar+znear)/(znear-zfar), (2*zfar*znear)/(znear-zfar),\n        0,   0, -1,  0\n      ];\n    }\n    \n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    \n    var pendingTextureRequests = [];\n\n    // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n    var loadTexture = (function() {\n      var cacheTop = 4;   // Maximum number of concurrents loads\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n        var loadFn = (function() {\n          if (self.image.width > 0 && self.image.height > 0) { // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n          releaseTextureImageLoader(self);\n        });\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      };\n\n      TextureImageLoader.prototype.loadTexture = function(src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      };\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else\n        {textureImageCache[cacheTop++] = til;}\n      }\n\n      for (var i = 0; i < cacheTop; i++)\n      {textureImageCache[i] = new TextureImageLoader();}\n\n      return function(node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n        if (cacheTop)\n        {textureImageCache[--cacheTop].loadTexture(src, texture, callback);}\n        else\n        {pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));}\n        return texture;\n      };\n    })();\n\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function(texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    \n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n      while ( newLevel < image.maxLevel &&\n            gl.drawingBufferWidth > image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n        newLevel++;\n      }\n        \n      // Apply change\n      program.level = newLevel;\n    }\n    \n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotatePersp(p, r) {\n      return [\n        p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n        p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n        p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n        -r[8],      -r[9],      -r[10],     0\n      ];\n    }\n    \n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n    function applyRotPerspToVec(m, v) {\n      return [\n        m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n        m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n        m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n        1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n      ];\n    }\n    \n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0]*vpp[3];\n      var winY = vpp[1]*vpp[3];\n      var winZ = vpp[2]*vpp[3];\n      var ret = [0, 0, 0];\n        \n      if ( winX < -1 )\n      {ret[0] = -1;}\n      if ( winX > 1 )\n      {ret[0] = 1;}\n      if ( winY < -1 )\n      {ret[1] = -1;}\n      if ( winY > 1 )\n      {ret[1] = 1;}\n      if ( winZ < -1 || winZ > 1 )\n      {ret[2] = 1;}\n      return ret;\n    }\n    \n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n      if ( testX == -4 || testX == 4 )\n      {return false;}\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n      if ( testY == -4 || testY == 4 )\n      {return false;}\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n        \n\n    }\n\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  }\n\n  // Vertex shader for equirectangular and cube\n  var v = [\n    'attribute vec2 a_texCoord;',\n    'varying vec2 v_texCoord;',\n\n    'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Vertex shader for multires\n  var vMulti = [\n    'attribute vec3 a_vertCoord;',\n    'attribute vec2 a_texCoord;',\n\n    'uniform mat4 u_cubeMatrix;',\n    'uniform mat4 u_perspMatrix;',\n\n    'varying mediump vec2 v_texCoord;',\n\n    'void main(void) {',\n    // Set position\n    'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Fragment shader\n  var fragEquiCubeBase = [\n    'precision mediump float;',\n\n    'uniform float u_aspectRatio;',\n    'uniform float u_psi;',\n    'uniform float u_theta;',\n    'uniform float u_f;',\n    'uniform float u_h;',\n    'uniform float u_v;',\n    'uniform float u_vo;',\n    'uniform float u_rot;',\n\n    'const float PI = 3.14159265358979323846264;',\n\n    // Texture\n    'uniform sampler2D u_image;',\n    'uniform samplerCube u_imageCube;',\n\n    // Coordinates passed in from vertex shader\n    'varying vec2 v_texCoord;',\n\n    // Background color (display for partial panoramas)\n    'uniform vec4 u_backgroundColor;',\n\n    'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sinrot = sin(u_rot);',\n    'float cosrot = cos(u_rot);',\n    'float rot_x = x * cosrot - y * sinrot;',\n    'float rot_y = x * sinrot + y * cosrot;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - rot_y * sintheta;',\n    'float root = sqrt(rot_x * rot_x + a * a);',\n    'float lambda = atan(rot_x / root, a / root) + u_psi;',\n    'float phi = atan((rot_y * costheta + u_f * sintheta) / root);',\n  ].join('\\n');\n\n  // Fragment shader\n  var fragCube = fragEquiCubeBase + [\n    // Look up color from texture\n    'float cosphi = cos(phi);',\n    'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragEquirectangular = fragEquiCubeBase + [\n    // Wrap image\n    'lambda = mod(lambda + PI, PI * 2.0) - PI;',\n\n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n\n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n    'gl_FragColor = u_backgroundColor;',\n    'else',\n    'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragMulti = [\n    'varying mediump vec2 v_texCoord;',\n    'uniform sampler2D u_sampler;',\n    //'uniform mediump vec4 u_color;',\n\n    'void main(void) {',\n    // Look up color from texture\n    'gl_FragColor = texture2D(u_sampler, v_texCoord);',\n    //    'gl_FragColor = u_color;',\n    '}'\n  ].join('');\n\n  return {\n    renderer: function(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/libpannellum.js","module.exports = __webpack_public_path__ + \"alma.ce3e3084.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/alma.jpg\n// module id = rH3c\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = rplX\n// module chunks = 0","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = se3Y\n// module chunks = 0","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = sg9Q\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = vRXZ\n// module chunks = 0","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","/** @license React v16.5.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.async_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112;n&&Symbol.for(\"react.placeholder\");\nvar z=\"function\"===typeof Symbol&&Symbol.iterator;function A(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[d,c,e,g,h,f],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);A(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];e.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:I.current}}\nfunction M(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=z&&a[z]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function V(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=M(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function W(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,aa,b);R(b)}function ba(a,b){var d=I.currentDispatcher;null===d?B(\"277\"):void 0;return d.readContext(a,b)}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];W(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,V,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,Provider:null,Consumer:null,unstable_read:null};a.Provider={$$typeof:v,_context:a};a.Consumer=a;a.unstable_read=ba.bind(null,a);return a},forwardRef:function(a){return{$$typeof:y,render:a}},Fragment:r,StrictMode:t,unstable_AsyncMode:x,unstable_Profiler:u,createElement:L,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);\nvar k=void 0;a.type&&a.type.defaultProps&&(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];e.children=k}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.5.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,\nassign:m}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = vttU\n// module chunks = 0","module.exports = __webpack_public_path__ + \"jfk.b1884d3a.mp4\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/jfk.mp4\n// module id = xbFh\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/track-decode-info.js\n// module id = zGuD\n// module chunks = 0"],"sourceRoot":""}